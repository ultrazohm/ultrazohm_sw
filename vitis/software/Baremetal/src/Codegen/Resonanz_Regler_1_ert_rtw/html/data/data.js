var dataJson = {"arch":{"ispc":true,"isunix":false,"ismac":false},"build":"Resonant_Controller_codegen/Resonanz_Regler_1","ref":false,"files":[{"name":"Resonanz_Regler_1.c","type":"source","group":"model","path":"C:\\uz_sw\\vitis\\software\\Baremetal\\src\\Codegen\\Resonanz_Regler_1_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: Resonanz_Regler_1.c\r\n *\r\n * Code generated for Simulink model 'Resonanz_Regler_1'.\r\n *\r\n * Model version                  : 3.0\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Wed Jul 27 10:02:54 2022\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-R\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. Traceability\r\n * Validation result: Passed (10), Warnings (2), Error (0)\r\n */\r\n\r\n#include \"Resonanz_Regler_1.h\"\r\n\r\n/* Model step function */\r\nvoid Resonanz_Regler_1_step(RT_MODEL_Resonanz_Regler_1_T *const\r\n  Resonanz_Regler_1_M)\r\n{\r\n  DW_Resonanz_Regler_1_T *Resonanz_Regler_1_DW = Resonanz_Regler_1_M->dwork;\r\n  ExtU_Resonanz_Regler_1_T *Resonanz_Regler_1_U = (ExtU_Resonanz_Regler_1_T *)\r\n    Resonanz_Regler_1_M->inputs;\r\n  ExtY_Resonanz_Regler_1_T *Resonanz_Regler_1_Y = (ExtY_Resonanz_Regler_1_T *)\r\n    Resonanz_Regler_1_M->outputs;\r\n  real_T rtb_Cos;\r\n  real_T rtb_Cos1;\r\n  real_T rtb_Product2;\r\n  real_T rtb_UnitDelay5;\r\n\r\n  /* Product: '<S1>/Product' incorporates:\r\n   *  Inport: '<Root>/T_sw'\r\n   *  Inport: '<Root>/h'\r\n   *  Inport: '<Root>/omega_el'\r\n   *  Product: '<S1>/Product3'\r\n   */\r\n  rtb_Cos = Resonanz_Regler_1_U->omega_el * Resonanz_Regler_1_U->h *\r\n    Resonanz_Regler_1_U->T_sw;\r\n\r\n  /* Trigonometry: '<S1>/Cos1' incorporates:\r\n   *  Gain: '<S1>/Gain'\r\n   */\r\n  rtb_Cos1 = cos(2.0 * rtb_Cos);\r\n\r\n  /* Product: '<S1>/Product2' incorporates:\r\n   *  Inport: '<Root>/T_sw'\r\n   *  Inport: '<Root>/VR'\r\n   *  Inport: '<Root>/in_m'\r\n   *  Inport: '<Root>/in_ref'\r\n   *  Product: '<S1>/Product1'\r\n   *  Sum: '<S1>/Subtract'\r\n   */\r\n  rtb_Product2 = (Resonanz_Regler_1_U->in_ref - Resonanz_Regler_1_U->in_m) *\r\n    Resonanz_Regler_1_U->VR * Resonanz_Regler_1_U->T_sw;\r\n\r\n  /* Trigonometry: '<S1>/Cos' */\r\n  rtb_Cos = cos(rtb_Cos);\r\n\r\n  /* UnitDelay: '<S1>/Unit Delay5' */\r\n  rtb_UnitDelay5 = Resonanz_Regler_1_DW->UnitDelay5_DSTATE;\r\n\r\n  /* Sum: '<S1>/Sum2' incorporates:\r\n   *  Gain: '<S1>/-a2'\r\n   *  Gain: '<S1>/Gain1'\r\n   *  Gain: '<S1>/Gain2'\r\n   *  Product: '<S1>/-a1'\r\n   *  Product: '<S1>/b0'\r\n   *  Product: '<S1>/b1'\r\n   *  Sum: '<S1>/Sum3'\r\n   *  UnitDelay: '<S1>/Unit Delay3'\r\n   *  UnitDelay: '<S1>/Unit Delay6'\r\n   */\r\n  rtb_Cos = ((-rtb_Cos * Resonanz_Regler_1_DW->UnitDelay3_DSTATE +\r\n              -Resonanz_Regler_1_DW->UnitDelay6_DSTATE) + 2.0 * rtb_Cos *\r\n             rtb_UnitDelay5) + rtb_Cos1 * rtb_Product2;\r\n\r\n  /* Outport: '<Root>/out' */\r\n  Resonanz_Regler_1_Y->out = rtb_Cos;\r\n\r\n  /* Update for UnitDelay: '<S1>/Unit Delay3' */\r\n  Resonanz_Regler_1_DW->UnitDelay3_DSTATE = rtb_Product2;\r\n\r\n  /* Update for UnitDelay: '<S1>/Unit Delay6' */\r\n  Resonanz_Regler_1_DW->UnitDelay6_DSTATE = rtb_UnitDelay5;\r\n\r\n  /* Update for UnitDelay: '<S1>/Unit Delay5' */\r\n  Resonanz_Regler_1_DW->UnitDelay5_DSTATE = rtb_Cos;\r\n}\r\n\r\n/* Model initialize function */\r\nvoid Resonanz_Regler_1_initialize(RT_MODEL_Resonanz_Regler_1_T *const\r\n  Resonanz_Regler_1_M)\r\n{\r\n  DW_Resonanz_Regler_1_T *Resonanz_Regler_1_DW = Resonanz_Regler_1_M->dwork;\r\n  ExtU_Resonanz_Regler_1_T *Resonanz_Regler_1_U = (ExtU_Resonanz_Regler_1_T *)\r\n    Resonanz_Regler_1_M->inputs;\r\n  ExtY_Resonanz_Regler_1_T *Resonanz_Regler_1_Y = (ExtY_Resonanz_Regler_1_T *)\r\n    Resonanz_Regler_1_M->outputs;\r\n\r\n  /* Registration code */\r\n\r\n  /* states (dwork) */\r\n  (void) memset((void *)Resonanz_Regler_1_DW, 0,\r\n                sizeof(DW_Resonanz_Regler_1_T));\r\n\r\n  /* external inputs */\r\n  (void)memset(Resonanz_Regler_1_U, 0, sizeof(ExtU_Resonanz_Regler_1_T));\r\n\r\n  /* external outputs */\r\n  Resonanz_Regler_1_Y->out = 0.0;\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"Resonanz_Regler_1.h","type":"header","group":"model","path":"C:\\uz_sw\\vitis\\software\\Baremetal\\src\\Codegen\\Resonanz_Regler_1_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: Resonanz_Regler_1.h\r\n *\r\n * Code generated for Simulink model 'Resonanz_Regler_1'.\r\n *\r\n * Model version                  : 3.0\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Wed Jul 27 10:02:54 2022\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-R\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. Traceability\r\n * Validation result: Passed (10), Warnings (2), Error (0)\r\n */\r\n\r\n#ifndef RTW_HEADER_Resonanz_Regler_1_h_\r\n#define RTW_HEADER_Resonanz_Regler_1_h_\r\n#include <math.h>\r\n#include <string.h>\r\n#ifndef Resonanz_Regler_1_COMMON_INCLUDES_\r\n#define Resonanz_Regler_1_COMMON_INCLUDES_\r\n#include \"rtwtypes.h\"\r\n#endif                                 /* Resonanz_Regler_1_COMMON_INCLUDES_ */\r\n\r\n/* Model Code Variants */\r\n\r\n/* Macros for accessing real-time model data structure */\r\n#ifndef rtmGetRootDWork\r\n#define rtmGetRootDWork(rtm)           ((rtm)->dwork)\r\n#endif\r\n\r\n#ifndef rtmSetRootDWork\r\n#define rtmSetRootDWork(rtm, val)      ((rtm)->dwork = (val))\r\n#endif\r\n\r\n#ifndef rtmGetU\r\n#define rtmGetU(rtm)                   ((rtm)->inputs)\r\n#endif\r\n\r\n#ifndef rtmSetU\r\n#define rtmSetU(rtm, val)              ((rtm)->inputs = (val))\r\n#endif\r\n\r\n#ifndef rtmGetY\r\n#define rtmGetY(rtm)                   ((rtm)->outputs)\r\n#endif\r\n\r\n#ifndef rtmSetY\r\n#define rtmSetY(rtm, val)              ((rtm)->outputs = (val))\r\n#endif\r\n\r\n/* Forward declaration for rtModel */\r\ntypedef struct tag_RTM_Resonanz_Regler_1_T RT_MODEL_Resonanz_Regler_1_T;\r\n\r\n/* Block signals and states (default storage) for system '<Root>' */\r\ntypedef struct {\r\n  real_T UnitDelay3_DSTATE;            /* '<S1>/Unit Delay3' */\r\n  real_T UnitDelay6_DSTATE;            /* '<S1>/Unit Delay6' */\r\n  real_T UnitDelay5_DSTATE;            /* '<S1>/Unit Delay5' */\r\n} DW_Resonanz_Regler_1_T;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\ntypedef struct {\r\n  real_T in_ref;                       /* '<Root>/in_ref' */\r\n  real_T in_m;                         /* '<Root>/in_m' */\r\n  real_T omega_el;                     /* '<Root>/omega_el' */\r\n  real_T h;                            /* '<Root>/h' */\r\n  real_T T_sw;                         /* '<Root>/T_sw' */\r\n  real_T VR;                           /* '<Root>/VR' */\r\n} ExtU_Resonanz_Regler_1_T;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\ntypedef struct {\r\n  real_T out;                          /* '<Root>/out' */\r\n} ExtY_Resonanz_Regler_1_T;\r\n\r\n/* Real-time Model Data Structure */\r\nstruct tag_RTM_Resonanz_Regler_1_T {\r\n  ExtU_Resonanz_Regler_1_T *inputs;\r\n  ExtY_Resonanz_Regler_1_T *outputs;\r\n  DW_Resonanz_Regler_1_T *dwork;\r\n};\r\n\r\n/* Model entry point functions */\r\nextern void Resonanz_Regler_1_initialize(RT_MODEL_Resonanz_Regler_1_T *const\r\n  Resonanz_Regler_1_M);\r\nextern void Resonanz_Regler_1_step(RT_MODEL_Resonanz_Regler_1_T *const\r\n  Resonanz_Regler_1_M);\r\n\r\n/*-\r\n * These blocks were eliminated from the model due to optimizations:\r\n *\r\n * Block '<S1>/a0' : Eliminated nontunable gain of 1\r\n */\r\n\r\n/*-\r\n * The generated code includes comments that allow you to trace directly\r\n * back to the appropriate location in the model.  The basic format\r\n * is <system>/block_name, where system is the system number (uniquely\r\n * assigned by Simulink) and block_name is the name of the block.\r\n *\r\n * Note that this particular code originates from a subsystem build,\r\n * and has its own system numbers different from the parent model.\r\n * Refer to the system hierarchy for this subsystem below, and use the\r\n * MATLAB hilite_system command to trace the generated code back\r\n * to the parent model.  For example,\r\n *\r\n * hilite_system('Resonant_Controller_codegen/Resonanz_Regler_1')    - opens subsystem Resonant_Controller_codegen/Resonanz_Regler_1\r\n * hilite_system('Resonant_Controller_codegen/Resonanz_Regler_1/Kp') - opens and selects block Kp\r\n *\r\n * Here is the system hierarchy for this model\r\n *\r\n * '<Root>' : 'Resonant_Controller_codegen'\r\n * '<S1>'   : 'Resonant_Controller_codegen/Resonanz_Regler_1'\r\n */\r\n\r\n/*-\r\n * Requirements for '<Root>': Resonanz_Regler_1\r\n */\r\n#endif                                 /* RTW_HEADER_Resonanz_Regler_1_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtwtypes.h","type":"header","group":"utility","path":"C:\\uz_sw\\vitis\\software\\Baremetal\\src\\Codegen\\Resonanz_Regler_1_ert_rtw","tag":"","groupDisplay":"Utility files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtwtypes.h\r\n *\r\n * Code generated for Simulink model 'Resonanz_Regler_1'.\r\n *\r\n * Model version                  : 3.0\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Wed Jul 27 10:02:54 2022\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-R\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. Traceability\r\n * Validation result: Passed (10), Warnings (2), Error (0)\r\n */\r\n\r\n#ifndef RTWTYPES_H\r\n#define RTWTYPES_H\r\n\r\n/* Logical type definitions */\r\n#if (!defined(__cplusplus))\r\n#ifndef false\r\n#define false                          (0U)\r\n#endif\r\n\r\n#ifndef true\r\n#define true                           (1U)\r\n#endif\r\n#endif\r\n\r\n/*=======================================================================*\r\n * Target hardware information\r\n *   Device type: ARM Compatible->ARM Cortex-R\r\n *   Number of bits:     char:   8    short:   16    int:  32\r\n *                       long:  32    long long:  64\r\n *                       native word size:  32\r\n *   Byte ordering: LittleEndian\r\n *   Signed integer division rounds to: Zero\r\n *   Shift right on a signed integer as arithmetic shift: on\r\n *=======================================================================*/\r\n\r\n/*=======================================================================*\r\n * Fixed width word size data types:                                     *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *   real32_T, real64_T           - 32 and 64 bit floating point numbers *\r\n *=======================================================================*/\r\ntypedef signed char int8_T;\r\ntypedef unsigned char uint8_T;\r\ntypedef short int16_T;\r\ntypedef unsigned short uint16_T;\r\ntypedef int int32_T;\r\ntypedef unsigned int uint32_T;\r\ntypedef long long int64_T;\r\ntypedef unsigned long long uint64_T;\r\ntypedef float real32_T;\r\ntypedef double real64_T;\r\n\r\n/*===========================================================================*\r\n * Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\r\n *                           real_T, time_T, ulong_T, ulonglong_T.           *\r\n *===========================================================================*/\r\ntypedef double real_T;\r\ntypedef double time_T;\r\ntypedef unsigned char boolean_T;\r\ntypedef int int_T;\r\ntypedef unsigned int uint_T;\r\ntypedef unsigned long ulong_T;\r\ntypedef unsigned long long ulonglong_T;\r\ntypedef char char_T;\r\ntypedef unsigned char uchar_T;\r\ntypedef char_T byte_T;\r\n\r\n/*===========================================================================*\r\n * Complex number type definitions                                           *\r\n *===========================================================================*/\r\n#define CREAL_T\r\n\r\ntypedef struct {\r\n  real32_T re;\r\n  real32_T im;\r\n} creal32_T;\r\n\r\ntypedef struct {\r\n  real64_T re;\r\n  real64_T im;\r\n} creal64_T;\r\n\r\ntypedef struct {\r\n  real_T re;\r\n  real_T im;\r\n} creal_T;\r\n\r\n#define CINT8_T\r\n\r\ntypedef struct {\r\n  int8_T re;\r\n  int8_T im;\r\n} cint8_T;\r\n\r\n#define CUINT8_T\r\n\r\ntypedef struct {\r\n  uint8_T re;\r\n  uint8_T im;\r\n} cuint8_T;\r\n\r\n#define CINT16_T\r\n\r\ntypedef struct {\r\n  int16_T re;\r\n  int16_T im;\r\n} cint16_T;\r\n\r\n#define CUINT16_T\r\n\r\ntypedef struct {\r\n  uint16_T re;\r\n  uint16_T im;\r\n} cuint16_T;\r\n\r\n#define CINT32_T\r\n\r\ntypedef struct {\r\n  int32_T re;\r\n  int32_T im;\r\n} cint32_T;\r\n\r\n#define CUINT32_T\r\n\r\ntypedef struct {\r\n  uint32_T re;\r\n  uint32_T im;\r\n} cuint32_T;\r\n\r\n#define CINT64_T\r\n\r\ntypedef struct {\r\n  int64_T re;\r\n  int64_T im;\r\n} cint64_T;\r\n\r\n#define CUINT64_T\r\n\r\ntypedef struct {\r\n  uint64_T re;\r\n  uint64_T im;\r\n} cuint64_T;\r\n\r\n/*=======================================================================*\r\n * Min and Max:                                                          *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *=======================================================================*/\r\n#define MAX_int8_T                     ((int8_T)(127))\r\n#define MIN_int8_T                     ((int8_T)(-128))\r\n#define MAX_uint8_T                    ((uint8_T)(255U))\r\n#define MAX_int16_T                    ((int16_T)(32767))\r\n#define MIN_int16_T                    ((int16_T)(-32768))\r\n#define MAX_uint16_T                   ((uint16_T)(65535U))\r\n#define MAX_int32_T                    ((int32_T)(2147483647))\r\n#define MIN_int32_T                    ((int32_T)(-2147483647-1))\r\n#define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))\r\n#define MAX_int64_T                    ((int64_T)(9223372036854775807LL))\r\n#define MIN_int64_T                    ((int64_T)(-9223372036854775807LL-1LL))\r\n#define MAX_uint64_T                   ((uint64_T)(0xFFFFFFFFFFFFFFFFULL))\r\n\r\n/* Block D-Work pointer type */\r\ntypedef void * pointer_T;\r\n\r\n#endif                                 /* RTWTYPES_H */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtmodel.h","type":"header","group":"interface","path":"C:\\uz_sw\\vitis\\software\\Baremetal\\src\\Codegen\\Resonanz_Regler_1_ert_rtw","tag":"","groupDisplay":"Interface files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtmodel.h\r\n *\r\n * Code generated for Simulink model 'Resonanz_Regler_1'.\r\n *\r\n * Model version                  : 3.0\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Wed Jul 27 10:02:54 2022\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-R\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. Traceability\r\n * Validation result: Passed (10), Warnings (2), Error (0)\r\n */\r\n\r\n#ifndef RTW_HEADER_rtmodel_h_\r\n#define RTW_HEADER_rtmodel_h_\r\n#include \"Resonanz_Regler_1.h\"\r\n\r\n/*\r\n * ROOT_IO_FORMAT: 0 (Individual arguments)\r\n * ROOT_IO_FORMAT: 1 (Structure reference)\r\n * ROOT_IO_FORMAT: 2 (Part of model data structure)\r\n */\r\n#define ROOT_IO_FORMAT                 2\r\n\r\n/* Macros generated for backwards compatibility  */\r\n#ifndef rtmGetErrorStatus\r\n#define rtmGetErrorStatus(rtm)         ((void*) 0)\r\n#endif\r\n\r\n#ifndef rtmSetErrorStatus\r\n#define rtmSetErrorStatus(rtm, val)    ((void) 0)\r\n#endif\r\n\r\n#ifndef rtmGetStopRequested\r\n#define rtmGetStopRequested(rtm)       ((void*) 0)\r\n#endif\r\n#endif                                 /* RTW_HEADER_rtmodel_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"}],"trace":"{\"model\":\"Resonanz_Regler_1\",\"sources\":[\"Resonanz_Regler_1.c\",\"Resonanz_Regler_1.h\"],\"categoricalProps\":[\"ModelElemCategory\",\"StorageClass\"],\"categoricalValues\":[\"InternalData\",\"Default\",\"Inports\",\"Outports\"],\"sidPrefixes\":[\"Resonanz_Regler_1\"],\"fileRecords\":{\"1\":{\"records\":[{\"tk\":[63,3,63,9],\"els\":[\"1:244\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[63,10,63,27],\"els\":[\"1:244\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[63,27,63,28],\"els\":[\"1:244\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[64,3,64,9],\"els\":[\"1:246\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[64,10,64,27],\"els\":[\"1:246\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[64,27,64,28],\"els\":[\"1:246\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[65,3,65,9],\"els\":[\"1:245\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[65,10,65,27],\"els\":[\"1:245\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[65,27,65,28],\"els\":[\"1:245\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[70,3,70,9],\"els\":[\"1:259\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[70,10,70,16],\"els\":[\"1:259\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[70,16,70,17],\"els\":[\"1:259\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[71,3,71,9],\"els\":[\"1:260\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[71,10,71,14],\"els\":[\"1:260\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[71,14,71,15],\"els\":[\"1:260\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[72,3,72,9],\"els\":[\"1:261\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[72,10,72,18],\"els\":[\"1:261\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[72,18,72,19],\"els\":[\"1:261\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[73,3,73,9],\"els\":[\"1:262\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[73,10,73,11],\"els\":[\"1:262\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[73,11,73,12],\"els\":[\"1:262\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[74,3,74,9],\"els\":[\"1:263\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[74,10,74,14],\"els\":[\"1:263\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[74,14,74,15],\"els\":[\"1:263\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[75,3,75,9],\"els\":[\"1:264\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[75,10,75,12],\"els\":[\"1:264\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[75,12,75,13],\"els\":[\"1:264\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[80,3,80,9],\"els\":[\"1:265\"],\"ct\":{\"1\":1,\"0\":3}},{\"tk\":[80,10,80,13],\"els\":[\"1:265\"],\"ct\":{\"1\":1,\"0\":3}},{\"tk\":[80,13,80,14],\"els\":[\"1:265\"],\"ct\":{\"1\":1,\"0\":3}}]},\"0\":{\"records\":[{\"tk\":[44,3,44,10],\"els\":[\"0:231#out:1\"]},{\"tk\":[44,11,44,12],\"els\":[\"0:237\"]},{\"tk\":[44,13,44,32],\"els\":[\"0:261\"]},{\"tk\":[44,34,44,42],\"els\":[\"0:261\"]},{\"tk\":[44,43,44,44],\"els\":[\"0:240\"]},{\"tk\":[44,45,44,64],\"els\":[\"0:262\"]},{\"tk\":[44,66,44,67],\"els\":[\"0:262\"]},{\"tk\":[44,68,44,69],\"els\":[\"0:237\"]},{\"tk\":[45,5,45,24],\"els\":[\"0:263\"]},{\"tk\":[45,26,45,30],\"els\":[\"0:263\"]},{\"tk\":[50,3,50,11],\"els\":[\"0:232#out:1\"]},{\"tk\":[50,12,50,13],\"els\":[\"0:232\"]},{\"tk\":[50,14,50,17],\"els\":[\"0:232\"]},{\"tk\":[50,18,50,21],\"els\":[\"0:233\"]},{\"tk\":[50,22,50,23],\"els\":[\"0:233\"]},{\"tk\":[50,24,50,31],\"els\":[\"0:231#out:1\"]},{\"tk\":[60,3,60,15],\"els\":[\"0:239#out:1\"]},{\"tk\":[60,16,60,17],\"els\":[\"0:239\"]},{\"tk\":[60,19,60,38],\"els\":[\"0:259\"]},{\"tk\":[60,40,60,46],\"els\":[\"0:259\"]},{\"tk\":[60,47,60,48],\"els\":[\"0:251\"]},{\"tk\":[60,49,60,68],\"els\":[\"0:260\"]},{\"tk\":[60,70,60,74],\"els\":[\"0:260\"]},{\"tk\":[60,76,60,77],\"els\":[\"0:238\"]},{\"tk\":[61,5,61,24],\"els\":[\"0:264\"]},{\"tk\":[61,26,61,28],\"els\":[\"0:264\"]},{\"tk\":[61,29,61,30],\"els\":[\"0:239\"]},{\"tk\":[61,31,61,50],\"els\":[\"0:263\"]},{\"tk\":[61,52,61,56],\"els\":[\"0:263\"]},{\"tk\":[64,3,64,10],\"els\":[\"0:231#out:1\"]},{\"tk\":[64,11,64,12],\"els\":[\"0:231\"]},{\"tk\":[64,13,64,16],\"els\":[\"0:231\"]},{\"tk\":[64,17,64,24],\"els\":[\"0:231#out:1\"]},{\"tk\":[67,3,67,17],\"els\":[\"0:245#out:1\"]},{\"tk\":[67,18,67,19],\"els\":[\"0:245\"]},{\"tk\":[67,20,67,40],\"els\":[\"0:245\"]},{\"tk\":[67,42,67,59],\"els\":[\"0:245\"]},{\"tk\":[80,3,80,10],\"els\":[\"0:231#out:1\"]},{\"tk\":[80,11,80,12],\"els\":[\"0:241\"]},{\"tk\":[80,15,80,16],\"els\":[\"0:235\"]},{\"tk\":[80,16,80,23],\"els\":[\"0:231#out:1\"]},{\"tk\":[80,24,80,25],\"els\":[\"0:249\"]},{\"tk\":[80,26,80,46],\"els\":[\"0:244\"]},{\"tk\":[80,48,80,65],\"els\":[\"0:244\"]},{\"tk\":[80,66,80,67],\"els\":[\"0:242\"]},{\"tk\":[81,15,81,16],\"els\":[\"0:227\"]},{\"tk\":[81,16,81,36],\"els\":[\"0:246\"]},{\"tk\":[81,38,81,55],\"els\":[\"0:246\"]},{\"tk\":[81,57,81,58],\"els\":[\"0:242\"]},{\"tk\":[81,59,81,62],\"els\":[\"0:234\"]},{\"tk\":[81,63,81,64],\"els\":[\"0:234\"]},{\"tk\":[81,65,81,72],\"els\":[\"0:231#out:1\"]},{\"tk\":[81,73,81,74],\"els\":[\"0:226\"]},{\"tk\":[82,14,82,28],\"els\":[\"0:245#out:1\"]},{\"tk\":[82,30,82,31],\"els\":[\"0:241\"]},{\"tk\":[82,32,82,40],\"els\":[\"0:232#out:1\"]},{\"tk\":[82,41,82,42],\"els\":[\"0:248\"]},{\"tk\":[82,43,82,55],\"els\":[\"0:239#out:1\"]},{\"tk\":[85,3,85,22],\"els\":[\"0:265\"]},{\"tk\":[85,24,85,27],\"els\":[\"0:265\"]},{\"tk\":[85,28,85,29],\"els\":[\"0:265\"]},{\"tk\":[85,30,85,37],\"els\":[\"0:231#out:1\"]},{\"tk\":[88,3,88,23],\"els\":[\"0:244\"]},{\"tk\":[88,25,88,42],\"els\":[\"0:244\"]},{\"tk\":[88,43,88,44],\"els\":[\"0:244\"]},{\"tk\":[88,45,88,57],\"els\":[\"0:239#out:1\"]},{\"tk\":[91,3,91,23],\"els\":[\"0:246\"]},{\"tk\":[91,25,91,42],\"els\":[\"0:246\"]},{\"tk\":[91,43,91,44],\"els\":[\"0:246\"]},{\"tk\":[91,45,91,59],\"els\":[\"0:245#out:1\"]},{\"tk\":[94,3,94,23],\"els\":[\"0:245\"]},{\"tk\":[94,25,94,42],\"els\":[\"0:245\"]},{\"tk\":[94,43,94,44],\"els\":[\"0:245\"]},{\"tk\":[94,45,94,52],\"els\":[\"0:231#out:1\"]},{\"tk\":[117,3,117,22],\"els\":[\"0:265\"]},{\"tk\":[117,24,117,27],\"els\":[\"0:265\"]}]}}}","blocks":[{"RTWName":"<S1>/in_ref","SIDString":"Resonant_Controller_codegen:222"},{"RTWName":"<S1>/in_m","SIDString":"Resonant_Controller_codegen:257"},{"RTWName":"<S1>/omega_el","SIDString":"Resonant_Controller_codegen:223"},{"RTWName":"<S1>/h","SIDString":"Resonant_Controller_codegen:224"},{"RTWName":"<S1>/T_sw","SIDString":"Resonant_Controller_codegen:225"},{"RTWName":"<S1>/VR","SIDString":"Resonant_Controller_codegen:255"},{"RTWName":"<S1>/-a1","SIDString":"Resonant_Controller_codegen:226"},{"RTWName":"<S1>/-a2","SIDString":"Resonant_Controller_codegen:227"},{"RTWName":"<S1>/Constant1","SIDString":"Resonant_Controller_codegen:228"},{"RTWName":"<S1>/Cos","SIDString":"Resonant_Controller_codegen:231"},{"RTWName":"<S1>/Cos1","SIDString":"Resonant_Controller_codegen:232"},{"RTWName":"<S1>/Gain","SIDString":"Resonant_Controller_codegen:233"},{"RTWName":"<S1>/Gain1","SIDString":"Resonant_Controller_codegen:234"},{"RTWName":"<S1>/Gain2","SIDString":"Resonant_Controller_codegen:235"},{"RTWName":"<S1>/Product","SIDString":"Resonant_Controller_codegen:237"},{"RTWName":"<S1>/Product1","SIDString":"Resonant_Controller_codegen:238"},{"RTWName":"<S1>/Product2","SIDString":"Resonant_Controller_codegen:239"},{"RTWName":"<S1>/Product3","SIDString":"Resonant_Controller_codegen:240"},{"RTWName":"<S1>/Subtract","SIDString":"Resonant_Controller_codegen:251"},{"RTWName":"<S1>/Sum2","SIDString":"Resonant_Controller_codegen:241"},{"RTWName":"<S1>/Sum3","SIDString":"Resonant_Controller_codegen:242"},{"RTWName":"<S1>/Sum4","SIDString":"Resonant_Controller_codegen:243"},{"RTWName":"<S1>/Unit Delay3","SIDString":"Resonant_Controller_codegen:244"},{"RTWName":"<S1>/Unit Delay5","SIDString":"Resonant_Controller_codegen:245"},{"RTWName":"<S1>/Unit Delay6","SIDString":"Resonant_Controller_codegen:246"},{"RTWName":"<S1>/a0","SIDString":"Resonant_Controller_codegen:247"},{"RTWName":"<S1>/b0","SIDString":"Resonant_Controller_codegen:248"},{"RTWName":"<S1>/b1","SIDString":"Resonant_Controller_codegen:249"},{"RTWName":"<S1>/out","SIDString":"Resonant_Controller_codegen:250"},{"RTWName":"<Root>/Resonanz_Regler_1","SIDString":"Resonant_Controller_codegen:221"}],"cm":{"GlobalVarInfo":[],"GlobalConstInfo":[],"FcnInfo":[{"Name":"Resonanz_Regler_1_initialize","UniqueKey":"$Resonanz_Regler_1_initialize","Idx":1,"NumCommentLines":4,"NumTotalLines":21,"NumCodeLines":9,"Callee":{"Name":"memset","Weight":2},"Caller":[],"Stack":12,"HasDefinition":1,"File":["C:\\uz_sw\\vitis\\software\\Baremetal\\src\\Codegen\\Resonanz_Regler_1_ert_rtw\\Resonanz_Regler_1.c"],"IsStatic":0,"Complexity":1,"StackTotal":12,"CalleeIdx":7},{"Name":"Resonanz_Regler_1_step","UniqueKey":"$Resonanz_Regler_1_step","Idx":2,"NumCommentLines":34,"NumTotalLines":71,"NumCodeLines":23,"Callee":{"Name":"cos","Weight":2},"Caller":[],"Stack":44,"HasDefinition":1,"File":["C:\\uz_sw\\vitis\\software\\Baremetal\\src\\Codegen\\Resonanz_Regler_1_ert_rtw\\Resonanz_Regler_1.c"],"IsStatic":0,"Complexity":1,"StackTotal":44,"CalleeIdx":6},{"Name":"byteswap-16.h:__bswap_16","UniqueKey":"$byteswap-16.h:__bswap_16","Idx":3,"NumCommentLines":0,"NumTotalLines":4,"NumCodeLines":1,"Callee":[],"Caller":[],"Stack":0,"HasDefinition":1,"File":["C:\\Program Files\\MATLAB\\R2021b\\polyspace\\verifier\\cxx\\include\\include-libc\\bits\\byteswap-16.h"],"IsStatic":1,"Complexity":1,"StackTotal":0,"CalleeIdx":[]},{"Name":"byteswap.h:__bswap_32","UniqueKey":"$byteswap.h:__bswap_32","Idx":4,"NumCommentLines":0,"NumTotalLines":4,"NumCodeLines":1,"Callee":[],"Caller":[],"Stack":0,"HasDefinition":1,"File":["C:\\Program Files\\MATLAB\\R2021b\\polyspace\\verifier\\cxx\\include\\include-libc\\bits\\byteswap.h"],"IsStatic":1,"Complexity":1,"StackTotal":0,"CalleeIdx":[]},{"Name":"byteswap.h:__bswap_64","UniqueKey":"$byteswap.h:__bswap_64","Idx":5,"NumCommentLines":0,"NumTotalLines":4,"NumCodeLines":1,"Callee":[],"Caller":[],"Stack":0,"HasDefinition":1,"File":["C:\\Program Files\\MATLAB\\R2021b\\polyspace\\verifier\\cxx\\include\\include-libc\\bits\\byteswap.h"],"IsStatic":1,"Complexity":1,"StackTotal":0,"CalleeIdx":[]},{"Name":"cos","UniqueKey":"$cos","Idx":6,"NumCommentLines":0,"NumTotalLines":0,"NumCodeLines":0,"Callee":[],"Caller":{"Name":"Resonanz_Regler_1_step","Weight":2},"Stack":0,"HasDefinition":0,"File":["C:\\Program Files\\MATLAB\\R2021b\\polyspace\\verifier\\cxx\\include\\include-libc\\bits\\mathcalls.h"],"IsStatic":0,"Complexity":0,"StackTotal":0,"CalleeIdx":[]},{"Name":"memset","UniqueKey":"$memset","Idx":7,"NumCommentLines":0,"NumTotalLines":0,"NumCodeLines":0,"Callee":[],"Caller":{"Name":"Resonanz_Regler_1_initialize","Weight":2},"Stack":0,"HasDefinition":0,"File":["C:\\Program Files\\MATLAB\\R2021b\\polyspace\\verifier\\cxx\\include\\include-libc\\string.h"],"IsStatic":0,"Complexity":0,"StackTotal":0,"CalleeIdx":[]}]}};