-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\uz_mpc_cost_and_optim_state_machine\uz_6ph_cost_ip_src_uz_6ph_mpc_costs_and_optimization.vhd
-- Created: 2022-09-20 10:02:54
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-08
-- Target subsystem base rate: 1e-08
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- opt_index                     ce_out        1e-08
-- G0                            ce_out        1e-08
-- G1                            ce_out        1e-08
-- G2                            ce_out        1e-08
-- G3                            ce_out        1e-08
-- G4                            ce_out        1e-08
-- G5                            ce_out        1e-08
-- G6                            ce_out        1e-08
-- G7                            ce_out        1e-08
-- G8                            ce_out        1e-08
-- G9                            ce_out        1e-08
-- G10                           ce_out        1e-08
-- G11                           ce_out        1e-08
-- opt_done                      ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_6ph_cost_ip_src_uz_6ph_mpc_costs_and_optimization
-- Source Path: uz_mpc_cost_and_optim_state_machine/uz_6ph_mpc_costs_and_optimization
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.uz_6ph_cost_ip_src_uz_6ph_mpc_costs_and_optimization_pkg.ALL;

ENTITY uz_6ph_cost_ip_src_uz_6ph_mpc_costs_and_optimization IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        id_ref_pu_AXI                     :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        iq_ref_pu_AXI                     :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        ix_ref_pu_AXI                     :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        iy_ref_pu_AXI                     :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        id_pred_pu                        :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En16
        iq_pred_pu                        :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En16
        ix_pred_pu                        :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        iy_pred_pu                        :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        max_current_pu_AXI                :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En15
        index                             :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        last_optim_index                  :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        lambda_d_AXI                      :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
        lambda_q_AXI                      :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
        lambda_x_AXI                      :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
        lambda_y_AXI                      :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
        lambda_u_AXI                      :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
        trigger                           :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        opt_index                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        G0                                :   OUT   std_logic;
        G1                                :   OUT   std_logic;
        G2                                :   OUT   std_logic;
        G3                                :   OUT   std_logic;
        G4                                :   OUT   std_logic;
        G5                                :   OUT   std_logic;
        G6                                :   OUT   std_logic;
        G7                                :   OUT   std_logic;
        G8                                :   OUT   std_logic;
        G9                                :   OUT   std_logic;
        G10                               :   OUT   std_logic;
        G11                               :   OUT   std_logic;
        opt_done                          :   OUT   std_logic
        );
END uz_6ph_cost_ip_src_uz_6ph_mpc_costs_and_optimization;


ARCHITECTURE rtl OF uz_6ph_cost_ip_src_uz_6ph_mpc_costs_and_optimization IS

  -- Component Declarations
  COMPONENT uz_6ph_cost_ip_src_Detect_Rise_Positive
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          U                               :   IN    std_logic;
          Y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT uz_6ph_cost_ip_src_FiniteControlSetSwitchingTable
    PORT( G                               :   OUT   matrix_of_std_logic(0 TO 63, 0 TO 11)  -- boolean [64x12]
          );
  END COMPONENT;

  COMPONENT uz_6ph_cost_ip_src_MATLAB_Function
    PORT( in_rsvd                         :   IN    matrix_of_std_logic(0 TO 63, 0 TO 11);  -- boolean [64x12]
          index                           :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          last_optim_index                :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          G_next                          :   OUT   std_logic_vector(0 TO 5);  -- boolean [6]
          G_prev                          :   OUT   std_logic_vector(0 TO 5)  -- boolean [6]
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : uz_6ph_cost_ip_src_Detect_Rise_Positive
    USE ENTITY work.uz_6ph_cost_ip_src_Detect_Rise_Positive(rtl);

  FOR ALL : uz_6ph_cost_ip_src_FiniteControlSetSwitchingTable
    USE ENTITY work.uz_6ph_cost_ip_src_FiniteControlSetSwitchingTable(rtl);

  FOR ALL : uz_6ph_cost_ip_src_MATLAB_Function
    USE ENTITY work.uz_6ph_cost_ip_src_MATLAB_Function(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL Delay_out1                       : std_logic;
  SIGNAL Detect_Rise_Positive_out1        : std_logic;
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL lambda_d_AXI_unsigned            : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Delay26_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Switch15_out1                    : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Delay25_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Delay53_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL switch_compare_1_1               : std_logic;
  SIGNAL id_pred_pu_signed                : signed(26 DOWNTO 0);  -- sfix27_En16
  SIGNAL Delay2_out1                      : signed(26 DOWNTO 0);  -- sfix27_En16
  SIGNAL Switch1_out1                     : signed(26 DOWNTO 0);  -- sfix27_En16
  SIGNAL Delay3_out1                      : signed(26 DOWNTO 0);  -- sfix27_En16
  SIGNAL Delay83_out1                     : signed(26 DOWNTO 0);  -- sfix27_En16
  SIGNAL Product4_mul_temp                : signed(53 DOWNTO 0);  -- sfix54_En32
  SIGNAL Product4_out1                    : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay79_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL switch_compare_1_2               : std_logic;
  SIGNAL iq_pred_pu_signed                : signed(26 DOWNTO 0);  -- sfix27_En16
  SIGNAL Delay5_out1                      : signed(26 DOWNTO 0);  -- sfix27_En16
  SIGNAL Switch2_out1                     : signed(26 DOWNTO 0);  -- sfix27_En16
  SIGNAL Delay6_out1                      : signed(26 DOWNTO 0);  -- sfix27_En16
  SIGNAL Delay84_out1                     : signed(26 DOWNTO 0);  -- sfix27_En16
  SIGNAL Product5_mul_temp                : signed(53 DOWNTO 0);  -- sfix54_En32
  SIGNAL Product5_out1                    : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay80_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Add4_stage2_add_temp             : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Add4_op_stage1                   : unsigned(27 DOWNTO 0);  -- ufix28_En22
  SIGNAL switch_compare_1_3               : std_logic;
  SIGNAL ix_pred_pu_signed                : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay7_out1                      : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Switch3_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay8_out1                      : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay85_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Product6_mul_temp                : signed(35 DOWNTO 0);  -- sfix36_En22
  SIGNAL Product6_out1                    : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay81_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Add4_stage3_add_cast             : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Add4_stage3_add_temp             : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Add4_op_stage2                   : unsigned(28 DOWNTO 0);  -- ufix29_En22
  SIGNAL switch_compare_1_4               : std_logic;
  SIGNAL iy_pred_pu_signed                : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay9_out1                      : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Switch4_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay10_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay86_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Product7_mul_temp                : signed(35 DOWNTO 0);  -- sfix36_En22
  SIGNAL Product7_out1                    : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay82_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Add4_stage4_add_cast             : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Add4_out1                        : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay39_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL switch_compare_1_5               : std_logic;
  SIGNAL max_current_pu_AXI_unsigned      : unsigned(17 DOWNTO 0);  -- ufix18_En15
  SIGNAL Delay12_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En15
  SIGNAL Switch5_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En15
  SIGNAL Delay11_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En15
  SIGNAL Delay92_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En15
  SIGNAL Product14_mul_temp               : unsigned(35 DOWNTO 0);  -- ufix36_En30
  SIGNAL Product14_out1                   : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay93_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Relational_Operator_relop1       : std_logic;
  SIGNAL Delay87_out1                     : std_logic;
  SIGNAL switch_compare_1_6               : std_logic;
  SIGNAL switch_compare_1_7               : std_logic;
  SIGNAL id_ref_pu_AXI_signed             : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay14_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Switch6_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay15_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay63_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay64_out1                     : signed(26 DOWNTO 0);  -- sfix27_En16
  SIGNAL Add_sub_cast                     : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL Add_sub_cast_1                   : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL Add_out1                         : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL Delay71_out1                     : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL Product_mul_temp                 : signed(55 DOWNTO 0);  -- sfix56_En32
  SIGNAL Product_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay75_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL sfix18_En15_max_value_out1       : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL sfix18_En15_max_value_out1_dtc   : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Switch_out1                      : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay88_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay59_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Product9_mul_temp                : unsigned(44 DOWNTO 0);  -- ufix45_En39
  SIGNAL Product9_out1                    : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay47_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL switch_compare_1_8               : std_logic;
  SIGNAL lambda_q_AXI_unsigned            : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Delay28_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Switch16_out1                    : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Delay27_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Delay54_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL switch_compare_1_9               : std_logic;
  SIGNAL switch_compare_1_10              : std_logic;
  SIGNAL iq_ref_pu_AXI_signed             : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay16_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Switch7_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay17_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay65_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay66_out1                     : signed(26 DOWNTO 0);  -- sfix27_En16
  SIGNAL Add1_sub_cast                    : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL Add1_sub_cast_1                  : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL Add1_out1                        : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL Delay72_out1                     : signed(27 DOWNTO 0);  -- sfix28_En16
  SIGNAL Product1_mul_temp                : signed(55 DOWNTO 0);  -- sfix56_En32
  SIGNAL Product1_out1                    : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay76_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL sfix18_En15_max_value_out1_dtc_1 : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Switch12_out1                    : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay89_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay60_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Product10_mul_temp               : unsigned(44 DOWNTO 0);  -- ufix45_En39
  SIGNAL Product10_out1                   : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay48_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Add6_stage2_add_cast             : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL Add6_stage2_add_cast_1           : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL Add6_stage2_add_temp             : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL Add6_op_stage1                   : unsigned(27 DOWNTO 0);  -- ufix28_En22
  SIGNAL switch_compare_1_11              : std_logic;
  SIGNAL lambda_x_AXI_unsigned            : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Delay30_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Switch17_out1                    : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Delay29_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Delay55_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL switch_compare_1_12              : std_logic;
  SIGNAL switch_compare_1_13              : std_logic;
  SIGNAL ix_ref_pu_AXI_signed             : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay18_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Switch8_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay19_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay67_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay68_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Add2_sub_cast                    : signed(18 DOWNTO 0);  -- sfix19_En11
  SIGNAL Add2_sub_cast_1                  : signed(18 DOWNTO 0);  -- sfix19_En11
  SIGNAL Add2_out1                        : signed(18 DOWNTO 0);  -- sfix19_En11
  SIGNAL Delay73_out1                     : signed(18 DOWNTO 0);  -- sfix19_En11
  SIGNAL Product2_mul_temp                : signed(37 DOWNTO 0);  -- sfix38_En22
  SIGNAL Product2_out1                    : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay77_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL sfix18_En15_max_value_out1_dtc_2 : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Switch13_out1                    : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay90_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay61_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Product11_mul_temp               : unsigned(44 DOWNTO 0);  -- ufix45_En39
  SIGNAL Product11_out1                   : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay49_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Add6_stage3_add_cast             : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL Add6_stage3_add_cast_1           : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL Add6_stage3_add_temp             : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL Add6_op_stage2                   : unsigned(28 DOWNTO 0);  -- ufix29_En22
  SIGNAL switch_compare_1_14              : std_logic;
  SIGNAL lambda_y_AXI_unsigned            : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Delay32_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Switch18_out1                    : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Delay31_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Delay56_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL switch_compare_1_15              : std_logic;
  SIGNAL switch_compare_1_16              : std_logic;
  SIGNAL iy_ref_pu_AXI_signed             : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay20_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Switch9_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay21_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay69_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Delay70_out1                     : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Add3_sub_cast                    : signed(18 DOWNTO 0);  -- sfix19_En11
  SIGNAL Add3_sub_cast_1                  : signed(18 DOWNTO 0);  -- sfix19_En11
  SIGNAL Add3_out1                        : signed(18 DOWNTO 0);  -- sfix19_En11
  SIGNAL Delay74_out1                     : signed(18 DOWNTO 0);  -- sfix19_En11
  SIGNAL Product3_mul_temp                : signed(37 DOWNTO 0);  -- sfix38_En22
  SIGNAL Product3_out1                    : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay78_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL sfix18_En15_max_value_out1_dtc_3 : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Switch14_out1                    : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay91_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay62_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Product12_mul_temp               : unsigned(44 DOWNTO 0);  -- ufix45_En39
  SIGNAL Product12_out1                   : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Delay50_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En22
  SIGNAL Add6_stage4_add_cast             : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL Add6_stage4_add_cast_1           : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL Add6_stage4_add_temp             : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL Add6_op_stage3                   : unsigned(29 DOWNTO 0);  -- ufix30_En22
  SIGNAL switch_compare_1_17              : std_logic;
  SIGNAL lambda_u_AXI_unsigned            : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Delay34_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Switch19_out1                    : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Delay33_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL Delay57_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En17
  SIGNAL G                                : matrix_of_std_logic(0 TO 63, 0 TO 11);  -- boolean [64x12]
  SIGNAL c228_G                           : std_logic_vector(0 TO 767);  -- boolean [768]
  SIGNAL G_1                              : matrix_of_std_logic(0 TO 63, 0 TO 11);  -- boolean [64x12]
  SIGNAL Delay23_ctrl_const_out           : std_logic;
  SIGNAL Delay23_ctrl_delay_out           : std_logic;
  SIGNAL Delay23_Initial_Val_out          : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Delay24_ctrl_const_out           : std_logic;
  SIGNAL Delay24_ctrl_delay_out           : std_logic;
  SIGNAL Delay24_Initial_Val_out          : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL index_unsigned                   : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL switch_compare_1_18              : std_logic;
  SIGNAL Delay24_out                      : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Delay24_out1                     : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Switch11_out1                    : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Delay23_out                      : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Delay23_out1                     : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Delay13_ctrl_const_out           : std_logic;
  SIGNAL Delay13_ctrl_delay_out           : std_logic;
  SIGNAL Delay13_Initial_Val_out          : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Delay22_ctrl_const_out           : std_logic;
  SIGNAL Delay22_ctrl_delay_out           : std_logic;
  SIGNAL Delay22_Initial_Val_out          : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL last_optim_index_unsigned        : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL switch_compare_1_19              : std_logic;
  SIGNAL Delay22_out                      : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Delay22_out1                     : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Switch10_out1                    : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Delay13_out                      : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Delay13_out1                     : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL G_next                           : std_logic_vector(0 TO 5);  -- boolean [6]
  SIGNAL G_prev                           : std_logic_vector(0 TO 5);  -- boolean [6]
  SIGNAL Delay45_out1                     : std_logic_vector(0 TO 5);  -- boolean [6]
  SIGNAL Delay46_out1                     : std_logic_vector(0 TO 5);  -- boolean [6]
  SIGNAL Add5_sub_cast                    : vector_of_signed9(0 TO 5);  -- sfix9 [6]
  SIGNAL Add5_sub_cast_1                  : vector_of_signed9(0 TO 5);  -- sfix9 [6]
  SIGNAL Add5_out1                        : vector_of_signed9(0 TO 5);  -- sfix9 [6]
  SIGNAL Add5_out1_1                      : vector_of_signed9(0 TO 5);  -- sfix9 [6]
  SIGNAL Product8_mul_temp                : vector_of_signed18(0 TO 5);  -- sfix18 [6]
  SIGNAL Product8_out1                    : vector_of_unsigned16(0 TO 5);  -- uint16 [6]
  SIGNAL Delay41_out1                     : vector_of_unsigned16(0 TO 5);  -- uint16 [6]
  SIGNAL Delay41_out1_0                   : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Delay41_out1_1                   : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Sum_of_Elements_op_stage1        : unsigned(16 DOWNTO 0);  -- ufix17
  SIGNAL Delay41_out1_2                   : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Sum_of_Elements_op_stage2        : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL Delay41_out1_3                   : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Sum_of_Elements_op_stage3        : unsigned(18 DOWNTO 0);  -- ufix19
  SIGNAL Delay41_out1_4                   : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Sum_of_Elements_op_stage4        : unsigned(19 DOWNTO 0);  -- ufix20
  SIGNAL Delay41_out1_5                   : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Sum_of_Elements_out1             : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Delay42_out1                     : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Delay58_out1                     : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Product13_mul_temp               : unsigned(33 DOWNTO 0);  -- ufix34_En17
  SIGNAL Product13_out1                   : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL Delay51_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL Add6_stage5_add_cast             : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL Add6_out1                        : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL Delay52_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL Delay35_ctrl_const_out           : std_logic;
  SIGNAL Delay35_ctrl_delay_out           : std_logic;
  SIGNAL Delay35_Initial_Val_out          : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL Delay35_out                      : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL Delay35_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL Relational_Operator1_relop1      : std_logic;
  SIGNAL switch_compare_1_20              : std_logic;
  SIGNAL Delay36_ctrl_const_out           : std_logic;
  SIGNAL Delay36_ctrl_delay_out           : std_logic;
  SIGNAL Delay36_Initial_Val_out          : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Switch20_out1                    : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Delay36_out                      : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Delay36_out1                     : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Delay4_out1                      : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL switch_compare_1_21              : std_logic;
  SIGNAL Delay37_ctrl_const_out           : std_logic;
  SIGNAL Delay37_ctrl_delay_out           : std_logic;
  SIGNAL Delay37_Initial_Val_out          : std_logic_vector(0 TO 5);  -- boolean [6]
  SIGNAL Switch21_out1                    : std_logic_vector(0 TO 5);  -- boolean [6]
  SIGNAL Delay37_out                      : std_logic_vector(0 TO 5);  -- boolean [6]
  SIGNAL Delay37_out1                     : std_logic_vector(0 TO 5);  -- boolean [6]
  SIGNAL Delay38_out1                     : std_logic_vector(0 TO 5);  -- boolean [6]
  SIGNAL Delay38_out1_0                   : std_logic;
  SIGNAL NOT_out1                         : std_logic;
  SIGNAL Delay38_out1_1                   : std_logic;
  SIGNAL NOT1_out1                        : std_logic;
  SIGNAL Delay38_out1_2                   : std_logic;
  SIGNAL NOT2_out1                        : std_logic;
  SIGNAL Delay38_out1_3                   : std_logic;
  SIGNAL NOT3_out1                        : std_logic;
  SIGNAL Delay38_out1_4                   : std_logic;
  SIGNAL NOT4_out1                        : std_logic;
  SIGNAL Delay38_out1_5                   : std_logic;
  SIGNAL NOT5_out1                        : std_logic;
  SIGNAL Delay1_out1                      : std_logic;

BEGIN
  -- find minimum of costs by comparing costs one after another
  -- 
  -- start value ist 7.99 = max value of ufix27_En24
  -- 
  -- calculate costs
  -- 
  -- calculate switching effort
  -- 
  -- check for current limit violation
  -- 
  -- squared current error

  u_Detect_Rise_Positive : uz_6ph_cost_ip_src_Detect_Rise_Positive
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              U => Delay_out1,
              Y => Detect_Rise_Positive_out1
              );

  u_FiniteControlSetSwitchingTable : uz_6ph_cost_ip_src_FiniteControlSetSwitchingTable
    PORT MAP( G => G  -- boolean [64x12]
              );

  u_MATLAB_Function : uz_6ph_cost_ip_src_MATLAB_Function
    PORT MAP( in_rsvd => G_1,  -- boolean [64x12]
              index => std_logic_vector(Switch11_out1),  -- uint32
              last_optim_index => std_logic_vector(Switch10_out1),  -- uint32
              G_next => G_next,  -- boolean [6]
              G_prev => G_prev  -- boolean [6]
              );

  enb <= clk_enable;

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay_out1 <= trigger;
      END IF;
    END IF;
  END PROCESS Delay_process;


  
  switch_compare_1 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  lambda_d_AXI_unsigned <= unsigned(lambda_d_AXI);

  Delay26_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay26_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay26_out1 <= lambda_d_AXI_unsigned;
      END IF;
    END IF;
  END PROCESS Delay26_process;


  Delay25_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay25_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay25_out1 <= Switch15_out1;
      END IF;
    END IF;
  END PROCESS Delay25_process;


  
  Switch15_out1 <= Delay25_out1 WHEN switch_compare_1 = '0' ELSE
      Delay26_out1;

  Delay53_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay53_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay53_out1 <= Switch15_out1;
      END IF;
    END IF;
  END PROCESS Delay53_process;


  
  switch_compare_1_1 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  id_pred_pu_signed <= signed(id_pred_pu);

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_out1 <= to_signed(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay2_out1 <= id_pred_pu_signed;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_out1 <= to_signed(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay3_out1 <= Switch1_out1;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  
  Switch1_out1 <= Delay3_out1 WHEN switch_compare_1_1 = '0' ELSE
      Delay2_out1;

  Delay83_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay83_out1 <= to_signed(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay83_out1 <= Switch1_out1;
      END IF;
    END IF;
  END PROCESS Delay83_process;


  Product4_mul_temp <= Delay83_out1 * Delay83_out1;
  Product4_out1 <= unsigned(Product4_mul_temp(36 DOWNTO 10));

  Delay79_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay79_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay79_out1 <= Product4_out1;
      END IF;
    END IF;
  END PROCESS Delay79_process;


  
  switch_compare_1_2 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  iq_pred_pu_signed <= signed(iq_pred_pu);

  Delay5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay5_out1 <= to_signed(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay5_out1 <= iq_pred_pu_signed;
      END IF;
    END IF;
  END PROCESS Delay5_process;


  Delay6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay6_out1 <= to_signed(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay6_out1 <= Switch2_out1;
      END IF;
    END IF;
  END PROCESS Delay6_process;


  
  Switch2_out1 <= Delay6_out1 WHEN switch_compare_1_2 = '0' ELSE
      Delay5_out1;

  Delay84_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay84_out1 <= to_signed(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay84_out1 <= Switch2_out1;
      END IF;
    END IF;
  END PROCESS Delay84_process;


  Product5_mul_temp <= Delay84_out1 * Delay84_out1;
  Product5_out1 <= unsigned(Product5_mul_temp(36 DOWNTO 10));

  Delay80_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay80_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay80_out1 <= Product5_out1;
      END IF;
    END IF;
  END PROCESS Delay80_process;


  Add4_stage2_add_temp <= Delay79_out1 + Delay80_out1;
  Add4_op_stage1 <= resize(Add4_stage2_add_temp, 28);

  
  switch_compare_1_3 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  ix_pred_pu_signed <= signed(ix_pred_pu);

  Delay7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay7_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay7_out1 <= ix_pred_pu_signed;
      END IF;
    END IF;
  END PROCESS Delay7_process;


  Delay8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay8_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay8_out1 <= Switch3_out1;
      END IF;
    END IF;
  END PROCESS Delay8_process;


  
  Switch3_out1 <= Delay8_out1 WHEN switch_compare_1_3 = '0' ELSE
      Delay7_out1;

  Delay85_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay85_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay85_out1 <= Switch3_out1;
      END IF;
    END IF;
  END PROCESS Delay85_process;


  Product6_mul_temp <= Delay85_out1 * Delay85_out1;
  Product6_out1 <= unsigned(Product6_mul_temp(26 DOWNTO 0));

  Delay81_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay81_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay81_out1 <= Product6_out1;
      END IF;
    END IF;
  END PROCESS Delay81_process;


  Add4_stage3_add_cast <= Add4_op_stage1(26 DOWNTO 0);
  Add4_stage3_add_temp <= Add4_stage3_add_cast + Delay81_out1;
  Add4_op_stage2 <= resize(Add4_stage3_add_temp, 29);

  
  switch_compare_1_4 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  iy_pred_pu_signed <= signed(iy_pred_pu);

  Delay9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay9_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay9_out1 <= iy_pred_pu_signed;
      END IF;
    END IF;
  END PROCESS Delay9_process;


  Delay10_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay10_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay10_out1 <= Switch4_out1;
      END IF;
    END IF;
  END PROCESS Delay10_process;


  
  Switch4_out1 <= Delay10_out1 WHEN switch_compare_1_4 = '0' ELSE
      Delay9_out1;

  Delay86_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay86_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay86_out1 <= Switch4_out1;
      END IF;
    END IF;
  END PROCESS Delay86_process;


  Product7_mul_temp <= Delay86_out1 * Delay86_out1;
  Product7_out1 <= unsigned(Product7_mul_temp(26 DOWNTO 0));

  Delay82_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay82_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay82_out1 <= Product7_out1;
      END IF;
    END IF;
  END PROCESS Delay82_process;


  Add4_stage4_add_cast <= Add4_op_stage2(26 DOWNTO 0);
  Add4_out1 <= Add4_stage4_add_cast + Delay82_out1;

  Delay39_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay39_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay39_out1 <= Add4_out1;
      END IF;
    END IF;
  END PROCESS Delay39_process;


  
  switch_compare_1_5 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  max_current_pu_AXI_unsigned <= unsigned(max_current_pu_AXI);

  Delay12_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay12_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay12_out1 <= max_current_pu_AXI_unsigned;
      END IF;
    END IF;
  END PROCESS Delay12_process;


  Delay11_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay11_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay11_out1 <= Switch5_out1;
      END IF;
    END IF;
  END PROCESS Delay11_process;


  
  Switch5_out1 <= Delay11_out1 WHEN switch_compare_1_5 = '0' ELSE
      Delay12_out1;

  Delay92_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay92_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay92_out1 <= Switch5_out1;
      END IF;
    END IF;
  END PROCESS Delay92_process;


  Product14_mul_temp <= Delay92_out1 * Delay92_out1;
  Product14_out1 <= Product14_mul_temp(34 DOWNTO 8);

  Delay93_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay93_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay93_out1 <= Product14_out1;
      END IF;
    END IF;
  END PROCESS Delay93_process;


  
  Relational_Operator_relop1 <= '1' WHEN Delay39_out1 >= Delay93_out1 ELSE
      '0';

  Delay87_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay87_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay87_out1 <= Relational_Operator_relop1;
      END IF;
    END IF;
  END PROCESS Delay87_process;


  
  switch_compare_1_6 <= '1' WHEN Delay87_out1 > '0' ELSE
      '0';

  
  switch_compare_1_7 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  id_ref_pu_AXI_signed <= signed(id_ref_pu_AXI);

  Delay14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay14_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay14_out1 <= id_ref_pu_AXI_signed;
      END IF;
    END IF;
  END PROCESS Delay14_process;


  Delay15_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay15_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay15_out1 <= Switch6_out1;
      END IF;
    END IF;
  END PROCESS Delay15_process;


  
  Switch6_out1 <= Delay15_out1 WHEN switch_compare_1_7 = '0' ELSE
      Delay14_out1;

  Delay63_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay63_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay63_out1 <= Switch6_out1;
      END IF;
    END IF;
  END PROCESS Delay63_process;


  Delay64_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay64_out1 <= to_signed(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay64_out1 <= Switch1_out1;
      END IF;
    END IF;
  END PROCESS Delay64_process;


  Add_sub_cast <= resize(Delay63_out1 & '0' & '0' & '0' & '0' & '0', 28);
  Add_sub_cast_1 <= resize(Delay64_out1, 28);
  Add_out1 <= Add_sub_cast - Add_sub_cast_1;

  Delay71_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay71_out1 <= to_signed(16#0000000#, 28);
      ELSIF enb = '1' THEN
        Delay71_out1 <= Add_out1;
      END IF;
    END IF;
  END PROCESS Delay71_process;


  Product_mul_temp <= Delay71_out1 * Delay71_out1;
  Product_out1 <= unsigned(Product_mul_temp(36 DOWNTO 10));

  Delay75_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay75_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay75_out1 <= Product_out1;
      END IF;
    END IF;
  END PROCESS Delay75_process;


  sfix18_En15_max_value_out1 <= to_signed(16#1FEB8#, 18);

  sfix18_En15_max_value_out1_dtc <= unsigned(resize(sfix18_En15_max_value_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0', 27));

  
  Switch_out1 <= Delay75_out1 WHEN switch_compare_1_6 = '0' ELSE
      sfix18_En15_max_value_out1_dtc;

  Delay88_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay88_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay88_out1 <= Switch_out1;
      END IF;
    END IF;
  END PROCESS Delay88_process;


  Delay59_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay59_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay59_out1 <= Delay88_out1;
      END IF;
    END IF;
  END PROCESS Delay59_process;


  Product9_mul_temp <= Delay53_out1 * Delay59_out1;
  Product9_out1 <= Product9_mul_temp(43 DOWNTO 17);

  Delay47_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay47_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay47_out1 <= Product9_out1;
      END IF;
    END IF;
  END PROCESS Delay47_process;


  
  switch_compare_1_8 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  lambda_q_AXI_unsigned <= unsigned(lambda_q_AXI);

  Delay28_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay28_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay28_out1 <= lambda_q_AXI_unsigned;
      END IF;
    END IF;
  END PROCESS Delay28_process;


  Delay27_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay27_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay27_out1 <= Switch16_out1;
      END IF;
    END IF;
  END PROCESS Delay27_process;


  
  Switch16_out1 <= Delay27_out1 WHEN switch_compare_1_8 = '0' ELSE
      Delay28_out1;

  Delay54_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay54_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay54_out1 <= Switch16_out1;
      END IF;
    END IF;
  END PROCESS Delay54_process;


  
  switch_compare_1_9 <= '1' WHEN Delay87_out1 > '0' ELSE
      '0';

  
  switch_compare_1_10 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  iq_ref_pu_AXI_signed <= signed(iq_ref_pu_AXI);

  Delay16_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay16_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay16_out1 <= iq_ref_pu_AXI_signed;
      END IF;
    END IF;
  END PROCESS Delay16_process;


  Delay17_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay17_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay17_out1 <= Switch7_out1;
      END IF;
    END IF;
  END PROCESS Delay17_process;


  
  Switch7_out1 <= Delay17_out1 WHEN switch_compare_1_10 = '0' ELSE
      Delay16_out1;

  Delay65_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay65_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay65_out1 <= Switch7_out1;
      END IF;
    END IF;
  END PROCESS Delay65_process;


  Delay66_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay66_out1 <= to_signed(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay66_out1 <= Switch2_out1;
      END IF;
    END IF;
  END PROCESS Delay66_process;


  Add1_sub_cast <= resize(Delay65_out1 & '0' & '0' & '0' & '0' & '0', 28);
  Add1_sub_cast_1 <= resize(Delay66_out1, 28);
  Add1_out1 <= Add1_sub_cast - Add1_sub_cast_1;

  Delay72_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay72_out1 <= to_signed(16#0000000#, 28);
      ELSIF enb = '1' THEN
        Delay72_out1 <= Add1_out1;
      END IF;
    END IF;
  END PROCESS Delay72_process;


  Product1_mul_temp <= Delay72_out1 * Delay72_out1;
  Product1_out1 <= unsigned(Product1_mul_temp(36 DOWNTO 10));

  Delay76_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay76_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay76_out1 <= Product1_out1;
      END IF;
    END IF;
  END PROCESS Delay76_process;


  sfix18_En15_max_value_out1_dtc_1 <= unsigned(resize(sfix18_En15_max_value_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0', 27));

  
  Switch12_out1 <= Delay76_out1 WHEN switch_compare_1_9 = '0' ELSE
      sfix18_En15_max_value_out1_dtc_1;

  Delay89_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay89_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay89_out1 <= Switch12_out1;
      END IF;
    END IF;
  END PROCESS Delay89_process;


  Delay60_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay60_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay60_out1 <= Delay89_out1;
      END IF;
    END IF;
  END PROCESS Delay60_process;


  Product10_mul_temp <= Delay54_out1 * Delay60_out1;
  Product10_out1 <= Product10_mul_temp(43 DOWNTO 17);

  Delay48_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay48_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay48_out1 <= Product10_out1;
      END IF;
    END IF;
  END PROCESS Delay48_process;


  Add6_stage2_add_cast <= Delay47_out1(24 DOWNTO 0) & '0' & '0';
  Add6_stage2_add_cast_1 <= Delay48_out1(24 DOWNTO 0) & '0' & '0';
  Add6_stage2_add_temp <= Add6_stage2_add_cast + Add6_stage2_add_cast_1;
  Add6_op_stage1 <= resize(Add6_stage2_add_temp(26 DOWNTO 2), 28);

  
  switch_compare_1_11 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  lambda_x_AXI_unsigned <= unsigned(lambda_x_AXI);

  Delay30_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay30_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay30_out1 <= lambda_x_AXI_unsigned;
      END IF;
    END IF;
  END PROCESS Delay30_process;


  Delay29_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay29_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay29_out1 <= Switch17_out1;
      END IF;
    END IF;
  END PROCESS Delay29_process;


  
  Switch17_out1 <= Delay29_out1 WHEN switch_compare_1_11 = '0' ELSE
      Delay30_out1;

  Delay55_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay55_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay55_out1 <= Switch17_out1;
      END IF;
    END IF;
  END PROCESS Delay55_process;


  
  switch_compare_1_12 <= '1' WHEN Delay87_out1 > '0' ELSE
      '0';

  
  switch_compare_1_13 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  ix_ref_pu_AXI_signed <= signed(ix_ref_pu_AXI);

  Delay18_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay18_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay18_out1 <= ix_ref_pu_AXI_signed;
      END IF;
    END IF;
  END PROCESS Delay18_process;


  Delay19_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay19_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay19_out1 <= Switch8_out1;
      END IF;
    END IF;
  END PROCESS Delay19_process;


  
  Switch8_out1 <= Delay19_out1 WHEN switch_compare_1_13 = '0' ELSE
      Delay18_out1;

  Delay67_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay67_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay67_out1 <= Switch8_out1;
      END IF;
    END IF;
  END PROCESS Delay67_process;


  Delay68_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay68_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay68_out1 <= Switch3_out1;
      END IF;
    END IF;
  END PROCESS Delay68_process;


  Add2_sub_cast <= resize(Delay67_out1, 19);
  Add2_sub_cast_1 <= resize(Delay68_out1, 19);
  Add2_out1 <= Add2_sub_cast - Add2_sub_cast_1;

  Delay73_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay73_out1 <= to_signed(16#00000#, 19);
      ELSIF enb = '1' THEN
        Delay73_out1 <= Add2_out1;
      END IF;
    END IF;
  END PROCESS Delay73_process;


  Product2_mul_temp <= Delay73_out1 * Delay73_out1;
  Product2_out1 <= unsigned(Product2_mul_temp(26 DOWNTO 0));

  Delay77_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay77_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay77_out1 <= Product2_out1;
      END IF;
    END IF;
  END PROCESS Delay77_process;


  sfix18_En15_max_value_out1_dtc_2 <= unsigned(resize(sfix18_En15_max_value_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0', 27));

  
  Switch13_out1 <= Delay77_out1 WHEN switch_compare_1_12 = '0' ELSE
      sfix18_En15_max_value_out1_dtc_2;

  Delay90_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay90_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay90_out1 <= Switch13_out1;
      END IF;
    END IF;
  END PROCESS Delay90_process;


  Delay61_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay61_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay61_out1 <= Delay90_out1;
      END IF;
    END IF;
  END PROCESS Delay61_process;


  Product11_mul_temp <= Delay55_out1 * Delay61_out1;
  Product11_out1 <= Product11_mul_temp(43 DOWNTO 17);

  Delay49_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay49_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay49_out1 <= Product11_out1;
      END IF;
    END IF;
  END PROCESS Delay49_process;


  Add6_stage3_add_cast <= Add6_op_stage1(24 DOWNTO 0) & '0' & '0';
  Add6_stage3_add_cast_1 <= Delay49_out1(24 DOWNTO 0) & '0' & '0';
  Add6_stage3_add_temp <= Add6_stage3_add_cast + Add6_stage3_add_cast_1;
  Add6_op_stage2 <= resize(Add6_stage3_add_temp(26 DOWNTO 2), 29);

  
  switch_compare_1_14 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  lambda_y_AXI_unsigned <= unsigned(lambda_y_AXI);

  Delay32_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay32_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay32_out1 <= lambda_y_AXI_unsigned;
      END IF;
    END IF;
  END PROCESS Delay32_process;


  Delay31_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay31_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay31_out1 <= Switch18_out1;
      END IF;
    END IF;
  END PROCESS Delay31_process;


  
  Switch18_out1 <= Delay31_out1 WHEN switch_compare_1_14 = '0' ELSE
      Delay32_out1;

  Delay56_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay56_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay56_out1 <= Switch18_out1;
      END IF;
    END IF;
  END PROCESS Delay56_process;


  
  switch_compare_1_15 <= '1' WHEN Delay87_out1 > '0' ELSE
      '0';

  
  switch_compare_1_16 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  iy_ref_pu_AXI_signed <= signed(iy_ref_pu_AXI);

  Delay20_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay20_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay20_out1 <= iy_ref_pu_AXI_signed;
      END IF;
    END IF;
  END PROCESS Delay20_process;


  Delay21_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay21_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay21_out1 <= Switch9_out1;
      END IF;
    END IF;
  END PROCESS Delay21_process;


  
  Switch9_out1 <= Delay21_out1 WHEN switch_compare_1_16 = '0' ELSE
      Delay20_out1;

  Delay69_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay69_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay69_out1 <= Switch9_out1;
      END IF;
    END IF;
  END PROCESS Delay69_process;


  Delay70_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay70_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay70_out1 <= Switch4_out1;
      END IF;
    END IF;
  END PROCESS Delay70_process;


  Add3_sub_cast <= resize(Delay69_out1, 19);
  Add3_sub_cast_1 <= resize(Delay70_out1, 19);
  Add3_out1 <= Add3_sub_cast - Add3_sub_cast_1;

  Delay74_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay74_out1 <= to_signed(16#00000#, 19);
      ELSIF enb = '1' THEN
        Delay74_out1 <= Add3_out1;
      END IF;
    END IF;
  END PROCESS Delay74_process;


  Product3_mul_temp <= Delay74_out1 * Delay74_out1;
  Product3_out1 <= unsigned(Product3_mul_temp(26 DOWNTO 0));

  Delay78_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay78_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay78_out1 <= Product3_out1;
      END IF;
    END IF;
  END PROCESS Delay78_process;


  sfix18_En15_max_value_out1_dtc_3 <= unsigned(resize(sfix18_En15_max_value_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0', 27));

  
  Switch14_out1 <= Delay78_out1 WHEN switch_compare_1_15 = '0' ELSE
      sfix18_En15_max_value_out1_dtc_3;

  Delay91_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay91_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay91_out1 <= Switch14_out1;
      END IF;
    END IF;
  END PROCESS Delay91_process;


  Delay62_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay62_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay62_out1 <= Delay91_out1;
      END IF;
    END IF;
  END PROCESS Delay62_process;


  Product12_mul_temp <= Delay56_out1 * Delay62_out1;
  Product12_out1 <= Product12_mul_temp(43 DOWNTO 17);

  Delay50_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay50_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay50_out1 <= Product12_out1;
      END IF;
    END IF;
  END PROCESS Delay50_process;


  Add6_stage4_add_cast <= Add6_op_stage2(24 DOWNTO 0) & '0' & '0';
  Add6_stage4_add_cast_1 <= Delay50_out1(24 DOWNTO 0) & '0' & '0';
  Add6_stage4_add_temp <= Add6_stage4_add_cast + Add6_stage4_add_cast_1;
  Add6_op_stage3 <= resize(Add6_stage4_add_temp(26 DOWNTO 2), 30);

  
  switch_compare_1_17 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  lambda_u_AXI_unsigned <= unsigned(lambda_u_AXI);

  Delay34_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay34_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay34_out1 <= lambda_u_AXI_unsigned;
      END IF;
    END IF;
  END PROCESS Delay34_process;


  Delay33_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay33_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay33_out1 <= Switch19_out1;
      END IF;
    END IF;
  END PROCESS Delay33_process;


  
  Switch19_out1 <= Delay33_out1 WHEN switch_compare_1_17 = '0' ELSE
      Delay34_out1;

  Delay57_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay57_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay57_out1 <= Switch19_out1;
      END IF;
    END IF;
  END PROCESS Delay57_process;


  c_output : PROCESS (G)
  BEGIN
    c228_G(0) <= G(0, 0);
    c228_G(1) <= G(1, 0);
    c228_G(2) <= G(2, 0);
    c228_G(3) <= G(3, 0);
    c228_G(4) <= G(4, 0);
    c228_G(5) <= G(5, 0);
    c228_G(6) <= G(6, 0);
    c228_G(7) <= G(7, 0);
    c228_G(8) <= G(8, 0);
    c228_G(9) <= G(9, 0);
    c228_G(10) <= G(10, 0);
    c228_G(11) <= G(11, 0);
    c228_G(12) <= G(12, 0);
    c228_G(13) <= G(13, 0);
    c228_G(14) <= G(14, 0);
    c228_G(15) <= G(15, 0);
    c228_G(16) <= G(16, 0);
    c228_G(17) <= G(17, 0);
    c228_G(18) <= G(18, 0);
    c228_G(19) <= G(19, 0);
    c228_G(20) <= G(20, 0);
    c228_G(21) <= G(21, 0);
    c228_G(22) <= G(22, 0);
    c228_G(23) <= G(23, 0);
    c228_G(24) <= G(24, 0);
    c228_G(25) <= G(25, 0);
    c228_G(26) <= G(26, 0);
    c228_G(27) <= G(27, 0);
    c228_G(28) <= G(28, 0);
    c228_G(29) <= G(29, 0);
    c228_G(30) <= G(30, 0);
    c228_G(31) <= G(31, 0);
    c228_G(32) <= G(32, 0);
    c228_G(33) <= G(33, 0);
    c228_G(34) <= G(34, 0);
    c228_G(35) <= G(35, 0);
    c228_G(36) <= G(36, 0);
    c228_G(37) <= G(37, 0);
    c228_G(38) <= G(38, 0);
    c228_G(39) <= G(39, 0);
    c228_G(40) <= G(40, 0);
    c228_G(41) <= G(41, 0);
    c228_G(42) <= G(42, 0);
    c228_G(43) <= G(43, 0);
    c228_G(44) <= G(44, 0);
    c228_G(45) <= G(45, 0);
    c228_G(46) <= G(46, 0);
    c228_G(47) <= G(47, 0);
    c228_G(48) <= G(48, 0);
    c228_G(49) <= G(49, 0);
    c228_G(50) <= G(50, 0);
    c228_G(51) <= G(51, 0);
    c228_G(52) <= G(52, 0);
    c228_G(53) <= G(53, 0);
    c228_G(54) <= G(54, 0);
    c228_G(55) <= G(55, 0);
    c228_G(56) <= G(56, 0);
    c228_G(57) <= G(57, 0);
    c228_G(58) <= G(58, 0);
    c228_G(59) <= G(59, 0);
    c228_G(60) <= G(60, 0);
    c228_G(61) <= G(61, 0);
    c228_G(62) <= G(62, 0);
    c228_G(63) <= G(63, 0);
    c228_G(64) <= G(0, 1);
    c228_G(65) <= G(1, 1);
    c228_G(66) <= G(2, 1);
    c228_G(67) <= G(3, 1);
    c228_G(68) <= G(4, 1);
    c228_G(69) <= G(5, 1);
    c228_G(70) <= G(6, 1);
    c228_G(71) <= G(7, 1);
    c228_G(72) <= G(8, 1);
    c228_G(73) <= G(9, 1);
    c228_G(74) <= G(10, 1);
    c228_G(75) <= G(11, 1);
    c228_G(76) <= G(12, 1);
    c228_G(77) <= G(13, 1);
    c228_G(78) <= G(14, 1);
    c228_G(79) <= G(15, 1);
    c228_G(80) <= G(16, 1);
    c228_G(81) <= G(17, 1);
    c228_G(82) <= G(18, 1);
    c228_G(83) <= G(19, 1);
    c228_G(84) <= G(20, 1);
    c228_G(85) <= G(21, 1);
    c228_G(86) <= G(22, 1);
    c228_G(87) <= G(23, 1);
    c228_G(88) <= G(24, 1);
    c228_G(89) <= G(25, 1);
    c228_G(90) <= G(26, 1);
    c228_G(91) <= G(27, 1);
    c228_G(92) <= G(28, 1);
    c228_G(93) <= G(29, 1);
    c228_G(94) <= G(30, 1);
    c228_G(95) <= G(31, 1);
    c228_G(96) <= G(32, 1);
    c228_G(97) <= G(33, 1);
    c228_G(98) <= G(34, 1);
    c228_G(99) <= G(35, 1);
    c228_G(100) <= G(36, 1);
    c228_G(101) <= G(37, 1);
    c228_G(102) <= G(38, 1);
    c228_G(103) <= G(39, 1);
    c228_G(104) <= G(40, 1);
    c228_G(105) <= G(41, 1);
    c228_G(106) <= G(42, 1);
    c228_G(107) <= G(43, 1);
    c228_G(108) <= G(44, 1);
    c228_G(109) <= G(45, 1);
    c228_G(110) <= G(46, 1);
    c228_G(111) <= G(47, 1);
    c228_G(112) <= G(48, 1);
    c228_G(113) <= G(49, 1);
    c228_G(114) <= G(50, 1);
    c228_G(115) <= G(51, 1);
    c228_G(116) <= G(52, 1);
    c228_G(117) <= G(53, 1);
    c228_G(118) <= G(54, 1);
    c228_G(119) <= G(55, 1);
    c228_G(120) <= G(56, 1);
    c228_G(121) <= G(57, 1);
    c228_G(122) <= G(58, 1);
    c228_G(123) <= G(59, 1);
    c228_G(124) <= G(60, 1);
    c228_G(125) <= G(61, 1);
    c228_G(126) <= G(62, 1);
    c228_G(127) <= G(63, 1);
    c228_G(128) <= G(0, 2);
    c228_G(129) <= G(1, 2);
    c228_G(130) <= G(2, 2);
    c228_G(131) <= G(3, 2);
    c228_G(132) <= G(4, 2);
    c228_G(133) <= G(5, 2);
    c228_G(134) <= G(6, 2);
    c228_G(135) <= G(7, 2);
    c228_G(136) <= G(8, 2);
    c228_G(137) <= G(9, 2);
    c228_G(138) <= G(10, 2);
    c228_G(139) <= G(11, 2);
    c228_G(140) <= G(12, 2);
    c228_G(141) <= G(13, 2);
    c228_G(142) <= G(14, 2);
    c228_G(143) <= G(15, 2);
    c228_G(144) <= G(16, 2);
    c228_G(145) <= G(17, 2);
    c228_G(146) <= G(18, 2);
    c228_G(147) <= G(19, 2);
    c228_G(148) <= G(20, 2);
    c228_G(149) <= G(21, 2);
    c228_G(150) <= G(22, 2);
    c228_G(151) <= G(23, 2);
    c228_G(152) <= G(24, 2);
    c228_G(153) <= G(25, 2);
    c228_G(154) <= G(26, 2);
    c228_G(155) <= G(27, 2);
    c228_G(156) <= G(28, 2);
    c228_G(157) <= G(29, 2);
    c228_G(158) <= G(30, 2);
    c228_G(159) <= G(31, 2);
    c228_G(160) <= G(32, 2);
    c228_G(161) <= G(33, 2);
    c228_G(162) <= G(34, 2);
    c228_G(163) <= G(35, 2);
    c228_G(164) <= G(36, 2);
    c228_G(165) <= G(37, 2);
    c228_G(166) <= G(38, 2);
    c228_G(167) <= G(39, 2);
    c228_G(168) <= G(40, 2);
    c228_G(169) <= G(41, 2);
    c228_G(170) <= G(42, 2);
    c228_G(171) <= G(43, 2);
    c228_G(172) <= G(44, 2);
    c228_G(173) <= G(45, 2);
    c228_G(174) <= G(46, 2);
    c228_G(175) <= G(47, 2);
    c228_G(176) <= G(48, 2);
    c228_G(177) <= G(49, 2);
    c228_G(178) <= G(50, 2);
    c228_G(179) <= G(51, 2);
    c228_G(180) <= G(52, 2);
    c228_G(181) <= G(53, 2);
    c228_G(182) <= G(54, 2);
    c228_G(183) <= G(55, 2);
    c228_G(184) <= G(56, 2);
    c228_G(185) <= G(57, 2);
    c228_G(186) <= G(58, 2);
    c228_G(187) <= G(59, 2);
    c228_G(188) <= G(60, 2);
    c228_G(189) <= G(61, 2);
    c228_G(190) <= G(62, 2);
    c228_G(191) <= G(63, 2);
    c228_G(192) <= G(0, 3);
    c228_G(193) <= G(1, 3);
    c228_G(194) <= G(2, 3);
    c228_G(195) <= G(3, 3);
    c228_G(196) <= G(4, 3);
    c228_G(197) <= G(5, 3);
    c228_G(198) <= G(6, 3);
    c228_G(199) <= G(7, 3);
    c228_G(200) <= G(8, 3);
    c228_G(201) <= G(9, 3);
    c228_G(202) <= G(10, 3);
    c228_G(203) <= G(11, 3);
    c228_G(204) <= G(12, 3);
    c228_G(205) <= G(13, 3);
    c228_G(206) <= G(14, 3);
    c228_G(207) <= G(15, 3);
    c228_G(208) <= G(16, 3);
    c228_G(209) <= G(17, 3);
    c228_G(210) <= G(18, 3);
    c228_G(211) <= G(19, 3);
    c228_G(212) <= G(20, 3);
    c228_G(213) <= G(21, 3);
    c228_G(214) <= G(22, 3);
    c228_G(215) <= G(23, 3);
    c228_G(216) <= G(24, 3);
    c228_G(217) <= G(25, 3);
    c228_G(218) <= G(26, 3);
    c228_G(219) <= G(27, 3);
    c228_G(220) <= G(28, 3);
    c228_G(221) <= G(29, 3);
    c228_G(222) <= G(30, 3);
    c228_G(223) <= G(31, 3);
    c228_G(224) <= G(32, 3);
    c228_G(225) <= G(33, 3);
    c228_G(226) <= G(34, 3);
    c228_G(227) <= G(35, 3);
    c228_G(228) <= G(36, 3);
    c228_G(229) <= G(37, 3);
    c228_G(230) <= G(38, 3);
    c228_G(231) <= G(39, 3);
    c228_G(232) <= G(40, 3);
    c228_G(233) <= G(41, 3);
    c228_G(234) <= G(42, 3);
    c228_G(235) <= G(43, 3);
    c228_G(236) <= G(44, 3);
    c228_G(237) <= G(45, 3);
    c228_G(238) <= G(46, 3);
    c228_G(239) <= G(47, 3);
    c228_G(240) <= G(48, 3);
    c228_G(241) <= G(49, 3);
    c228_G(242) <= G(50, 3);
    c228_G(243) <= G(51, 3);
    c228_G(244) <= G(52, 3);
    c228_G(245) <= G(53, 3);
    c228_G(246) <= G(54, 3);
    c228_G(247) <= G(55, 3);
    c228_G(248) <= G(56, 3);
    c228_G(249) <= G(57, 3);
    c228_G(250) <= G(58, 3);
    c228_G(251) <= G(59, 3);
    c228_G(252) <= G(60, 3);
    c228_G(253) <= G(61, 3);
    c228_G(254) <= G(62, 3);
    c228_G(255) <= G(63, 3);
    c228_G(256) <= G(0, 4);
    c228_G(257) <= G(1, 4);
    c228_G(258) <= G(2, 4);
    c228_G(259) <= G(3, 4);
    c228_G(260) <= G(4, 4);
    c228_G(261) <= G(5, 4);
    c228_G(262) <= G(6, 4);
    c228_G(263) <= G(7, 4);
    c228_G(264) <= G(8, 4);
    c228_G(265) <= G(9, 4);
    c228_G(266) <= G(10, 4);
    c228_G(267) <= G(11, 4);
    c228_G(268) <= G(12, 4);
    c228_G(269) <= G(13, 4);
    c228_G(270) <= G(14, 4);
    c228_G(271) <= G(15, 4);
    c228_G(272) <= G(16, 4);
    c228_G(273) <= G(17, 4);
    c228_G(274) <= G(18, 4);
    c228_G(275) <= G(19, 4);
    c228_G(276) <= G(20, 4);
    c228_G(277) <= G(21, 4);
    c228_G(278) <= G(22, 4);
    c228_G(279) <= G(23, 4);
    c228_G(280) <= G(24, 4);
    c228_G(281) <= G(25, 4);
    c228_G(282) <= G(26, 4);
    c228_G(283) <= G(27, 4);
    c228_G(284) <= G(28, 4);
    c228_G(285) <= G(29, 4);
    c228_G(286) <= G(30, 4);
    c228_G(287) <= G(31, 4);
    c228_G(288) <= G(32, 4);
    c228_G(289) <= G(33, 4);
    c228_G(290) <= G(34, 4);
    c228_G(291) <= G(35, 4);
    c228_G(292) <= G(36, 4);
    c228_G(293) <= G(37, 4);
    c228_G(294) <= G(38, 4);
    c228_G(295) <= G(39, 4);
    c228_G(296) <= G(40, 4);
    c228_G(297) <= G(41, 4);
    c228_G(298) <= G(42, 4);
    c228_G(299) <= G(43, 4);
    c228_G(300) <= G(44, 4);
    c228_G(301) <= G(45, 4);
    c228_G(302) <= G(46, 4);
    c228_G(303) <= G(47, 4);
    c228_G(304) <= G(48, 4);
    c228_G(305) <= G(49, 4);
    c228_G(306) <= G(50, 4);
    c228_G(307) <= G(51, 4);
    c228_G(308) <= G(52, 4);
    c228_G(309) <= G(53, 4);
    c228_G(310) <= G(54, 4);
    c228_G(311) <= G(55, 4);
    c228_G(312) <= G(56, 4);
    c228_G(313) <= G(57, 4);
    c228_G(314) <= G(58, 4);
    c228_G(315) <= G(59, 4);
    c228_G(316) <= G(60, 4);
    c228_G(317) <= G(61, 4);
    c228_G(318) <= G(62, 4);
    c228_G(319) <= G(63, 4);
    c228_G(320) <= G(0, 5);
    c228_G(321) <= G(1, 5);
    c228_G(322) <= G(2, 5);
    c228_G(323) <= G(3, 5);
    c228_G(324) <= G(4, 5);
    c228_G(325) <= G(5, 5);
    c228_G(326) <= G(6, 5);
    c228_G(327) <= G(7, 5);
    c228_G(328) <= G(8, 5);
    c228_G(329) <= G(9, 5);
    c228_G(330) <= G(10, 5);
    c228_G(331) <= G(11, 5);
    c228_G(332) <= G(12, 5);
    c228_G(333) <= G(13, 5);
    c228_G(334) <= G(14, 5);
    c228_G(335) <= G(15, 5);
    c228_G(336) <= G(16, 5);
    c228_G(337) <= G(17, 5);
    c228_G(338) <= G(18, 5);
    c228_G(339) <= G(19, 5);
    c228_G(340) <= G(20, 5);
    c228_G(341) <= G(21, 5);
    c228_G(342) <= G(22, 5);
    c228_G(343) <= G(23, 5);
    c228_G(344) <= G(24, 5);
    c228_G(345) <= G(25, 5);
    c228_G(346) <= G(26, 5);
    c228_G(347) <= G(27, 5);
    c228_G(348) <= G(28, 5);
    c228_G(349) <= G(29, 5);
    c228_G(350) <= G(30, 5);
    c228_G(351) <= G(31, 5);
    c228_G(352) <= G(32, 5);
    c228_G(353) <= G(33, 5);
    c228_G(354) <= G(34, 5);
    c228_G(355) <= G(35, 5);
    c228_G(356) <= G(36, 5);
    c228_G(357) <= G(37, 5);
    c228_G(358) <= G(38, 5);
    c228_G(359) <= G(39, 5);
    c228_G(360) <= G(40, 5);
    c228_G(361) <= G(41, 5);
    c228_G(362) <= G(42, 5);
    c228_G(363) <= G(43, 5);
    c228_G(364) <= G(44, 5);
    c228_G(365) <= G(45, 5);
    c228_G(366) <= G(46, 5);
    c228_G(367) <= G(47, 5);
    c228_G(368) <= G(48, 5);
    c228_G(369) <= G(49, 5);
    c228_G(370) <= G(50, 5);
    c228_G(371) <= G(51, 5);
    c228_G(372) <= G(52, 5);
    c228_G(373) <= G(53, 5);
    c228_G(374) <= G(54, 5);
    c228_G(375) <= G(55, 5);
    c228_G(376) <= G(56, 5);
    c228_G(377) <= G(57, 5);
    c228_G(378) <= G(58, 5);
    c228_G(379) <= G(59, 5);
    c228_G(380) <= G(60, 5);
    c228_G(381) <= G(61, 5);
    c228_G(382) <= G(62, 5);
    c228_G(383) <= G(63, 5);
    c228_G(384) <= G(0, 6);
    c228_G(385) <= G(1, 6);
    c228_G(386) <= G(2, 6);
    c228_G(387) <= G(3, 6);
    c228_G(388) <= G(4, 6);
    c228_G(389) <= G(5, 6);
    c228_G(390) <= G(6, 6);
    c228_G(391) <= G(7, 6);
    c228_G(392) <= G(8, 6);
    c228_G(393) <= G(9, 6);
    c228_G(394) <= G(10, 6);
    c228_G(395) <= G(11, 6);
    c228_G(396) <= G(12, 6);
    c228_G(397) <= G(13, 6);
    c228_G(398) <= G(14, 6);
    c228_G(399) <= G(15, 6);
    c228_G(400) <= G(16, 6);
    c228_G(401) <= G(17, 6);
    c228_G(402) <= G(18, 6);
    c228_G(403) <= G(19, 6);
    c228_G(404) <= G(20, 6);
    c228_G(405) <= G(21, 6);
    c228_G(406) <= G(22, 6);
    c228_G(407) <= G(23, 6);
    c228_G(408) <= G(24, 6);
    c228_G(409) <= G(25, 6);
    c228_G(410) <= G(26, 6);
    c228_G(411) <= G(27, 6);
    c228_G(412) <= G(28, 6);
    c228_G(413) <= G(29, 6);
    c228_G(414) <= G(30, 6);
    c228_G(415) <= G(31, 6);
    c228_G(416) <= G(32, 6);
    c228_G(417) <= G(33, 6);
    c228_G(418) <= G(34, 6);
    c228_G(419) <= G(35, 6);
    c228_G(420) <= G(36, 6);
    c228_G(421) <= G(37, 6);
    c228_G(422) <= G(38, 6);
    c228_G(423) <= G(39, 6);
    c228_G(424) <= G(40, 6);
    c228_G(425) <= G(41, 6);
    c228_G(426) <= G(42, 6);
    c228_G(427) <= G(43, 6);
    c228_G(428) <= G(44, 6);
    c228_G(429) <= G(45, 6);
    c228_G(430) <= G(46, 6);
    c228_G(431) <= G(47, 6);
    c228_G(432) <= G(48, 6);
    c228_G(433) <= G(49, 6);
    c228_G(434) <= G(50, 6);
    c228_G(435) <= G(51, 6);
    c228_G(436) <= G(52, 6);
    c228_G(437) <= G(53, 6);
    c228_G(438) <= G(54, 6);
    c228_G(439) <= G(55, 6);
    c228_G(440) <= G(56, 6);
    c228_G(441) <= G(57, 6);
    c228_G(442) <= G(58, 6);
    c228_G(443) <= G(59, 6);
    c228_G(444) <= G(60, 6);
    c228_G(445) <= G(61, 6);
    c228_G(446) <= G(62, 6);
    c228_G(447) <= G(63, 6);
    c228_G(448) <= G(0, 7);
    c228_G(449) <= G(1, 7);
    c228_G(450) <= G(2, 7);
    c228_G(451) <= G(3, 7);
    c228_G(452) <= G(4, 7);
    c228_G(453) <= G(5, 7);
    c228_G(454) <= G(6, 7);
    c228_G(455) <= G(7, 7);
    c228_G(456) <= G(8, 7);
    c228_G(457) <= G(9, 7);
    c228_G(458) <= G(10, 7);
    c228_G(459) <= G(11, 7);
    c228_G(460) <= G(12, 7);
    c228_G(461) <= G(13, 7);
    c228_G(462) <= G(14, 7);
    c228_G(463) <= G(15, 7);
    c228_G(464) <= G(16, 7);
    c228_G(465) <= G(17, 7);
    c228_G(466) <= G(18, 7);
    c228_G(467) <= G(19, 7);
    c228_G(468) <= G(20, 7);
    c228_G(469) <= G(21, 7);
    c228_G(470) <= G(22, 7);
    c228_G(471) <= G(23, 7);
    c228_G(472) <= G(24, 7);
    c228_G(473) <= G(25, 7);
    c228_G(474) <= G(26, 7);
    c228_G(475) <= G(27, 7);
    c228_G(476) <= G(28, 7);
    c228_G(477) <= G(29, 7);
    c228_G(478) <= G(30, 7);
    c228_G(479) <= G(31, 7);
    c228_G(480) <= G(32, 7);
    c228_G(481) <= G(33, 7);
    c228_G(482) <= G(34, 7);
    c228_G(483) <= G(35, 7);
    c228_G(484) <= G(36, 7);
    c228_G(485) <= G(37, 7);
    c228_G(486) <= G(38, 7);
    c228_G(487) <= G(39, 7);
    c228_G(488) <= G(40, 7);
    c228_G(489) <= G(41, 7);
    c228_G(490) <= G(42, 7);
    c228_G(491) <= G(43, 7);
    c228_G(492) <= G(44, 7);
    c228_G(493) <= G(45, 7);
    c228_G(494) <= G(46, 7);
    c228_G(495) <= G(47, 7);
    c228_G(496) <= G(48, 7);
    c228_G(497) <= G(49, 7);
    c228_G(498) <= G(50, 7);
    c228_G(499) <= G(51, 7);
    c228_G(500) <= G(52, 7);
    c228_G(501) <= G(53, 7);
    c228_G(502) <= G(54, 7);
    c228_G(503) <= G(55, 7);
    c228_G(504) <= G(56, 7);
    c228_G(505) <= G(57, 7);
    c228_G(506) <= G(58, 7);
    c228_G(507) <= G(59, 7);
    c228_G(508) <= G(60, 7);
    c228_G(509) <= G(61, 7);
    c228_G(510) <= G(62, 7);
    c228_G(511) <= G(63, 7);
    c228_G(512) <= G(0, 8);
    c228_G(513) <= G(1, 8);
    c228_G(514) <= G(2, 8);
    c228_G(515) <= G(3, 8);
    c228_G(516) <= G(4, 8);
    c228_G(517) <= G(5, 8);
    c228_G(518) <= G(6, 8);
    c228_G(519) <= G(7, 8);
    c228_G(520) <= G(8, 8);
    c228_G(521) <= G(9, 8);
    c228_G(522) <= G(10, 8);
    c228_G(523) <= G(11, 8);
    c228_G(524) <= G(12, 8);
    c228_G(525) <= G(13, 8);
    c228_G(526) <= G(14, 8);
    c228_G(527) <= G(15, 8);
    c228_G(528) <= G(16, 8);
    c228_G(529) <= G(17, 8);
    c228_G(530) <= G(18, 8);
    c228_G(531) <= G(19, 8);
    c228_G(532) <= G(20, 8);
    c228_G(533) <= G(21, 8);
    c228_G(534) <= G(22, 8);
    c228_G(535) <= G(23, 8);
    c228_G(536) <= G(24, 8);
    c228_G(537) <= G(25, 8);
    c228_G(538) <= G(26, 8);
    c228_G(539) <= G(27, 8);
    c228_G(540) <= G(28, 8);
    c228_G(541) <= G(29, 8);
    c228_G(542) <= G(30, 8);
    c228_G(543) <= G(31, 8);
    c228_G(544) <= G(32, 8);
    c228_G(545) <= G(33, 8);
    c228_G(546) <= G(34, 8);
    c228_G(547) <= G(35, 8);
    c228_G(548) <= G(36, 8);
    c228_G(549) <= G(37, 8);
    c228_G(550) <= G(38, 8);
    c228_G(551) <= G(39, 8);
    c228_G(552) <= G(40, 8);
    c228_G(553) <= G(41, 8);
    c228_G(554) <= G(42, 8);
    c228_G(555) <= G(43, 8);
    c228_G(556) <= G(44, 8);
    c228_G(557) <= G(45, 8);
    c228_G(558) <= G(46, 8);
    c228_G(559) <= G(47, 8);
    c228_G(560) <= G(48, 8);
    c228_G(561) <= G(49, 8);
    c228_G(562) <= G(50, 8);
    c228_G(563) <= G(51, 8);
    c228_G(564) <= G(52, 8);
    c228_G(565) <= G(53, 8);
    c228_G(566) <= G(54, 8);
    c228_G(567) <= G(55, 8);
    c228_G(568) <= G(56, 8);
    c228_G(569) <= G(57, 8);
    c228_G(570) <= G(58, 8);
    c228_G(571) <= G(59, 8);
    c228_G(572) <= G(60, 8);
    c228_G(573) <= G(61, 8);
    c228_G(574) <= G(62, 8);
    c228_G(575) <= G(63, 8);
    c228_G(576) <= G(0, 9);
    c228_G(577) <= G(1, 9);
    c228_G(578) <= G(2, 9);
    c228_G(579) <= G(3, 9);
    c228_G(580) <= G(4, 9);
    c228_G(581) <= G(5, 9);
    c228_G(582) <= G(6, 9);
    c228_G(583) <= G(7, 9);
    c228_G(584) <= G(8, 9);
    c228_G(585) <= G(9, 9);
    c228_G(586) <= G(10, 9);
    c228_G(587) <= G(11, 9);
    c228_G(588) <= G(12, 9);
    c228_G(589) <= G(13, 9);
    c228_G(590) <= G(14, 9);
    c228_G(591) <= G(15, 9);
    c228_G(592) <= G(16, 9);
    c228_G(593) <= G(17, 9);
    c228_G(594) <= G(18, 9);
    c228_G(595) <= G(19, 9);
    c228_G(596) <= G(20, 9);
    c228_G(597) <= G(21, 9);
    c228_G(598) <= G(22, 9);
    c228_G(599) <= G(23, 9);
    c228_G(600) <= G(24, 9);
    c228_G(601) <= G(25, 9);
    c228_G(602) <= G(26, 9);
    c228_G(603) <= G(27, 9);
    c228_G(604) <= G(28, 9);
    c228_G(605) <= G(29, 9);
    c228_G(606) <= G(30, 9);
    c228_G(607) <= G(31, 9);
    c228_G(608) <= G(32, 9);
    c228_G(609) <= G(33, 9);
    c228_G(610) <= G(34, 9);
    c228_G(611) <= G(35, 9);
    c228_G(612) <= G(36, 9);
    c228_G(613) <= G(37, 9);
    c228_G(614) <= G(38, 9);
    c228_G(615) <= G(39, 9);
    c228_G(616) <= G(40, 9);
    c228_G(617) <= G(41, 9);
    c228_G(618) <= G(42, 9);
    c228_G(619) <= G(43, 9);
    c228_G(620) <= G(44, 9);
    c228_G(621) <= G(45, 9);
    c228_G(622) <= G(46, 9);
    c228_G(623) <= G(47, 9);
    c228_G(624) <= G(48, 9);
    c228_G(625) <= G(49, 9);
    c228_G(626) <= G(50, 9);
    c228_G(627) <= G(51, 9);
    c228_G(628) <= G(52, 9);
    c228_G(629) <= G(53, 9);
    c228_G(630) <= G(54, 9);
    c228_G(631) <= G(55, 9);
    c228_G(632) <= G(56, 9);
    c228_G(633) <= G(57, 9);
    c228_G(634) <= G(58, 9);
    c228_G(635) <= G(59, 9);
    c228_G(636) <= G(60, 9);
    c228_G(637) <= G(61, 9);
    c228_G(638) <= G(62, 9);
    c228_G(639) <= G(63, 9);
    c228_G(640) <= G(0, 10);
    c228_G(641) <= G(1, 10);
    c228_G(642) <= G(2, 10);
    c228_G(643) <= G(3, 10);
    c228_G(644) <= G(4, 10);
    c228_G(645) <= G(5, 10);
    c228_G(646) <= G(6, 10);
    c228_G(647) <= G(7, 10);
    c228_G(648) <= G(8, 10);
    c228_G(649) <= G(9, 10);
    c228_G(650) <= G(10, 10);
    c228_G(651) <= G(11, 10);
    c228_G(652) <= G(12, 10);
    c228_G(653) <= G(13, 10);
    c228_G(654) <= G(14, 10);
    c228_G(655) <= G(15, 10);
    c228_G(656) <= G(16, 10);
    c228_G(657) <= G(17, 10);
    c228_G(658) <= G(18, 10);
    c228_G(659) <= G(19, 10);
    c228_G(660) <= G(20, 10);
    c228_G(661) <= G(21, 10);
    c228_G(662) <= G(22, 10);
    c228_G(663) <= G(23, 10);
    c228_G(664) <= G(24, 10);
    c228_G(665) <= G(25, 10);
    c228_G(666) <= G(26, 10);
    c228_G(667) <= G(27, 10);
    c228_G(668) <= G(28, 10);
    c228_G(669) <= G(29, 10);
    c228_G(670) <= G(30, 10);
    c228_G(671) <= G(31, 10);
    c228_G(672) <= G(32, 10);
    c228_G(673) <= G(33, 10);
    c228_G(674) <= G(34, 10);
    c228_G(675) <= G(35, 10);
    c228_G(676) <= G(36, 10);
    c228_G(677) <= G(37, 10);
    c228_G(678) <= G(38, 10);
    c228_G(679) <= G(39, 10);
    c228_G(680) <= G(40, 10);
    c228_G(681) <= G(41, 10);
    c228_G(682) <= G(42, 10);
    c228_G(683) <= G(43, 10);
    c228_G(684) <= G(44, 10);
    c228_G(685) <= G(45, 10);
    c228_G(686) <= G(46, 10);
    c228_G(687) <= G(47, 10);
    c228_G(688) <= G(48, 10);
    c228_G(689) <= G(49, 10);
    c228_G(690) <= G(50, 10);
    c228_G(691) <= G(51, 10);
    c228_G(692) <= G(52, 10);
    c228_G(693) <= G(53, 10);
    c228_G(694) <= G(54, 10);
    c228_G(695) <= G(55, 10);
    c228_G(696) <= G(56, 10);
    c228_G(697) <= G(57, 10);
    c228_G(698) <= G(58, 10);
    c228_G(699) <= G(59, 10);
    c228_G(700) <= G(60, 10);
    c228_G(701) <= G(61, 10);
    c228_G(702) <= G(62, 10);
    c228_G(703) <= G(63, 10);
    c228_G(704) <= G(0, 11);
    c228_G(705) <= G(1, 11);
    c228_G(706) <= G(2, 11);
    c228_G(707) <= G(3, 11);
    c228_G(708) <= G(4, 11);
    c228_G(709) <= G(5, 11);
    c228_G(710) <= G(6, 11);
    c228_G(711) <= G(7, 11);
    c228_G(712) <= G(8, 11);
    c228_G(713) <= G(9, 11);
    c228_G(714) <= G(10, 11);
    c228_G(715) <= G(11, 11);
    c228_G(716) <= G(12, 11);
    c228_G(717) <= G(13, 11);
    c228_G(718) <= G(14, 11);
    c228_G(719) <= G(15, 11);
    c228_G(720) <= G(16, 11);
    c228_G(721) <= G(17, 11);
    c228_G(722) <= G(18, 11);
    c228_G(723) <= G(19, 11);
    c228_G(724) <= G(20, 11);
    c228_G(725) <= G(21, 11);
    c228_G(726) <= G(22, 11);
    c228_G(727) <= G(23, 11);
    c228_G(728) <= G(24, 11);
    c228_G(729) <= G(25, 11);
    c228_G(730) <= G(26, 11);
    c228_G(731) <= G(27, 11);
    c228_G(732) <= G(28, 11);
    c228_G(733) <= G(29, 11);
    c228_G(734) <= G(30, 11);
    c228_G(735) <= G(31, 11);
    c228_G(736) <= G(32, 11);
    c228_G(737) <= G(33, 11);
    c228_G(738) <= G(34, 11);
    c228_G(739) <= G(35, 11);
    c228_G(740) <= G(36, 11);
    c228_G(741) <= G(37, 11);
    c228_G(742) <= G(38, 11);
    c228_G(743) <= G(39, 11);
    c228_G(744) <= G(40, 11);
    c228_G(745) <= G(41, 11);
    c228_G(746) <= G(42, 11);
    c228_G(747) <= G(43, 11);
    c228_G(748) <= G(44, 11);
    c228_G(749) <= G(45, 11);
    c228_G(750) <= G(46, 11);
    c228_G(751) <= G(47, 11);
    c228_G(752) <= G(48, 11);
    c228_G(753) <= G(49, 11);
    c228_G(754) <= G(50, 11);
    c228_G(755) <= G(51, 11);
    c228_G(756) <= G(52, 11);
    c228_G(757) <= G(53, 11);
    c228_G(758) <= G(54, 11);
    c228_G(759) <= G(55, 11);
    c228_G(760) <= G(56, 11);
    c228_G(761) <= G(57, 11);
    c228_G(762) <= G(58, 11);
    c228_G(763) <= G(59, 11);
    c228_G(764) <= G(60, 11);
    c228_G(765) <= G(61, 11);
    c228_G(766) <= G(62, 11);
    c228_G(767) <= G(63, 11);
  END PROCESS c_output;


  c_1_output : PROCESS (c228_G)
  BEGIN
    G_1(0, 0) <= c228_G(0);
    G_1(1, 0) <= c228_G(1);
    G_1(2, 0) <= c228_G(2);
    G_1(3, 0) <= c228_G(3);
    G_1(4, 0) <= c228_G(4);
    G_1(5, 0) <= c228_G(5);
    G_1(6, 0) <= c228_G(6);
    G_1(7, 0) <= c228_G(7);
    G_1(8, 0) <= c228_G(8);
    G_1(9, 0) <= c228_G(9);
    G_1(10, 0) <= c228_G(10);
    G_1(11, 0) <= c228_G(11);
    G_1(12, 0) <= c228_G(12);
    G_1(13, 0) <= c228_G(13);
    G_1(14, 0) <= c228_G(14);
    G_1(15, 0) <= c228_G(15);
    G_1(16, 0) <= c228_G(16);
    G_1(17, 0) <= c228_G(17);
    G_1(18, 0) <= c228_G(18);
    G_1(19, 0) <= c228_G(19);
    G_1(20, 0) <= c228_G(20);
    G_1(21, 0) <= c228_G(21);
    G_1(22, 0) <= c228_G(22);
    G_1(23, 0) <= c228_G(23);
    G_1(24, 0) <= c228_G(24);
    G_1(25, 0) <= c228_G(25);
    G_1(26, 0) <= c228_G(26);
    G_1(27, 0) <= c228_G(27);
    G_1(28, 0) <= c228_G(28);
    G_1(29, 0) <= c228_G(29);
    G_1(30, 0) <= c228_G(30);
    G_1(31, 0) <= c228_G(31);
    G_1(32, 0) <= c228_G(32);
    G_1(33, 0) <= c228_G(33);
    G_1(34, 0) <= c228_G(34);
    G_1(35, 0) <= c228_G(35);
    G_1(36, 0) <= c228_G(36);
    G_1(37, 0) <= c228_G(37);
    G_1(38, 0) <= c228_G(38);
    G_1(39, 0) <= c228_G(39);
    G_1(40, 0) <= c228_G(40);
    G_1(41, 0) <= c228_G(41);
    G_1(42, 0) <= c228_G(42);
    G_1(43, 0) <= c228_G(43);
    G_1(44, 0) <= c228_G(44);
    G_1(45, 0) <= c228_G(45);
    G_1(46, 0) <= c228_G(46);
    G_1(47, 0) <= c228_G(47);
    G_1(48, 0) <= c228_G(48);
    G_1(49, 0) <= c228_G(49);
    G_1(50, 0) <= c228_G(50);
    G_1(51, 0) <= c228_G(51);
    G_1(52, 0) <= c228_G(52);
    G_1(53, 0) <= c228_G(53);
    G_1(54, 0) <= c228_G(54);
    G_1(55, 0) <= c228_G(55);
    G_1(56, 0) <= c228_G(56);
    G_1(57, 0) <= c228_G(57);
    G_1(58, 0) <= c228_G(58);
    G_1(59, 0) <= c228_G(59);
    G_1(60, 0) <= c228_G(60);
    G_1(61, 0) <= c228_G(61);
    G_1(62, 0) <= c228_G(62);
    G_1(63, 0) <= c228_G(63);
    G_1(0, 1) <= c228_G(64);
    G_1(1, 1) <= c228_G(65);
    G_1(2, 1) <= c228_G(66);
    G_1(3, 1) <= c228_G(67);
    G_1(4, 1) <= c228_G(68);
    G_1(5, 1) <= c228_G(69);
    G_1(6, 1) <= c228_G(70);
    G_1(7, 1) <= c228_G(71);
    G_1(8, 1) <= c228_G(72);
    G_1(9, 1) <= c228_G(73);
    G_1(10, 1) <= c228_G(74);
    G_1(11, 1) <= c228_G(75);
    G_1(12, 1) <= c228_G(76);
    G_1(13, 1) <= c228_G(77);
    G_1(14, 1) <= c228_G(78);
    G_1(15, 1) <= c228_G(79);
    G_1(16, 1) <= c228_G(80);
    G_1(17, 1) <= c228_G(81);
    G_1(18, 1) <= c228_G(82);
    G_1(19, 1) <= c228_G(83);
    G_1(20, 1) <= c228_G(84);
    G_1(21, 1) <= c228_G(85);
    G_1(22, 1) <= c228_G(86);
    G_1(23, 1) <= c228_G(87);
    G_1(24, 1) <= c228_G(88);
    G_1(25, 1) <= c228_G(89);
    G_1(26, 1) <= c228_G(90);
    G_1(27, 1) <= c228_G(91);
    G_1(28, 1) <= c228_G(92);
    G_1(29, 1) <= c228_G(93);
    G_1(30, 1) <= c228_G(94);
    G_1(31, 1) <= c228_G(95);
    G_1(32, 1) <= c228_G(96);
    G_1(33, 1) <= c228_G(97);
    G_1(34, 1) <= c228_G(98);
    G_1(35, 1) <= c228_G(99);
    G_1(36, 1) <= c228_G(100);
    G_1(37, 1) <= c228_G(101);
    G_1(38, 1) <= c228_G(102);
    G_1(39, 1) <= c228_G(103);
    G_1(40, 1) <= c228_G(104);
    G_1(41, 1) <= c228_G(105);
    G_1(42, 1) <= c228_G(106);
    G_1(43, 1) <= c228_G(107);
    G_1(44, 1) <= c228_G(108);
    G_1(45, 1) <= c228_G(109);
    G_1(46, 1) <= c228_G(110);
    G_1(47, 1) <= c228_G(111);
    G_1(48, 1) <= c228_G(112);
    G_1(49, 1) <= c228_G(113);
    G_1(50, 1) <= c228_G(114);
    G_1(51, 1) <= c228_G(115);
    G_1(52, 1) <= c228_G(116);
    G_1(53, 1) <= c228_G(117);
    G_1(54, 1) <= c228_G(118);
    G_1(55, 1) <= c228_G(119);
    G_1(56, 1) <= c228_G(120);
    G_1(57, 1) <= c228_G(121);
    G_1(58, 1) <= c228_G(122);
    G_1(59, 1) <= c228_G(123);
    G_1(60, 1) <= c228_G(124);
    G_1(61, 1) <= c228_G(125);
    G_1(62, 1) <= c228_G(126);
    G_1(63, 1) <= c228_G(127);
    G_1(0, 2) <= c228_G(128);
    G_1(1, 2) <= c228_G(129);
    G_1(2, 2) <= c228_G(130);
    G_1(3, 2) <= c228_G(131);
    G_1(4, 2) <= c228_G(132);
    G_1(5, 2) <= c228_G(133);
    G_1(6, 2) <= c228_G(134);
    G_1(7, 2) <= c228_G(135);
    G_1(8, 2) <= c228_G(136);
    G_1(9, 2) <= c228_G(137);
    G_1(10, 2) <= c228_G(138);
    G_1(11, 2) <= c228_G(139);
    G_1(12, 2) <= c228_G(140);
    G_1(13, 2) <= c228_G(141);
    G_1(14, 2) <= c228_G(142);
    G_1(15, 2) <= c228_G(143);
    G_1(16, 2) <= c228_G(144);
    G_1(17, 2) <= c228_G(145);
    G_1(18, 2) <= c228_G(146);
    G_1(19, 2) <= c228_G(147);
    G_1(20, 2) <= c228_G(148);
    G_1(21, 2) <= c228_G(149);
    G_1(22, 2) <= c228_G(150);
    G_1(23, 2) <= c228_G(151);
    G_1(24, 2) <= c228_G(152);
    G_1(25, 2) <= c228_G(153);
    G_1(26, 2) <= c228_G(154);
    G_1(27, 2) <= c228_G(155);
    G_1(28, 2) <= c228_G(156);
    G_1(29, 2) <= c228_G(157);
    G_1(30, 2) <= c228_G(158);
    G_1(31, 2) <= c228_G(159);
    G_1(32, 2) <= c228_G(160);
    G_1(33, 2) <= c228_G(161);
    G_1(34, 2) <= c228_G(162);
    G_1(35, 2) <= c228_G(163);
    G_1(36, 2) <= c228_G(164);
    G_1(37, 2) <= c228_G(165);
    G_1(38, 2) <= c228_G(166);
    G_1(39, 2) <= c228_G(167);
    G_1(40, 2) <= c228_G(168);
    G_1(41, 2) <= c228_G(169);
    G_1(42, 2) <= c228_G(170);
    G_1(43, 2) <= c228_G(171);
    G_1(44, 2) <= c228_G(172);
    G_1(45, 2) <= c228_G(173);
    G_1(46, 2) <= c228_G(174);
    G_1(47, 2) <= c228_G(175);
    G_1(48, 2) <= c228_G(176);
    G_1(49, 2) <= c228_G(177);
    G_1(50, 2) <= c228_G(178);
    G_1(51, 2) <= c228_G(179);
    G_1(52, 2) <= c228_G(180);
    G_1(53, 2) <= c228_G(181);
    G_1(54, 2) <= c228_G(182);
    G_1(55, 2) <= c228_G(183);
    G_1(56, 2) <= c228_G(184);
    G_1(57, 2) <= c228_G(185);
    G_1(58, 2) <= c228_G(186);
    G_1(59, 2) <= c228_G(187);
    G_1(60, 2) <= c228_G(188);
    G_1(61, 2) <= c228_G(189);
    G_1(62, 2) <= c228_G(190);
    G_1(63, 2) <= c228_G(191);
    G_1(0, 3) <= c228_G(192);
    G_1(1, 3) <= c228_G(193);
    G_1(2, 3) <= c228_G(194);
    G_1(3, 3) <= c228_G(195);
    G_1(4, 3) <= c228_G(196);
    G_1(5, 3) <= c228_G(197);
    G_1(6, 3) <= c228_G(198);
    G_1(7, 3) <= c228_G(199);
    G_1(8, 3) <= c228_G(200);
    G_1(9, 3) <= c228_G(201);
    G_1(10, 3) <= c228_G(202);
    G_1(11, 3) <= c228_G(203);
    G_1(12, 3) <= c228_G(204);
    G_1(13, 3) <= c228_G(205);
    G_1(14, 3) <= c228_G(206);
    G_1(15, 3) <= c228_G(207);
    G_1(16, 3) <= c228_G(208);
    G_1(17, 3) <= c228_G(209);
    G_1(18, 3) <= c228_G(210);
    G_1(19, 3) <= c228_G(211);
    G_1(20, 3) <= c228_G(212);
    G_1(21, 3) <= c228_G(213);
    G_1(22, 3) <= c228_G(214);
    G_1(23, 3) <= c228_G(215);
    G_1(24, 3) <= c228_G(216);
    G_1(25, 3) <= c228_G(217);
    G_1(26, 3) <= c228_G(218);
    G_1(27, 3) <= c228_G(219);
    G_1(28, 3) <= c228_G(220);
    G_1(29, 3) <= c228_G(221);
    G_1(30, 3) <= c228_G(222);
    G_1(31, 3) <= c228_G(223);
    G_1(32, 3) <= c228_G(224);
    G_1(33, 3) <= c228_G(225);
    G_1(34, 3) <= c228_G(226);
    G_1(35, 3) <= c228_G(227);
    G_1(36, 3) <= c228_G(228);
    G_1(37, 3) <= c228_G(229);
    G_1(38, 3) <= c228_G(230);
    G_1(39, 3) <= c228_G(231);
    G_1(40, 3) <= c228_G(232);
    G_1(41, 3) <= c228_G(233);
    G_1(42, 3) <= c228_G(234);
    G_1(43, 3) <= c228_G(235);
    G_1(44, 3) <= c228_G(236);
    G_1(45, 3) <= c228_G(237);
    G_1(46, 3) <= c228_G(238);
    G_1(47, 3) <= c228_G(239);
    G_1(48, 3) <= c228_G(240);
    G_1(49, 3) <= c228_G(241);
    G_1(50, 3) <= c228_G(242);
    G_1(51, 3) <= c228_G(243);
    G_1(52, 3) <= c228_G(244);
    G_1(53, 3) <= c228_G(245);
    G_1(54, 3) <= c228_G(246);
    G_1(55, 3) <= c228_G(247);
    G_1(56, 3) <= c228_G(248);
    G_1(57, 3) <= c228_G(249);
    G_1(58, 3) <= c228_G(250);
    G_1(59, 3) <= c228_G(251);
    G_1(60, 3) <= c228_G(252);
    G_1(61, 3) <= c228_G(253);
    G_1(62, 3) <= c228_G(254);
    G_1(63, 3) <= c228_G(255);
    G_1(0, 4) <= c228_G(256);
    G_1(1, 4) <= c228_G(257);
    G_1(2, 4) <= c228_G(258);
    G_1(3, 4) <= c228_G(259);
    G_1(4, 4) <= c228_G(260);
    G_1(5, 4) <= c228_G(261);
    G_1(6, 4) <= c228_G(262);
    G_1(7, 4) <= c228_G(263);
    G_1(8, 4) <= c228_G(264);
    G_1(9, 4) <= c228_G(265);
    G_1(10, 4) <= c228_G(266);
    G_1(11, 4) <= c228_G(267);
    G_1(12, 4) <= c228_G(268);
    G_1(13, 4) <= c228_G(269);
    G_1(14, 4) <= c228_G(270);
    G_1(15, 4) <= c228_G(271);
    G_1(16, 4) <= c228_G(272);
    G_1(17, 4) <= c228_G(273);
    G_1(18, 4) <= c228_G(274);
    G_1(19, 4) <= c228_G(275);
    G_1(20, 4) <= c228_G(276);
    G_1(21, 4) <= c228_G(277);
    G_1(22, 4) <= c228_G(278);
    G_1(23, 4) <= c228_G(279);
    G_1(24, 4) <= c228_G(280);
    G_1(25, 4) <= c228_G(281);
    G_1(26, 4) <= c228_G(282);
    G_1(27, 4) <= c228_G(283);
    G_1(28, 4) <= c228_G(284);
    G_1(29, 4) <= c228_G(285);
    G_1(30, 4) <= c228_G(286);
    G_1(31, 4) <= c228_G(287);
    G_1(32, 4) <= c228_G(288);
    G_1(33, 4) <= c228_G(289);
    G_1(34, 4) <= c228_G(290);
    G_1(35, 4) <= c228_G(291);
    G_1(36, 4) <= c228_G(292);
    G_1(37, 4) <= c228_G(293);
    G_1(38, 4) <= c228_G(294);
    G_1(39, 4) <= c228_G(295);
    G_1(40, 4) <= c228_G(296);
    G_1(41, 4) <= c228_G(297);
    G_1(42, 4) <= c228_G(298);
    G_1(43, 4) <= c228_G(299);
    G_1(44, 4) <= c228_G(300);
    G_1(45, 4) <= c228_G(301);
    G_1(46, 4) <= c228_G(302);
    G_1(47, 4) <= c228_G(303);
    G_1(48, 4) <= c228_G(304);
    G_1(49, 4) <= c228_G(305);
    G_1(50, 4) <= c228_G(306);
    G_1(51, 4) <= c228_G(307);
    G_1(52, 4) <= c228_G(308);
    G_1(53, 4) <= c228_G(309);
    G_1(54, 4) <= c228_G(310);
    G_1(55, 4) <= c228_G(311);
    G_1(56, 4) <= c228_G(312);
    G_1(57, 4) <= c228_G(313);
    G_1(58, 4) <= c228_G(314);
    G_1(59, 4) <= c228_G(315);
    G_1(60, 4) <= c228_G(316);
    G_1(61, 4) <= c228_G(317);
    G_1(62, 4) <= c228_G(318);
    G_1(63, 4) <= c228_G(319);
    G_1(0, 5) <= c228_G(320);
    G_1(1, 5) <= c228_G(321);
    G_1(2, 5) <= c228_G(322);
    G_1(3, 5) <= c228_G(323);
    G_1(4, 5) <= c228_G(324);
    G_1(5, 5) <= c228_G(325);
    G_1(6, 5) <= c228_G(326);
    G_1(7, 5) <= c228_G(327);
    G_1(8, 5) <= c228_G(328);
    G_1(9, 5) <= c228_G(329);
    G_1(10, 5) <= c228_G(330);
    G_1(11, 5) <= c228_G(331);
    G_1(12, 5) <= c228_G(332);
    G_1(13, 5) <= c228_G(333);
    G_1(14, 5) <= c228_G(334);
    G_1(15, 5) <= c228_G(335);
    G_1(16, 5) <= c228_G(336);
    G_1(17, 5) <= c228_G(337);
    G_1(18, 5) <= c228_G(338);
    G_1(19, 5) <= c228_G(339);
    G_1(20, 5) <= c228_G(340);
    G_1(21, 5) <= c228_G(341);
    G_1(22, 5) <= c228_G(342);
    G_1(23, 5) <= c228_G(343);
    G_1(24, 5) <= c228_G(344);
    G_1(25, 5) <= c228_G(345);
    G_1(26, 5) <= c228_G(346);
    G_1(27, 5) <= c228_G(347);
    G_1(28, 5) <= c228_G(348);
    G_1(29, 5) <= c228_G(349);
    G_1(30, 5) <= c228_G(350);
    G_1(31, 5) <= c228_G(351);
    G_1(32, 5) <= c228_G(352);
    G_1(33, 5) <= c228_G(353);
    G_1(34, 5) <= c228_G(354);
    G_1(35, 5) <= c228_G(355);
    G_1(36, 5) <= c228_G(356);
    G_1(37, 5) <= c228_G(357);
    G_1(38, 5) <= c228_G(358);
    G_1(39, 5) <= c228_G(359);
    G_1(40, 5) <= c228_G(360);
    G_1(41, 5) <= c228_G(361);
    G_1(42, 5) <= c228_G(362);
    G_1(43, 5) <= c228_G(363);
    G_1(44, 5) <= c228_G(364);
    G_1(45, 5) <= c228_G(365);
    G_1(46, 5) <= c228_G(366);
    G_1(47, 5) <= c228_G(367);
    G_1(48, 5) <= c228_G(368);
    G_1(49, 5) <= c228_G(369);
    G_1(50, 5) <= c228_G(370);
    G_1(51, 5) <= c228_G(371);
    G_1(52, 5) <= c228_G(372);
    G_1(53, 5) <= c228_G(373);
    G_1(54, 5) <= c228_G(374);
    G_1(55, 5) <= c228_G(375);
    G_1(56, 5) <= c228_G(376);
    G_1(57, 5) <= c228_G(377);
    G_1(58, 5) <= c228_G(378);
    G_1(59, 5) <= c228_G(379);
    G_1(60, 5) <= c228_G(380);
    G_1(61, 5) <= c228_G(381);
    G_1(62, 5) <= c228_G(382);
    G_1(63, 5) <= c228_G(383);
    G_1(0, 6) <= c228_G(384);
    G_1(1, 6) <= c228_G(385);
    G_1(2, 6) <= c228_G(386);
    G_1(3, 6) <= c228_G(387);
    G_1(4, 6) <= c228_G(388);
    G_1(5, 6) <= c228_G(389);
    G_1(6, 6) <= c228_G(390);
    G_1(7, 6) <= c228_G(391);
    G_1(8, 6) <= c228_G(392);
    G_1(9, 6) <= c228_G(393);
    G_1(10, 6) <= c228_G(394);
    G_1(11, 6) <= c228_G(395);
    G_1(12, 6) <= c228_G(396);
    G_1(13, 6) <= c228_G(397);
    G_1(14, 6) <= c228_G(398);
    G_1(15, 6) <= c228_G(399);
    G_1(16, 6) <= c228_G(400);
    G_1(17, 6) <= c228_G(401);
    G_1(18, 6) <= c228_G(402);
    G_1(19, 6) <= c228_G(403);
    G_1(20, 6) <= c228_G(404);
    G_1(21, 6) <= c228_G(405);
    G_1(22, 6) <= c228_G(406);
    G_1(23, 6) <= c228_G(407);
    G_1(24, 6) <= c228_G(408);
    G_1(25, 6) <= c228_G(409);
    G_1(26, 6) <= c228_G(410);
    G_1(27, 6) <= c228_G(411);
    G_1(28, 6) <= c228_G(412);
    G_1(29, 6) <= c228_G(413);
    G_1(30, 6) <= c228_G(414);
    G_1(31, 6) <= c228_G(415);
    G_1(32, 6) <= c228_G(416);
    G_1(33, 6) <= c228_G(417);
    G_1(34, 6) <= c228_G(418);
    G_1(35, 6) <= c228_G(419);
    G_1(36, 6) <= c228_G(420);
    G_1(37, 6) <= c228_G(421);
    G_1(38, 6) <= c228_G(422);
    G_1(39, 6) <= c228_G(423);
    G_1(40, 6) <= c228_G(424);
    G_1(41, 6) <= c228_G(425);
    G_1(42, 6) <= c228_G(426);
    G_1(43, 6) <= c228_G(427);
    G_1(44, 6) <= c228_G(428);
    G_1(45, 6) <= c228_G(429);
    G_1(46, 6) <= c228_G(430);
    G_1(47, 6) <= c228_G(431);
    G_1(48, 6) <= c228_G(432);
    G_1(49, 6) <= c228_G(433);
    G_1(50, 6) <= c228_G(434);
    G_1(51, 6) <= c228_G(435);
    G_1(52, 6) <= c228_G(436);
    G_1(53, 6) <= c228_G(437);
    G_1(54, 6) <= c228_G(438);
    G_1(55, 6) <= c228_G(439);
    G_1(56, 6) <= c228_G(440);
    G_1(57, 6) <= c228_G(441);
    G_1(58, 6) <= c228_G(442);
    G_1(59, 6) <= c228_G(443);
    G_1(60, 6) <= c228_G(444);
    G_1(61, 6) <= c228_G(445);
    G_1(62, 6) <= c228_G(446);
    G_1(63, 6) <= c228_G(447);
    G_1(0, 7) <= c228_G(448);
    G_1(1, 7) <= c228_G(449);
    G_1(2, 7) <= c228_G(450);
    G_1(3, 7) <= c228_G(451);
    G_1(4, 7) <= c228_G(452);
    G_1(5, 7) <= c228_G(453);
    G_1(6, 7) <= c228_G(454);
    G_1(7, 7) <= c228_G(455);
    G_1(8, 7) <= c228_G(456);
    G_1(9, 7) <= c228_G(457);
    G_1(10, 7) <= c228_G(458);
    G_1(11, 7) <= c228_G(459);
    G_1(12, 7) <= c228_G(460);
    G_1(13, 7) <= c228_G(461);
    G_1(14, 7) <= c228_G(462);
    G_1(15, 7) <= c228_G(463);
    G_1(16, 7) <= c228_G(464);
    G_1(17, 7) <= c228_G(465);
    G_1(18, 7) <= c228_G(466);
    G_1(19, 7) <= c228_G(467);
    G_1(20, 7) <= c228_G(468);
    G_1(21, 7) <= c228_G(469);
    G_1(22, 7) <= c228_G(470);
    G_1(23, 7) <= c228_G(471);
    G_1(24, 7) <= c228_G(472);
    G_1(25, 7) <= c228_G(473);
    G_1(26, 7) <= c228_G(474);
    G_1(27, 7) <= c228_G(475);
    G_1(28, 7) <= c228_G(476);
    G_1(29, 7) <= c228_G(477);
    G_1(30, 7) <= c228_G(478);
    G_1(31, 7) <= c228_G(479);
    G_1(32, 7) <= c228_G(480);
    G_1(33, 7) <= c228_G(481);
    G_1(34, 7) <= c228_G(482);
    G_1(35, 7) <= c228_G(483);
    G_1(36, 7) <= c228_G(484);
    G_1(37, 7) <= c228_G(485);
    G_1(38, 7) <= c228_G(486);
    G_1(39, 7) <= c228_G(487);
    G_1(40, 7) <= c228_G(488);
    G_1(41, 7) <= c228_G(489);
    G_1(42, 7) <= c228_G(490);
    G_1(43, 7) <= c228_G(491);
    G_1(44, 7) <= c228_G(492);
    G_1(45, 7) <= c228_G(493);
    G_1(46, 7) <= c228_G(494);
    G_1(47, 7) <= c228_G(495);
    G_1(48, 7) <= c228_G(496);
    G_1(49, 7) <= c228_G(497);
    G_1(50, 7) <= c228_G(498);
    G_1(51, 7) <= c228_G(499);
    G_1(52, 7) <= c228_G(500);
    G_1(53, 7) <= c228_G(501);
    G_1(54, 7) <= c228_G(502);
    G_1(55, 7) <= c228_G(503);
    G_1(56, 7) <= c228_G(504);
    G_1(57, 7) <= c228_G(505);
    G_1(58, 7) <= c228_G(506);
    G_1(59, 7) <= c228_G(507);
    G_1(60, 7) <= c228_G(508);
    G_1(61, 7) <= c228_G(509);
    G_1(62, 7) <= c228_G(510);
    G_1(63, 7) <= c228_G(511);
    G_1(0, 8) <= c228_G(512);
    G_1(1, 8) <= c228_G(513);
    G_1(2, 8) <= c228_G(514);
    G_1(3, 8) <= c228_G(515);
    G_1(4, 8) <= c228_G(516);
    G_1(5, 8) <= c228_G(517);
    G_1(6, 8) <= c228_G(518);
    G_1(7, 8) <= c228_G(519);
    G_1(8, 8) <= c228_G(520);
    G_1(9, 8) <= c228_G(521);
    G_1(10, 8) <= c228_G(522);
    G_1(11, 8) <= c228_G(523);
    G_1(12, 8) <= c228_G(524);
    G_1(13, 8) <= c228_G(525);
    G_1(14, 8) <= c228_G(526);
    G_1(15, 8) <= c228_G(527);
    G_1(16, 8) <= c228_G(528);
    G_1(17, 8) <= c228_G(529);
    G_1(18, 8) <= c228_G(530);
    G_1(19, 8) <= c228_G(531);
    G_1(20, 8) <= c228_G(532);
    G_1(21, 8) <= c228_G(533);
    G_1(22, 8) <= c228_G(534);
    G_1(23, 8) <= c228_G(535);
    G_1(24, 8) <= c228_G(536);
    G_1(25, 8) <= c228_G(537);
    G_1(26, 8) <= c228_G(538);
    G_1(27, 8) <= c228_G(539);
    G_1(28, 8) <= c228_G(540);
    G_1(29, 8) <= c228_G(541);
    G_1(30, 8) <= c228_G(542);
    G_1(31, 8) <= c228_G(543);
    G_1(32, 8) <= c228_G(544);
    G_1(33, 8) <= c228_G(545);
    G_1(34, 8) <= c228_G(546);
    G_1(35, 8) <= c228_G(547);
    G_1(36, 8) <= c228_G(548);
    G_1(37, 8) <= c228_G(549);
    G_1(38, 8) <= c228_G(550);
    G_1(39, 8) <= c228_G(551);
    G_1(40, 8) <= c228_G(552);
    G_1(41, 8) <= c228_G(553);
    G_1(42, 8) <= c228_G(554);
    G_1(43, 8) <= c228_G(555);
    G_1(44, 8) <= c228_G(556);
    G_1(45, 8) <= c228_G(557);
    G_1(46, 8) <= c228_G(558);
    G_1(47, 8) <= c228_G(559);
    G_1(48, 8) <= c228_G(560);
    G_1(49, 8) <= c228_G(561);
    G_1(50, 8) <= c228_G(562);
    G_1(51, 8) <= c228_G(563);
    G_1(52, 8) <= c228_G(564);
    G_1(53, 8) <= c228_G(565);
    G_1(54, 8) <= c228_G(566);
    G_1(55, 8) <= c228_G(567);
    G_1(56, 8) <= c228_G(568);
    G_1(57, 8) <= c228_G(569);
    G_1(58, 8) <= c228_G(570);
    G_1(59, 8) <= c228_G(571);
    G_1(60, 8) <= c228_G(572);
    G_1(61, 8) <= c228_G(573);
    G_1(62, 8) <= c228_G(574);
    G_1(63, 8) <= c228_G(575);
    G_1(0, 9) <= c228_G(576);
    G_1(1, 9) <= c228_G(577);
    G_1(2, 9) <= c228_G(578);
    G_1(3, 9) <= c228_G(579);
    G_1(4, 9) <= c228_G(580);
    G_1(5, 9) <= c228_G(581);
    G_1(6, 9) <= c228_G(582);
    G_1(7, 9) <= c228_G(583);
    G_1(8, 9) <= c228_G(584);
    G_1(9, 9) <= c228_G(585);
    G_1(10, 9) <= c228_G(586);
    G_1(11, 9) <= c228_G(587);
    G_1(12, 9) <= c228_G(588);
    G_1(13, 9) <= c228_G(589);
    G_1(14, 9) <= c228_G(590);
    G_1(15, 9) <= c228_G(591);
    G_1(16, 9) <= c228_G(592);
    G_1(17, 9) <= c228_G(593);
    G_1(18, 9) <= c228_G(594);
    G_1(19, 9) <= c228_G(595);
    G_1(20, 9) <= c228_G(596);
    G_1(21, 9) <= c228_G(597);
    G_1(22, 9) <= c228_G(598);
    G_1(23, 9) <= c228_G(599);
    G_1(24, 9) <= c228_G(600);
    G_1(25, 9) <= c228_G(601);
    G_1(26, 9) <= c228_G(602);
    G_1(27, 9) <= c228_G(603);
    G_1(28, 9) <= c228_G(604);
    G_1(29, 9) <= c228_G(605);
    G_1(30, 9) <= c228_G(606);
    G_1(31, 9) <= c228_G(607);
    G_1(32, 9) <= c228_G(608);
    G_1(33, 9) <= c228_G(609);
    G_1(34, 9) <= c228_G(610);
    G_1(35, 9) <= c228_G(611);
    G_1(36, 9) <= c228_G(612);
    G_1(37, 9) <= c228_G(613);
    G_1(38, 9) <= c228_G(614);
    G_1(39, 9) <= c228_G(615);
    G_1(40, 9) <= c228_G(616);
    G_1(41, 9) <= c228_G(617);
    G_1(42, 9) <= c228_G(618);
    G_1(43, 9) <= c228_G(619);
    G_1(44, 9) <= c228_G(620);
    G_1(45, 9) <= c228_G(621);
    G_1(46, 9) <= c228_G(622);
    G_1(47, 9) <= c228_G(623);
    G_1(48, 9) <= c228_G(624);
    G_1(49, 9) <= c228_G(625);
    G_1(50, 9) <= c228_G(626);
    G_1(51, 9) <= c228_G(627);
    G_1(52, 9) <= c228_G(628);
    G_1(53, 9) <= c228_G(629);
    G_1(54, 9) <= c228_G(630);
    G_1(55, 9) <= c228_G(631);
    G_1(56, 9) <= c228_G(632);
    G_1(57, 9) <= c228_G(633);
    G_1(58, 9) <= c228_G(634);
    G_1(59, 9) <= c228_G(635);
    G_1(60, 9) <= c228_G(636);
    G_1(61, 9) <= c228_G(637);
    G_1(62, 9) <= c228_G(638);
    G_1(63, 9) <= c228_G(639);
    G_1(0, 10) <= c228_G(640);
    G_1(1, 10) <= c228_G(641);
    G_1(2, 10) <= c228_G(642);
    G_1(3, 10) <= c228_G(643);
    G_1(4, 10) <= c228_G(644);
    G_1(5, 10) <= c228_G(645);
    G_1(6, 10) <= c228_G(646);
    G_1(7, 10) <= c228_G(647);
    G_1(8, 10) <= c228_G(648);
    G_1(9, 10) <= c228_G(649);
    G_1(10, 10) <= c228_G(650);
    G_1(11, 10) <= c228_G(651);
    G_1(12, 10) <= c228_G(652);
    G_1(13, 10) <= c228_G(653);
    G_1(14, 10) <= c228_G(654);
    G_1(15, 10) <= c228_G(655);
    G_1(16, 10) <= c228_G(656);
    G_1(17, 10) <= c228_G(657);
    G_1(18, 10) <= c228_G(658);
    G_1(19, 10) <= c228_G(659);
    G_1(20, 10) <= c228_G(660);
    G_1(21, 10) <= c228_G(661);
    G_1(22, 10) <= c228_G(662);
    G_1(23, 10) <= c228_G(663);
    G_1(24, 10) <= c228_G(664);
    G_1(25, 10) <= c228_G(665);
    G_1(26, 10) <= c228_G(666);
    G_1(27, 10) <= c228_G(667);
    G_1(28, 10) <= c228_G(668);
    G_1(29, 10) <= c228_G(669);
    G_1(30, 10) <= c228_G(670);
    G_1(31, 10) <= c228_G(671);
    G_1(32, 10) <= c228_G(672);
    G_1(33, 10) <= c228_G(673);
    G_1(34, 10) <= c228_G(674);
    G_1(35, 10) <= c228_G(675);
    G_1(36, 10) <= c228_G(676);
    G_1(37, 10) <= c228_G(677);
    G_1(38, 10) <= c228_G(678);
    G_1(39, 10) <= c228_G(679);
    G_1(40, 10) <= c228_G(680);
    G_1(41, 10) <= c228_G(681);
    G_1(42, 10) <= c228_G(682);
    G_1(43, 10) <= c228_G(683);
    G_1(44, 10) <= c228_G(684);
    G_1(45, 10) <= c228_G(685);
    G_1(46, 10) <= c228_G(686);
    G_1(47, 10) <= c228_G(687);
    G_1(48, 10) <= c228_G(688);
    G_1(49, 10) <= c228_G(689);
    G_1(50, 10) <= c228_G(690);
    G_1(51, 10) <= c228_G(691);
    G_1(52, 10) <= c228_G(692);
    G_1(53, 10) <= c228_G(693);
    G_1(54, 10) <= c228_G(694);
    G_1(55, 10) <= c228_G(695);
    G_1(56, 10) <= c228_G(696);
    G_1(57, 10) <= c228_G(697);
    G_1(58, 10) <= c228_G(698);
    G_1(59, 10) <= c228_G(699);
    G_1(60, 10) <= c228_G(700);
    G_1(61, 10) <= c228_G(701);
    G_1(62, 10) <= c228_G(702);
    G_1(63, 10) <= c228_G(703);
    G_1(0, 11) <= c228_G(704);
    G_1(1, 11) <= c228_G(705);
    G_1(2, 11) <= c228_G(706);
    G_1(3, 11) <= c228_G(707);
    G_1(4, 11) <= c228_G(708);
    G_1(5, 11) <= c228_G(709);
    G_1(6, 11) <= c228_G(710);
    G_1(7, 11) <= c228_G(711);
    G_1(8, 11) <= c228_G(712);
    G_1(9, 11) <= c228_G(713);
    G_1(10, 11) <= c228_G(714);
    G_1(11, 11) <= c228_G(715);
    G_1(12, 11) <= c228_G(716);
    G_1(13, 11) <= c228_G(717);
    G_1(14, 11) <= c228_G(718);
    G_1(15, 11) <= c228_G(719);
    G_1(16, 11) <= c228_G(720);
    G_1(17, 11) <= c228_G(721);
    G_1(18, 11) <= c228_G(722);
    G_1(19, 11) <= c228_G(723);
    G_1(20, 11) <= c228_G(724);
    G_1(21, 11) <= c228_G(725);
    G_1(22, 11) <= c228_G(726);
    G_1(23, 11) <= c228_G(727);
    G_1(24, 11) <= c228_G(728);
    G_1(25, 11) <= c228_G(729);
    G_1(26, 11) <= c228_G(730);
    G_1(27, 11) <= c228_G(731);
    G_1(28, 11) <= c228_G(732);
    G_1(29, 11) <= c228_G(733);
    G_1(30, 11) <= c228_G(734);
    G_1(31, 11) <= c228_G(735);
    G_1(32, 11) <= c228_G(736);
    G_1(33, 11) <= c228_G(737);
    G_1(34, 11) <= c228_G(738);
    G_1(35, 11) <= c228_G(739);
    G_1(36, 11) <= c228_G(740);
    G_1(37, 11) <= c228_G(741);
    G_1(38, 11) <= c228_G(742);
    G_1(39, 11) <= c228_G(743);
    G_1(40, 11) <= c228_G(744);
    G_1(41, 11) <= c228_G(745);
    G_1(42, 11) <= c228_G(746);
    G_1(43, 11) <= c228_G(747);
    G_1(44, 11) <= c228_G(748);
    G_1(45, 11) <= c228_G(749);
    G_1(46, 11) <= c228_G(750);
    G_1(47, 11) <= c228_G(751);
    G_1(48, 11) <= c228_G(752);
    G_1(49, 11) <= c228_G(753);
    G_1(50, 11) <= c228_G(754);
    G_1(51, 11) <= c228_G(755);
    G_1(52, 11) <= c228_G(756);
    G_1(53, 11) <= c228_G(757);
    G_1(54, 11) <= c228_G(758);
    G_1(55, 11) <= c228_G(759);
    G_1(56, 11) <= c228_G(760);
    G_1(57, 11) <= c228_G(761);
    G_1(58, 11) <= c228_G(762);
    G_1(59, 11) <= c228_G(763);
    G_1(60, 11) <= c228_G(764);
    G_1(61, 11) <= c228_G(765);
    G_1(62, 11) <= c228_G(766);
    G_1(63, 11) <= c228_G(767);
  END PROCESS c_1_output;


  Delay23_ctrl_const_out <= '1';

  Delay23_ctrl_delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay23_ctrl_delay_out <= '0';
      ELSIF enb = '1' THEN
        Delay23_ctrl_delay_out <= Delay23_ctrl_const_out;
      END IF;
    END IF;
  END PROCESS Delay23_ctrl_delay_process;


  Delay23_Initial_Val_out <= to_unsigned(1, 32);

  Delay24_ctrl_const_out <= '1';

  Delay24_ctrl_delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay24_ctrl_delay_out <= '0';
      ELSIF enb = '1' THEN
        Delay24_ctrl_delay_out <= Delay24_ctrl_const_out;
      END IF;
    END IF;
  END PROCESS Delay24_ctrl_delay_process;


  Delay24_Initial_Val_out <= to_unsigned(1, 32);

  index_unsigned <= unsigned(index);

  
  switch_compare_1_18 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  Delay24_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay24_out <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        Delay24_out <= index_unsigned;
      END IF;
    END IF;
  END PROCESS Delay24_process;


  
  Delay24_out1 <= Delay24_Initial_Val_out WHEN Delay24_ctrl_delay_out = '0' ELSE
      Delay24_out;

  Delay23_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay23_out <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        Delay23_out <= Switch11_out1;
      END IF;
    END IF;
  END PROCESS Delay23_process;


  
  Delay23_out1 <= Delay23_Initial_Val_out WHEN Delay23_ctrl_delay_out = '0' ELSE
      Delay23_out;

  
  Switch11_out1 <= Delay23_out1 WHEN switch_compare_1_18 = '0' ELSE
      Delay24_out1;

  Delay13_ctrl_const_out <= '1';

  Delay13_ctrl_delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay13_ctrl_delay_out <= '0';
      ELSIF enb = '1' THEN
        Delay13_ctrl_delay_out <= Delay13_ctrl_const_out;
      END IF;
    END IF;
  END PROCESS Delay13_ctrl_delay_process;


  Delay13_Initial_Val_out <= to_unsigned(1, 32);

  Delay22_ctrl_const_out <= '1';

  Delay22_ctrl_delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay22_ctrl_delay_out <= '0';
      ELSIF enb = '1' THEN
        Delay22_ctrl_delay_out <= Delay22_ctrl_const_out;
      END IF;
    END IF;
  END PROCESS Delay22_ctrl_delay_process;


  Delay22_Initial_Val_out <= to_unsigned(1, 32);

  last_optim_index_unsigned <= unsigned(last_optim_index);

  
  switch_compare_1_19 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  Delay22_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay22_out <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        Delay22_out <= last_optim_index_unsigned;
      END IF;
    END IF;
  END PROCESS Delay22_process;


  
  Delay22_out1 <= Delay22_Initial_Val_out WHEN Delay22_ctrl_delay_out = '0' ELSE
      Delay22_out;

  Delay13_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay13_out <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        Delay13_out <= Switch10_out1;
      END IF;
    END IF;
  END PROCESS Delay13_process;


  
  Delay13_out1 <= Delay13_Initial_Val_out WHEN Delay13_ctrl_delay_out = '0' ELSE
      Delay13_out;

  
  Switch10_out1 <= Delay13_out1 WHEN switch_compare_1_19 = '0' ELSE
      Delay22_out1;

  Delay45_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay45_out1 <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay45_out1 <= G_prev;
      END IF;
    END IF;
  END PROCESS Delay45_process;


  Delay46_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay46_out1 <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay46_out1 <= G_next;
      END IF;
    END IF;
  END PROCESS Delay46_process;



  Add5_out1_gen: FOR t_0 IN 0 TO 5 GENERATE
    Add5_sub_cast(t_0) <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & Delay45_out1(t_0);
    Add5_sub_cast_1(t_0) <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & Delay46_out1(t_0);
    Add5_out1(t_0) <= Add5_sub_cast(t_0) - Add5_sub_cast_1(t_0);
  END GENERATE Add5_out1_gen;


  reduced_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Add5_out1_1 <= (OTHERS => to_signed(16#000#, 9));
      ELSIF enb = '1' THEN
        Add5_out1_1 <= Add5_out1;
      END IF;
    END IF;
  END PROCESS reduced_process;



  Product8_out1_gen: FOR t_01 IN 0 TO 5 GENERATE
    Product8_mul_temp(t_01) <= Add5_out1_1(t_01) * Add5_out1_1(t_01);
    Product8_out1(t_01) <= unsigned(Product8_mul_temp(t_01)(15 DOWNTO 0));
  END GENERATE Product8_out1_gen;


  Delay41_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay41_out1 <= (OTHERS => to_unsigned(16#0000#, 16));
      ELSIF enb = '1' THEN
        Delay41_out1 <= Product8_out1;
      END IF;
    END IF;
  END PROCESS Delay41_process;


  Delay41_out1_0 <= Delay41_out1(0);

  Delay41_out1_1 <= Delay41_out1(1);

  Sum_of_Elements_op_stage1 <= resize(Delay41_out1_0 + Delay41_out1_1, 17);

  Delay41_out1_2 <= Delay41_out1(2);

  Sum_of_Elements_op_stage2 <= resize(resize(Sum_of_Elements_op_stage1, 16) + Delay41_out1_2, 18);

  Delay41_out1_3 <= Delay41_out1(3);

  Sum_of_Elements_op_stage3 <= resize(resize(Sum_of_Elements_op_stage2, 16) + Delay41_out1_3, 19);

  Delay41_out1_4 <= Delay41_out1(4);

  Sum_of_Elements_op_stage4 <= resize(resize(Sum_of_Elements_op_stage3, 16) + Delay41_out1_4, 20);

  Delay41_out1_5 <= Delay41_out1(5);

  Sum_of_Elements_out1 <= resize(Sum_of_Elements_op_stage4, 16) + Delay41_out1_5;

  Delay42_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay42_out1 <= to_unsigned(16#0000#, 16);
      ELSIF enb = '1' THEN
        Delay42_out1 <= Sum_of_Elements_out1;
      END IF;
    END IF;
  END PROCESS Delay42_process;


  Delay58_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay58_out1 <= to_unsigned(16#0000#, 16);
      ELSIF enb = '1' THEN
        Delay58_out1 <= Delay42_out1;
      END IF;
    END IF;
  END PROCESS Delay58_process;


  Product13_mul_temp <= Delay57_out1 * Delay58_out1;
  Product13_out1 <= Product13_mul_temp(19 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0';

  Delay51_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay51_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay51_out1 <= Product13_out1;
      END IF;
    END IF;
  END PROCESS Delay51_process;


  Add6_stage5_add_cast <= Add6_op_stage3(24 DOWNTO 0) & '0' & '0';
  Add6_out1 <= Add6_stage5_add_cast + Delay51_out1;

  Delay52_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay52_out1 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay52_out1 <= Add6_out1;
      END IF;
    END IF;
  END PROCESS Delay52_process;


  Delay35_ctrl_const_out <= '1';

  Delay35_ctrl_delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay35_ctrl_delay_out <= '0';
      ELSIF enb = '1' THEN
        Delay35_ctrl_delay_out <= Delay35_ctrl_const_out;
      END IF;
    END IF;
  END PROCESS Delay35_ctrl_delay_process;


  Delay35_Initial_Val_out <= to_unsigned(16#7FD70A4#, 27);

  Delay35_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay35_out <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay35_out <= Delay52_out1;
      END IF;
    END IF;
  END PROCESS Delay35_process;


  
  Delay35_out1 <= Delay35_Initial_Val_out WHEN Delay35_ctrl_delay_out = '0' ELSE
      Delay35_out;

  
  Relational_Operator1_relop1 <= '1' WHEN Delay52_out1 <= Delay35_out1 ELSE
      '0';

  
  switch_compare_1_20 <= '1' WHEN Relational_Operator1_relop1 > '0' ELSE
      '0';

  Delay36_ctrl_const_out <= '1';

  Delay36_ctrl_delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay36_ctrl_delay_out <= '0';
      ELSIF enb = '1' THEN
        Delay36_ctrl_delay_out <= Delay36_ctrl_const_out;
      END IF;
    END IF;
  END PROCESS Delay36_ctrl_delay_process;


  Delay36_Initial_Val_out <= to_unsigned(1, 32);

  Delay36_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay36_out <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        Delay36_out <= Switch20_out1;
      END IF;
    END IF;
  END PROCESS Delay36_process;


  
  Delay36_out1 <= Delay36_Initial_Val_out WHEN Delay36_ctrl_delay_out = '0' ELSE
      Delay36_out;

  
  Switch20_out1 <= Delay36_out1 WHEN switch_compare_1_20 = '0' ELSE
      Switch11_out1;

  Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay4_out1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        Delay4_out1 <= Switch20_out1;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  opt_index <= std_logic_vector(Delay4_out1);

  
  switch_compare_1_21 <= '1' WHEN Relational_Operator1_relop1 > '0' ELSE
      '0';

  Delay37_ctrl_const_out <= '1';

  Delay37_ctrl_delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay37_ctrl_delay_out <= '0';
      ELSIF enb = '1' THEN
        Delay37_ctrl_delay_out <= Delay37_ctrl_const_out;
      END IF;
    END IF;
  END PROCESS Delay37_ctrl_delay_process;


  Delay37_Initial_Val_out(0) <= '1';
  Delay37_Initial_Val_out(1) <= '1';
  Delay37_Initial_Val_out(2) <= '1';
  Delay37_Initial_Val_out(3) <= '1';
  Delay37_Initial_Val_out(4) <= '1';
  Delay37_Initial_Val_out(5) <= '1';

  Delay37_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay37_out <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay37_out <= Switch21_out1;
      END IF;
    END IF;
  END PROCESS Delay37_process;


  
  Delay37_out1 <= Delay37_Initial_Val_out WHEN Delay37_ctrl_delay_out = '0' ELSE
      Delay37_out;

  
  Switch21_out1 <= Delay37_out1 WHEN switch_compare_1_21 = '0' ELSE
      Delay46_out1;

  Delay38_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay38_out1 <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay38_out1 <= Switch21_out1;
      END IF;
    END IF;
  END PROCESS Delay38_process;


  Delay38_out1_0 <= Delay38_out1(0);

  NOT_out1 <=  NOT Delay38_out1_0;

  Delay38_out1_1 <= Delay38_out1(1);

  NOT1_out1 <=  NOT Delay38_out1_1;

  Delay38_out1_2 <= Delay38_out1(2);

  NOT2_out1 <=  NOT Delay38_out1_2;

  Delay38_out1_3 <= Delay38_out1(3);

  NOT3_out1 <=  NOT Delay38_out1_3;

  Delay38_out1_4 <= Delay38_out1(4);

  NOT4_out1 <=  NOT Delay38_out1_4;

  Delay38_out1_5 <= Delay38_out1(5);

  NOT5_out1 <=  NOT Delay38_out1_5;

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay1_out1 <= Detect_Rise_Positive_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  ce_out <= clk_enable;

  G0 <= Delay38_out1(0);

  G1 <= NOT_out1;

  G2 <= Delay38_out1(1);

  G3 <= NOT1_out1;

  G4 <= Delay38_out1(2);

  G5 <= NOT2_out1;

  G6 <= Delay38_out1(3);

  G7 <= NOT3_out1;

  G8 <= Delay38_out1(4);

  G9 <= NOT4_out1;

  G10 <= Delay38_out1(5);

  G11 <= NOT5_out1;

  opt_done <= Delay1_out1;

END rtl;

