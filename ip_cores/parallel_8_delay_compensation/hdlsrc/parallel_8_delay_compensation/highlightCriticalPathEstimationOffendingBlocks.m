open_system('parallel_8_delay_compensation');
open_system('gm_parallel_8_delay_compensation');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'gray';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion', 'user2');
annotate_port('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion', 1, 1, 'Block not characterized for this configuration');
hilite_system('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion', 'user2');
annotate_port('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion', 1, 1, 'Block not characterized for this configuration');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'gray';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion1', 'user2');
annotate_port('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion1', 1, 1, 'Block not characterized for this configuration');
hilite_system('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion1', 'user2');
annotate_port('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion1', 1, 1, 'Block not characterized for this configuration');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'gray';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion10', 'user2');
annotate_port('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion10', 1, 1, 'Block not characterized for this configuration');
hilite_system('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion10', 'user2');
annotate_port('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion10', 1, 1, 'Block not characterized for this configuration');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'gray';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion11', 'user2');
annotate_port('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion11', 1, 1, 'Block not characterized for this configuration');
hilite_system('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion11', 'user2');
annotate_port('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion11', 1, 1, 'Block not characterized for this configuration');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'gray';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion12', 'user2');
annotate_port('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion12', 1, 1, 'Block not characterized for this configuration');
hilite_system('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion12', 'user2');
annotate_port('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion12', 1, 1, 'Block not characterized for this configuration');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'gray';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion2', 'user2');
annotate_port('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion2', 1, 1, 'Block not characterized for this configuration');
hilite_system('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion2', 'user2');
annotate_port('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion2', 1, 1, 'Block not characterized for this configuration');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'gray';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion3', 'user2');
annotate_port('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion3', 1, 1, 'Block not characterized for this configuration');
hilite_system('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion3', 'user2');
annotate_port('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion3', 1, 1, 'Block not characterized for this configuration');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'gray';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion4', 'user2');
annotate_port('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion4', 1, 1, 'Block not characterized for this configuration');
hilite_system('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion4', 'user2');
annotate_port('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion4', 1, 1, 'Block not characterized for this configuration');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'gray';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion5', 'user2');
annotate_port('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion5', 1, 1, 'Block not characterized for this configuration');
hilite_system('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion5', 'user2');
annotate_port('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion5', 1, 1, 'Block not characterized for this configuration');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'gray';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion6', 'user2');
annotate_port('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion6', 1, 1, 'Block not characterized for this configuration');
hilite_system('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion6', 'user2');
annotate_port('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion6', 1, 1, 'Block not characterized for this configuration');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'gray';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion7', 'user2');
annotate_port('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion7', 1, 1, 'Block not characterized for this configuration');
hilite_system('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion7', 'user2');
annotate_port('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion7', 1, 1, 'Block not characterized for this configuration');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'gray';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion8', 'user2');
annotate_port('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion8', 1, 1, 'Block not characterized for this configuration');
hilite_system('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion8', 'user2');
annotate_port('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion8', 1, 1, 'Block not characterized for this configuration');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'gray';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion9', 'user2');
annotate_port('gm_parallel_8_delay_compensation/HDL_DUT/Data Type Conversion9', 1, 1, 'Block not characterized for this configuration');
hilite_system('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion9', 'user2');
annotate_port('parallel_8_delay_compensation/HDL_DUT/Data Type Conversion9', 1, 1, 'Block not characterized for this configuration');
