-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\ThreeL_PWM_direct\PWM_SS_3L_ip.vhd
-- Created: 2020-04-06 17:35:20
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: PWM_SS_3L_ip
-- Source Path: PWM_SS_3L_ip
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY PWM_SS_3L_ip IS
  PORT( IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESETN                     :   IN    std_logic;  -- ufix1
        m_u1_norm                         :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14
        m_u2_norm                         :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14
        m_u3_norm                         :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14
        SSa1_IN_External                  :   IN    std_logic;  -- ufix1
        SSa2_IN_External                  :   IN    std_logic;  -- ufix1
        SSb1_IN_External                  :   IN    std_logic;  -- ufix1
        SSb2_IN_External                  :   IN    std_logic;  -- ufix1
        SSc1_IN_External                  :   IN    std_logic;  -- ufix1
        SSc2_IN_External                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_ACLK                    :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARESETN                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_AWADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_AWVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_WDATA                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_WSTRB                   :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Lite_WVALID                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_BREADY                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_ARVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_RREADY                  :   IN    std_logic;  -- ufix1
        SSa1_OUT                          :   OUT   std_logic;  -- ufix1
        SSa2_OUT                          :   OUT   std_logic;  -- ufix1
        SSb1_OUT                          :   OUT   std_logic;  -- ufix1
        SSb2_OUT                          :   OUT   std_logic;  -- ufix1
        SSc1_OUT                          :   OUT   std_logic;  -- ufix1
        SSc2_OUT                          :   OUT   std_logic;  -- ufix1
        Period_Center                     :   OUT   std_logic;  -- ufix1
        Period_Start                      :   OUT   std_logic;  -- ufix1
        AXI4_Lite_AWREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_WREADY                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_BRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_BVALID                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_ARREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_RDATA                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_RRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_RVALID                  :   OUT   std_logic  -- ufix1
        );
END PWM_SS_3L_ip;


ARCHITECTURE rtl OF PWM_SS_3L_ip IS

  -- Component Declarations
  COMPONENT PWM_SS_3L_ip_reset_sync
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset_in                        :   IN    std_logic;  -- ufix1
          reset_out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT PWM_SS_3L_ip_axi_lite
    PORT( reset                           :   IN    std_logic;
          AXI4_Lite_ACLK                  :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARESETN               :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_AWVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_WDATA                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_WSTRB                 :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_Lite_WVALID                :   IN    std_logic;  -- ufix1
          AXI4_Lite_BREADY                :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_ARVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_RREADY                :   IN    std_logic;  -- ufix1
          read_ip_timestamp               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_AWREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_WREADY                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_BRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_BVALID                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_ARREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_RDATA                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_RRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_RVALID                :   OUT   std_logic;  -- ufix1
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          write_PWM_en_AXI                :   OUT   std_logic;  -- ufix1
          write_Mode_AXI                  :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          write_PWM_counter_max_value_int_AXI :   OUT   std_logic_vector(19 DOWNTO 0);  -- ufix20
          write_PWM_min_pulse_width_0to1_AXI :   OUT   std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
          write_m_u1_norm_AXI             :   OUT   std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
          write_m_u2_norm_AXI             :   OUT   std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
          write_m_u3_norm_AXI             :   OUT   std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
          write_TriState_HB1_AXI          :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          write_TriState_HB2_AXI          :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          write_TriState_HB3_AXI          :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          reset_internal                  :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  COMPONENT PWM_SS_3L_ip_dut
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          dut_enable                      :   IN    std_logic;  -- ufix1
          PWM_en_AXI                      :   IN    std_logic;  -- ufix1
          Mode_AXI                        :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          PWM_counter_max_value_int_AXI   :   IN    std_logic_vector(19 DOWNTO 0);  -- ufix20
          PWM_min_pulse_width_0to1_AXI    :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
          m_u1_norm                       :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
          m_u2_norm                       :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
          m_u3_norm                       :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
          m_u1_norm_AXI                   :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
          m_u2_norm_AXI                   :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
          m_u3_norm_AXI                   :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
          SSa1_IN_External                :   IN    std_logic;  -- ufix1
          SSa2_IN_External                :   IN    std_logic;  -- ufix1
          SSb1_IN_External                :   IN    std_logic;  -- ufix1
          SSb2_IN_External                :   IN    std_logic;  -- ufix1
          SSc1_IN_External                :   IN    std_logic;  -- ufix1
          SSc2_IN_External                :   IN    std_logic;  -- ufix1
          TriState_HB1_AXI                :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          TriState_HB2_AXI                :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          TriState_HB3_AXI                :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          ce_out                          :   OUT   std_logic;  -- ufix1
          SSa1_OUT                        :   OUT   std_logic;  -- ufix1
          SSa2_OUT                        :   OUT   std_logic;  -- ufix1
          SSb1_OUT                        :   OUT   std_logic;  -- ufix1
          SSb2_OUT                        :   OUT   std_logic;  -- ufix1
          SSc1_OUT                        :   OUT   std_logic;  -- ufix1
          SSc2_OUT                        :   OUT   std_logic;  -- ufix1
          Period_Center                   :   OUT   std_logic;  -- ufix1
          Period_Start                    :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : PWM_SS_3L_ip_reset_sync
    USE ENTITY work.PWM_SS_3L_ip_reset_sync(rtl);

  FOR ALL : PWM_SS_3L_ip_axi_lite
    USE ENTITY work.PWM_SS_3L_ip_axi_lite(rtl);

  FOR ALL : PWM_SS_3L_ip_dut
    USE ENTITY work.PWM_SS_3L_ip_dut(rtl);

  -- Signals
  SIGNAL reset                            : std_logic;
  SIGNAL ip_timestamp                     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL reset_cm                         : std_logic;  -- ufix1
  SIGNAL reset_internal                   : std_logic;  -- ufix1
  SIGNAL reset_before_sync                : std_logic;  -- ufix1
  SIGNAL AXI4_Lite_BRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_Lite_RDATA_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_RRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL write_axi_enable                 : std_logic;  -- ufix1
  SIGNAL write_PWM_en_AXI                 : std_logic;  -- ufix1
  SIGNAL write_Mode_AXI                   : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL write_PWM_counter_max_value_int_AXI : std_logic_vector(19 DOWNTO 0);  -- ufix20
  SIGNAL write_PWM_min_pulse_width_0to1_AXI : std_logic_vector(13 DOWNTO 0);  -- ufix14
  SIGNAL write_m_u1_norm_AXI              : std_logic_vector(13 DOWNTO 0);  -- ufix14
  SIGNAL write_m_u2_norm_AXI              : std_logic_vector(13 DOWNTO 0);  -- ufix14
  SIGNAL write_m_u3_norm_AXI              : std_logic_vector(13 DOWNTO 0);  -- ufix14
  SIGNAL write_TriState_HB1_AXI           : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL write_TriState_HB2_AXI           : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL write_TriState_HB3_AXI           : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL SSa1_OUT_sig                     : std_logic;  -- ufix1
  SIGNAL SSa2_OUT_sig                     : std_logic;  -- ufix1
  SIGNAL SSb1_OUT_sig                     : std_logic;  -- ufix1
  SIGNAL SSb2_OUT_sig                     : std_logic;  -- ufix1
  SIGNAL SSc1_OUT_sig                     : std_logic;  -- ufix1
  SIGNAL SSc2_OUT_sig                     : std_logic;  -- ufix1
  SIGNAL Period_Center_sig                : std_logic;  -- ufix1
  SIGNAL Period_Start_sig                 : std_logic;  -- ufix1

BEGIN
  u_PWM_SS_3L_ip_reset_sync_inst : PWM_SS_3L_ip_reset_sync
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset_in => reset_before_sync,  -- ufix1
              reset_out => reset
              );

  u_PWM_SS_3L_ip_axi_lite_inst : PWM_SS_3L_ip_axi_lite
    PORT MAP( reset => reset,
              AXI4_Lite_ACLK => AXI4_Lite_ACLK,  -- ufix1
              AXI4_Lite_ARESETN => AXI4_Lite_ARESETN,  -- ufix1
              AXI4_Lite_AWADDR => AXI4_Lite_AWADDR,  -- ufix16
              AXI4_Lite_AWVALID => AXI4_Lite_AWVALID,  -- ufix1
              AXI4_Lite_WDATA => AXI4_Lite_WDATA,  -- ufix32
              AXI4_Lite_WSTRB => AXI4_Lite_WSTRB,  -- ufix4
              AXI4_Lite_WVALID => AXI4_Lite_WVALID,  -- ufix1
              AXI4_Lite_BREADY => AXI4_Lite_BREADY,  -- ufix1
              AXI4_Lite_ARADDR => AXI4_Lite_ARADDR,  -- ufix16
              AXI4_Lite_ARVALID => AXI4_Lite_ARVALID,  -- ufix1
              AXI4_Lite_RREADY => AXI4_Lite_RREADY,  -- ufix1
              read_ip_timestamp => std_logic_vector(ip_timestamp),  -- ufix32
              AXI4_Lite_AWREADY => AXI4_Lite_AWREADY,  -- ufix1
              AXI4_Lite_WREADY => AXI4_Lite_WREADY,  -- ufix1
              AXI4_Lite_BRESP => AXI4_Lite_BRESP_tmp,  -- ufix2
              AXI4_Lite_BVALID => AXI4_Lite_BVALID,  -- ufix1
              AXI4_Lite_ARREADY => AXI4_Lite_ARREADY,  -- ufix1
              AXI4_Lite_RDATA => AXI4_Lite_RDATA_tmp,  -- ufix32
              AXI4_Lite_RRESP => AXI4_Lite_RRESP_tmp,  -- ufix2
              AXI4_Lite_RVALID => AXI4_Lite_RVALID,  -- ufix1
              write_axi_enable => write_axi_enable,  -- ufix1
              write_PWM_en_AXI => write_PWM_en_AXI,  -- ufix1
              write_Mode_AXI => write_Mode_AXI,  -- ufix2
              write_PWM_counter_max_value_int_AXI => write_PWM_counter_max_value_int_AXI,  -- ufix20
              write_PWM_min_pulse_width_0to1_AXI => write_PWM_min_pulse_width_0to1_AXI,  -- sfix14_En12
              write_m_u1_norm_AXI => write_m_u1_norm_AXI,  -- sfix14_En12
              write_m_u2_norm_AXI => write_m_u2_norm_AXI,  -- sfix14_En12
              write_m_u3_norm_AXI => write_m_u3_norm_AXI,  -- sfix14_En12
              write_TriState_HB1_AXI => write_TriState_HB1_AXI,  -- ufix2
              write_TriState_HB2_AXI => write_TriState_HB2_AXI,  -- ufix2
              write_TriState_HB3_AXI => write_TriState_HB3_AXI,  -- ufix2
              reset_internal => reset_internal  -- ufix1
              );

  u_PWM_SS_3L_ip_dut_inst : PWM_SS_3L_ip_dut
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset => reset,
              dut_enable => write_axi_enable,  -- ufix1
              PWM_en_AXI => write_PWM_en_AXI,  -- ufix1
              Mode_AXI => write_Mode_AXI,  -- ufix2
              PWM_counter_max_value_int_AXI => write_PWM_counter_max_value_int_AXI,  -- ufix20
              PWM_min_pulse_width_0to1_AXI => write_PWM_min_pulse_width_0to1_AXI,  -- sfix14_En12
              m_u1_norm => m_u1_norm,  -- sfix14_En12
              m_u2_norm => m_u2_norm,  -- sfix14_En12
              m_u3_norm => m_u3_norm,  -- sfix14_En12
              m_u1_norm_AXI => write_m_u1_norm_AXI,  -- sfix14_En12
              m_u2_norm_AXI => write_m_u2_norm_AXI,  -- sfix14_En12
              m_u3_norm_AXI => write_m_u3_norm_AXI,  -- sfix14_En12
              SSa1_IN_External => SSa1_IN_External,  -- ufix1
              SSa2_IN_External => SSa2_IN_External,  -- ufix1
              SSb1_IN_External => SSb1_IN_External,  -- ufix1
              SSb2_IN_External => SSb2_IN_External,  -- ufix1
              SSc1_IN_External => SSc1_IN_External,  -- ufix1
              SSc2_IN_External => SSc2_IN_External,  -- ufix1
              TriState_HB1_AXI => write_TriState_HB1_AXI,  -- ufix2
              TriState_HB2_AXI => write_TriState_HB2_AXI,  -- ufix2
              TriState_HB3_AXI => write_TriState_HB3_AXI,  -- ufix2
              ce_out => ce_out_sig,  -- ufix1
              SSa1_OUT => SSa1_OUT_sig,  -- ufix1
              SSa2_OUT => SSa2_OUT_sig,  -- ufix1
              SSb1_OUT => SSb1_OUT_sig,  -- ufix1
              SSb2_OUT => SSb2_OUT_sig,  -- ufix1
              SSc1_OUT => SSc1_OUT_sig,  -- ufix1
              SSc2_OUT => SSc2_OUT_sig,  -- ufix1
              Period_Center => Period_Center_sig,  -- ufix1
              Period_Start => Period_Start_sig  -- ufix1
              );

  ip_timestamp <= to_unsigned(2004061735, 32);

  reset_cm <=  NOT IPCORE_RESETN;

  reset_before_sync <= reset_cm OR reset_internal;

  SSa1_OUT <= SSa1_OUT_sig;

  SSa2_OUT <= SSa2_OUT_sig;

  SSb1_OUT <= SSb1_OUT_sig;

  SSb2_OUT <= SSb2_OUT_sig;

  SSc1_OUT <= SSc1_OUT_sig;

  SSc2_OUT <= SSc2_OUT_sig;

  Period_Center <= Period_Center_sig;

  Period_Start <= Period_Start_sig;

  AXI4_Lite_BRESP <= AXI4_Lite_BRESP_tmp;

  AXI4_Lite_RDATA <= AXI4_Lite_RDATA_tmp;

  AXI4_Lite_RRESP <= AXI4_Lite_RRESP_tmp;

END rtl;

