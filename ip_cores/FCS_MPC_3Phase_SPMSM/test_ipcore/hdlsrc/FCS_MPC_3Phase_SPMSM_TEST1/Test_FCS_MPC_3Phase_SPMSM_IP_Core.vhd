-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\FCS_MPC_3Phase_SPMSM\test_ipcore\hdlsrc\FCS_MPC_3Phase_SPMSM_TEST1\Test_FCS_MPC_3Phase_SPMSM_IP_Core.vhd
-- Created: 2022-07-08 11:04:11
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Test_FCS_MPC_3Phase_SPMSM_IP_Core
-- Source Path: Test_FCS_MPC_3Phase_SPMSM_IP_Core
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Test_FCS_MPC_3Phase_SPMSM_IP_Core IS
  PORT( IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESETN                     :   IN    std_logic;  -- ufix1
        dq_Done_123_alphabeta_dq          :   IN    std_logic;  -- ufix1
        ialpha                            :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        ibeta                             :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        theta_el                          :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        omega_m                           :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        ialpha_ref                        :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        ibeta_ref                         :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        AXI4_Lite_ACLK                    :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARESETN                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_AWADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_AWVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_WDATA                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_WSTRB                   :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Lite_WVALID                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_BREADY                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_ARVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_RREADY                  :   IN    std_logic;  -- ufix1
        Index                             :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        done_MPC                          :   OUT   std_logic;  -- ufix1
        AXI4_Lite_AWREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_WREADY                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_BRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_BVALID                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_ARREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_RDATA                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_RRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_RVALID                  :   OUT   std_logic  -- ufix1
        );
END Test_FCS_MPC_3Phase_SPMSM_IP_Core;


ARCHITECTURE rtl OF Test_FCS_MPC_3Phase_SPMSM_IP_Core IS

  -- Component Declarations
  COMPONENT Test_FCS_MPC_3Phase_SPMSM_IP_Core_reset_sync
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset_in                        :   IN    std_logic;  -- ufix1
          reset_out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Test_FCS_MPC_3Phase_SPMSM_IP_Core_axi_lite
    PORT( reset                           :   IN    std_logic;
          AXI4_Lite_ACLK                  :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARESETN               :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_AWVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_WDATA                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_WSTRB                 :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_Lite_WVALID                :   IN    std_logic;  -- ufix1
          AXI4_Lite_BREADY                :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_ARVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_RREADY                :   IN    std_logic;  -- ufix1
          read_ip_timestamp               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_AWREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_WREADY                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_BRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_BVALID                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_ARREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_RDATA                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_RRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_RVALID                :   OUT   std_logic;  -- ufix1
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          write_u_dc_link_AXI             :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          write_SampleTime_AXI            :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En20
          write_Rs_AXI                    :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          write_reciprocal_Ls_AXI         :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_psiPM_AXI                 :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          write_pole_pairs_AXI            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32
          reset_internal                  :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  COMPONENT Test_FCS_MPC_3Phase_SPMSM_IP_Core_dut
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          dut_enable                      :   IN    std_logic;  -- ufix1
          dq_Done_123_alphabeta_dq        :   IN    std_logic;  -- ufix1
          ialpha                          :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          ibeta                           :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          u_dc_link_AXI                   :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          SampleTime_AXI                  :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En20
          theta_el                        :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En20
          omega_m                         :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          Rs_AXI                          :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          reciprocal_Ls_AXI               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          psiPM_AXI                       :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          ialpha_ref                      :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          ibeta_ref                       :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          pole_pairs_AXI                  :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32
          ce_out                          :   OUT   std_logic;  -- ufix1
          Index                           :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32
          done_MPC                        :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Test_FCS_MPC_3Phase_SPMSM_IP_Core_reset_sync
    USE ENTITY work.Test_FCS_MPC_3Phase_SPMSM_IP_Core_reset_sync(rtl);

  FOR ALL : Test_FCS_MPC_3Phase_SPMSM_IP_Core_axi_lite
    USE ENTITY work.Test_FCS_MPC_3Phase_SPMSM_IP_Core_axi_lite(rtl);

  FOR ALL : Test_FCS_MPC_3Phase_SPMSM_IP_Core_dut
    USE ENTITY work.Test_FCS_MPC_3Phase_SPMSM_IP_Core_dut(rtl);

  -- Signals
  SIGNAL reset                            : std_logic;
  SIGNAL ip_timestamp                     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL reset_cm                         : std_logic;  -- ufix1
  SIGNAL reset_internal                   : std_logic;  -- ufix1
  SIGNAL reset_before_sync                : std_logic;  -- ufix1
  SIGNAL AXI4_Lite_BRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_Lite_RDATA_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_RRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL write_axi_enable                 : std_logic;  -- ufix1
  SIGNAL write_u_dc_link_AXI              : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_SampleTime_AXI             : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL write_Rs_AXI                     : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_reciprocal_Ls_AXI          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_psiPM_AXI                  : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_pole_pairs_AXI             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ialpha_unsigned                  : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL ialpha_sig                       : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL ibeta_unsigned                   : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL ibeta_sig                        : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL theta_el_unsigned                : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL theta_el_sig                     : signed(23 DOWNTO 0);  -- sfix24_En20
  SIGNAL omega_m_unsigned                 : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL omega_m_sig                      : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL ialpha_ref_unsigned              : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL ialpha_ref_sig                   : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL ibeta_ref_unsigned               : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL ibeta_ref_sig                    : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL Index_sig                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL done_MPC_sig                     : std_logic;  -- ufix1
  SIGNAL Index_sig_signed                 : signed(31 DOWNTO 0);  -- sfix32
  SIGNAL Index_tmp                        : unsigned(31 DOWNTO 0);  -- ufix32

BEGIN
  u_Test_FCS_MPC_3Phase_SPMSM_IP_Core_reset_sync_inst : Test_FCS_MPC_3Phase_SPMSM_IP_Core_reset_sync
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset_in => reset_before_sync,  -- ufix1
              reset_out => reset
              );

  u_Test_FCS_MPC_3Phase_SPMSM_IP_Core_axi_lite_inst : Test_FCS_MPC_3Phase_SPMSM_IP_Core_axi_lite
    PORT MAP( reset => reset,
              AXI4_Lite_ACLK => AXI4_Lite_ACLK,  -- ufix1
              AXI4_Lite_ARESETN => AXI4_Lite_ARESETN,  -- ufix1
              AXI4_Lite_AWADDR => AXI4_Lite_AWADDR,  -- ufix16
              AXI4_Lite_AWVALID => AXI4_Lite_AWVALID,  -- ufix1
              AXI4_Lite_WDATA => AXI4_Lite_WDATA,  -- ufix32
              AXI4_Lite_WSTRB => AXI4_Lite_WSTRB,  -- ufix4
              AXI4_Lite_WVALID => AXI4_Lite_WVALID,  -- ufix1
              AXI4_Lite_BREADY => AXI4_Lite_BREADY,  -- ufix1
              AXI4_Lite_ARADDR => AXI4_Lite_ARADDR,  -- ufix16
              AXI4_Lite_ARVALID => AXI4_Lite_ARVALID,  -- ufix1
              AXI4_Lite_RREADY => AXI4_Lite_RREADY,  -- ufix1
              read_ip_timestamp => std_logic_vector(ip_timestamp),  -- ufix32
              AXI4_Lite_AWREADY => AXI4_Lite_AWREADY,  -- ufix1
              AXI4_Lite_WREADY => AXI4_Lite_WREADY,  -- ufix1
              AXI4_Lite_BRESP => AXI4_Lite_BRESP_tmp,  -- ufix2
              AXI4_Lite_BVALID => AXI4_Lite_BVALID,  -- ufix1
              AXI4_Lite_ARREADY => AXI4_Lite_ARREADY,  -- ufix1
              AXI4_Lite_RDATA => AXI4_Lite_RDATA_tmp,  -- ufix32
              AXI4_Lite_RRESP => AXI4_Lite_RRESP_tmp,  -- ufix2
              AXI4_Lite_RVALID => AXI4_Lite_RVALID,  -- ufix1
              write_axi_enable => write_axi_enable,  -- ufix1
              write_u_dc_link_AXI => write_u_dc_link_AXI,  -- sfix18_En11
              write_SampleTime_AXI => write_SampleTime_AXI,  -- sfix24_En20
              write_Rs_AXI => write_Rs_AXI,  -- sfix18_En11
              write_reciprocal_Ls_AXI => write_reciprocal_Ls_AXI,  -- ufix32
              write_psiPM_AXI => write_psiPM_AXI,  -- sfix18_En11
              write_pole_pairs_AXI => write_pole_pairs_AXI,  -- sfix32
              reset_internal => reset_internal  -- ufix1
              );

  u_Test_FCS_MPC_3Phase_SPMSM_IP_Core_dut_inst : Test_FCS_MPC_3Phase_SPMSM_IP_Core_dut
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset => reset,
              dut_enable => write_axi_enable,  -- ufix1
              dq_Done_123_alphabeta_dq => dq_Done_123_alphabeta_dq,  -- ufix1
              ialpha => std_logic_vector(ialpha_sig),  -- sfix18_En11
              ibeta => std_logic_vector(ibeta_sig),  -- sfix18_En11
              u_dc_link_AXI => write_u_dc_link_AXI,  -- sfix18_En11
              SampleTime_AXI => write_SampleTime_AXI,  -- sfix24_En20
              theta_el => std_logic_vector(theta_el_sig),  -- sfix24_En20
              omega_m => std_logic_vector(omega_m_sig),  -- sfix24_En11
              Rs_AXI => write_Rs_AXI,  -- sfix18_En11
              reciprocal_Ls_AXI => write_reciprocal_Ls_AXI,  -- ufix32
              psiPM_AXI => write_psiPM_AXI,  -- sfix18_En11
              ialpha_ref => std_logic_vector(ialpha_ref_sig),  -- sfix18_En11
              ibeta_ref => std_logic_vector(ibeta_ref_sig),  -- sfix18_En11
              pole_pairs_AXI => write_pole_pairs_AXI,  -- sfix32
              ce_out => ce_out_sig,  -- ufix1
              Index => Index_sig,  -- sfix32
              done_MPC => done_MPC_sig  -- ufix1
              );

  ip_timestamp <= unsigned'(X"838D6290");

  reset_cm <=  NOT IPCORE_RESETN;

  reset_before_sync <= reset_cm OR reset_internal;

  ialpha_unsigned <= unsigned(ialpha);

  ialpha_sig <= signed(ialpha_unsigned);

  ibeta_unsigned <= unsigned(ibeta);

  ibeta_sig <= signed(ibeta_unsigned);

  theta_el_unsigned <= unsigned(theta_el);

  theta_el_sig <= signed(theta_el_unsigned);

  omega_m_unsigned <= unsigned(omega_m);

  omega_m_sig <= signed(omega_m_unsigned);

  ialpha_ref_unsigned <= unsigned(ialpha_ref);

  ialpha_ref_sig <= signed(ialpha_ref_unsigned);

  ibeta_ref_unsigned <= unsigned(ibeta_ref);

  ibeta_ref_sig <= signed(ibeta_ref_unsigned);

  Index_sig_signed <= signed(Index_sig);

  Index_tmp <= unsigned(Index_sig_signed);

  Index <= std_logic_vector(Index_tmp);

  done_MPC <= done_MPC_sig;

  AXI4_Lite_BRESP <= AXI4_Lite_BRESP_tmp;

  AXI4_Lite_RDATA <= AXI4_Lite_RDATA_tmp;

  AXI4_Lite_RRESP <= AXI4_Lite_RRESP_tmp;

END rtl;

