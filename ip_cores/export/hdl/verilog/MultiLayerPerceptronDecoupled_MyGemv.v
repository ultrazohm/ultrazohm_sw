// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MultiLayerPerceptronDecoupled_MyGemv (
        weights_0_address0,
        weights_0_ce0,
        weights_0_d0,
        weights_0_q0,
        weights_0_we0,
        weights_0_address1,
        weights_0_ce1,
        weights_0_d1,
        weights_0_q1,
        weights_0_we1,
        weights_1_address0,
        weights_1_ce0,
        weights_1_d0,
        weights_1_q0,
        weights_1_we0,
        weights_1_address1,
        weights_1_ce1,
        weights_1_d1,
        weights_1_q1,
        weights_1_we1,
        weights_2_address0,
        weights_2_ce0,
        weights_2_d0,
        weights_2_q0,
        weights_2_we0,
        weights_2_address1,
        weights_2_ce1,
        weights_2_d1,
        weights_2_q1,
        weights_2_we1,
        weights_3_address0,
        weights_3_ce0,
        weights_3_d0,
        weights_3_q0,
        weights_3_we0,
        weights_3_address1,
        weights_3_ce1,
        weights_3_d1,
        weights_3_q1,
        weights_3_we1,
        weights_4_address0,
        weights_4_ce0,
        weights_4_d0,
        weights_4_q0,
        weights_4_we0,
        weights_4_address1,
        weights_4_ce1,
        weights_4_d1,
        weights_4_q1,
        weights_4_we1,
        weights_5_address0,
        weights_5_ce0,
        weights_5_d0,
        weights_5_q0,
        weights_5_we0,
        weights_5_address1,
        weights_5_ce1,
        weights_5_d1,
        weights_5_q1,
        weights_5_we1,
        weights_6_address0,
        weights_6_ce0,
        weights_6_d0,
        weights_6_q0,
        weights_6_we0,
        weights_6_address1,
        weights_6_ce1,
        weights_6_d1,
        weights_6_q1,
        weights_6_we1,
        weights_7_address0,
        weights_7_ce0,
        weights_7_d0,
        weights_7_q0,
        weights_7_we0,
        weights_7_address1,
        weights_7_ce1,
        weights_7_d1,
        weights_7_q1,
        weights_7_we1,
        input_r_address0,
        input_r_ce0,
        input_r_d0,
        input_r_q0,
        input_r_we0,
        input_r_address1,
        input_r_ce1,
        input_r_d1,
        input_r_q1,
        input_r_we1,
        bias_address0,
        bias_ce0,
        bias_d0,
        bias_q0,
        bias_we0,
        bias_address1,
        bias_ce1,
        bias_d1,
        bias_q1,
        bias_we1,
        outputPort_address0,
        outputPort_ce0,
        outputPort_d0,
        outputPort_q0,
        outputPort_we0,
        outputPort_address1,
        outputPort_ce1,
        outputPort_d1,
        outputPort_q1,
        outputPort_we1,
        p_n,
        p_k,
        ap_clk,
        ap_rst,
        p_n_ap_vld,
        p_k_ap_vld,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


output  [8:0] weights_0_address0;
output   weights_0_ce0;
output  [31:0] weights_0_d0;
input  [31:0] weights_0_q0;
output   weights_0_we0;
output  [8:0] weights_0_address1;
output   weights_0_ce1;
output  [31:0] weights_0_d1;
input  [31:0] weights_0_q1;
output   weights_0_we1;
output  [8:0] weights_1_address0;
output   weights_1_ce0;
output  [31:0] weights_1_d0;
input  [31:0] weights_1_q0;
output   weights_1_we0;
output  [8:0] weights_1_address1;
output   weights_1_ce1;
output  [31:0] weights_1_d1;
input  [31:0] weights_1_q1;
output   weights_1_we1;
output  [8:0] weights_2_address0;
output   weights_2_ce0;
output  [31:0] weights_2_d0;
input  [31:0] weights_2_q0;
output   weights_2_we0;
output  [8:0] weights_2_address1;
output   weights_2_ce1;
output  [31:0] weights_2_d1;
input  [31:0] weights_2_q1;
output   weights_2_we1;
output  [8:0] weights_3_address0;
output   weights_3_ce0;
output  [31:0] weights_3_d0;
input  [31:0] weights_3_q0;
output   weights_3_we0;
output  [8:0] weights_3_address1;
output   weights_3_ce1;
output  [31:0] weights_3_d1;
input  [31:0] weights_3_q1;
output   weights_3_we1;
output  [8:0] weights_4_address0;
output   weights_4_ce0;
output  [31:0] weights_4_d0;
input  [31:0] weights_4_q0;
output   weights_4_we0;
output  [8:0] weights_4_address1;
output   weights_4_ce1;
output  [31:0] weights_4_d1;
input  [31:0] weights_4_q1;
output   weights_4_we1;
output  [8:0] weights_5_address0;
output   weights_5_ce0;
output  [31:0] weights_5_d0;
input  [31:0] weights_5_q0;
output   weights_5_we0;
output  [8:0] weights_5_address1;
output   weights_5_ce1;
output  [31:0] weights_5_d1;
input  [31:0] weights_5_q1;
output   weights_5_we1;
output  [8:0] weights_6_address0;
output   weights_6_ce0;
output  [31:0] weights_6_d0;
input  [31:0] weights_6_q0;
output   weights_6_we0;
output  [8:0] weights_6_address1;
output   weights_6_ce1;
output  [31:0] weights_6_d1;
input  [31:0] weights_6_q1;
output   weights_6_we1;
output  [8:0] weights_7_address0;
output   weights_7_ce0;
output  [31:0] weights_7_d0;
input  [31:0] weights_7_q0;
output   weights_7_we0;
output  [8:0] weights_7_address1;
output   weights_7_ce1;
output  [31:0] weights_7_d1;
input  [31:0] weights_7_q1;
output   weights_7_we1;
output  [2:0] input_r_address0;
output   input_r_ce0;
output  [31:0] input_r_d0;
input  [31:0] input_r_q0;
output   input_r_we0;
output  [2:0] input_r_address1;
output   input_r_ce1;
output  [31:0] input_r_d1;
input  [31:0] input_r_q1;
output   input_r_we1;
output  [7:0] bias_address0;
output   bias_ce0;
output  [31:0] bias_d0;
input  [31:0] bias_q0;
output   bias_we0;
output  [7:0] bias_address1;
output   bias_ce1;
output  [31:0] bias_d1;
input  [31:0] bias_q1;
output   bias_we1;
output  [4:0] outputPort_address0;
output   outputPort_ce0;
output  [31:0] outputPort_d0;
input  [31:0] outputPort_q0;
output   outputPort_we0;
output  [4:0] outputPort_address1;
output   outputPort_ce1;
output  [31:0] outputPort_d1;
input  [31:0] outputPort_q1;
output   outputPort_we1;
input  [31:0] p_n;
input  [31:0] p_k;
input   ap_clk;
input   ap_rst;
input   p_n_ap_vld;
input   p_k_ap_vld;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    MyGemv_entry75_U0_ap_start;
wire    MyGemv_entry75_U0_ap_done;
wire    MyGemv_entry75_U0_ap_continue;
wire    MyGemv_entry75_U0_ap_idle;
wire    MyGemv_entry75_U0_ap_ready;
wire   [31:0] MyGemv_entry75_U0_p_n_out_din;
wire    MyGemv_entry75_U0_p_n_out_write;
wire   [31:0] MyGemv_entry75_U0_p_n_out1_din;
wire    MyGemv_entry75_U0_p_n_out1_write;
wire   [31:0] MyGemv_entry75_U0_p_n_out2_din;
wire    MyGemv_entry75_U0_p_n_out2_write;
wire   [31:0] MyGemv_entry75_U0_p_k_out_din;
wire    MyGemv_entry75_U0_p_k_out_write;
wire   [31:0] MyGemv_entry75_U0_p_k_out3_din;
wire    MyGemv_entry75_U0_p_k_out3_write;
wire    gem2Stream_float_8u_U0_ap_start;
wire    gem2Stream_float_8u_U0_ap_done;
wire    gem2Stream_float_8u_U0_ap_continue;
wire    gem2Stream_float_8u_U0_ap_idle;
wire    gem2Stream_float_8u_U0_ap_ready;
wire    gem2Stream_float_8u_U0_start_out;
wire    gem2Stream_float_8u_U0_start_write;
wire   [255:0] gem2Stream_float_8u_U0_p_out_din;
wire    gem2Stream_float_8u_U0_p_out_write;
wire    gem2Stream_float_8u_U0_p_m_read;
wire    gem2Stream_float_8u_U0_p_n_read;
wire   [8:0] gem2Stream_float_8u_U0_p_in_0_address0;
wire    gem2Stream_float_8u_U0_p_in_0_ce0;
wire   [8:0] gem2Stream_float_8u_U0_p_in_1_address0;
wire    gem2Stream_float_8u_U0_p_in_1_ce0;
wire   [8:0] gem2Stream_float_8u_U0_p_in_2_address0;
wire    gem2Stream_float_8u_U0_p_in_2_ce0;
wire   [8:0] gem2Stream_float_8u_U0_p_in_3_address0;
wire    gem2Stream_float_8u_U0_p_in_3_ce0;
wire   [8:0] gem2Stream_float_8u_U0_p_in_4_address0;
wire    gem2Stream_float_8u_U0_p_in_4_ce0;
wire   [8:0] gem2Stream_float_8u_U0_p_in_5_address0;
wire    gem2Stream_float_8u_U0_p_in_5_ce0;
wire   [8:0] gem2Stream_float_8u_U0_p_in_6_address0;
wire    gem2Stream_float_8u_U0_p_in_6_ce0;
wire   [8:0] gem2Stream_float_8u_U0_p_in_7_address0;
wire    gem2Stream_float_8u_U0_p_in_7_ce0;
wire   [31:0] gem2Stream_float_8u_U0_p_m_out_din;
wire    gem2Stream_float_8u_U0_p_m_out_write;
wire   [31:0] gem2Stream_float_8u_U0_p_n_out_din;
wire    gem2Stream_float_8u_U0_p_n_out_write;
wire    vec2GemStream_float_8u_1_U0_ap_start;
wire    vec2GemStream_float_8u_1_U0_ap_done;
wire    vec2GemStream_float_8u_1_U0_ap_continue;
wire    vec2GemStream_float_8u_1_U0_ap_idle;
wire    vec2GemStream_float_8u_1_U0_ap_ready;
wire   [255:0] vec2GemStream_float_8u_1_U0_p_out_din;
wire    vec2GemStream_float_8u_1_U0_p_out_write;
wire    vec2GemStream_float_8u_1_U0_p_m_read;
wire    vec2GemStream_float_8u_1_U0_p_n_read;
wire   [2:0] vec2GemStream_float_8u_1_U0_p_in_address0;
wire    vec2GemStream_float_8u_1_U0_p_in_ce0;
wire   [2:0] vec2GemStream_float_8u_1_U0_p_in_address1;
wire    vec2GemStream_float_8u_1_U0_p_in_ce1;
wire    readVec2Stream_float_1u_U0_ap_start;
wire    readVec2Stream_float_1u_U0_ap_done;
wire    readVec2Stream_float_1u_U0_ap_continue;
wire    readVec2Stream_float_1u_U0_ap_idle;
wire    readVec2Stream_float_1u_U0_ap_ready;
wire   [31:0] readVec2Stream_float_1u_U0_p_out_din;
wire    readVec2Stream_float_1u_U0_p_out_write;
wire   [7:0] readVec2Stream_float_1u_U0_p_in_address0;
wire    readVec2Stream_float_1u_U0_p_in_ce0;
wire    readVec2Stream_float_1u_U0_p_n_read;
wire    gemv_float_3u_unsigned_int_U0_ap_start;
wire    gemv_float_3u_unsigned_int_U0_start_out;
wire    gemv_float_3u_unsigned_int_U0_start_write;
wire    gemv_float_3u_unsigned_int_U0_l_strWeights5_read;
wire    gemv_float_3u_unsigned_int_U0_l_strInput6_read;
wire    gemv_float_3u_unsigned_int_U0_l_strBias9_read;
wire   [31:0] gemv_float_3u_unsigned_int_U0_l_strMv8_din;
wire    gemv_float_3u_unsigned_int_U0_l_strMv8_write;
wire    gemv_float_3u_unsigned_int_U0_p_m_read;
wire    gemv_float_3u_unsigned_int_U0_p_n_read;
wire   [31:0] gemv_float_3u_unsigned_int_U0_p_m_out_din;
wire    gemv_float_3u_unsigned_int_U0_p_m_out_write;
wire    gemv_float_3u_unsigned_int_U0_ap_done;
wire    gemv_float_3u_unsigned_int_U0_ap_ready;
wire    gemv_float_3u_unsigned_int_U0_ap_idle;
wire    gemv_float_3u_unsigned_int_U0_ap_continue;
wire    FcnActivation_U0_ap_start;
wire    FcnActivation_U0_ap_done;
wire    FcnActivation_U0_ap_continue;
wire    FcnActivation_U0_ap_idle;
wire    FcnActivation_U0_ap_ready;
wire    FcnActivation_U0_start_out;
wire    FcnActivation_U0_start_write;
wire    FcnActivation_U0_l_strMv8_read;
wire   [31:0] FcnActivation_U0_l_strOutput7_din;
wire    FcnActivation_U0_l_strOutput7_write;
wire    FcnActivation_U0_p_n_read;
wire   [31:0] FcnActivation_U0_p_n_out_din;
wire    FcnActivation_U0_p_n_out_write;
wire    writeStream2Vec_float_1u_U0_ap_start;
wire    writeStream2Vec_float_1u_U0_ap_done;
wire    writeStream2Vec_float_1u_U0_ap_continue;
wire    writeStream2Vec_float_1u_U0_ap_idle;
wire    writeStream2Vec_float_1u_U0_ap_ready;
wire    writeStream2Vec_float_1u_U0_p_in_read;
wire    writeStream2Vec_float_1u_U0_p_n_read;
wire   [4:0] writeStream2Vec_float_1u_U0_p_out_address0;
wire    writeStream2Vec_float_1u_U0_p_out_ce0;
wire    writeStream2Vec_float_1u_U0_p_out_we0;
wire   [31:0] writeStream2Vec_float_1u_U0_p_out_d0;
wire    ap_sync_continue;
wire    p_n_c_full_n;
wire   [31:0] p_n_c_dout;
wire    p_n_c_empty_n;
wire    p_n_c15_full_n;
wire   [31:0] p_n_c15_dout;
wire    p_n_c15_empty_n;
wire    p_n_c16_full_n;
wire   [31:0] p_n_c16_dout;
wire    p_n_c16_empty_n;
wire    p_k_c_full_n;
wire   [31:0] p_k_c_dout;
wire    p_k_c_empty_n;
wire    p_k_c17_full_n;
wire   [31:0] p_k_c17_dout;
wire    p_k_c17_empty_n;
wire    l_strWeights_full_n;
wire   [255:0] l_strWeights_dout;
wire    l_strWeights_empty_n;
wire    p_n_c18_full_n;
wire   [31:0] p_n_c18_dout;
wire    p_n_c18_empty_n;
wire    p_k_c19_full_n;
wire   [31:0] p_k_c19_dout;
wire    p_k_c19_empty_n;
wire    l_strInput_full_n;
wire   [255:0] l_strInput_dout;
wire    l_strInput_empty_n;
wire    l_strBias_full_n;
wire   [31:0] l_strBias_dout;
wire    l_strBias_empty_n;
wire    l_strMv_full_n;
wire   [31:0] l_strMv_dout;
wire    l_strMv_empty_n;
wire    p_n_c20_full_n;
wire   [31:0] p_n_c20_dout;
wire    p_n_c20_empty_n;
wire    l_strOutput_full_n;
wire   [31:0] l_strOutput_dout;
wire    l_strOutput_empty_n;
wire    p_n_c21_full_n;
wire   [31:0] p_n_c21_dout;
wire    p_n_c21_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_MyGemv_entry75_U0_ap_ready;
wire    ap_sync_MyGemv_entry75_U0_ap_ready;
reg   [1:0] MyGemv_entry75_U0_ap_ready_count;
reg    ap_sync_reg_gem2Stream_float_8u_U0_ap_ready;
wire    ap_sync_gem2Stream_float_8u_U0_ap_ready;
reg   [1:0] gem2Stream_float_8u_U0_ap_ready_count;
reg    ap_sync_reg_vec2GemStream_float_8u_1_U0_ap_ready;
wire    ap_sync_vec2GemStream_float_8u_1_U0_ap_ready;
reg   [1:0] vec2GemStream_float_8u_1_U0_ap_ready_count;
reg    ap_sync_reg_readVec2Stream_float_1u_U0_ap_ready;
wire    ap_sync_readVec2Stream_float_1u_U0_ap_ready;
reg   [1:0] readVec2Stream_float_1u_U0_ap_ready_count;
wire    MyGemv_entry75_U0_start_full_n;
wire    MyGemv_entry75_U0_start_write;
wire   [0:0] start_for_gemv_float_3u_unsigned_int_U0_din;
wire    start_for_gemv_float_3u_unsigned_int_U0_full_n;
wire   [0:0] start_for_gemv_float_3u_unsigned_int_U0_dout;
wire    start_for_gemv_float_3u_unsigned_int_U0_empty_n;
wire    vec2GemStream_float_8u_1_U0_start_full_n;
wire    vec2GemStream_float_8u_1_U0_start_write;
wire    readVec2Stream_float_1u_U0_start_full_n;
wire    readVec2Stream_float_1u_U0_start_write;
wire   [0:0] start_for_FcnActivation_U0_din;
wire    start_for_FcnActivation_U0_full_n;
wire   [0:0] start_for_FcnActivation_U0_dout;
wire    start_for_FcnActivation_U0_empty_n;
wire   [0:0] start_for_writeStream2Vec_float_1u_U0_din;
wire    start_for_writeStream2Vec_float_1u_U0_full_n;
wire   [0:0] start_for_writeStream2Vec_float_1u_U0_dout;
wire    start_for_writeStream2Vec_float_1u_U0_empty_n;
wire    writeStream2Vec_float_1u_U0_start_full_n;
wire    writeStream2Vec_float_1u_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_MyGemv_entry75_U0_ap_ready = 1'b0;
#0 MyGemv_entry75_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_gem2Stream_float_8u_U0_ap_ready = 1'b0;
#0 gem2Stream_float_8u_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_vec2GemStream_float_8u_1_U0_ap_ready = 1'b0;
#0 vec2GemStream_float_8u_1_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_readVec2Stream_float_1u_U0_ap_ready = 1'b0;
#0 readVec2Stream_float_1u_U0_ap_ready_count = 2'd0;
end

MultiLayerPerceptronDecoupled_MyGemv_entry75 MyGemv_entry75_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(MyGemv_entry75_U0_ap_start),
    .ap_done(MyGemv_entry75_U0_ap_done),
    .ap_continue(MyGemv_entry75_U0_ap_continue),
    .ap_idle(MyGemv_entry75_U0_ap_idle),
    .ap_ready(MyGemv_entry75_U0_ap_ready),
    .p_n(p_n),
    .p_k(p_k),
    .p_n_out_din(MyGemv_entry75_U0_p_n_out_din),
    .p_n_out_full_n(p_n_c_full_n),
    .p_n_out_write(MyGemv_entry75_U0_p_n_out_write),
    .p_n_out1_din(MyGemv_entry75_U0_p_n_out1_din),
    .p_n_out1_full_n(p_n_c15_full_n),
    .p_n_out1_write(MyGemv_entry75_U0_p_n_out1_write),
    .p_n_out2_din(MyGemv_entry75_U0_p_n_out2_din),
    .p_n_out2_full_n(p_n_c16_full_n),
    .p_n_out2_write(MyGemv_entry75_U0_p_n_out2_write),
    .p_k_out_din(MyGemv_entry75_U0_p_k_out_din),
    .p_k_out_full_n(p_k_c_full_n),
    .p_k_out_write(MyGemv_entry75_U0_p_k_out_write),
    .p_k_out3_din(MyGemv_entry75_U0_p_k_out3_din),
    .p_k_out3_full_n(p_k_c17_full_n),
    .p_k_out3_write(MyGemv_entry75_U0_p_k_out3_write)
);

MultiLayerPerceptronDecoupled_gem2Stream_float_8u_s gem2Stream_float_8u_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(gem2Stream_float_8u_U0_ap_start),
    .start_full_n(start_for_gemv_float_3u_unsigned_int_U0_full_n),
    .ap_done(gem2Stream_float_8u_U0_ap_done),
    .ap_continue(gem2Stream_float_8u_U0_ap_continue),
    .ap_idle(gem2Stream_float_8u_U0_ap_idle),
    .ap_ready(gem2Stream_float_8u_U0_ap_ready),
    .start_out(gem2Stream_float_8u_U0_start_out),
    .start_write(gem2Stream_float_8u_U0_start_write),
    .p_out_din(gem2Stream_float_8u_U0_p_out_din),
    .p_out_full_n(l_strWeights_full_n),
    .p_out_write(gem2Stream_float_8u_U0_p_out_write),
    .p_m_dout(p_n_c_dout),
    .p_m_empty_n(p_n_c_empty_n),
    .p_m_read(gem2Stream_float_8u_U0_p_m_read),
    .p_n_dout(p_k_c_dout),
    .p_n_empty_n(p_k_c_empty_n),
    .p_n_read(gem2Stream_float_8u_U0_p_n_read),
    .p_in_0_address0(gem2Stream_float_8u_U0_p_in_0_address0),
    .p_in_0_ce0(gem2Stream_float_8u_U0_p_in_0_ce0),
    .p_in_0_q0(weights_0_q0),
    .p_in_1_address0(gem2Stream_float_8u_U0_p_in_1_address0),
    .p_in_1_ce0(gem2Stream_float_8u_U0_p_in_1_ce0),
    .p_in_1_q0(weights_1_q0),
    .p_in_2_address0(gem2Stream_float_8u_U0_p_in_2_address0),
    .p_in_2_ce0(gem2Stream_float_8u_U0_p_in_2_ce0),
    .p_in_2_q0(weights_2_q0),
    .p_in_3_address0(gem2Stream_float_8u_U0_p_in_3_address0),
    .p_in_3_ce0(gem2Stream_float_8u_U0_p_in_3_ce0),
    .p_in_3_q0(weights_3_q0),
    .p_in_4_address0(gem2Stream_float_8u_U0_p_in_4_address0),
    .p_in_4_ce0(gem2Stream_float_8u_U0_p_in_4_ce0),
    .p_in_4_q0(weights_4_q0),
    .p_in_5_address0(gem2Stream_float_8u_U0_p_in_5_address0),
    .p_in_5_ce0(gem2Stream_float_8u_U0_p_in_5_ce0),
    .p_in_5_q0(weights_5_q0),
    .p_in_6_address0(gem2Stream_float_8u_U0_p_in_6_address0),
    .p_in_6_ce0(gem2Stream_float_8u_U0_p_in_6_ce0),
    .p_in_6_q0(weights_6_q0),
    .p_in_7_address0(gem2Stream_float_8u_U0_p_in_7_address0),
    .p_in_7_ce0(gem2Stream_float_8u_U0_p_in_7_ce0),
    .p_in_7_q0(weights_7_q0),
    .p_m_out_din(gem2Stream_float_8u_U0_p_m_out_din),
    .p_m_out_full_n(p_n_c18_full_n),
    .p_m_out_write(gem2Stream_float_8u_U0_p_m_out_write),
    .p_n_out_din(gem2Stream_float_8u_U0_p_n_out_din),
    .p_n_out_full_n(p_k_c19_full_n),
    .p_n_out_write(gem2Stream_float_8u_U0_p_n_out_write)
);

MultiLayerPerceptronDecoupled_vec2GemStream_float_8u_1 vec2GemStream_float_8u_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(vec2GemStream_float_8u_1_U0_ap_start),
    .ap_done(vec2GemStream_float_8u_1_U0_ap_done),
    .ap_continue(vec2GemStream_float_8u_1_U0_ap_continue),
    .ap_idle(vec2GemStream_float_8u_1_U0_ap_idle),
    .ap_ready(vec2GemStream_float_8u_1_U0_ap_ready),
    .p_out_din(vec2GemStream_float_8u_1_U0_p_out_din),
    .p_out_full_n(l_strInput_full_n),
    .p_out_write(vec2GemStream_float_8u_1_U0_p_out_write),
    .p_m_dout(p_n_c15_dout),
    .p_m_empty_n(p_n_c15_empty_n),
    .p_m_read(vec2GemStream_float_8u_1_U0_p_m_read),
    .p_n_dout(p_k_c17_dout),
    .p_n_empty_n(p_k_c17_empty_n),
    .p_n_read(vec2GemStream_float_8u_1_U0_p_n_read),
    .p_in_address0(vec2GemStream_float_8u_1_U0_p_in_address0),
    .p_in_ce0(vec2GemStream_float_8u_1_U0_p_in_ce0),
    .p_in_q0(input_r_q0),
    .p_in_address1(vec2GemStream_float_8u_1_U0_p_in_address1),
    .p_in_ce1(vec2GemStream_float_8u_1_U0_p_in_ce1),
    .p_in_q1(input_r_q1)
);

MultiLayerPerceptronDecoupled_readVec2Stream_float_1u_s readVec2Stream_float_1u_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(readVec2Stream_float_1u_U0_ap_start),
    .ap_done(readVec2Stream_float_1u_U0_ap_done),
    .ap_continue(readVec2Stream_float_1u_U0_ap_continue),
    .ap_idle(readVec2Stream_float_1u_U0_ap_idle),
    .ap_ready(readVec2Stream_float_1u_U0_ap_ready),
    .p_out_din(readVec2Stream_float_1u_U0_p_out_din),
    .p_out_full_n(l_strBias_full_n),
    .p_out_write(readVec2Stream_float_1u_U0_p_out_write),
    .p_in_address0(readVec2Stream_float_1u_U0_p_in_address0),
    .p_in_ce0(readVec2Stream_float_1u_U0_p_in_ce0),
    .p_in_q0(bias_q0),
    .p_n_dout(p_n_c16_dout),
    .p_n_empty_n(p_n_c16_empty_n),
    .p_n_read(readVec2Stream_float_1u_U0_p_n_read)
);

MultiLayerPerceptronDecoupled_gemv_float_3u_unsigned_int_s gemv_float_3u_unsigned_int_U0(
    .ap_start(gemv_float_3u_unsigned_int_U0_ap_start),
    .start_full_n(start_for_FcnActivation_U0_full_n),
    .start_out(gemv_float_3u_unsigned_int_U0_start_out),
    .start_write(gemv_float_3u_unsigned_int_U0_start_write),
    .l_strWeights5_dout(l_strWeights_dout),
    .l_strWeights5_empty_n(l_strWeights_empty_n),
    .l_strWeights5_read(gemv_float_3u_unsigned_int_U0_l_strWeights5_read),
    .l_strInput6_dout(l_strInput_dout),
    .l_strInput6_empty_n(l_strInput_empty_n),
    .l_strInput6_read(gemv_float_3u_unsigned_int_U0_l_strInput6_read),
    .l_strBias9_dout(l_strBias_dout),
    .l_strBias9_empty_n(l_strBias_empty_n),
    .l_strBias9_read(gemv_float_3u_unsigned_int_U0_l_strBias9_read),
    .l_strMv8_din(gemv_float_3u_unsigned_int_U0_l_strMv8_din),
    .l_strMv8_full_n(l_strMv_full_n),
    .l_strMv8_write(gemv_float_3u_unsigned_int_U0_l_strMv8_write),
    .p_m_dout(p_n_c18_dout),
    .p_m_empty_n(p_n_c18_empty_n),
    .p_m_read(gemv_float_3u_unsigned_int_U0_p_m_read),
    .p_n_dout(p_k_c19_dout),
    .p_n_empty_n(p_k_c19_empty_n),
    .p_n_read(gemv_float_3u_unsigned_int_U0_p_n_read),
    .p_m_out_din(gemv_float_3u_unsigned_int_U0_p_m_out_din),
    .p_m_out_full_n(p_n_c20_full_n),
    .p_m_out_write(gemv_float_3u_unsigned_int_U0_p_m_out_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_done(gemv_float_3u_unsigned_int_U0_ap_done),
    .ap_ready(gemv_float_3u_unsigned_int_U0_ap_ready),
    .ap_idle(gemv_float_3u_unsigned_int_U0_ap_idle),
    .ap_continue(gemv_float_3u_unsigned_int_U0_ap_continue)
);

MultiLayerPerceptronDecoupled_FcnActivation FcnActivation_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(FcnActivation_U0_ap_start),
    .start_full_n(start_for_writeStream2Vec_float_1u_U0_full_n),
    .ap_done(FcnActivation_U0_ap_done),
    .ap_continue(FcnActivation_U0_ap_continue),
    .ap_idle(FcnActivation_U0_ap_idle),
    .ap_ready(FcnActivation_U0_ap_ready),
    .start_out(FcnActivation_U0_start_out),
    .start_write(FcnActivation_U0_start_write),
    .l_strMv8_dout(l_strMv_dout),
    .l_strMv8_empty_n(l_strMv_empty_n),
    .l_strMv8_read(FcnActivation_U0_l_strMv8_read),
    .l_strOutput7_din(FcnActivation_U0_l_strOutput7_din),
    .l_strOutput7_full_n(l_strOutput_full_n),
    .l_strOutput7_write(FcnActivation_U0_l_strOutput7_write),
    .p_n_dout(p_n_c20_dout),
    .p_n_empty_n(p_n_c20_empty_n),
    .p_n_read(FcnActivation_U0_p_n_read),
    .p_n_out_din(FcnActivation_U0_p_n_out_din),
    .p_n_out_full_n(p_n_c21_full_n),
    .p_n_out_write(FcnActivation_U0_p_n_out_write)
);

MultiLayerPerceptronDecoupled_writeStream2Vec_float_1u_s writeStream2Vec_float_1u_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(writeStream2Vec_float_1u_U0_ap_start),
    .ap_done(writeStream2Vec_float_1u_U0_ap_done),
    .ap_continue(writeStream2Vec_float_1u_U0_ap_continue),
    .ap_idle(writeStream2Vec_float_1u_U0_ap_idle),
    .ap_ready(writeStream2Vec_float_1u_U0_ap_ready),
    .p_in_dout(l_strOutput_dout),
    .p_in_empty_n(l_strOutput_empty_n),
    .p_in_read(writeStream2Vec_float_1u_U0_p_in_read),
    .p_n_dout(p_n_c21_dout),
    .p_n_empty_n(p_n_c21_empty_n),
    .p_n_read(writeStream2Vec_float_1u_U0_p_n_read),
    .p_out_address0(writeStream2Vec_float_1u_U0_p_out_address0),
    .p_out_ce0(writeStream2Vec_float_1u_U0_p_out_ce0),
    .p_out_we0(writeStream2Vec_float_1u_U0_p_out_we0),
    .p_out_d0(writeStream2Vec_float_1u_U0_p_out_d0)
);

MultiLayerPerceptronDecoupled_fifo_w32_d2_S_x1 p_n_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(MyGemv_entry75_U0_p_n_out_din),
    .if_full_n(p_n_c_full_n),
    .if_write(MyGemv_entry75_U0_p_n_out_write),
    .if_dout(p_n_c_dout),
    .if_empty_n(p_n_c_empty_n),
    .if_read(gem2Stream_float_8u_U0_p_m_read)
);

MultiLayerPerceptronDecoupled_fifo_w32_d2_S_x1 p_n_c15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(MyGemv_entry75_U0_p_n_out1_din),
    .if_full_n(p_n_c15_full_n),
    .if_write(MyGemv_entry75_U0_p_n_out1_write),
    .if_dout(p_n_c15_dout),
    .if_empty_n(p_n_c15_empty_n),
    .if_read(vec2GemStream_float_8u_1_U0_p_m_read)
);

MultiLayerPerceptronDecoupled_fifo_w32_d2_S_x1 p_n_c16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(MyGemv_entry75_U0_p_n_out2_din),
    .if_full_n(p_n_c16_full_n),
    .if_write(MyGemv_entry75_U0_p_n_out2_write),
    .if_dout(p_n_c16_dout),
    .if_empty_n(p_n_c16_empty_n),
    .if_read(readVec2Stream_float_1u_U0_p_n_read)
);

MultiLayerPerceptronDecoupled_fifo_w32_d2_S_x1 p_k_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(MyGemv_entry75_U0_p_k_out_din),
    .if_full_n(p_k_c_full_n),
    .if_write(MyGemv_entry75_U0_p_k_out_write),
    .if_dout(p_k_c_dout),
    .if_empty_n(p_k_c_empty_n),
    .if_read(gem2Stream_float_8u_U0_p_n_read)
);

MultiLayerPerceptronDecoupled_fifo_w32_d2_S_x1 p_k_c17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(MyGemv_entry75_U0_p_k_out3_din),
    .if_full_n(p_k_c17_full_n),
    .if_write(MyGemv_entry75_U0_p_k_out3_write),
    .if_dout(p_k_c17_dout),
    .if_empty_n(p_k_c17_empty_n),
    .if_read(vec2GemStream_float_8u_1_U0_p_n_read)
);

MultiLayerPerceptronDecoupled_fifo_w256_d2_S_x l_strWeights_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gem2Stream_float_8u_U0_p_out_din),
    .if_full_n(l_strWeights_full_n),
    .if_write(gem2Stream_float_8u_U0_p_out_write),
    .if_dout(l_strWeights_dout),
    .if_empty_n(l_strWeights_empty_n),
    .if_read(gemv_float_3u_unsigned_int_U0_l_strWeights5_read)
);

MultiLayerPerceptronDecoupled_fifo_w32_d2_S_x1 p_n_c18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gem2Stream_float_8u_U0_p_m_out_din),
    .if_full_n(p_n_c18_full_n),
    .if_write(gem2Stream_float_8u_U0_p_m_out_write),
    .if_dout(p_n_c18_dout),
    .if_empty_n(p_n_c18_empty_n),
    .if_read(gemv_float_3u_unsigned_int_U0_p_m_read)
);

MultiLayerPerceptronDecoupled_fifo_w32_d2_S_x1 p_k_c19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gem2Stream_float_8u_U0_p_n_out_din),
    .if_full_n(p_k_c19_full_n),
    .if_write(gem2Stream_float_8u_U0_p_n_out_write),
    .if_dout(p_k_c19_dout),
    .if_empty_n(p_k_c19_empty_n),
    .if_read(gemv_float_3u_unsigned_int_U0_p_n_read)
);

MultiLayerPerceptronDecoupled_fifo_w256_d2_S_x l_strInput_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(vec2GemStream_float_8u_1_U0_p_out_din),
    .if_full_n(l_strInput_full_n),
    .if_write(vec2GemStream_float_8u_1_U0_p_out_write),
    .if_dout(l_strInput_dout),
    .if_empty_n(l_strInput_empty_n),
    .if_read(gemv_float_3u_unsigned_int_U0_l_strInput6_read)
);

MultiLayerPerceptronDecoupled_fifo_w32_d2_S_x1 l_strBias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(readVec2Stream_float_1u_U0_p_out_din),
    .if_full_n(l_strBias_full_n),
    .if_write(readVec2Stream_float_1u_U0_p_out_write),
    .if_dout(l_strBias_dout),
    .if_empty_n(l_strBias_empty_n),
    .if_read(gemv_float_3u_unsigned_int_U0_l_strBias9_read)
);

MultiLayerPerceptronDecoupled_fifo_w32_d2_S_x1 l_strMv_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gemv_float_3u_unsigned_int_U0_l_strMv8_din),
    .if_full_n(l_strMv_full_n),
    .if_write(gemv_float_3u_unsigned_int_U0_l_strMv8_write),
    .if_dout(l_strMv_dout),
    .if_empty_n(l_strMv_empty_n),
    .if_read(FcnActivation_U0_l_strMv8_read)
);

MultiLayerPerceptronDecoupled_fifo_w32_d2_S_x1 p_n_c20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gemv_float_3u_unsigned_int_U0_p_m_out_din),
    .if_full_n(p_n_c20_full_n),
    .if_write(gemv_float_3u_unsigned_int_U0_p_m_out_write),
    .if_dout(p_n_c20_dout),
    .if_empty_n(p_n_c20_empty_n),
    .if_read(FcnActivation_U0_p_n_read)
);

MultiLayerPerceptronDecoupled_fifo_w32_d2_S_x1 l_strOutput_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(FcnActivation_U0_l_strOutput7_din),
    .if_full_n(l_strOutput_full_n),
    .if_write(FcnActivation_U0_l_strOutput7_write),
    .if_dout(l_strOutput_dout),
    .if_empty_n(l_strOutput_empty_n),
    .if_read(writeStream2Vec_float_1u_U0_p_in_read)
);

MultiLayerPerceptronDecoupled_fifo_w32_d2_S_x1 p_n_c21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(FcnActivation_U0_p_n_out_din),
    .if_full_n(p_n_c21_full_n),
    .if_write(FcnActivation_U0_p_n_out_write),
    .if_dout(p_n_c21_dout),
    .if_empty_n(p_n_c21_empty_n),
    .if_read(writeStream2Vec_float_1u_U0_p_n_read)
);

MultiLayerPerceptronDecoupled_start_for_gemv_float_3u_unsigned_int_U0 start_for_gemv_float_3u_unsigned_int_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_gemv_float_3u_unsigned_int_U0_din),
    .if_full_n(start_for_gemv_float_3u_unsigned_int_U0_full_n),
    .if_write(gem2Stream_float_8u_U0_start_write),
    .if_dout(start_for_gemv_float_3u_unsigned_int_U0_dout),
    .if_empty_n(start_for_gemv_float_3u_unsigned_int_U0_empty_n),
    .if_read(gemv_float_3u_unsigned_int_U0_ap_ready)
);

MultiLayerPerceptronDecoupled_start_for_FcnActivation_U0 start_for_FcnActivation_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_FcnActivation_U0_din),
    .if_full_n(start_for_FcnActivation_U0_full_n),
    .if_write(gemv_float_3u_unsigned_int_U0_start_write),
    .if_dout(start_for_FcnActivation_U0_dout),
    .if_empty_n(start_for_FcnActivation_U0_empty_n),
    .if_read(FcnActivation_U0_ap_ready)
);

MultiLayerPerceptronDecoupled_start_for_writeStream2Vec_float_1u_U0 start_for_writeStream2Vec_float_1u_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_writeStream2Vec_float_1u_U0_din),
    .if_full_n(start_for_writeStream2Vec_float_1u_U0_full_n),
    .if_write(FcnActivation_U0_start_write),
    .if_dout(start_for_writeStream2Vec_float_1u_U0_dout),
    .if_empty_n(start_for_writeStream2Vec_float_1u_U0_empty_n),
    .if_read(writeStream2Vec_float_1u_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_MyGemv_entry75_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_MyGemv_entry75_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_MyGemv_entry75_U0_ap_ready <= ap_sync_MyGemv_entry75_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_gem2Stream_float_8u_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_gem2Stream_float_8u_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_gem2Stream_float_8u_U0_ap_ready <= ap_sync_gem2Stream_float_8u_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_readVec2Stream_float_1u_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_readVec2Stream_float_1u_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_readVec2Stream_float_1u_U0_ap_ready <= ap_sync_readVec2Stream_float_1u_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_vec2GemStream_float_8u_1_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_vec2GemStream_float_8u_1_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_vec2GemStream_float_8u_1_U0_ap_ready <= ap_sync_vec2GemStream_float_8u_1_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (1'b0 == MyGemv_entry75_U0_ap_ready))) begin
        MyGemv_entry75_U0_ap_ready_count <= (MyGemv_entry75_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == MyGemv_entry75_U0_ap_ready))) begin
        MyGemv_entry75_U0_ap_ready_count <= (MyGemv_entry75_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (gem2Stream_float_8u_U0_ap_ready == 1'b0))) begin
        gem2Stream_float_8u_U0_ap_ready_count <= (gem2Stream_float_8u_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (gem2Stream_float_8u_U0_ap_ready == 1'b1))) begin
        gem2Stream_float_8u_U0_ap_ready_count <= (gem2Stream_float_8u_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (readVec2Stream_float_1u_U0_ap_ready == 1'b0))) begin
        readVec2Stream_float_1u_U0_ap_ready_count <= (readVec2Stream_float_1u_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (readVec2Stream_float_1u_U0_ap_ready == 1'b1))) begin
        readVec2Stream_float_1u_U0_ap_ready_count <= (readVec2Stream_float_1u_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (vec2GemStream_float_8u_1_U0_ap_ready == 1'b0))) begin
        vec2GemStream_float_8u_1_U0_ap_ready_count <= (vec2GemStream_float_8u_1_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (vec2GemStream_float_8u_1_U0_ap_ready == 1'b1))) begin
        vec2GemStream_float_8u_1_U0_ap_ready_count <= (vec2GemStream_float_8u_1_U0_ap_ready_count + 2'd1);
    end
end

assign FcnActivation_U0_ap_continue = 1'b1;

assign FcnActivation_U0_ap_start = start_for_FcnActivation_U0_empty_n;

assign MyGemv_entry75_U0_ap_continue = 1'b1;

assign MyGemv_entry75_U0_ap_start = ((ap_sync_reg_MyGemv_entry75_U0_ap_ready ^ 1'b1) & ap_start);

assign MyGemv_entry75_U0_start_full_n = 1'b1;

assign MyGemv_entry75_U0_start_write = 1'b0;

assign ap_done = writeStream2Vec_float_1u_U0_ap_done;

assign ap_idle = (writeStream2Vec_float_1u_U0_ap_idle & vec2GemStream_float_8u_1_U0_ap_idle & readVec2Stream_float_1u_U0_ap_idle & gemv_float_3u_unsigned_int_U0_ap_idle & gem2Stream_float_8u_U0_ap_idle & MyGemv_entry75_U0_ap_idle & FcnActivation_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_MyGemv_entry75_U0_ap_ready = (ap_sync_reg_MyGemv_entry75_U0_ap_ready | MyGemv_entry75_U0_ap_ready);

assign ap_sync_continue = ap_continue;

assign ap_sync_done = writeStream2Vec_float_1u_U0_ap_done;

assign ap_sync_gem2Stream_float_8u_U0_ap_ready = (gem2Stream_float_8u_U0_ap_ready | ap_sync_reg_gem2Stream_float_8u_U0_ap_ready);

assign ap_sync_readVec2Stream_float_1u_U0_ap_ready = (readVec2Stream_float_1u_U0_ap_ready | ap_sync_reg_readVec2Stream_float_1u_U0_ap_ready);

assign ap_sync_ready = (ap_sync_vec2GemStream_float_8u_1_U0_ap_ready & ap_sync_readVec2Stream_float_1u_U0_ap_ready & ap_sync_gem2Stream_float_8u_U0_ap_ready & ap_sync_MyGemv_entry75_U0_ap_ready);

assign ap_sync_vec2GemStream_float_8u_1_U0_ap_ready = (vec2GemStream_float_8u_1_U0_ap_ready | ap_sync_reg_vec2GemStream_float_8u_1_U0_ap_ready);

assign bias_address0 = readVec2Stream_float_1u_U0_p_in_address0;

assign bias_address1 = 8'd0;

assign bias_ce0 = readVec2Stream_float_1u_U0_p_in_ce0;

assign bias_ce1 = 1'b0;

assign bias_d0 = 32'd0;

assign bias_d1 = 32'd0;

assign bias_we0 = 1'b0;

assign bias_we1 = 1'b0;

assign gem2Stream_float_8u_U0_ap_continue = 1'b1;

assign gem2Stream_float_8u_U0_ap_start = ((ap_sync_reg_gem2Stream_float_8u_U0_ap_ready ^ 1'b1) & ap_start);

assign gemv_float_3u_unsigned_int_U0_ap_continue = 1'b1;

assign gemv_float_3u_unsigned_int_U0_ap_start = start_for_gemv_float_3u_unsigned_int_U0_empty_n;

assign input_r_address0 = vec2GemStream_float_8u_1_U0_p_in_address0;

assign input_r_address1 = vec2GemStream_float_8u_1_U0_p_in_address1;

assign input_r_ce0 = vec2GemStream_float_8u_1_U0_p_in_ce0;

assign input_r_ce1 = vec2GemStream_float_8u_1_U0_p_in_ce1;

assign input_r_d0 = 32'd0;

assign input_r_d1 = 32'd0;

assign input_r_we0 = 1'b0;

assign input_r_we1 = 1'b0;

assign outputPort_address0 = writeStream2Vec_float_1u_U0_p_out_address0;

assign outputPort_address1 = 5'd0;

assign outputPort_ce0 = writeStream2Vec_float_1u_U0_p_out_ce0;

assign outputPort_ce1 = 1'b0;

assign outputPort_d0 = writeStream2Vec_float_1u_U0_p_out_d0;

assign outputPort_d1 = 32'd0;

assign outputPort_we0 = writeStream2Vec_float_1u_U0_p_out_we0;

assign outputPort_we1 = 1'b0;

assign readVec2Stream_float_1u_U0_ap_continue = 1'b1;

assign readVec2Stream_float_1u_U0_ap_start = ((ap_sync_reg_readVec2Stream_float_1u_U0_ap_ready ^ 1'b1) & ap_start);

assign readVec2Stream_float_1u_U0_start_full_n = 1'b1;

assign readVec2Stream_float_1u_U0_start_write = 1'b0;

assign start_for_FcnActivation_U0_din = 1'b1;

assign start_for_gemv_float_3u_unsigned_int_U0_din = 1'b1;

assign start_for_writeStream2Vec_float_1u_U0_din = 1'b1;

assign vec2GemStream_float_8u_1_U0_ap_continue = 1'b1;

assign vec2GemStream_float_8u_1_U0_ap_start = ((ap_sync_reg_vec2GemStream_float_8u_1_U0_ap_ready ^ 1'b1) & ap_start);

assign vec2GemStream_float_8u_1_U0_start_full_n = 1'b1;

assign vec2GemStream_float_8u_1_U0_start_write = 1'b0;

assign weights_0_address0 = gem2Stream_float_8u_U0_p_in_0_address0;

assign weights_0_address1 = 9'd0;

assign weights_0_ce0 = gem2Stream_float_8u_U0_p_in_0_ce0;

assign weights_0_ce1 = 1'b0;

assign weights_0_d0 = 32'd0;

assign weights_0_d1 = 32'd0;

assign weights_0_we0 = 1'b0;

assign weights_0_we1 = 1'b0;

assign weights_1_address0 = gem2Stream_float_8u_U0_p_in_1_address0;

assign weights_1_address1 = 9'd0;

assign weights_1_ce0 = gem2Stream_float_8u_U0_p_in_1_ce0;

assign weights_1_ce1 = 1'b0;

assign weights_1_d0 = 32'd0;

assign weights_1_d1 = 32'd0;

assign weights_1_we0 = 1'b0;

assign weights_1_we1 = 1'b0;

assign weights_2_address0 = gem2Stream_float_8u_U0_p_in_2_address0;

assign weights_2_address1 = 9'd0;

assign weights_2_ce0 = gem2Stream_float_8u_U0_p_in_2_ce0;

assign weights_2_ce1 = 1'b0;

assign weights_2_d0 = 32'd0;

assign weights_2_d1 = 32'd0;

assign weights_2_we0 = 1'b0;

assign weights_2_we1 = 1'b0;

assign weights_3_address0 = gem2Stream_float_8u_U0_p_in_3_address0;

assign weights_3_address1 = 9'd0;

assign weights_3_ce0 = gem2Stream_float_8u_U0_p_in_3_ce0;

assign weights_3_ce1 = 1'b0;

assign weights_3_d0 = 32'd0;

assign weights_3_d1 = 32'd0;

assign weights_3_we0 = 1'b0;

assign weights_3_we1 = 1'b0;

assign weights_4_address0 = gem2Stream_float_8u_U0_p_in_4_address0;

assign weights_4_address1 = 9'd0;

assign weights_4_ce0 = gem2Stream_float_8u_U0_p_in_4_ce0;

assign weights_4_ce1 = 1'b0;

assign weights_4_d0 = 32'd0;

assign weights_4_d1 = 32'd0;

assign weights_4_we0 = 1'b0;

assign weights_4_we1 = 1'b0;

assign weights_5_address0 = gem2Stream_float_8u_U0_p_in_5_address0;

assign weights_5_address1 = 9'd0;

assign weights_5_ce0 = gem2Stream_float_8u_U0_p_in_5_ce0;

assign weights_5_ce1 = 1'b0;

assign weights_5_d0 = 32'd0;

assign weights_5_d1 = 32'd0;

assign weights_5_we0 = 1'b0;

assign weights_5_we1 = 1'b0;

assign weights_6_address0 = gem2Stream_float_8u_U0_p_in_6_address0;

assign weights_6_address1 = 9'd0;

assign weights_6_ce0 = gem2Stream_float_8u_U0_p_in_6_ce0;

assign weights_6_ce1 = 1'b0;

assign weights_6_d0 = 32'd0;

assign weights_6_d1 = 32'd0;

assign weights_6_we0 = 1'b0;

assign weights_6_we1 = 1'b0;

assign weights_7_address0 = gem2Stream_float_8u_U0_p_in_7_address0;

assign weights_7_address1 = 9'd0;

assign weights_7_ce0 = gem2Stream_float_8u_U0_p_in_7_ce0;

assign weights_7_ce1 = 1'b0;

assign weights_7_d0 = 32'd0;

assign weights_7_d1 = 32'd0;

assign weights_7_we0 = 1'b0;

assign weights_7_we1 = 1'b0;

assign writeStream2Vec_float_1u_U0_ap_continue = ap_continue;

assign writeStream2Vec_float_1u_U0_ap_start = start_for_writeStream2Vec_float_1u_U0_empty_n;

assign writeStream2Vec_float_1u_U0_start_full_n = 1'b1;

assign writeStream2Vec_float_1u_U0_start_write = 1'b0;

endmodule //MultiLayerPerceptronDecoupled_MyGemv
