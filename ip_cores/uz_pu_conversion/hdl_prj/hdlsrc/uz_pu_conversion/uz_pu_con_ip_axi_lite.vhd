-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\uz_pu_conversion\uz_pu_con_ip_axi_lite.vhd
-- Created: 2022-02-25 15:06:44
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_pu_con_ip_axi_lite
-- Source Path: uz_pu_con_ip/uz_pu_con_ip_axi_lite
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY uz_pu_con_ip_axi_lite IS
  PORT( reset                             :   IN    std_logic;
        AXI4_Lite_ACLK                    :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARESETN                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_AWADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_AWVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_WDATA                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_WSTRB                   :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Lite_WVALID                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_BREADY                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_ARVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_RREADY                  :   IN    std_logic;  -- ufix1
        read_ip_timestamp                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_AWREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_WREADY                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_BRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_BVALID                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_ARREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_RDATA                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_RRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_RVALID                  :   OUT   std_logic;  -- ufix1
        write_axi_enable                  :   OUT   std_logic;  -- ufix1
        write_AXI_pu_conv_in              :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in1             :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in2             :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in3             :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in4             :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in5             :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in6             :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in7             :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in8             :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in9             :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in10            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in11            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in12            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in13            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in14            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in15            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in16            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in17            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in18            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in19            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in20            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in21            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in22            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in23            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in24            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in25            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in26            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in27            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in28            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in29            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in30            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        write_AXI_pu_conv_in31            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        reset_internal                    :   OUT   std_logic  -- ufix1
        );
END uz_pu_con_ip_axi_lite;


ARCHITECTURE rtl OF uz_pu_con_ip_axi_lite IS

  -- Component Declarations
  COMPONENT uz_pu_con_ip_addr_decoder
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          data_write                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          addr_sel                        :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14
          wr_enb                          :   IN    std_logic;  -- ufix1
          rd_enb                          :   IN    std_logic;  -- ufix1
          read_ip_timestamp               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_read                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          write_AXI_pu_conv_in            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in1           :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in2           :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in3           :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in4           :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in5           :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in6           :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in7           :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in8           :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in9           :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in10          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in11          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in12          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in13          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in14          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in15          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in16          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in17          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in18          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in19          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in20          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in21          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in22          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in23          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in24          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in25          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in26          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in27          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in28          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in29          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in30          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          write_AXI_pu_conv_in31          :   OUT   std_logic_vector(17 DOWNTO 0)  -- ufix18_En18
          );
  END COMPONENT;

  COMPONENT uz_pu_con_ip_axi_lite_module
    PORT( clk                             :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARESETN               :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_AWVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_WDATA                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_WSTRB                 :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_Lite_WVALID                :   IN    std_logic;  -- ufix1
          AXI4_Lite_BREADY                :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_ARVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_RREADY                :   IN    std_logic;  -- ufix1
          data_read                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_AWREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_WREADY                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_BRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_BVALID                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_ARREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_RDATA                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_RRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_RVALID                :   OUT   std_logic;  -- ufix1
          data_write                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          addr_sel                        :   OUT   std_logic_vector(13 DOWNTO 0);  -- ufix14
          wr_enb                          :   OUT   std_logic;  -- ufix1
          rd_enb                          :   OUT   std_logic;  -- ufix1
          reset_internal                  :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : uz_pu_con_ip_addr_decoder
    USE ENTITY work.uz_pu_con_ip_addr_decoder(rtl);

  FOR ALL : uz_pu_con_ip_axi_lite_module
    USE ENTITY work.uz_pu_con_ip_axi_lite_module(rtl);

  -- Signals
  SIGNAL top_data_write                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL top_addr_sel                     : std_logic_vector(13 DOWNTO 0);  -- ufix14
  SIGNAL top_wr_enb                       : std_logic;  -- ufix1
  SIGNAL top_rd_enb                       : std_logic;  -- ufix1
  SIGNAL top_data_read                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_AXI_pu_conv_in_tmp         : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in1_tmp        : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in2_tmp        : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in3_tmp        : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in4_tmp        : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in5_tmp        : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in6_tmp        : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in7_tmp        : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in8_tmp        : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in9_tmp        : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in10_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in11_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in12_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in13_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in14_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in15_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in16_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in17_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in18_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in19_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in20_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in21_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in22_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in23_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in24_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in25_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in26_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in27_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in28_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in29_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in30_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_AXI_pu_conv_in31_tmp       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL AXI4_Lite_BRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_Lite_RDATA_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_RRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL top_reset_internal               : std_logic;  -- ufix1

BEGIN
  u_uz_pu_con_ip_addr_decoder_inst : uz_pu_con_ip_addr_decoder
    PORT MAP( clk => AXI4_Lite_ACLK,  -- ufix1
              reset => reset,
              data_write => top_data_write,  -- ufix32
              addr_sel => top_addr_sel,  -- ufix14
              wr_enb => top_wr_enb,  -- ufix1
              rd_enb => top_rd_enb,  -- ufix1
              read_ip_timestamp => read_ip_timestamp,  -- ufix32
              data_read => top_data_read,  -- ufix32
              write_axi_enable => write_axi_enable,  -- ufix1
              write_AXI_pu_conv_in => write_AXI_pu_conv_in_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in1 => write_AXI_pu_conv_in1_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in2 => write_AXI_pu_conv_in2_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in3 => write_AXI_pu_conv_in3_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in4 => write_AXI_pu_conv_in4_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in5 => write_AXI_pu_conv_in5_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in6 => write_AXI_pu_conv_in6_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in7 => write_AXI_pu_conv_in7_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in8 => write_AXI_pu_conv_in8_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in9 => write_AXI_pu_conv_in9_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in10 => write_AXI_pu_conv_in10_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in11 => write_AXI_pu_conv_in11_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in12 => write_AXI_pu_conv_in12_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in13 => write_AXI_pu_conv_in13_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in14 => write_AXI_pu_conv_in14_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in15 => write_AXI_pu_conv_in15_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in16 => write_AXI_pu_conv_in16_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in17 => write_AXI_pu_conv_in17_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in18 => write_AXI_pu_conv_in18_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in19 => write_AXI_pu_conv_in19_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in20 => write_AXI_pu_conv_in20_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in21 => write_AXI_pu_conv_in21_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in22 => write_AXI_pu_conv_in22_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in23 => write_AXI_pu_conv_in23_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in24 => write_AXI_pu_conv_in24_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in25 => write_AXI_pu_conv_in25_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in26 => write_AXI_pu_conv_in26_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in27 => write_AXI_pu_conv_in27_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in28 => write_AXI_pu_conv_in28_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in29 => write_AXI_pu_conv_in29_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in30 => write_AXI_pu_conv_in30_tmp,  -- ufix18_En18
              write_AXI_pu_conv_in31 => write_AXI_pu_conv_in31_tmp  -- ufix18_En18
              );

  u_uz_pu_con_ip_axi_lite_module_inst : uz_pu_con_ip_axi_lite_module
    PORT MAP( clk => AXI4_Lite_ACLK,  -- ufix1
              AXI4_Lite_ARESETN => AXI4_Lite_ARESETN,  -- ufix1
              AXI4_Lite_AWADDR => AXI4_Lite_AWADDR,  -- ufix16
              AXI4_Lite_AWVALID => AXI4_Lite_AWVALID,  -- ufix1
              AXI4_Lite_WDATA => AXI4_Lite_WDATA,  -- ufix32
              AXI4_Lite_WSTRB => AXI4_Lite_WSTRB,  -- ufix4
              AXI4_Lite_WVALID => AXI4_Lite_WVALID,  -- ufix1
              AXI4_Lite_BREADY => AXI4_Lite_BREADY,  -- ufix1
              AXI4_Lite_ARADDR => AXI4_Lite_ARADDR,  -- ufix16
              AXI4_Lite_ARVALID => AXI4_Lite_ARVALID,  -- ufix1
              AXI4_Lite_RREADY => AXI4_Lite_RREADY,  -- ufix1
              data_read => top_data_read,  -- ufix32
              AXI4_Lite_AWREADY => AXI4_Lite_AWREADY,  -- ufix1
              AXI4_Lite_WREADY => AXI4_Lite_WREADY,  -- ufix1
              AXI4_Lite_BRESP => AXI4_Lite_BRESP_tmp,  -- ufix2
              AXI4_Lite_BVALID => AXI4_Lite_BVALID,  -- ufix1
              AXI4_Lite_ARREADY => AXI4_Lite_ARREADY,  -- ufix1
              AXI4_Lite_RDATA => AXI4_Lite_RDATA_tmp,  -- ufix32
              AXI4_Lite_RRESP => AXI4_Lite_RRESP_tmp,  -- ufix2
              AXI4_Lite_RVALID => AXI4_Lite_RVALID,  -- ufix1
              data_write => top_data_write,  -- ufix32
              addr_sel => top_addr_sel,  -- ufix14
              wr_enb => top_wr_enb,  -- ufix1
              rd_enb => top_rd_enb,  -- ufix1
              reset_internal => top_reset_internal  -- ufix1
              );

  AXI4_Lite_BRESP <= AXI4_Lite_BRESP_tmp;

  AXI4_Lite_RDATA <= AXI4_Lite_RDATA_tmp;

  AXI4_Lite_RRESP <= AXI4_Lite_RRESP_tmp;

  write_AXI_pu_conv_in <= write_AXI_pu_conv_in_tmp;

  write_AXI_pu_conv_in1 <= write_AXI_pu_conv_in1_tmp;

  write_AXI_pu_conv_in2 <= write_AXI_pu_conv_in2_tmp;

  write_AXI_pu_conv_in3 <= write_AXI_pu_conv_in3_tmp;

  write_AXI_pu_conv_in4 <= write_AXI_pu_conv_in4_tmp;

  write_AXI_pu_conv_in5 <= write_AXI_pu_conv_in5_tmp;

  write_AXI_pu_conv_in6 <= write_AXI_pu_conv_in6_tmp;

  write_AXI_pu_conv_in7 <= write_AXI_pu_conv_in7_tmp;

  write_AXI_pu_conv_in8 <= write_AXI_pu_conv_in8_tmp;

  write_AXI_pu_conv_in9 <= write_AXI_pu_conv_in9_tmp;

  write_AXI_pu_conv_in10 <= write_AXI_pu_conv_in10_tmp;

  write_AXI_pu_conv_in11 <= write_AXI_pu_conv_in11_tmp;

  write_AXI_pu_conv_in12 <= write_AXI_pu_conv_in12_tmp;

  write_AXI_pu_conv_in13 <= write_AXI_pu_conv_in13_tmp;

  write_AXI_pu_conv_in14 <= write_AXI_pu_conv_in14_tmp;

  write_AXI_pu_conv_in15 <= write_AXI_pu_conv_in15_tmp;

  write_AXI_pu_conv_in16 <= write_AXI_pu_conv_in16_tmp;

  write_AXI_pu_conv_in17 <= write_AXI_pu_conv_in17_tmp;

  write_AXI_pu_conv_in18 <= write_AXI_pu_conv_in18_tmp;

  write_AXI_pu_conv_in19 <= write_AXI_pu_conv_in19_tmp;

  write_AXI_pu_conv_in20 <= write_AXI_pu_conv_in20_tmp;

  write_AXI_pu_conv_in21 <= write_AXI_pu_conv_in21_tmp;

  write_AXI_pu_conv_in22 <= write_AXI_pu_conv_in22_tmp;

  write_AXI_pu_conv_in23 <= write_AXI_pu_conv_in23_tmp;

  write_AXI_pu_conv_in24 <= write_AXI_pu_conv_in24_tmp;

  write_AXI_pu_conv_in25 <= write_AXI_pu_conv_in25_tmp;

  write_AXI_pu_conv_in26 <= write_AXI_pu_conv_in26_tmp;

  write_AXI_pu_conv_in27 <= write_AXI_pu_conv_in27_tmp;

  write_AXI_pu_conv_in28 <= write_AXI_pu_conv_in28_tmp;

  write_AXI_pu_conv_in29 <= write_AXI_pu_conv_in29_tmp;

  write_AXI_pu_conv_in30 <= write_AXI_pu_conv_in30_tmp;

  write_AXI_pu_conv_in31 <= write_AXI_pu_conv_in31_tmp;

  reset_internal <= top_reset_internal;

END rtl;

