// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module uz_VSD_6ph_asym_multiply_line13 (
        ap_start,
        start_full_n,
        start_out,
        start_write,
        val_0_dout,
        val_0_empty_n,
        val_0_read,
        val_1_dout,
        val_1_empty_n,
        val_1_read,
        val_2_dout,
        val_2_empty_n,
        val_2_read,
        val_3_dout,
        val_3_empty_n,
        val_3_read,
        val_4_dout,
        val_4_empty_n,
        val_4_read,
        val_5_dout,
        val_5_empty_n,
        val_5_read,
        val_0_out_din,
        val_0_out_full_n,
        val_0_out_write,
        val_1_out_din,
        val_1_out_full_n,
        val_1_out_write,
        val_2_out_din,
        val_2_out_full_n,
        val_2_out_write,
        val_3_out_din,
        val_3_out_full_n,
        val_3_out_write,
        val_4_out_din,
        val_4_out_full_n,
        val_4_out_write,
        val_5_out_din,
        val_5_out_full_n,
        val_5_out_write,
        products_0_out_din,
        products_0_out_full_n,
        products_0_out_write,
        products_1_out_din,
        products_1_out_full_n,
        products_1_out_write,
        products_2_out_din,
        products_2_out_full_n,
        products_2_out_write,
        products_3_out_din,
        products_3_out_full_n,
        products_3_out_write,
        products_4_out_din,
        products_4_out_full_n,
        products_4_out_write,
        products_5_out_din,
        products_5_out_full_n,
        products_5_out_write,
        ap_clk,
        ap_rst,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_start;
input   start_full_n;
output   start_out;
output   start_write;
input  [31:0] val_0_dout;
input   val_0_empty_n;
output   val_0_read;
input  [31:0] val_1_dout;
input   val_1_empty_n;
output   val_1_read;
input  [31:0] val_2_dout;
input   val_2_empty_n;
output   val_2_read;
input  [31:0] val_3_dout;
input   val_3_empty_n;
output   val_3_read;
input  [31:0] val_4_dout;
input   val_4_empty_n;
output   val_4_read;
input  [31:0] val_5_dout;
input   val_5_empty_n;
output   val_5_read;
output  [31:0] val_0_out_din;
input   val_0_out_full_n;
output   val_0_out_write;
output  [31:0] val_1_out_din;
input   val_1_out_full_n;
output   val_1_out_write;
output  [31:0] val_2_out_din;
input   val_2_out_full_n;
output   val_2_out_write;
output  [31:0] val_3_out_din;
input   val_3_out_full_n;
output   val_3_out_write;
output  [31:0] val_4_out_din;
input   val_4_out_full_n;
output   val_4_out_write;
output  [31:0] val_5_out_din;
input   val_5_out_full_n;
output   val_5_out_write;
output  [31:0] products_0_out_din;
input   products_0_out_full_n;
output   products_0_out_write;
output  [31:0] products_1_out_din;
input   products_1_out_full_n;
output   products_1_out_write;
output  [31:0] products_2_out_din;
input   products_2_out_full_n;
output   products_2_out_write;
output  [31:0] products_3_out_din;
input   products_3_out_full_n;
output   products_3_out_write;
output  [31:0] products_4_out_din;
input   products_4_out_full_n;
output   products_4_out_write;
output  [31:0] products_5_out_din;
input   products_5_out_full_n;
output   products_5_out_write;
input   ap_clk;
input   ap_rst;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

reg start_write;

reg    real_start;
reg    start_once_reg;
wire    internal_ap_ready;
wire    multiply_line13_entry165_U0_ap_start;
wire    multiply_line13_entry165_U0_ap_done;
wire    multiply_line13_entry165_U0_ap_continue;
wire    multiply_line13_entry165_U0_ap_idle;
wire    multiply_line13_entry165_U0_ap_ready;
wire    multiply_line13_entry165_U0_start_out;
wire    multiply_line13_entry165_U0_start_write;
wire    multiply_line13_entry165_U0_scalar_val_5_read;
wire    multiply_line13_entry165_U0_scalar_val_4_read;
wire    multiply_line13_entry165_U0_scalar_val_3_read;
wire    multiply_line13_entry165_U0_scalar_val_2_read;
wire    multiply_line13_entry165_U0_scalar_val_1_read;
wire    multiply_line13_entry165_U0_scalar_val_0_read;
wire   [31:0] multiply_line13_entry165_U0_scalar_val_5_out_din;
wire    multiply_line13_entry165_U0_scalar_val_5_out_write;
wire   [31:0] multiply_line13_entry165_U0_scalar_val_4_out_din;
wire    multiply_line13_entry165_U0_scalar_val_4_out_write;
wire   [31:0] multiply_line13_entry165_U0_scalar_val_3_out_din;
wire    multiply_line13_entry165_U0_scalar_val_3_out_write;
wire   [31:0] multiply_line13_entry165_U0_scalar_val_2_out_din;
wire    multiply_line13_entry165_U0_scalar_val_2_out_write;
wire   [31:0] multiply_line13_entry165_U0_scalar_val_1_out_din;
wire    multiply_line13_entry165_U0_scalar_val_1_out_write;
wire   [31:0] multiply_line13_entry165_U0_scalar_val_0_out_din;
wire    multiply_line13_entry165_U0_scalar_val_0_out_write;
wire    multiply_line13_Block_split1_proc164_U0_ap_start;
wire    multiply_line13_Block_split1_proc164_U0_ap_done;
wire    multiply_line13_Block_split1_proc164_U0_ap_continue;
wire    multiply_line13_Block_split1_proc164_U0_ap_idle;
wire    multiply_line13_Block_split1_proc164_U0_ap_ready;
wire    multiply_line13_Block_split1_proc164_U0_scalar_val_0_read;
wire   [31:0] multiply_line13_Block_split1_proc164_U0_val_0_out_din;
wire    multiply_line13_Block_split1_proc164_U0_val_0_out_write;
wire    multiply_line13_Block_split1_proc164_U0_scalar_val_1_read;
wire   [31:0] multiply_line13_Block_split1_proc164_U0_val_1_out_din;
wire    multiply_line13_Block_split1_proc164_U0_val_1_out_write;
wire    multiply_line13_Block_split1_proc164_U0_scalar_val_2_read;
wire   [31:0] multiply_line13_Block_split1_proc164_U0_val_2_out_din;
wire    multiply_line13_Block_split1_proc164_U0_val_2_out_write;
wire    multiply_line13_Block_split1_proc164_U0_scalar_val_3_read;
wire   [31:0] multiply_line13_Block_split1_proc164_U0_val_3_out_din;
wire    multiply_line13_Block_split1_proc164_U0_val_3_out_write;
wire    multiply_line13_Block_split1_proc164_U0_scalar_val_4_read;
wire   [31:0] multiply_line13_Block_split1_proc164_U0_val_4_out_din;
wire    multiply_line13_Block_split1_proc164_U0_val_4_out_write;
wire    multiply_line13_Block_split1_proc164_U0_scalar_val_5_read;
wire   [31:0] multiply_line13_Block_split1_proc164_U0_val_5_out_din;
wire    multiply_line13_Block_split1_proc164_U0_val_5_out_write;
wire   [31:0] multiply_line13_Block_split1_proc164_U0_ap_return_0;
wire   [31:0] multiply_line13_Block_split1_proc164_U0_ap_return_1;
wire   [31:0] multiply_line13_Block_split1_proc164_U0_ap_return_2;
wire   [31:0] multiply_line13_Block_split1_proc164_U0_ap_return_3;
wire   [31:0] multiply_line13_Block_split1_proc164_U0_ap_return_4;
wire   [31:0] multiply_line13_Block_split1_proc164_U0_ap_return_5;
wire    ap_channel_done_products_5_dc_channel;
wire    products_5_dc_channel_full_n;
reg    ap_sync_reg_channel_write_products_5_dc_channel;
wire    ap_sync_channel_write_products_5_dc_channel;
wire    ap_channel_done_products_4_dc_channel;
wire    products_4_dc_channel_full_n;
reg    ap_sync_reg_channel_write_products_4_dc_channel;
wire    ap_sync_channel_write_products_4_dc_channel;
wire    ap_channel_done_products_3_dc_channel;
wire    products_3_dc_channel_full_n;
reg    ap_sync_reg_channel_write_products_3_dc_channel;
wire    ap_sync_channel_write_products_3_dc_channel;
wire    ap_channel_done_products_2_dc_channel;
wire    products_2_dc_channel_full_n;
reg    ap_sync_reg_channel_write_products_2_dc_channel;
wire    ap_sync_channel_write_products_2_dc_channel;
wire    ap_channel_done_products_1_dc_channel;
wire    products_1_dc_channel_full_n;
reg    ap_sync_reg_channel_write_products_1_dc_channel;
wire    ap_sync_channel_write_products_1_dc_channel;
wire    ap_channel_done_products_0_dc_channel;
wire    products_0_dc_channel_full_n;
reg    ap_sync_reg_channel_write_products_0_dc_channel;
wire    ap_sync_channel_write_products_0_dc_channel;
wire    p_prop_ret_products_OC_0_dc_proc81_U0_ap_start;
wire    p_prop_ret_products_OC_0_dc_proc81_U0_ap_done;
wire    p_prop_ret_products_OC_0_dc_proc81_U0_ap_continue;
wire    p_prop_ret_products_OC_0_dc_proc81_U0_ap_idle;
wire    p_prop_ret_products_OC_0_dc_proc81_U0_ap_ready;
wire   [31:0] p_prop_ret_products_OC_0_dc_proc81_U0_products_0_out_din;
wire    p_prop_ret_products_OC_0_dc_proc81_U0_products_0_out_write;
wire    ap_sync_continue;
wire    p_prop_ret_products_OC_1_dc_proc82_U0_ap_start;
wire    p_prop_ret_products_OC_1_dc_proc82_U0_ap_done;
wire    p_prop_ret_products_OC_1_dc_proc82_U0_ap_continue;
wire    p_prop_ret_products_OC_1_dc_proc82_U0_ap_idle;
wire    p_prop_ret_products_OC_1_dc_proc82_U0_ap_ready;
wire   [31:0] p_prop_ret_products_OC_1_dc_proc82_U0_products_1_out_din;
wire    p_prop_ret_products_OC_1_dc_proc82_U0_products_1_out_write;
wire    p_prop_ret_products_OC_2_dc_proc83_U0_ap_start;
wire    p_prop_ret_products_OC_2_dc_proc83_U0_ap_done;
wire    p_prop_ret_products_OC_2_dc_proc83_U0_ap_continue;
wire    p_prop_ret_products_OC_2_dc_proc83_U0_ap_idle;
wire    p_prop_ret_products_OC_2_dc_proc83_U0_ap_ready;
wire   [31:0] p_prop_ret_products_OC_2_dc_proc83_U0_products_2_out_din;
wire    p_prop_ret_products_OC_2_dc_proc83_U0_products_2_out_write;
wire    p_prop_ret_products_OC_3_dc_proc84_U0_ap_start;
wire    p_prop_ret_products_OC_3_dc_proc84_U0_ap_done;
wire    p_prop_ret_products_OC_3_dc_proc84_U0_ap_continue;
wire    p_prop_ret_products_OC_3_dc_proc84_U0_ap_idle;
wire    p_prop_ret_products_OC_3_dc_proc84_U0_ap_ready;
wire   [31:0] p_prop_ret_products_OC_3_dc_proc84_U0_products_3_out_din;
wire    p_prop_ret_products_OC_3_dc_proc84_U0_products_3_out_write;
wire    p_prop_ret_products_OC_4_dc_proc85_U0_ap_start;
wire    p_prop_ret_products_OC_4_dc_proc85_U0_ap_done;
wire    p_prop_ret_products_OC_4_dc_proc85_U0_ap_continue;
wire    p_prop_ret_products_OC_4_dc_proc85_U0_ap_idle;
wire    p_prop_ret_products_OC_4_dc_proc85_U0_ap_ready;
wire   [31:0] p_prop_ret_products_OC_4_dc_proc85_U0_products_4_out_din;
wire    p_prop_ret_products_OC_4_dc_proc85_U0_products_4_out_write;
wire    p_prop_ret_products_OC_5_dc_proc86_U0_ap_start;
wire    p_prop_ret_products_OC_5_dc_proc86_U0_ap_done;
wire    p_prop_ret_products_OC_5_dc_proc86_U0_ap_continue;
wire    p_prop_ret_products_OC_5_dc_proc86_U0_ap_idle;
wire    p_prop_ret_products_OC_5_dc_proc86_U0_ap_ready;
wire   [31:0] p_prop_ret_products_OC_5_dc_proc86_U0_products_5_out_din;
wire    p_prop_ret_products_OC_5_dc_proc86_U0_products_5_out_write;
wire    scalar_val_5_c_full_n;
wire   [31:0] scalar_val_5_c_dout;
wire    scalar_val_5_c_empty_n;
wire    scalar_val_4_c_full_n;
wire   [31:0] scalar_val_4_c_dout;
wire    scalar_val_4_c_empty_n;
wire    scalar_val_3_c_full_n;
wire   [31:0] scalar_val_3_c_dout;
wire    scalar_val_3_c_empty_n;
wire    scalar_val_2_c_full_n;
wire   [31:0] scalar_val_2_c_dout;
wire    scalar_val_2_c_empty_n;
wire    scalar_val_1_c_full_n;
wire   [31:0] scalar_val_1_c_dout;
wire    scalar_val_1_c_empty_n;
wire    scalar_val_0_c_full_n;
wire   [31:0] scalar_val_0_c_dout;
wire    scalar_val_0_c_empty_n;
wire   [31:0] products_0_dc_channel_dout;
wire    products_0_dc_channel_empty_n;
wire   [31:0] products_1_dc_channel_dout;
wire    products_1_dc_channel_empty_n;
wire   [31:0] products_2_dc_channel_dout;
wire    products_2_dc_channel_empty_n;
wire   [31:0] products_3_dc_channel_dout;
wire    products_3_dc_channel_empty_n;
wire   [31:0] products_4_dc_channel_dout;
wire    products_4_dc_channel_empty_n;
wire   [31:0] products_5_dc_channel_dout;
wire    products_5_dc_channel_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_multiply_line13_Block_split1_proc164_U0_din;
wire    start_for_multiply_line13_Block_split1_proc164_U0_full_n;
wire   [0:0] start_for_multiply_line13_Block_split1_proc164_U0_dout;
wire    start_for_multiply_line13_Block_split1_proc164_U0_empty_n;
wire    multiply_line13_Block_split1_proc164_U0_start_full_n;
wire    multiply_line13_Block_split1_proc164_U0_start_write;
wire    p_prop_ret_products_OC_0_dc_proc81_U0_start_full_n;
wire    p_prop_ret_products_OC_0_dc_proc81_U0_start_write;
wire    p_prop_ret_products_OC_1_dc_proc82_U0_start_full_n;
wire    p_prop_ret_products_OC_1_dc_proc82_U0_start_write;
wire    p_prop_ret_products_OC_2_dc_proc83_U0_start_full_n;
wire    p_prop_ret_products_OC_2_dc_proc83_U0_start_write;
wire    p_prop_ret_products_OC_3_dc_proc84_U0_start_full_n;
wire    p_prop_ret_products_OC_3_dc_proc84_U0_start_write;
wire    p_prop_ret_products_OC_4_dc_proc85_U0_start_full_n;
wire    p_prop_ret_products_OC_4_dc_proc85_U0_start_write;
wire    p_prop_ret_products_OC_5_dc_proc86_U0_start_full_n;
wire    p_prop_ret_products_OC_5_dc_proc86_U0_start_write;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_sync_reg_channel_write_products_5_dc_channel = 1'b0;
#0 ap_sync_reg_channel_write_products_4_dc_channel = 1'b0;
#0 ap_sync_reg_channel_write_products_3_dc_channel = 1'b0;
#0 ap_sync_reg_channel_write_products_2_dc_channel = 1'b0;
#0 ap_sync_reg_channel_write_products_1_dc_channel = 1'b0;
#0 ap_sync_reg_channel_write_products_0_dc_channel = 1'b0;
end

uz_VSD_6ph_asym_multiply_line13_entry165 multiply_line13_entry165_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(multiply_line13_entry165_U0_ap_start),
    .start_full_n(start_for_multiply_line13_Block_split1_proc164_U0_full_n),
    .ap_done(multiply_line13_entry165_U0_ap_done),
    .ap_continue(multiply_line13_entry165_U0_ap_continue),
    .ap_idle(multiply_line13_entry165_U0_ap_idle),
    .ap_ready(multiply_line13_entry165_U0_ap_ready),
    .start_out(multiply_line13_entry165_U0_start_out),
    .start_write(multiply_line13_entry165_U0_start_write),
    .scalar_val_5_dout(val_5_dout),
    .scalar_val_5_empty_n(val_5_empty_n),
    .scalar_val_5_read(multiply_line13_entry165_U0_scalar_val_5_read),
    .scalar_val_4_dout(val_4_dout),
    .scalar_val_4_empty_n(val_4_empty_n),
    .scalar_val_4_read(multiply_line13_entry165_U0_scalar_val_4_read),
    .scalar_val_3_dout(val_3_dout),
    .scalar_val_3_empty_n(val_3_empty_n),
    .scalar_val_3_read(multiply_line13_entry165_U0_scalar_val_3_read),
    .scalar_val_2_dout(val_2_dout),
    .scalar_val_2_empty_n(val_2_empty_n),
    .scalar_val_2_read(multiply_line13_entry165_U0_scalar_val_2_read),
    .scalar_val_1_dout(val_1_dout),
    .scalar_val_1_empty_n(val_1_empty_n),
    .scalar_val_1_read(multiply_line13_entry165_U0_scalar_val_1_read),
    .scalar_val_0_dout(val_0_dout),
    .scalar_val_0_empty_n(val_0_empty_n),
    .scalar_val_0_read(multiply_line13_entry165_U0_scalar_val_0_read),
    .scalar_val_5_out_din(multiply_line13_entry165_U0_scalar_val_5_out_din),
    .scalar_val_5_out_full_n(scalar_val_5_c_full_n),
    .scalar_val_5_out_write(multiply_line13_entry165_U0_scalar_val_5_out_write),
    .scalar_val_4_out_din(multiply_line13_entry165_U0_scalar_val_4_out_din),
    .scalar_val_4_out_full_n(scalar_val_4_c_full_n),
    .scalar_val_4_out_write(multiply_line13_entry165_U0_scalar_val_4_out_write),
    .scalar_val_3_out_din(multiply_line13_entry165_U0_scalar_val_3_out_din),
    .scalar_val_3_out_full_n(scalar_val_3_c_full_n),
    .scalar_val_3_out_write(multiply_line13_entry165_U0_scalar_val_3_out_write),
    .scalar_val_2_out_din(multiply_line13_entry165_U0_scalar_val_2_out_din),
    .scalar_val_2_out_full_n(scalar_val_2_c_full_n),
    .scalar_val_2_out_write(multiply_line13_entry165_U0_scalar_val_2_out_write),
    .scalar_val_1_out_din(multiply_line13_entry165_U0_scalar_val_1_out_din),
    .scalar_val_1_out_full_n(scalar_val_1_c_full_n),
    .scalar_val_1_out_write(multiply_line13_entry165_U0_scalar_val_1_out_write),
    .scalar_val_0_out_din(multiply_line13_entry165_U0_scalar_val_0_out_din),
    .scalar_val_0_out_full_n(scalar_val_0_c_full_n),
    .scalar_val_0_out_write(multiply_line13_entry165_U0_scalar_val_0_out_write)
);

uz_VSD_6ph_asym_multiply_line13_Block_split1_proc164 multiply_line13_Block_split1_proc164_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(multiply_line13_Block_split1_proc164_U0_ap_start),
    .ap_done(multiply_line13_Block_split1_proc164_U0_ap_done),
    .ap_continue(multiply_line13_Block_split1_proc164_U0_ap_continue),
    .ap_idle(multiply_line13_Block_split1_proc164_U0_ap_idle),
    .ap_ready(multiply_line13_Block_split1_proc164_U0_ap_ready),
    .scalar_val_0_dout(scalar_val_0_c_dout),
    .scalar_val_0_empty_n(scalar_val_0_c_empty_n),
    .scalar_val_0_read(multiply_line13_Block_split1_proc164_U0_scalar_val_0_read),
    .val_0_out_din(multiply_line13_Block_split1_proc164_U0_val_0_out_din),
    .val_0_out_full_n(val_0_out_full_n),
    .val_0_out_write(multiply_line13_Block_split1_proc164_U0_val_0_out_write),
    .scalar_val_1_dout(scalar_val_1_c_dout),
    .scalar_val_1_empty_n(scalar_val_1_c_empty_n),
    .scalar_val_1_read(multiply_line13_Block_split1_proc164_U0_scalar_val_1_read),
    .val_1_out_din(multiply_line13_Block_split1_proc164_U0_val_1_out_din),
    .val_1_out_full_n(val_1_out_full_n),
    .val_1_out_write(multiply_line13_Block_split1_proc164_U0_val_1_out_write),
    .scalar_val_2_dout(scalar_val_2_c_dout),
    .scalar_val_2_empty_n(scalar_val_2_c_empty_n),
    .scalar_val_2_read(multiply_line13_Block_split1_proc164_U0_scalar_val_2_read),
    .val_2_out_din(multiply_line13_Block_split1_proc164_U0_val_2_out_din),
    .val_2_out_full_n(val_2_out_full_n),
    .val_2_out_write(multiply_line13_Block_split1_proc164_U0_val_2_out_write),
    .scalar_val_3_dout(scalar_val_3_c_dout),
    .scalar_val_3_empty_n(scalar_val_3_c_empty_n),
    .scalar_val_3_read(multiply_line13_Block_split1_proc164_U0_scalar_val_3_read),
    .val_3_out_din(multiply_line13_Block_split1_proc164_U0_val_3_out_din),
    .val_3_out_full_n(val_3_out_full_n),
    .val_3_out_write(multiply_line13_Block_split1_proc164_U0_val_3_out_write),
    .scalar_val_4_dout(scalar_val_4_c_dout),
    .scalar_val_4_empty_n(scalar_val_4_c_empty_n),
    .scalar_val_4_read(multiply_line13_Block_split1_proc164_U0_scalar_val_4_read),
    .val_4_out_din(multiply_line13_Block_split1_proc164_U0_val_4_out_din),
    .val_4_out_full_n(val_4_out_full_n),
    .val_4_out_write(multiply_line13_Block_split1_proc164_U0_val_4_out_write),
    .scalar_val_5_dout(scalar_val_5_c_dout),
    .scalar_val_5_empty_n(scalar_val_5_c_empty_n),
    .scalar_val_5_read(multiply_line13_Block_split1_proc164_U0_scalar_val_5_read),
    .val_5_out_din(multiply_line13_Block_split1_proc164_U0_val_5_out_din),
    .val_5_out_full_n(val_5_out_full_n),
    .val_5_out_write(multiply_line13_Block_split1_proc164_U0_val_5_out_write),
    .ap_return_0(multiply_line13_Block_split1_proc164_U0_ap_return_0),
    .ap_return_1(multiply_line13_Block_split1_proc164_U0_ap_return_1),
    .ap_return_2(multiply_line13_Block_split1_proc164_U0_ap_return_2),
    .ap_return_3(multiply_line13_Block_split1_proc164_U0_ap_return_3),
    .ap_return_4(multiply_line13_Block_split1_proc164_U0_ap_return_4),
    .ap_return_5(multiply_line13_Block_split1_proc164_U0_ap_return_5)
);

uz_VSD_6ph_asym_p_prop_ret_products_OC_0_dc_proc81 p_prop_ret_products_OC_0_dc_proc81_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(p_prop_ret_products_OC_0_dc_proc81_U0_ap_start),
    .ap_done(p_prop_ret_products_OC_0_dc_proc81_U0_ap_done),
    .ap_continue(p_prop_ret_products_OC_0_dc_proc81_U0_ap_continue),
    .ap_idle(p_prop_ret_products_OC_0_dc_proc81_U0_ap_idle),
    .ap_ready(p_prop_ret_products_OC_0_dc_proc81_U0_ap_ready),
    .p_read(products_0_dc_channel_dout),
    .products_0_out_din(p_prop_ret_products_OC_0_dc_proc81_U0_products_0_out_din),
    .products_0_out_full_n(products_0_out_full_n),
    .products_0_out_write(p_prop_ret_products_OC_0_dc_proc81_U0_products_0_out_write)
);

uz_VSD_6ph_asym_p_prop_ret_products_OC_1_dc_proc82 p_prop_ret_products_OC_1_dc_proc82_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(p_prop_ret_products_OC_1_dc_proc82_U0_ap_start),
    .ap_done(p_prop_ret_products_OC_1_dc_proc82_U0_ap_done),
    .ap_continue(p_prop_ret_products_OC_1_dc_proc82_U0_ap_continue),
    .ap_idle(p_prop_ret_products_OC_1_dc_proc82_U0_ap_idle),
    .ap_ready(p_prop_ret_products_OC_1_dc_proc82_U0_ap_ready),
    .p_read(products_1_dc_channel_dout),
    .products_1_out_din(p_prop_ret_products_OC_1_dc_proc82_U0_products_1_out_din),
    .products_1_out_full_n(products_1_out_full_n),
    .products_1_out_write(p_prop_ret_products_OC_1_dc_proc82_U0_products_1_out_write)
);

uz_VSD_6ph_asym_p_prop_ret_products_OC_2_dc_proc83 p_prop_ret_products_OC_2_dc_proc83_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(p_prop_ret_products_OC_2_dc_proc83_U0_ap_start),
    .ap_done(p_prop_ret_products_OC_2_dc_proc83_U0_ap_done),
    .ap_continue(p_prop_ret_products_OC_2_dc_proc83_U0_ap_continue),
    .ap_idle(p_prop_ret_products_OC_2_dc_proc83_U0_ap_idle),
    .ap_ready(p_prop_ret_products_OC_2_dc_proc83_U0_ap_ready),
    .p_read(products_2_dc_channel_dout),
    .products_2_out_din(p_prop_ret_products_OC_2_dc_proc83_U0_products_2_out_din),
    .products_2_out_full_n(products_2_out_full_n),
    .products_2_out_write(p_prop_ret_products_OC_2_dc_proc83_U0_products_2_out_write)
);

uz_VSD_6ph_asym_p_prop_ret_products_OC_3_dc_proc84 p_prop_ret_products_OC_3_dc_proc84_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(p_prop_ret_products_OC_3_dc_proc84_U0_ap_start),
    .ap_done(p_prop_ret_products_OC_3_dc_proc84_U0_ap_done),
    .ap_continue(p_prop_ret_products_OC_3_dc_proc84_U0_ap_continue),
    .ap_idle(p_prop_ret_products_OC_3_dc_proc84_U0_ap_idle),
    .ap_ready(p_prop_ret_products_OC_3_dc_proc84_U0_ap_ready),
    .p_read(products_3_dc_channel_dout),
    .products_3_out_din(p_prop_ret_products_OC_3_dc_proc84_U0_products_3_out_din),
    .products_3_out_full_n(products_3_out_full_n),
    .products_3_out_write(p_prop_ret_products_OC_3_dc_proc84_U0_products_3_out_write)
);

uz_VSD_6ph_asym_p_prop_ret_products_OC_4_dc_proc85 p_prop_ret_products_OC_4_dc_proc85_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(p_prop_ret_products_OC_4_dc_proc85_U0_ap_start),
    .ap_done(p_prop_ret_products_OC_4_dc_proc85_U0_ap_done),
    .ap_continue(p_prop_ret_products_OC_4_dc_proc85_U0_ap_continue),
    .ap_idle(p_prop_ret_products_OC_4_dc_proc85_U0_ap_idle),
    .ap_ready(p_prop_ret_products_OC_4_dc_proc85_U0_ap_ready),
    .p_read(products_4_dc_channel_dout),
    .products_4_out_din(p_prop_ret_products_OC_4_dc_proc85_U0_products_4_out_din),
    .products_4_out_full_n(products_4_out_full_n),
    .products_4_out_write(p_prop_ret_products_OC_4_dc_proc85_U0_products_4_out_write)
);

uz_VSD_6ph_asym_p_prop_ret_products_OC_5_dc_proc86 p_prop_ret_products_OC_5_dc_proc86_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(p_prop_ret_products_OC_5_dc_proc86_U0_ap_start),
    .ap_done(p_prop_ret_products_OC_5_dc_proc86_U0_ap_done),
    .ap_continue(p_prop_ret_products_OC_5_dc_proc86_U0_ap_continue),
    .ap_idle(p_prop_ret_products_OC_5_dc_proc86_U0_ap_idle),
    .ap_ready(p_prop_ret_products_OC_5_dc_proc86_U0_ap_ready),
    .p_read(products_5_dc_channel_dout),
    .products_5_out_din(p_prop_ret_products_OC_5_dc_proc86_U0_products_5_out_din),
    .products_5_out_full_n(products_5_out_full_n),
    .products_5_out_write(p_prop_ret_products_OC_5_dc_proc86_U0_products_5_out_write)
);

uz_VSD_6ph_asym_fifo_w32_d2_S_x0 scalar_val_5_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(multiply_line13_entry165_U0_scalar_val_5_out_din),
    .if_full_n(scalar_val_5_c_full_n),
    .if_write(multiply_line13_entry165_U0_scalar_val_5_out_write),
    .if_dout(scalar_val_5_c_dout),
    .if_empty_n(scalar_val_5_c_empty_n),
    .if_read(multiply_line13_Block_split1_proc164_U0_scalar_val_5_read)
);

uz_VSD_6ph_asym_fifo_w32_d2_S_x0 scalar_val_4_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(multiply_line13_entry165_U0_scalar_val_4_out_din),
    .if_full_n(scalar_val_4_c_full_n),
    .if_write(multiply_line13_entry165_U0_scalar_val_4_out_write),
    .if_dout(scalar_val_4_c_dout),
    .if_empty_n(scalar_val_4_c_empty_n),
    .if_read(multiply_line13_Block_split1_proc164_U0_scalar_val_4_read)
);

uz_VSD_6ph_asym_fifo_w32_d2_S_x0 scalar_val_3_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(multiply_line13_entry165_U0_scalar_val_3_out_din),
    .if_full_n(scalar_val_3_c_full_n),
    .if_write(multiply_line13_entry165_U0_scalar_val_3_out_write),
    .if_dout(scalar_val_3_c_dout),
    .if_empty_n(scalar_val_3_c_empty_n),
    .if_read(multiply_line13_Block_split1_proc164_U0_scalar_val_3_read)
);

uz_VSD_6ph_asym_fifo_w32_d2_S_x0 scalar_val_2_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(multiply_line13_entry165_U0_scalar_val_2_out_din),
    .if_full_n(scalar_val_2_c_full_n),
    .if_write(multiply_line13_entry165_U0_scalar_val_2_out_write),
    .if_dout(scalar_val_2_c_dout),
    .if_empty_n(scalar_val_2_c_empty_n),
    .if_read(multiply_line13_Block_split1_proc164_U0_scalar_val_2_read)
);

uz_VSD_6ph_asym_fifo_w32_d2_S_x0 scalar_val_1_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(multiply_line13_entry165_U0_scalar_val_1_out_din),
    .if_full_n(scalar_val_1_c_full_n),
    .if_write(multiply_line13_entry165_U0_scalar_val_1_out_write),
    .if_dout(scalar_val_1_c_dout),
    .if_empty_n(scalar_val_1_c_empty_n),
    .if_read(multiply_line13_Block_split1_proc164_U0_scalar_val_1_read)
);

uz_VSD_6ph_asym_fifo_w32_d2_S_x0 scalar_val_0_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(multiply_line13_entry165_U0_scalar_val_0_out_din),
    .if_full_n(scalar_val_0_c_full_n),
    .if_write(multiply_line13_entry165_U0_scalar_val_0_out_write),
    .if_dout(scalar_val_0_c_dout),
    .if_empty_n(scalar_val_0_c_empty_n),
    .if_read(multiply_line13_Block_split1_proc164_U0_scalar_val_0_read)
);

uz_VSD_6ph_asym_fifo_w32_d2_S_x0 products_0_dc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(multiply_line13_Block_split1_proc164_U0_ap_return_0),
    .if_full_n(products_0_dc_channel_full_n),
    .if_write(ap_channel_done_products_0_dc_channel),
    .if_dout(products_0_dc_channel_dout),
    .if_empty_n(products_0_dc_channel_empty_n),
    .if_read(p_prop_ret_products_OC_0_dc_proc81_U0_ap_ready)
);

uz_VSD_6ph_asym_fifo_w32_d2_S_x0 products_1_dc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(multiply_line13_Block_split1_proc164_U0_ap_return_1),
    .if_full_n(products_1_dc_channel_full_n),
    .if_write(ap_channel_done_products_1_dc_channel),
    .if_dout(products_1_dc_channel_dout),
    .if_empty_n(products_1_dc_channel_empty_n),
    .if_read(p_prop_ret_products_OC_1_dc_proc82_U0_ap_ready)
);

uz_VSD_6ph_asym_fifo_w32_d2_S_x0 products_2_dc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(multiply_line13_Block_split1_proc164_U0_ap_return_2),
    .if_full_n(products_2_dc_channel_full_n),
    .if_write(ap_channel_done_products_2_dc_channel),
    .if_dout(products_2_dc_channel_dout),
    .if_empty_n(products_2_dc_channel_empty_n),
    .if_read(p_prop_ret_products_OC_2_dc_proc83_U0_ap_ready)
);

uz_VSD_6ph_asym_fifo_w32_d2_S_x0 products_3_dc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(multiply_line13_Block_split1_proc164_U0_ap_return_3),
    .if_full_n(products_3_dc_channel_full_n),
    .if_write(ap_channel_done_products_3_dc_channel),
    .if_dout(products_3_dc_channel_dout),
    .if_empty_n(products_3_dc_channel_empty_n),
    .if_read(p_prop_ret_products_OC_3_dc_proc84_U0_ap_ready)
);

uz_VSD_6ph_asym_fifo_w32_d2_S_x0 products_4_dc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(multiply_line13_Block_split1_proc164_U0_ap_return_4),
    .if_full_n(products_4_dc_channel_full_n),
    .if_write(ap_channel_done_products_4_dc_channel),
    .if_dout(products_4_dc_channel_dout),
    .if_empty_n(products_4_dc_channel_empty_n),
    .if_read(p_prop_ret_products_OC_4_dc_proc85_U0_ap_ready)
);

uz_VSD_6ph_asym_fifo_w32_d2_S_x0 products_5_dc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(multiply_line13_Block_split1_proc164_U0_ap_return_5),
    .if_full_n(products_5_dc_channel_full_n),
    .if_write(ap_channel_done_products_5_dc_channel),
    .if_dout(products_5_dc_channel_dout),
    .if_empty_n(products_5_dc_channel_empty_n),
    .if_read(p_prop_ret_products_OC_5_dc_proc86_U0_ap_ready)
);

uz_VSD_6ph_asym_start_for_multiply_line13_Block_split1_proc164_U0 start_for_multiply_line13_Block_split1_proc164_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_multiply_line13_Block_split1_proc164_U0_din),
    .if_full_n(start_for_multiply_line13_Block_split1_proc164_U0_full_n),
    .if_write(multiply_line13_entry165_U0_start_write),
    .if_dout(start_for_multiply_line13_Block_split1_proc164_U0_dout),
    .if_empty_n(start_for_multiply_line13_Block_split1_proc164_U0_empty_n),
    .if_read(multiply_line13_Block_split1_proc164_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_products_0_dc_channel <= 1'b0;
    end else begin
        if (((multiply_line13_Block_split1_proc164_U0_ap_done & multiply_line13_Block_split1_proc164_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_products_0_dc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_products_0_dc_channel <= ap_sync_channel_write_products_0_dc_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_products_1_dc_channel <= 1'b0;
    end else begin
        if (((multiply_line13_Block_split1_proc164_U0_ap_done & multiply_line13_Block_split1_proc164_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_products_1_dc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_products_1_dc_channel <= ap_sync_channel_write_products_1_dc_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_products_2_dc_channel <= 1'b0;
    end else begin
        if (((multiply_line13_Block_split1_proc164_U0_ap_done & multiply_line13_Block_split1_proc164_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_products_2_dc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_products_2_dc_channel <= ap_sync_channel_write_products_2_dc_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_products_3_dc_channel <= 1'b0;
    end else begin
        if (((multiply_line13_Block_split1_proc164_U0_ap_done & multiply_line13_Block_split1_proc164_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_products_3_dc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_products_3_dc_channel <= ap_sync_channel_write_products_3_dc_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_products_4_dc_channel <= 1'b0;
    end else begin
        if (((multiply_line13_Block_split1_proc164_U0_ap_done & multiply_line13_Block_split1_proc164_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_products_4_dc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_products_4_dc_channel <= ap_sync_channel_write_products_4_dc_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_products_5_dc_channel <= 1'b0;
    end else begin
        if (((multiply_line13_Block_split1_proc164_U0_ap_done & multiply_line13_Block_split1_proc164_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_products_5_dc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_products_5_dc_channel <= ap_sync_channel_write_products_5_dc_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

assign ap_channel_done_products_0_dc_channel = (multiply_line13_Block_split1_proc164_U0_ap_done & (ap_sync_reg_channel_write_products_0_dc_channel ^ 1'b1));

assign ap_channel_done_products_1_dc_channel = (multiply_line13_Block_split1_proc164_U0_ap_done & (ap_sync_reg_channel_write_products_1_dc_channel ^ 1'b1));

assign ap_channel_done_products_2_dc_channel = (multiply_line13_Block_split1_proc164_U0_ap_done & (ap_sync_reg_channel_write_products_2_dc_channel ^ 1'b1));

assign ap_channel_done_products_3_dc_channel = (multiply_line13_Block_split1_proc164_U0_ap_done & (ap_sync_reg_channel_write_products_3_dc_channel ^ 1'b1));

assign ap_channel_done_products_4_dc_channel = (multiply_line13_Block_split1_proc164_U0_ap_done & (ap_sync_reg_channel_write_products_4_dc_channel ^ 1'b1));

assign ap_channel_done_products_5_dc_channel = (multiply_line13_Block_split1_proc164_U0_ap_done & (ap_sync_reg_channel_write_products_5_dc_channel ^ 1'b1));

assign ap_done = ap_sync_done;

assign ap_idle = (p_prop_ret_products_OC_5_dc_proc86_U0_ap_idle & p_prop_ret_products_OC_4_dc_proc85_U0_ap_idle & p_prop_ret_products_OC_3_dc_proc84_U0_ap_idle & p_prop_ret_products_OC_2_dc_proc83_U0_ap_idle & p_prop_ret_products_OC_1_dc_proc82_U0_ap_idle & p_prop_ret_products_OC_0_dc_proc81_U0_ap_idle & multiply_line13_entry165_U0_ap_idle & multiply_line13_Block_split1_proc164_U0_ap_idle & (products_5_dc_channel_empty_n ^ 1'b1) & (products_4_dc_channel_empty_n ^ 1'b1) & (products_3_dc_channel_empty_n ^ 1'b1) & (products_2_dc_channel_empty_n ^ 1'b1) & (products_1_dc_channel_empty_n ^ 1'b1) & (products_0_dc_channel_empty_n ^ 1'b1));

assign ap_ready = internal_ap_ready;

assign ap_sync_channel_write_products_0_dc_channel = ((products_0_dc_channel_full_n & ap_channel_done_products_0_dc_channel) | ap_sync_reg_channel_write_products_0_dc_channel);

assign ap_sync_channel_write_products_1_dc_channel = ((products_1_dc_channel_full_n & ap_channel_done_products_1_dc_channel) | ap_sync_reg_channel_write_products_1_dc_channel);

assign ap_sync_channel_write_products_2_dc_channel = ((products_2_dc_channel_full_n & ap_channel_done_products_2_dc_channel) | ap_sync_reg_channel_write_products_2_dc_channel);

assign ap_sync_channel_write_products_3_dc_channel = ((products_3_dc_channel_full_n & ap_channel_done_products_3_dc_channel) | ap_sync_reg_channel_write_products_3_dc_channel);

assign ap_sync_channel_write_products_4_dc_channel = ((products_4_dc_channel_full_n & ap_channel_done_products_4_dc_channel) | ap_sync_reg_channel_write_products_4_dc_channel);

assign ap_sync_channel_write_products_5_dc_channel = ((products_5_dc_channel_full_n & ap_channel_done_products_5_dc_channel) | ap_sync_reg_channel_write_products_5_dc_channel);

assign ap_sync_continue = (ap_sync_done & ap_continue);

assign ap_sync_done = (p_prop_ret_products_OC_5_dc_proc86_U0_ap_done & p_prop_ret_products_OC_4_dc_proc85_U0_ap_done & p_prop_ret_products_OC_3_dc_proc84_U0_ap_done & p_prop_ret_products_OC_2_dc_proc83_U0_ap_done & p_prop_ret_products_OC_1_dc_proc82_U0_ap_done & p_prop_ret_products_OC_0_dc_proc81_U0_ap_done);

assign ap_sync_ready = multiply_line13_entry165_U0_ap_ready;

assign internal_ap_ready = ap_sync_ready;

assign multiply_line13_Block_split1_proc164_U0_ap_continue = (ap_sync_channel_write_products_5_dc_channel & ap_sync_channel_write_products_4_dc_channel & ap_sync_channel_write_products_3_dc_channel & ap_sync_channel_write_products_2_dc_channel & ap_sync_channel_write_products_1_dc_channel & ap_sync_channel_write_products_0_dc_channel);

assign multiply_line13_Block_split1_proc164_U0_ap_start = start_for_multiply_line13_Block_split1_proc164_U0_empty_n;

assign multiply_line13_Block_split1_proc164_U0_start_full_n = 1'b1;

assign multiply_line13_Block_split1_proc164_U0_start_write = 1'b0;

assign multiply_line13_entry165_U0_ap_continue = 1'b1;

assign multiply_line13_entry165_U0_ap_start = real_start;

assign p_prop_ret_products_OC_0_dc_proc81_U0_ap_continue = ap_sync_continue;

assign p_prop_ret_products_OC_0_dc_proc81_U0_ap_start = products_0_dc_channel_empty_n;

assign p_prop_ret_products_OC_0_dc_proc81_U0_start_full_n = 1'b1;

assign p_prop_ret_products_OC_0_dc_proc81_U0_start_write = 1'b0;

assign p_prop_ret_products_OC_1_dc_proc82_U0_ap_continue = ap_sync_continue;

assign p_prop_ret_products_OC_1_dc_proc82_U0_ap_start = products_1_dc_channel_empty_n;

assign p_prop_ret_products_OC_1_dc_proc82_U0_start_full_n = 1'b1;

assign p_prop_ret_products_OC_1_dc_proc82_U0_start_write = 1'b0;

assign p_prop_ret_products_OC_2_dc_proc83_U0_ap_continue = ap_sync_continue;

assign p_prop_ret_products_OC_2_dc_proc83_U0_ap_start = products_2_dc_channel_empty_n;

assign p_prop_ret_products_OC_2_dc_proc83_U0_start_full_n = 1'b1;

assign p_prop_ret_products_OC_2_dc_proc83_U0_start_write = 1'b0;

assign p_prop_ret_products_OC_3_dc_proc84_U0_ap_continue = ap_sync_continue;

assign p_prop_ret_products_OC_3_dc_proc84_U0_ap_start = products_3_dc_channel_empty_n;

assign p_prop_ret_products_OC_3_dc_proc84_U0_start_full_n = 1'b1;

assign p_prop_ret_products_OC_3_dc_proc84_U0_start_write = 1'b0;

assign p_prop_ret_products_OC_4_dc_proc85_U0_ap_continue = ap_sync_continue;

assign p_prop_ret_products_OC_4_dc_proc85_U0_ap_start = products_4_dc_channel_empty_n;

assign p_prop_ret_products_OC_4_dc_proc85_U0_start_full_n = 1'b1;

assign p_prop_ret_products_OC_4_dc_proc85_U0_start_write = 1'b0;

assign p_prop_ret_products_OC_5_dc_proc86_U0_ap_continue = ap_sync_continue;

assign p_prop_ret_products_OC_5_dc_proc86_U0_ap_start = products_5_dc_channel_empty_n;

assign p_prop_ret_products_OC_5_dc_proc86_U0_start_full_n = 1'b1;

assign p_prop_ret_products_OC_5_dc_proc86_U0_start_write = 1'b0;

assign products_0_out_din = p_prop_ret_products_OC_0_dc_proc81_U0_products_0_out_din;

assign products_0_out_write = p_prop_ret_products_OC_0_dc_proc81_U0_products_0_out_write;

assign products_1_out_din = p_prop_ret_products_OC_1_dc_proc82_U0_products_1_out_din;

assign products_1_out_write = p_prop_ret_products_OC_1_dc_proc82_U0_products_1_out_write;

assign products_2_out_din = p_prop_ret_products_OC_2_dc_proc83_U0_products_2_out_din;

assign products_2_out_write = p_prop_ret_products_OC_2_dc_proc83_U0_products_2_out_write;

assign products_3_out_din = p_prop_ret_products_OC_3_dc_proc84_U0_products_3_out_din;

assign products_3_out_write = p_prop_ret_products_OC_3_dc_proc84_U0_products_3_out_write;

assign products_4_out_din = p_prop_ret_products_OC_4_dc_proc85_U0_products_4_out_din;

assign products_4_out_write = p_prop_ret_products_OC_4_dc_proc85_U0_products_4_out_write;

assign products_5_out_din = p_prop_ret_products_OC_5_dc_proc86_U0_products_5_out_din;

assign products_5_out_write = p_prop_ret_products_OC_5_dc_proc86_U0_products_5_out_write;

assign start_for_multiply_line13_Block_split1_proc164_U0_din = 1'b1;

assign start_out = real_start;

assign val_0_out_din = multiply_line13_Block_split1_proc164_U0_val_0_out_din;

assign val_0_out_write = multiply_line13_Block_split1_proc164_U0_val_0_out_write;

assign val_0_read = multiply_line13_entry165_U0_scalar_val_0_read;

assign val_1_out_din = multiply_line13_Block_split1_proc164_U0_val_1_out_din;

assign val_1_out_write = multiply_line13_Block_split1_proc164_U0_val_1_out_write;

assign val_1_read = multiply_line13_entry165_U0_scalar_val_1_read;

assign val_2_out_din = multiply_line13_Block_split1_proc164_U0_val_2_out_din;

assign val_2_out_write = multiply_line13_Block_split1_proc164_U0_val_2_out_write;

assign val_2_read = multiply_line13_entry165_U0_scalar_val_2_read;

assign val_3_out_din = multiply_line13_Block_split1_proc164_U0_val_3_out_din;

assign val_3_out_write = multiply_line13_Block_split1_proc164_U0_val_3_out_write;

assign val_3_read = multiply_line13_entry165_U0_scalar_val_3_read;

assign val_4_out_din = multiply_line13_Block_split1_proc164_U0_val_4_out_din;

assign val_4_out_write = multiply_line13_Block_split1_proc164_U0_val_4_out_write;

assign val_4_read = multiply_line13_entry165_U0_scalar_val_4_read;

assign val_5_out_din = multiply_line13_Block_split1_proc164_U0_val_5_out_din;

assign val_5_out_write = multiply_line13_Block_split1_proc164_U0_val_5_out_write;

assign val_5_read = multiply_line13_entry165_U0_scalar_val_5_read;

endmodule //uz_VSD_6ph_asym_multiply_line13
