-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\uz_pwmdutyfreqdetection\uz_pwmdutyfreqdetection_dut.vhd
-- Created: 2022-05-25 10:12:27
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_pwmdutyfreqdetection_dut
-- Source Path: uz_pwmdutyfreqdetection/uz_pwmdutyfreqdetection_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY uz_pwmdutyfreqdetection_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        PWMin                             :   IN    std_logic;  -- ufix1
        ce_out                            :   OUT   std_logic;  -- ufix1
        AXI_period                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI_hightime                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI_lowtime                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI_dutycyc                       :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32_En31
        );
END uz_pwmdutyfreqdetection_dut;


ARCHITECTURE rtl OF uz_pwmdutyfreqdetection_dut IS

  -- Component Declarations
  COMPONENT uz_pwmdutyfreqdetection_src_uz_pwmdutyfreqdetection
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          PWMin                           :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          AXI_period                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI_hightime                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI_lowtime                     :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI_dutycyc                     :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32_En31
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : uz_pwmdutyfreqdetection_src_uz_pwmdutyfreqdetection
    USE ENTITY work.uz_pwmdutyfreqdetection_src_uz_pwmdutyfreqdetection(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL PWMin_sig                        : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL AXI_period_sig                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_hightime_sig                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_lowtime_sig                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_dutycyc_sig                  : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  u_uz_pwmdutyfreqdetection_src_uz_pwmdutyfreqdetection : uz_pwmdutyfreqdetection_src_uz_pwmdutyfreqdetection
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              PWMin => PWMin_sig,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              AXI_period => AXI_period_sig,  -- ufix32
              AXI_hightime => AXI_hightime_sig,  -- ufix32
              AXI_lowtime => AXI_lowtime_sig,  -- ufix32
              AXI_dutycyc => AXI_dutycyc_sig  -- ufix32_En31
              );

  PWMin_sig <= PWMin;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  AXI_period <= AXI_period_sig;

  AXI_hightime <= AXI_hightime_sig;

  AXI_lowtime <= AXI_lowtime_sig;

  AXI_dutycyc <= AXI_dutycyc_sig;

END rtl;

