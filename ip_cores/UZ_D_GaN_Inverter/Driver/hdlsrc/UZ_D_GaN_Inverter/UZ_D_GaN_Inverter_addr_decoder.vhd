-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\UZ_D_GaN_Inverter\UZ_D_GaN_Inverter_addr_decoder.vhd
-- Created: 2021-05-01 00:24:29
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: UZ_D_GaN_Inverter_addr_decoder
-- Source Path: UZ_D_GaN_Inverter/UZ_D_GaN_Inverter_axi_lite/UZ_D_GaN_Inverter_addr_decoder
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY UZ_D_GaN_Inverter_addr_decoder IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        data_write                        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        addr_sel                          :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14
        wr_enb                            :   IN    std_logic;  -- ufix1
        rd_enb                            :   IN    std_logic;  -- ufix1
        read_ip_timestamp                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_1_freq          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_1_hightime      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_1_lowtime       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_1_dutycyc       :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        read_AXI_Gan_Temp_2_freq          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_2_hightime      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_2_lowtime       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_2_dutycyc       :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        read_AXI_Gan_Temp_3_freq          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_3_hightime      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_3_lowtime       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_3_dutycyc       :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        read_AXI_Gan_Temp_4_freq          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_4_hightime      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_4_lowtime       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_4_dutycyc       :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        read_AXI_Gan_Temp_5_freq          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_5_hightime      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_5_lowtime       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_5_dutycyc       :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        read_AXI_Gan_Temp_6_freq          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_6_hightime      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_6_lowtime       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_AXI_Gan_Temp_6_dutycyc       :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        read_AXI_GaN_FAULT_H1             :   IN    std_logic;  -- ufix1
        read_AXI_GaN_FAULT_L1             :   IN    std_logic;  -- ufix1
        read_AXI_GaN_FAULT_H2             :   IN    std_logic;  -- ufix1
        read_AXI_GaN_FAULT_L2             :   IN    std_logic;  -- ufix1
        read_AXI_GaN_FAULT_H3             :   IN    std_logic;  -- ufix1
        read_AXI_GaN_FAULT_L3             :   IN    std_logic;  -- ufix1
        read_AXI_GaN_OC_H1                :   IN    std_logic;  -- ufix1
        read_AXI_GaN_OC_L1                :   IN    std_logic;  -- ufix1
        read_AXI_GaN_OC_H2                :   IN    std_logic;  -- ufix1
        read_AXI_GaN_OC_L2                :   IN    std_logic;  -- ufix1
        read_AXI_GaN_OC_H3                :   IN    std_logic;  -- ufix1
        read_AXI_GaN_OC_L3                :   IN    std_logic;  -- ufix1
        read_AXI_I_DIAG                   :   IN    std_logic;  -- ufix1
        read_AXI_I1_DIAG                  :   IN    std_logic;  -- ufix1
        read_AXI_I2_DIAG                  :   IN    std_logic;  -- ufix1
        read_AXI_I3_DIAG                  :   IN    std_logic;  -- ufix1
        data_read                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_axi_enable                  :   OUT   std_logic;  -- ufix1
        write_AXI_PWM_Enable              :   OUT   std_logic  -- ufix1
        );
END UZ_D_GaN_Inverter_addr_decoder;


ARCHITECTURE rtl OF UZ_D_GaN_Inverter_addr_decoder IS

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL addr_sel_unsigned                : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL decode_sel_AXI_I3_DIAG_1_1       : std_logic;  -- ufix1
  SIGNAL const_1                          : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_I2_DIAG_1_1       : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_I1_DIAG_1_1       : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_I_DIAG_1_1        : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_GaN_OC_L3_1_1     : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_GaN_OC_H3_1_1     : std_logic;  -- ufix1
  SIGNAL hSelSignalDelay_AXI_GaN_OC_H3_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_ip_timestamp_1_1      : std_logic;  -- ufix1
  SIGNAL read_ip_timestamp_unsigned       : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_1_freq_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_1_hightime_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_1_lowtime_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_1_dutycyc_signed : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL read_AXI_Gan_Temp_2_freq_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_2_hightime_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_2_lowtime_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_2_dutycyc_signed : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL read_AXI_Gan_Temp_3_freq_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_3_hightime_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_3_lowtime_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_3_dutycyc_signed : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL read_AXI_Gan_Temp_4_freq_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_4_hightime_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_4_lowtime_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_4_dutycyc_signed : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL read_AXI_Gan_Temp_5_freq_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_5_hightime_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_5_lowtime_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_5_dutycyc_signed : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL read_AXI_Gan_Temp_6_freq_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_6_hightime_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_6_lowtime_unsigned : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_AXI_Gan_Temp_6_dutycyc_signed : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL decode_sel_AXI_GaN_OC_L2_1_1     : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_GaN_OC_H2_1_1     : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_GaN_OC_L1_1_1     : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_GaN_OC_H1_1_1     : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_GaN_FAULT_L3_1_1  : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_GaN_FAULT_H3_1_1  : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_GaN_FAULT_L2_1_1  : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_GaN_FAULT_H2_1_1  : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_GaN_FAULT_L1_1_1  : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_GaN_FAULT_H1_1_1  : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_6_dutycyc_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_6_lowtime_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_6_hightime_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_6_freq_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_5_dutycyc_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_5_lowtime_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_5_hightime_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_5_freq_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_4_dutycyc_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_4_lowtime_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_4_hightime_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_4_freq_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_3_dutycyc_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_3_lowtime_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_3_hightime_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_3_freq_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_2_dutycyc_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_2_lowtime_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_2_hightime_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_2_freq_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_1_dutycyc_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_1_lowtime_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_1_hightime_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_Gan_Temp_1_freq_1_1 : std_logic;  -- ufix1
  SIGNAL const_0                          : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_ip_timestamp            : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_ip_timestamp_1_1       : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_1_freq     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_1_freq_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_1_hightime : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_1_hightime_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_1_lowtime  : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_1_lowtime_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_1_dutycyc  : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL data_slice_AXI_Gan_Temp_1_dutycyc_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_1_dutycyc_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_2_freq     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_2_freq_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_2_hightime : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_2_hightime_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_2_lowtime  : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_2_lowtime_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_2_dutycyc  : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL data_slice_AXI_Gan_Temp_2_dutycyc_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_2_dutycyc_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_3_freq     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_3_freq_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_3_hightime : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_3_hightime_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_3_lowtime  : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_3_lowtime_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_3_dutycyc  : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL data_slice_AXI_Gan_Temp_3_dutycyc_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_3_dutycyc_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_4_freq     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_4_freq_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_4_hightime : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_4_hightime_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_4_lowtime  : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_4_lowtime_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_4_dutycyc  : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL data_slice_AXI_Gan_Temp_4_dutycyc_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_4_dutycyc_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_5_freq     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_5_freq_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_5_hightime : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_5_hightime_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_5_lowtime  : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_5_lowtime_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_5_dutycyc  : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL data_slice_AXI_Gan_Temp_5_dutycyc_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_5_dutycyc_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_6_freq     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_6_freq_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_6_hightime : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_6_hightime_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_6_lowtime  : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_6_lowtime_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_Gan_Temp_6_dutycyc  : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL data_slice_AXI_Gan_Temp_6_dutycyc_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_Gan_Temp_6_dutycyc_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_GaN_FAULT_H1        : std_logic;  -- ufix1
  SIGNAL data_slice_AXI_GaN_FAULT_H1_1    : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_GaN_FAULT_H1_1_1   : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_GaN_FAULT_L1        : std_logic;  -- ufix1
  SIGNAL data_slice_AXI_GaN_FAULT_L1_1    : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_GaN_FAULT_L1_1_1   : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_GaN_FAULT_H2        : std_logic;  -- ufix1
  SIGNAL data_slice_AXI_GaN_FAULT_H2_1    : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_GaN_FAULT_H2_1_1   : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_GaN_FAULT_L2        : std_logic;  -- ufix1
  SIGNAL data_slice_AXI_GaN_FAULT_L2_1    : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_GaN_FAULT_L2_1_1   : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_GaN_FAULT_H3        : std_logic;  -- ufix1
  SIGNAL data_slice_AXI_GaN_FAULT_H3_1    : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_GaN_FAULT_H3_1_1   : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_GaN_FAULT_L3        : std_logic;  -- ufix1
  SIGNAL data_slice_AXI_GaN_FAULT_L3_1    : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_GaN_FAULT_L3_1_1   : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_GaN_OC_H1           : std_logic;  -- ufix1
  SIGNAL data_slice_AXI_GaN_OC_H1_1       : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_GaN_OC_H1_1_1      : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_GaN_OC_L1           : std_logic;  -- ufix1
  SIGNAL data_slice_AXI_GaN_OC_L1_1       : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_GaN_OC_L1_1_1      : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_GaN_OC_H2           : std_logic;  -- ufix1
  SIGNAL data_slice_AXI_GaN_OC_H2_1       : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_GaN_OC_H2_1_1      : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_GaN_OC_L2           : std_logic;  -- ufix1
  SIGNAL data_slice_AXI_GaN_OC_L2_1       : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_opt_reg_out_AXI_GaN_OC_L2_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_GaN_OC_L2_1_1      : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_GaN_OC_H3           : std_logic;  -- ufix1
  SIGNAL data_slice_AXI_GaN_OC_H3_1       : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_AXI_GaN_OC_L3_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_AXI_GaN_OC_H3_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_GaN_OC_H3_1_1      : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_GaN_OC_L3           : std_logic;  -- ufix1
  SIGNAL data_slice_AXI_GaN_OC_L3_1       : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_AXI_I_DIAG_1_1   : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_AXI_GaN_OC_L3_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_GaN_OC_L3_1_1      : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_I_DIAG              : std_logic;  -- ufix1
  SIGNAL data_slice_AXI_I_DIAG_1          : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_AXI_I1_DIAG_1_1  : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_AXI_I_DIAG_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_I_DIAG_1_1         : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_I1_DIAG             : std_logic;  -- ufix1
  SIGNAL data_slice_AXI_I1_DIAG_1         : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_AXI_I2_DIAG_1_1  : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_AXI_I1_DIAG_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_I1_DIAG_1_1        : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_I2_DIAG             : std_logic;  -- ufix1
  SIGNAL data_slice_AXI_I2_DIAG_1         : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_AXI_I3_DIAG_1_1  : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_AXI_I2_DIAG_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_I2_DIAG_1_1        : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_AXI_I3_DIAG             : std_logic;  -- ufix1
  SIGNAL data_slice_AXI_I3_DIAG_1         : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL reg_data_read_middle_AXI_I3_DIAG_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_AXI_I3_DIAG_1_1        : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_sel_axi_enable_1_1        : std_logic;  -- ufix1
  SIGNAL reg_enb_axi_enable_1_1           : std_logic;  -- ufix1
  SIGNAL data_write_unsigned              : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL data_in_axi_enable               : std_logic;  -- ufix1
  SIGNAL data_reg_axi_enable_1_1          : std_logic;  -- ufix1
  SIGNAL write_concats_axi_enable_1       : std_logic;  -- ufix1
  SIGNAL decode_sel_AXI_PWM_Enable_1_1    : std_logic;  -- ufix1
  SIGNAL reg_enb_AXI_PWM_Enable_1_1       : std_logic;  -- ufix1
  SIGNAL data_in_AXI_PWM_Enable           : std_logic;  -- ufix1
  SIGNAL data_reg_AXI_PWM_Enable_1_1      : std_logic;  -- ufix1
  SIGNAL write_concats_AXI_PWM_Enable_1   : std_logic;  -- ufix1

BEGIN
  addr_sel_unsigned <= unsigned(addr_sel);

  
  decode_sel_AXI_I3_DIAG_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0067#, 14) ELSE
      '0';

  const_1 <= '1';

  enb <= const_1;

  
  decode_sel_AXI_I2_DIAG_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0066#, 14) ELSE
      '0';

  
  decode_sel_AXI_I1_DIAG_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0065#, 14) ELSE
      '0';

  
  decode_sel_AXI_I_DIAG_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0064#, 14) ELSE
      '0';

  
  decode_sel_AXI_GaN_OC_L3_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0063#, 14) ELSE
      '0';

  
  decode_sel_AXI_GaN_OC_H3_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0062#, 14) ELSE
      '0';

  reg_hSelSignalDelay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_AXI_GaN_OC_H3_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_AXI_GaN_OC_H3_1_1 <= decode_sel_AXI_GaN_OC_H3_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_process;


  
  decode_sel_ip_timestamp_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0002#, 14) ELSE
      '0';

  read_ip_timestamp_unsigned <= unsigned(read_ip_timestamp);

  read_AXI_Gan_Temp_1_freq_unsigned <= unsigned(read_AXI_Gan_Temp_1_freq);

  read_AXI_Gan_Temp_1_hightime_unsigned <= unsigned(read_AXI_Gan_Temp_1_hightime);

  read_AXI_Gan_Temp_1_lowtime_unsigned <= unsigned(read_AXI_Gan_Temp_1_lowtime);

  read_AXI_Gan_Temp_1_dutycyc_signed <= signed(read_AXI_Gan_Temp_1_dutycyc);

  read_AXI_Gan_Temp_2_freq_unsigned <= unsigned(read_AXI_Gan_Temp_2_freq);

  read_AXI_Gan_Temp_2_hightime_unsigned <= unsigned(read_AXI_Gan_Temp_2_hightime);

  read_AXI_Gan_Temp_2_lowtime_unsigned <= unsigned(read_AXI_Gan_Temp_2_lowtime);

  read_AXI_Gan_Temp_2_dutycyc_signed <= signed(read_AXI_Gan_Temp_2_dutycyc);

  read_AXI_Gan_Temp_3_freq_unsigned <= unsigned(read_AXI_Gan_Temp_3_freq);

  read_AXI_Gan_Temp_3_hightime_unsigned <= unsigned(read_AXI_Gan_Temp_3_hightime);

  read_AXI_Gan_Temp_3_lowtime_unsigned <= unsigned(read_AXI_Gan_Temp_3_lowtime);

  read_AXI_Gan_Temp_3_dutycyc_signed <= signed(read_AXI_Gan_Temp_3_dutycyc);

  read_AXI_Gan_Temp_4_freq_unsigned <= unsigned(read_AXI_Gan_Temp_4_freq);

  read_AXI_Gan_Temp_4_hightime_unsigned <= unsigned(read_AXI_Gan_Temp_4_hightime);

  read_AXI_Gan_Temp_4_lowtime_unsigned <= unsigned(read_AXI_Gan_Temp_4_lowtime);

  read_AXI_Gan_Temp_4_dutycyc_signed <= signed(read_AXI_Gan_Temp_4_dutycyc);

  read_AXI_Gan_Temp_5_freq_unsigned <= unsigned(read_AXI_Gan_Temp_5_freq);

  read_AXI_Gan_Temp_5_hightime_unsigned <= unsigned(read_AXI_Gan_Temp_5_hightime);

  read_AXI_Gan_Temp_5_lowtime_unsigned <= unsigned(read_AXI_Gan_Temp_5_lowtime);

  read_AXI_Gan_Temp_5_dutycyc_signed <= signed(read_AXI_Gan_Temp_5_dutycyc);

  read_AXI_Gan_Temp_6_freq_unsigned <= unsigned(read_AXI_Gan_Temp_6_freq);

  read_AXI_Gan_Temp_6_hightime_unsigned <= unsigned(read_AXI_Gan_Temp_6_hightime);

  read_AXI_Gan_Temp_6_lowtime_unsigned <= unsigned(read_AXI_Gan_Temp_6_lowtime);

  read_AXI_Gan_Temp_6_dutycyc_signed <= signed(read_AXI_Gan_Temp_6_dutycyc);

  
  decode_sel_AXI_GaN_OC_L2_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0061#, 14) ELSE
      '0';

  
  decode_sel_AXI_GaN_OC_H2_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0060#, 14) ELSE
      '0';

  
  decode_sel_AXI_GaN_OC_L1_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#005F#, 14) ELSE
      '0';

  
  decode_sel_AXI_GaN_OC_H1_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#005E#, 14) ELSE
      '0';

  
  decode_sel_AXI_GaN_FAULT_L3_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#005D#, 14) ELSE
      '0';

  
  decode_sel_AXI_GaN_FAULT_H3_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#005C#, 14) ELSE
      '0';

  
  decode_sel_AXI_GaN_FAULT_L2_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#005B#, 14) ELSE
      '0';

  
  decode_sel_AXI_GaN_FAULT_H2_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#005A#, 14) ELSE
      '0';

  
  decode_sel_AXI_GaN_FAULT_L1_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0059#, 14) ELSE
      '0';

  
  decode_sel_AXI_GaN_FAULT_H1_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0058#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_6_dutycyc_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0057#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_6_lowtime_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0056#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_6_hightime_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0055#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_6_freq_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0054#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_5_dutycyc_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0053#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_5_lowtime_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0052#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_5_hightime_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0051#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_5_freq_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0050#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_4_dutycyc_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#004F#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_4_lowtime_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#004E#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_4_hightime_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#004D#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_4_freq_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#004C#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_3_dutycyc_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#004B#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_3_lowtime_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#004A#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_3_hightime_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0049#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_3_freq_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0048#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_2_dutycyc_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0047#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_2_lowtime_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0046#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_2_hightime_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0045#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_2_freq_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0044#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_1_dutycyc_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0043#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_1_lowtime_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0042#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_1_hightime_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0041#, 14) ELSE
      '0';

  
  decode_sel_AXI_Gan_Temp_1_freq_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0040#, 14) ELSE
      '0';

  const_0 <= to_unsigned(0, 32);

  reg_ip_timestamp_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_ip_timestamp <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_ip_timestamp <= read_ip_timestamp_unsigned;
      END IF;
    END IF;
  END PROCESS reg_ip_timestamp_process;


  
  decode_rd_ip_timestamp_1_1 <= const_0 WHEN decode_sel_ip_timestamp_1_1 = '0' ELSE
      read_reg_ip_timestamp;

  reg_AXI_Gan_Temp_1_freq_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_1_freq <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_1_freq <= read_AXI_Gan_Temp_1_freq_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_1_freq_process;


  
  decode_rd_AXI_Gan_Temp_1_freq_1_1 <= decode_rd_ip_timestamp_1_1 WHEN decode_sel_AXI_Gan_Temp_1_freq_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_1_freq;

  reg_AXI_Gan_Temp_1_hightime_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_1_hightime <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_1_hightime <= read_AXI_Gan_Temp_1_hightime_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_1_hightime_process;


  
  decode_rd_AXI_Gan_Temp_1_hightime_1_1 <= decode_rd_AXI_Gan_Temp_1_freq_1_1 WHEN decode_sel_AXI_Gan_Temp_1_hightime_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_1_hightime;

  reg_AXI_Gan_Temp_1_lowtime_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_1_lowtime <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_1_lowtime <= read_AXI_Gan_Temp_1_lowtime_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_1_lowtime_process;


  
  decode_rd_AXI_Gan_Temp_1_lowtime_1_1 <= decode_rd_AXI_Gan_Temp_1_hightime_1_1 WHEN decode_sel_AXI_Gan_Temp_1_lowtime_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_1_lowtime;

  reg_AXI_Gan_Temp_1_dutycyc_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_1_dutycyc <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_1_dutycyc <= read_AXI_Gan_Temp_1_dutycyc_signed;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_1_dutycyc_process;


  data_slice_AXI_Gan_Temp_1_dutycyc_1 <= unsigned(read_reg_AXI_Gan_Temp_1_dutycyc);

  
  decode_rd_AXI_Gan_Temp_1_dutycyc_1_1 <= decode_rd_AXI_Gan_Temp_1_lowtime_1_1 WHEN decode_sel_AXI_Gan_Temp_1_dutycyc_1_1 = '0' ELSE
      data_slice_AXI_Gan_Temp_1_dutycyc_1;

  reg_AXI_Gan_Temp_2_freq_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_2_freq <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_2_freq <= read_AXI_Gan_Temp_2_freq_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_2_freq_process;


  
  decode_rd_AXI_Gan_Temp_2_freq_1_1 <= decode_rd_AXI_Gan_Temp_1_dutycyc_1_1 WHEN decode_sel_AXI_Gan_Temp_2_freq_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_2_freq;

  reg_AXI_Gan_Temp_2_hightime_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_2_hightime <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_2_hightime <= read_AXI_Gan_Temp_2_hightime_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_2_hightime_process;


  
  decode_rd_AXI_Gan_Temp_2_hightime_1_1 <= decode_rd_AXI_Gan_Temp_2_freq_1_1 WHEN decode_sel_AXI_Gan_Temp_2_hightime_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_2_hightime;

  reg_AXI_Gan_Temp_2_lowtime_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_2_lowtime <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_2_lowtime <= read_AXI_Gan_Temp_2_lowtime_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_2_lowtime_process;


  
  decode_rd_AXI_Gan_Temp_2_lowtime_1_1 <= decode_rd_AXI_Gan_Temp_2_hightime_1_1 WHEN decode_sel_AXI_Gan_Temp_2_lowtime_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_2_lowtime;

  reg_AXI_Gan_Temp_2_dutycyc_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_2_dutycyc <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_2_dutycyc <= read_AXI_Gan_Temp_2_dutycyc_signed;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_2_dutycyc_process;


  data_slice_AXI_Gan_Temp_2_dutycyc_1 <= unsigned(read_reg_AXI_Gan_Temp_2_dutycyc);

  
  decode_rd_AXI_Gan_Temp_2_dutycyc_1_1 <= decode_rd_AXI_Gan_Temp_2_lowtime_1_1 WHEN decode_sel_AXI_Gan_Temp_2_dutycyc_1_1 = '0' ELSE
      data_slice_AXI_Gan_Temp_2_dutycyc_1;

  reg_AXI_Gan_Temp_3_freq_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_3_freq <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_3_freq <= read_AXI_Gan_Temp_3_freq_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_3_freq_process;


  
  decode_rd_AXI_Gan_Temp_3_freq_1_1 <= decode_rd_AXI_Gan_Temp_2_dutycyc_1_1 WHEN decode_sel_AXI_Gan_Temp_3_freq_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_3_freq;

  reg_AXI_Gan_Temp_3_hightime_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_3_hightime <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_3_hightime <= read_AXI_Gan_Temp_3_hightime_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_3_hightime_process;


  
  decode_rd_AXI_Gan_Temp_3_hightime_1_1 <= decode_rd_AXI_Gan_Temp_3_freq_1_1 WHEN decode_sel_AXI_Gan_Temp_3_hightime_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_3_hightime;

  reg_AXI_Gan_Temp_3_lowtime_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_3_lowtime <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_3_lowtime <= read_AXI_Gan_Temp_3_lowtime_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_3_lowtime_process;


  
  decode_rd_AXI_Gan_Temp_3_lowtime_1_1 <= decode_rd_AXI_Gan_Temp_3_hightime_1_1 WHEN decode_sel_AXI_Gan_Temp_3_lowtime_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_3_lowtime;

  reg_AXI_Gan_Temp_3_dutycyc_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_3_dutycyc <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_3_dutycyc <= read_AXI_Gan_Temp_3_dutycyc_signed;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_3_dutycyc_process;


  data_slice_AXI_Gan_Temp_3_dutycyc_1 <= unsigned(read_reg_AXI_Gan_Temp_3_dutycyc);

  
  decode_rd_AXI_Gan_Temp_3_dutycyc_1_1 <= decode_rd_AXI_Gan_Temp_3_lowtime_1_1 WHEN decode_sel_AXI_Gan_Temp_3_dutycyc_1_1 = '0' ELSE
      data_slice_AXI_Gan_Temp_3_dutycyc_1;

  reg_AXI_Gan_Temp_4_freq_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_4_freq <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_4_freq <= read_AXI_Gan_Temp_4_freq_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_4_freq_process;


  
  decode_rd_AXI_Gan_Temp_4_freq_1_1 <= decode_rd_AXI_Gan_Temp_3_dutycyc_1_1 WHEN decode_sel_AXI_Gan_Temp_4_freq_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_4_freq;

  reg_AXI_Gan_Temp_4_hightime_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_4_hightime <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_4_hightime <= read_AXI_Gan_Temp_4_hightime_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_4_hightime_process;


  
  decode_rd_AXI_Gan_Temp_4_hightime_1_1 <= decode_rd_AXI_Gan_Temp_4_freq_1_1 WHEN decode_sel_AXI_Gan_Temp_4_hightime_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_4_hightime;

  reg_AXI_Gan_Temp_4_lowtime_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_4_lowtime <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_4_lowtime <= read_AXI_Gan_Temp_4_lowtime_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_4_lowtime_process;


  
  decode_rd_AXI_Gan_Temp_4_lowtime_1_1 <= decode_rd_AXI_Gan_Temp_4_hightime_1_1 WHEN decode_sel_AXI_Gan_Temp_4_lowtime_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_4_lowtime;

  reg_AXI_Gan_Temp_4_dutycyc_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_4_dutycyc <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_4_dutycyc <= read_AXI_Gan_Temp_4_dutycyc_signed;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_4_dutycyc_process;


  data_slice_AXI_Gan_Temp_4_dutycyc_1 <= unsigned(read_reg_AXI_Gan_Temp_4_dutycyc);

  
  decode_rd_AXI_Gan_Temp_4_dutycyc_1_1 <= decode_rd_AXI_Gan_Temp_4_lowtime_1_1 WHEN decode_sel_AXI_Gan_Temp_4_dutycyc_1_1 = '0' ELSE
      data_slice_AXI_Gan_Temp_4_dutycyc_1;

  reg_AXI_Gan_Temp_5_freq_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_5_freq <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_5_freq <= read_AXI_Gan_Temp_5_freq_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_5_freq_process;


  
  decode_rd_AXI_Gan_Temp_5_freq_1_1 <= decode_rd_AXI_Gan_Temp_4_dutycyc_1_1 WHEN decode_sel_AXI_Gan_Temp_5_freq_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_5_freq;

  reg_AXI_Gan_Temp_5_hightime_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_5_hightime <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_5_hightime <= read_AXI_Gan_Temp_5_hightime_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_5_hightime_process;


  
  decode_rd_AXI_Gan_Temp_5_hightime_1_1 <= decode_rd_AXI_Gan_Temp_5_freq_1_1 WHEN decode_sel_AXI_Gan_Temp_5_hightime_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_5_hightime;

  reg_AXI_Gan_Temp_5_lowtime_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_5_lowtime <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_5_lowtime <= read_AXI_Gan_Temp_5_lowtime_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_5_lowtime_process;


  
  decode_rd_AXI_Gan_Temp_5_lowtime_1_1 <= decode_rd_AXI_Gan_Temp_5_hightime_1_1 WHEN decode_sel_AXI_Gan_Temp_5_lowtime_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_5_lowtime;

  reg_AXI_Gan_Temp_5_dutycyc_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_5_dutycyc <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_5_dutycyc <= read_AXI_Gan_Temp_5_dutycyc_signed;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_5_dutycyc_process;


  data_slice_AXI_Gan_Temp_5_dutycyc_1 <= unsigned(read_reg_AXI_Gan_Temp_5_dutycyc);

  
  decode_rd_AXI_Gan_Temp_5_dutycyc_1_1 <= decode_rd_AXI_Gan_Temp_5_lowtime_1_1 WHEN decode_sel_AXI_Gan_Temp_5_dutycyc_1_1 = '0' ELSE
      data_slice_AXI_Gan_Temp_5_dutycyc_1;

  reg_AXI_Gan_Temp_6_freq_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_6_freq <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_6_freq <= read_AXI_Gan_Temp_6_freq_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_6_freq_process;


  
  decode_rd_AXI_Gan_Temp_6_freq_1_1 <= decode_rd_AXI_Gan_Temp_5_dutycyc_1_1 WHEN decode_sel_AXI_Gan_Temp_6_freq_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_6_freq;

  reg_AXI_Gan_Temp_6_hightime_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_6_hightime <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_6_hightime <= read_AXI_Gan_Temp_6_hightime_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_6_hightime_process;


  
  decode_rd_AXI_Gan_Temp_6_hightime_1_1 <= decode_rd_AXI_Gan_Temp_6_freq_1_1 WHEN decode_sel_AXI_Gan_Temp_6_hightime_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_6_hightime;

  reg_AXI_Gan_Temp_6_lowtime_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_6_lowtime <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_6_lowtime <= read_AXI_Gan_Temp_6_lowtime_unsigned;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_6_lowtime_process;


  
  decode_rd_AXI_Gan_Temp_6_lowtime_1_1 <= decode_rd_AXI_Gan_Temp_6_hightime_1_1 WHEN decode_sel_AXI_Gan_Temp_6_lowtime_1_1 = '0' ELSE
      read_reg_AXI_Gan_Temp_6_lowtime;

  reg_AXI_Gan_Temp_6_dutycyc_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_Gan_Temp_6_dutycyc <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        read_reg_AXI_Gan_Temp_6_dutycyc <= read_AXI_Gan_Temp_6_dutycyc_signed;
      END IF;
    END IF;
  END PROCESS reg_AXI_Gan_Temp_6_dutycyc_process;


  data_slice_AXI_Gan_Temp_6_dutycyc_1 <= unsigned(read_reg_AXI_Gan_Temp_6_dutycyc);

  
  decode_rd_AXI_Gan_Temp_6_dutycyc_1_1 <= decode_rd_AXI_Gan_Temp_6_lowtime_1_1 WHEN decode_sel_AXI_Gan_Temp_6_dutycyc_1_1 = '0' ELSE
      data_slice_AXI_Gan_Temp_6_dutycyc_1;

  reg_AXI_GaN_FAULT_H1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_GaN_FAULT_H1 <= '0';
      ELSIF enb = '1' THEN
        read_reg_AXI_GaN_FAULT_H1 <= read_AXI_GaN_FAULT_H1;
      END IF;
    END IF;
  END PROCESS reg_AXI_GaN_FAULT_H1_process;


  data_slice_AXI_GaN_FAULT_H1_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & read_reg_AXI_GaN_FAULT_H1;

  
  decode_rd_AXI_GaN_FAULT_H1_1_1 <= decode_rd_AXI_Gan_Temp_6_dutycyc_1_1 WHEN decode_sel_AXI_GaN_FAULT_H1_1_1 = '0' ELSE
      data_slice_AXI_GaN_FAULT_H1_1;

  reg_AXI_GaN_FAULT_L1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_GaN_FAULT_L1 <= '0';
      ELSIF enb = '1' THEN
        read_reg_AXI_GaN_FAULT_L1 <= read_AXI_GaN_FAULT_L1;
      END IF;
    END IF;
  END PROCESS reg_AXI_GaN_FAULT_L1_process;


  data_slice_AXI_GaN_FAULT_L1_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & read_reg_AXI_GaN_FAULT_L1;

  
  decode_rd_AXI_GaN_FAULT_L1_1_1 <= decode_rd_AXI_GaN_FAULT_H1_1_1 WHEN decode_sel_AXI_GaN_FAULT_L1_1_1 = '0' ELSE
      data_slice_AXI_GaN_FAULT_L1_1;

  reg_AXI_GaN_FAULT_H2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_GaN_FAULT_H2 <= '0';
      ELSIF enb = '1' THEN
        read_reg_AXI_GaN_FAULT_H2 <= read_AXI_GaN_FAULT_H2;
      END IF;
    END IF;
  END PROCESS reg_AXI_GaN_FAULT_H2_process;


  data_slice_AXI_GaN_FAULT_H2_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & read_reg_AXI_GaN_FAULT_H2;

  
  decode_rd_AXI_GaN_FAULT_H2_1_1 <= decode_rd_AXI_GaN_FAULT_L1_1_1 WHEN decode_sel_AXI_GaN_FAULT_H2_1_1 = '0' ELSE
      data_slice_AXI_GaN_FAULT_H2_1;

  reg_AXI_GaN_FAULT_L2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_GaN_FAULT_L2 <= '0';
      ELSIF enb = '1' THEN
        read_reg_AXI_GaN_FAULT_L2 <= read_AXI_GaN_FAULT_L2;
      END IF;
    END IF;
  END PROCESS reg_AXI_GaN_FAULT_L2_process;


  data_slice_AXI_GaN_FAULT_L2_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & read_reg_AXI_GaN_FAULT_L2;

  
  decode_rd_AXI_GaN_FAULT_L2_1_1 <= decode_rd_AXI_GaN_FAULT_H2_1_1 WHEN decode_sel_AXI_GaN_FAULT_L2_1_1 = '0' ELSE
      data_slice_AXI_GaN_FAULT_L2_1;

  reg_AXI_GaN_FAULT_H3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_GaN_FAULT_H3 <= '0';
      ELSIF enb = '1' THEN
        read_reg_AXI_GaN_FAULT_H3 <= read_AXI_GaN_FAULT_H3;
      END IF;
    END IF;
  END PROCESS reg_AXI_GaN_FAULT_H3_process;


  data_slice_AXI_GaN_FAULT_H3_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & read_reg_AXI_GaN_FAULT_H3;

  
  decode_rd_AXI_GaN_FAULT_H3_1_1 <= decode_rd_AXI_GaN_FAULT_L2_1_1 WHEN decode_sel_AXI_GaN_FAULT_H3_1_1 = '0' ELSE
      data_slice_AXI_GaN_FAULT_H3_1;

  reg_AXI_GaN_FAULT_L3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_GaN_FAULT_L3 <= '0';
      ELSIF enb = '1' THEN
        read_reg_AXI_GaN_FAULT_L3 <= read_AXI_GaN_FAULT_L3;
      END IF;
    END IF;
  END PROCESS reg_AXI_GaN_FAULT_L3_process;


  data_slice_AXI_GaN_FAULT_L3_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & read_reg_AXI_GaN_FAULT_L3;

  
  decode_rd_AXI_GaN_FAULT_L3_1_1 <= decode_rd_AXI_GaN_FAULT_H3_1_1 WHEN decode_sel_AXI_GaN_FAULT_L3_1_1 = '0' ELSE
      data_slice_AXI_GaN_FAULT_L3_1;

  reg_AXI_GaN_OC_H1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_GaN_OC_H1 <= '0';
      ELSIF enb = '1' THEN
        read_reg_AXI_GaN_OC_H1 <= read_AXI_GaN_OC_H1;
      END IF;
    END IF;
  END PROCESS reg_AXI_GaN_OC_H1_process;


  data_slice_AXI_GaN_OC_H1_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & read_reg_AXI_GaN_OC_H1;

  
  decode_rd_AXI_GaN_OC_H1_1_1 <= decode_rd_AXI_GaN_FAULT_L3_1_1 WHEN decode_sel_AXI_GaN_OC_H1_1_1 = '0' ELSE
      data_slice_AXI_GaN_OC_H1_1;

  reg_AXI_GaN_OC_L1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_GaN_OC_L1 <= '0';
      ELSIF enb = '1' THEN
        read_reg_AXI_GaN_OC_L1 <= read_AXI_GaN_OC_L1;
      END IF;
    END IF;
  END PROCESS reg_AXI_GaN_OC_L1_process;


  data_slice_AXI_GaN_OC_L1_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & read_reg_AXI_GaN_OC_L1;

  
  decode_rd_AXI_GaN_OC_L1_1_1 <= decode_rd_AXI_GaN_OC_H1_1_1 WHEN decode_sel_AXI_GaN_OC_L1_1_1 = '0' ELSE
      data_slice_AXI_GaN_OC_L1_1;

  reg_AXI_GaN_OC_H2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_GaN_OC_H2 <= '0';
      ELSIF enb = '1' THEN
        read_reg_AXI_GaN_OC_H2 <= read_AXI_GaN_OC_H2;
      END IF;
    END IF;
  END PROCESS reg_AXI_GaN_OC_H2_process;


  data_slice_AXI_GaN_OC_H2_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & read_reg_AXI_GaN_OC_H2;

  
  decode_rd_AXI_GaN_OC_H2_1_1 <= decode_rd_AXI_GaN_OC_L1_1_1 WHEN decode_sel_AXI_GaN_OC_H2_1_1 = '0' ELSE
      data_slice_AXI_GaN_OC_H2_1;

  reg_AXI_GaN_OC_L2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_GaN_OC_L2 <= '0';
      ELSIF enb = '1' THEN
        read_reg_AXI_GaN_OC_L2 <= read_AXI_GaN_OC_L2;
      END IF;
    END IF;
  END PROCESS reg_AXI_GaN_OC_L2_process;


  data_slice_AXI_GaN_OC_L2_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & read_reg_AXI_GaN_OC_L2;

  
  read_opt_reg_out_AXI_GaN_OC_L2_1_1 <= decode_rd_AXI_GaN_OC_H2_1_1 WHEN decode_sel_AXI_GaN_OC_L2_1_1 = '0' ELSE
      data_slice_AXI_GaN_OC_L2_1;

  read_opt_reg_AXI_GaN_OC_L2_1_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        decode_rd_AXI_GaN_OC_L2_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        decode_rd_AXI_GaN_OC_L2_1_1 <= read_opt_reg_out_AXI_GaN_OC_L2_1_1;
      END IF;
    END IF;
  END PROCESS read_opt_reg_AXI_GaN_OC_L2_1_1_process;


  reg_AXI_GaN_OC_H3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_GaN_OC_H3 <= '0';
      ELSIF enb = '1' THEN
        read_reg_AXI_GaN_OC_H3 <= read_AXI_GaN_OC_H3;
      END IF;
    END IF;
  END PROCESS reg_AXI_GaN_OC_H3_process;


  data_slice_AXI_GaN_OC_H3_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & read_reg_AXI_GaN_OC_H3;

  reg_hSelSignalDelay_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_AXI_GaN_OC_L3_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_AXI_GaN_OC_L3_1_1 <= decode_sel_AXI_GaN_OC_L3_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_1_process;


  reg_data_read_middle_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_AXI_GaN_OC_H3_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_AXI_GaN_OC_H3_1_1 <= data_slice_AXI_GaN_OC_H3_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_process;


  
  decode_rd_AXI_GaN_OC_H3_1_1 <= decode_rd_AXI_GaN_OC_L2_1_1 WHEN hSelSignalDelay_AXI_GaN_OC_H3_1_1 = '0' ELSE
      reg_data_read_middle_AXI_GaN_OC_H3_1_1;

  reg_AXI_GaN_OC_L3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_GaN_OC_L3 <= '0';
      ELSIF enb = '1' THEN
        read_reg_AXI_GaN_OC_L3 <= read_AXI_GaN_OC_L3;
      END IF;
    END IF;
  END PROCESS reg_AXI_GaN_OC_L3_process;


  data_slice_AXI_GaN_OC_L3_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & read_reg_AXI_GaN_OC_L3;

  reg_hSelSignalDelay_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_AXI_I_DIAG_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_AXI_I_DIAG_1_1 <= decode_sel_AXI_I_DIAG_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_2_process;


  reg_data_read_middle_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_AXI_GaN_OC_L3_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_AXI_GaN_OC_L3_1_1 <= data_slice_AXI_GaN_OC_L3_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_1_process;


  
  decode_rd_AXI_GaN_OC_L3_1_1 <= decode_rd_AXI_GaN_OC_H3_1_1 WHEN hSelSignalDelay_AXI_GaN_OC_L3_1_1 = '0' ELSE
      reg_data_read_middle_AXI_GaN_OC_L3_1_1;

  reg_AXI_I_DIAG_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_I_DIAG <= '0';
      ELSIF enb = '1' THEN
        read_reg_AXI_I_DIAG <= read_AXI_I_DIAG;
      END IF;
    END IF;
  END PROCESS reg_AXI_I_DIAG_process;


  data_slice_AXI_I_DIAG_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & read_reg_AXI_I_DIAG;

  reg_hSelSignalDelay_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_AXI_I1_DIAG_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_AXI_I1_DIAG_1_1 <= decode_sel_AXI_I1_DIAG_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_3_process;


  reg_data_read_middle_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_AXI_I_DIAG_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_AXI_I_DIAG_1_1 <= data_slice_AXI_I_DIAG_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_2_process;


  
  decode_rd_AXI_I_DIAG_1_1 <= decode_rd_AXI_GaN_OC_L3_1_1 WHEN hSelSignalDelay_AXI_I_DIAG_1_1 = '0' ELSE
      reg_data_read_middle_AXI_I_DIAG_1_1;

  reg_AXI_I1_DIAG_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_I1_DIAG <= '0';
      ELSIF enb = '1' THEN
        read_reg_AXI_I1_DIAG <= read_AXI_I1_DIAG;
      END IF;
    END IF;
  END PROCESS reg_AXI_I1_DIAG_process;


  data_slice_AXI_I1_DIAG_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & read_reg_AXI_I1_DIAG;

  reg_hSelSignalDelay_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_AXI_I2_DIAG_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_AXI_I2_DIAG_1_1 <= decode_sel_AXI_I2_DIAG_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_4_process;


  reg_data_read_middle_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_AXI_I1_DIAG_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_AXI_I1_DIAG_1_1 <= data_slice_AXI_I1_DIAG_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_3_process;


  
  decode_rd_AXI_I1_DIAG_1_1 <= decode_rd_AXI_I_DIAG_1_1 WHEN hSelSignalDelay_AXI_I1_DIAG_1_1 = '0' ELSE
      reg_data_read_middle_AXI_I1_DIAG_1_1;

  reg_AXI_I2_DIAG_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_I2_DIAG <= '0';
      ELSIF enb = '1' THEN
        read_reg_AXI_I2_DIAG <= read_AXI_I2_DIAG;
      END IF;
    END IF;
  END PROCESS reg_AXI_I2_DIAG_process;


  data_slice_AXI_I2_DIAG_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & read_reg_AXI_I2_DIAG;

  reg_hSelSignalDelay_5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_AXI_I3_DIAG_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_AXI_I3_DIAG_1_1 <= decode_sel_AXI_I3_DIAG_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_5_process;


  reg_data_read_middle_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_AXI_I2_DIAG_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_AXI_I2_DIAG_1_1 <= data_slice_AXI_I2_DIAG_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_4_process;


  
  decode_rd_AXI_I2_DIAG_1_1 <= decode_rd_AXI_I1_DIAG_1_1 WHEN hSelSignalDelay_AXI_I2_DIAG_1_1 = '0' ELSE
      reg_data_read_middle_AXI_I2_DIAG_1_1;

  reg_AXI_I3_DIAG_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_AXI_I3_DIAG <= '0';
      ELSIF enb = '1' THEN
        read_reg_AXI_I3_DIAG <= read_AXI_I3_DIAG;
      END IF;
    END IF;
  END PROCESS reg_AXI_I3_DIAG_process;


  data_slice_AXI_I3_DIAG_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & read_reg_AXI_I3_DIAG;

  reg_data_read_middle_5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_AXI_I3_DIAG_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_AXI_I3_DIAG_1_1 <= data_slice_AXI_I3_DIAG_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_5_process;


  
  decode_rd_AXI_I3_DIAG_1_1 <= decode_rd_AXI_I2_DIAG_1_1 WHEN hSelSignalDelay_AXI_I3_DIAG_1_1 = '0' ELSE
      reg_data_read_middle_AXI_I3_DIAG_1_1;

  data_read <= std_logic_vector(decode_rd_AXI_I3_DIAG_1_1);

  
  decode_sel_axi_enable_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0001#, 14) ELSE
      '0';

  reg_enb_axi_enable_1_1 <= decode_sel_axi_enable_1_1 AND wr_enb;

  data_write_unsigned <= unsigned(data_write);

  data_in_axi_enable <= data_write_unsigned(0);

  reg_axi_enable_1_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        data_reg_axi_enable_1_1 <= '1';
      ELSIF enb = '1' AND reg_enb_axi_enable_1_1 = '1' THEN
        data_reg_axi_enable_1_1 <= data_in_axi_enable;
      END IF;
    END IF;
  END PROCESS reg_axi_enable_1_1_process;


  write_concats_axi_enable_1 <= data_reg_axi_enable_1_1;

  write_axi_enable <= write_concats_axi_enable_1;

  
  decode_sel_AXI_PWM_Enable_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0068#, 14) ELSE
      '0';

  reg_enb_AXI_PWM_Enable_1_1 <= decode_sel_AXI_PWM_Enable_1_1 AND wr_enb;

  data_in_AXI_PWM_Enable <= data_write_unsigned(0);

  reg_AXI_PWM_Enable_1_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        data_reg_AXI_PWM_Enable_1_1 <= '0';
      ELSIF enb = '1' AND reg_enb_AXI_PWM_Enable_1_1 = '1' THEN
        data_reg_AXI_PWM_Enable_1_1 <= data_in_AXI_PWM_Enable;
      END IF;
    END IF;
  END PROCESS reg_AXI_PWM_Enable_1_1_process;


  write_concats_AXI_PWM_Enable_1 <= data_reg_AXI_PWM_Enable_1_1;

  write_AXI_PWM_Enable <= write_concats_AXI_PWM_Enable_1;

END rtl;

