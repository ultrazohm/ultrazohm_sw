// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MultiLayerPerceptronDecoupled_gem2Stream_float_8u_15 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        p_out_din,
        p_out_full_n,
        p_out_write,
        p_m_dout,
        p_m_empty_n,
        p_m_read,
        p_n_dout,
        p_n_empty_n,
        p_n_read,
        p_in_address0,
        p_in_ce0,
        p_in_q0,
        p_in_address1,
        p_in_ce1,
        p_in_q1,
        p_in1_address0,
        p_in1_ce0,
        p_in1_q0,
        p_in1_address1,
        p_in1_ce1,
        p_in1_q1,
        p_in2_address0,
        p_in2_ce0,
        p_in2_q0,
        p_in2_address1,
        p_in2_ce1,
        p_in2_q1,
        p_in3_address0,
        p_in3_ce0,
        p_in3_q0,
        p_in3_address1,
        p_in3_ce1,
        p_in3_q1,
        p_in4_address0,
        p_in4_ce0,
        p_in4_q0,
        p_in4_address1,
        p_in4_ce1,
        p_in4_q1,
        p_in5_address0,
        p_in5_ce0,
        p_in5_q0,
        p_in5_address1,
        p_in5_ce1,
        p_in5_q1,
        p_in6_address0,
        p_in6_ce0,
        p_in6_q0,
        p_in6_address1,
        p_in6_ce1,
        p_in6_q1,
        p_in7_address0,
        p_in7_ce0,
        p_in7_q0,
        p_in7_address1,
        p_in7_ce1,
        p_in7_q1,
        p_in_offset_dout,
        p_in_offset_empty_n,
        p_in_offset_read,
        p_m_out_din,
        p_m_out_full_n,
        p_m_out_write,
        p_n_out_din,
        p_n_out_full_n,
        p_n_out_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_pp0_stage1 = 6'd4;
parameter    ap_ST_fsm_pp0_stage2 = 6'd8;
parameter    ap_ST_fsm_pp0_stage3 = 6'd16;
parameter    ap_ST_fsm_state7 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output  [255:0] p_out_din;
input   p_out_full_n;
output   p_out_write;
input  [31:0] p_m_dout;
input   p_m_empty_n;
output   p_m_read;
input  [31:0] p_n_dout;
input   p_n_empty_n;
output   p_n_read;
output  [8:0] p_in_address0;
output   p_in_ce0;
input  [31:0] p_in_q0;
output  [8:0] p_in_address1;
output   p_in_ce1;
input  [31:0] p_in_q1;
output  [8:0] p_in1_address0;
output   p_in1_ce0;
input  [31:0] p_in1_q0;
output  [8:0] p_in1_address1;
output   p_in1_ce1;
input  [31:0] p_in1_q1;
output  [8:0] p_in2_address0;
output   p_in2_ce0;
input  [31:0] p_in2_q0;
output  [8:0] p_in2_address1;
output   p_in2_ce1;
input  [31:0] p_in2_q1;
output  [8:0] p_in3_address0;
output   p_in3_ce0;
input  [31:0] p_in3_q0;
output  [8:0] p_in3_address1;
output   p_in3_ce1;
input  [31:0] p_in3_q1;
output  [8:0] p_in4_address0;
output   p_in4_ce0;
input  [31:0] p_in4_q0;
output  [8:0] p_in4_address1;
output   p_in4_ce1;
input  [31:0] p_in4_q1;
output  [8:0] p_in5_address0;
output   p_in5_ce0;
input  [31:0] p_in5_q0;
output  [8:0] p_in5_address1;
output   p_in5_ce1;
input  [31:0] p_in5_q1;
output  [8:0] p_in6_address0;
output   p_in6_ce0;
input  [31:0] p_in6_q0;
output  [8:0] p_in6_address1;
output   p_in6_ce1;
input  [31:0] p_in6_q1;
output  [8:0] p_in7_address0;
output   p_in7_ce0;
input  [31:0] p_in7_q0;
output  [8:0] p_in7_address1;
output   p_in7_ce1;
input  [31:0] p_in7_q1;
input  [11:0] p_in_offset_dout;
input   p_in_offset_empty_n;
output   p_in_offset_read;
output  [31:0] p_m_out_din;
input   p_m_out_full_n;
output   p_m_out_write;
output  [31:0] p_n_out_din;
input   p_n_out_full_n;
output   p_n_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg p_out_write;
reg p_m_read;
reg p_n_read;
reg[8:0] p_in_address0;
reg p_in_ce0;
reg[8:0] p_in_address1;
reg p_in_ce1;
reg[8:0] p_in1_address0;
reg p_in1_ce0;
reg[8:0] p_in1_address1;
reg p_in1_ce1;
reg[8:0] p_in2_address0;
reg p_in2_ce0;
reg[8:0] p_in2_address1;
reg p_in2_ce1;
reg[8:0] p_in3_address0;
reg p_in3_ce0;
reg[8:0] p_in3_address1;
reg p_in3_ce1;
reg[8:0] p_in4_address0;
reg p_in4_ce0;
reg[8:0] p_in4_address1;
reg p_in4_ce1;
reg[8:0] p_in5_address0;
reg p_in5_ce0;
reg[8:0] p_in5_address1;
reg p_in5_ce1;
reg[8:0] p_in6_address0;
reg p_in6_ce0;
reg[8:0] p_in6_address1;
reg p_in6_ce1;
reg[8:0] p_in7_address0;
reg p_in7_ce0;
reg[8:0] p_in7_address1;
reg p_in7_ce1;
reg p_in_offset_read;
reg p_m_out_write;
reg p_n_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    p_out_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln55_reg_1391;
reg    p_m_blk_n;
reg    p_n_blk_n;
reg    p_in_offset_blk_n;
reg    p_m_out_blk_n;
reg    p_n_out_blk_n;
reg   [28:0] i_reg_741;
reg   [11:0] p_in_offset_read_reg_1334;
reg    ap_block_state1;
reg   [28:0] trunc_ln_reg_1346;
wire   [63:0] zext_ln60_fu_772_p1;
reg   [63:0] zext_ln60_reg_1351;
wire   [63:0] zext_ln60_1_fu_782_p1;
reg   [63:0] zext_ln60_1_reg_1356;
wire   [63:0] zext_ln60_2_fu_792_p1;
reg   [63:0] zext_ln60_2_reg_1361;
wire   [63:0] zext_ln60_3_fu_802_p1;
reg   [63:0] zext_ln60_3_reg_1366;
wire   [63:0] zext_ln60_4_fu_812_p1;
reg   [63:0] zext_ln60_4_reg_1371;
wire   [63:0] zext_ln60_5_fu_822_p1;
reg   [63:0] zext_ln60_5_reg_1376;
wire   [63:0] zext_ln60_6_fu_832_p1;
reg   [63:0] zext_ln60_6_reg_1381;
wire   [63:0] zext_ln60_7_fu_842_p1;
reg   [63:0] zext_ln60_7_reg_1386;
wire   [0:0] icmp_ln55_fu_846_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state6_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [28:0] add_ln55_fu_851_p2;
reg   [28:0] add_ln55_reg_1395;
reg    ap_enable_reg_pp0_iter0;
wire   [11:0] tmp_9_fu_861_p3;
reg   [11:0] tmp_9_reg_1400;
wire   [31:0] tmp_fu_929_p10;
reg   [31:0] tmp_reg_1490;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] tmp_1_fu_950_p10;
reg   [31:0] tmp_1_reg_1495;
wire   [31:0] tmp_2_fu_1035_p10;
reg   [31:0] tmp_2_reg_1580;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] tmp_3_fu_1056_p10;
reg   [31:0] tmp_3_reg_1585;
reg   [8:0] lshr_ln60_6_reg_1670;
reg   [8:0] lshr_ln60_7_reg_1675;
wire   [31:0] tmp_4_fu_1181_p10;
reg   [31:0] tmp_4_reg_1680;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] tmp_5_fu_1202_p10;
reg   [31:0] tmp_5_reg_1685;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage3_subdone;
reg   [28:0] ap_phi_mux_i_phi_fu_745_p4;
wire   [63:0] zext_ln60_8_fu_884_p1;
wire   [63:0] zext_ln60_9_fu_917_p1;
wire   [63:0] zext_ln60_10_fu_991_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln60_11_fu_1023_p1;
wire   [63:0] zext_ln60_12_fu_1097_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln60_13_fu_1129_p1;
wire   [63:0] zext_ln60_14_fu_1223_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln60_15_fu_1234_p1;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] mul_ln54_fu_752_p2;
wire   [2:0] trunc_ln60_fu_768_p1;
wire   [2:0] add_ln60_fu_776_p2;
wire   [2:0] add_ln60_1_fu_786_p2;
wire   [2:0] add_ln60_2_fu_796_p2;
wire   [2:0] xor_ln60_fu_806_p2;
wire   [2:0] add_ln60_3_fu_816_p2;
wire   [2:0] add_ln60_4_fu_826_p2;
wire   [2:0] add_ln60_5_fu_836_p2;
wire   [8:0] empty_fu_857_p1;
wire   [11:0] add_ln60_6_fu_869_p2;
wire   [8:0] lshr_ln_fu_874_p4;
wire   [11:0] or_ln60_fu_896_p2;
wire   [11:0] add_ln60_7_fu_902_p2;
wire   [8:0] lshr_ln60_1_fu_907_p4;
wire   [11:0] or_ln60_1_fu_971_p2;
wire   [11:0] add_ln60_8_fu_976_p2;
wire   [8:0] lshr_ln60_2_fu_981_p4;
wire   [11:0] or_ln60_2_fu_1003_p2;
wire   [11:0] add_ln60_9_fu_1008_p2;
wire   [8:0] lshr_ln60_3_fu_1013_p4;
wire   [11:0] or_ln60_3_fu_1077_p2;
wire   [11:0] add_ln60_10_fu_1082_p2;
wire   [8:0] lshr_ln60_4_fu_1087_p4;
wire   [11:0] or_ln60_4_fu_1109_p2;
wire   [11:0] add_ln60_11_fu_1114_p2;
wire   [8:0] lshr_ln60_5_fu_1119_p4;
wire   [11:0] or_ln60_5_fu_1141_p2;
wire   [11:0] add_ln60_12_fu_1146_p2;
wire   [11:0] or_ln60_6_fu_1161_p2;
wire   [11:0] add_ln60_13_fu_1166_p2;
wire   [31:0] tmp_6_fu_1245_p10;
wire   [31:0] tmp_7_fu_1266_p10;
wire   [31:0] l_v_35_fu_1309_p1;
wire   [31:0] l_v_34_fu_1305_p1;
wire   [31:0] l_v_33_fu_1302_p1;
wire   [31:0] l_v_32_fu_1299_p1;
wire   [31:0] l_v_31_fu_1296_p1;
wire   [31:0] l_v_30_fu_1293_p1;
wire   [31:0] l_v_29_fu_1290_p1;
wire   [31:0] l_v_fu_1287_p1;
wire    ap_CS_fsm_state7;
reg   [5:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

MultiLayerPerceptronDecoupled_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U206(
    .din0(p_m_dout),
    .din1(p_n_dout),
    .dout(mul_ln54_fu_752_p2)
);

MultiLayerPerceptronDecoupled_mux_864_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
mux_864_32_1_1_U207(
    .din0(p_in_q1),
    .din1(p_in1_q1),
    .din2(p_in2_q1),
    .din3(p_in3_q1),
    .din4(p_in4_q1),
    .din5(p_in5_q1),
    .din6(p_in6_q1),
    .din7(p_in7_q1),
    .din8(zext_ln60_reg_1351),
    .dout(tmp_fu_929_p10)
);

MultiLayerPerceptronDecoupled_mux_864_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
mux_864_32_1_1_U208(
    .din0(p_in_q0),
    .din1(p_in1_q0),
    .din2(p_in2_q0),
    .din3(p_in3_q0),
    .din4(p_in4_q0),
    .din5(p_in5_q0),
    .din6(p_in6_q0),
    .din7(p_in7_q0),
    .din8(zext_ln60_1_reg_1356),
    .dout(tmp_1_fu_950_p10)
);

MultiLayerPerceptronDecoupled_mux_864_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
mux_864_32_1_1_U209(
    .din0(p_in_q1),
    .din1(p_in1_q1),
    .din2(p_in2_q1),
    .din3(p_in3_q1),
    .din4(p_in4_q1),
    .din5(p_in5_q1),
    .din6(p_in6_q1),
    .din7(p_in7_q1),
    .din8(zext_ln60_2_reg_1361),
    .dout(tmp_2_fu_1035_p10)
);

MultiLayerPerceptronDecoupled_mux_864_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
mux_864_32_1_1_U210(
    .din0(p_in_q0),
    .din1(p_in1_q0),
    .din2(p_in2_q0),
    .din3(p_in3_q0),
    .din4(p_in4_q0),
    .din5(p_in5_q0),
    .din6(p_in6_q0),
    .din7(p_in7_q0),
    .din8(zext_ln60_3_reg_1366),
    .dout(tmp_3_fu_1056_p10)
);

MultiLayerPerceptronDecoupled_mux_864_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
mux_864_32_1_1_U211(
    .din0(p_in_q1),
    .din1(p_in1_q1),
    .din2(p_in2_q1),
    .din3(p_in3_q1),
    .din4(p_in4_q1),
    .din5(p_in5_q1),
    .din6(p_in6_q1),
    .din7(p_in7_q1),
    .din8(zext_ln60_4_reg_1371),
    .dout(tmp_4_fu_1181_p10)
);

MultiLayerPerceptronDecoupled_mux_864_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
mux_864_32_1_1_U212(
    .din0(p_in_q0),
    .din1(p_in1_q0),
    .din2(p_in2_q0),
    .din3(p_in3_q0),
    .din4(p_in4_q0),
    .din5(p_in5_q0),
    .din6(p_in6_q0),
    .din7(p_in7_q0),
    .din8(zext_ln60_5_reg_1376),
    .dout(tmp_5_fu_1202_p10)
);

MultiLayerPerceptronDecoupled_mux_864_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
mux_864_32_1_1_U213(
    .din0(p_in_q1),
    .din1(p_in1_q1),
    .din2(p_in2_q1),
    .din3(p_in3_q1),
    .din4(p_in4_q1),
    .din5(p_in5_q1),
    .din6(p_in6_q1),
    .din7(p_in7_q1),
    .din8(zext_ln60_6_reg_1381),
    .dout(tmp_6_fu_1245_p10)
);

MultiLayerPerceptronDecoupled_mux_864_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
mux_864_32_1_1_U214(
    .din0(p_in_q0),
    .din1(p_in1_q0),
    .din2(p_in2_q0),
    .din3(p_in3_q0),
    .din4(p_in4_q0),
    .din5(p_in5_q0),
    .din6(p_in6_q0),
    .din7(p_in7_q0),
    .din8(zext_ln60_7_reg_1386),
    .dout(tmp_7_fu_1266_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((p_n_empty_n == 1'b0) | (p_m_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (p_n_out_full_n == 1'b0) | (p_m_out_full_n == 1'b0) | (real_start == 1'b0) | (p_in_offset_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((p_n_empty_n == 1'b0) | (p_m_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (p_n_out_full_n == 1'b0) | (p_m_out_full_n == 1'b0) | (real_start == 1'b0) | (p_in_offset_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_n_empty_n == 1'b0) | (p_m_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (p_n_out_full_n == 1'b0) | (p_m_out_full_n == 1'b0) | (real_start == 1'b0) | (p_in_offset_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_741 <= 29'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln55_reg_1391 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_reg_741 <= add_ln55_reg_1395;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln55_reg_1395 <= add_ln55_fu_851_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln55_reg_1391 <= icmp_ln55_fu_846_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln55_reg_1391 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        lshr_ln60_6_reg_1670 <= {{add_ln60_12_fu_1146_p2[11:3]}};
        lshr_ln60_7_reg_1675 <= {{add_ln60_13_fu_1166_p2[11:3]}};
        tmp_2_reg_1580 <= tmp_2_fu_1035_p10;
        tmp_3_reg_1585 <= tmp_3_fu_1056_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_n_empty_n == 1'b0) | (p_m_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (p_n_out_full_n == 1'b0) | (p_m_out_full_n == 1'b0) | (real_start == 1'b0) | (p_in_offset_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_in_offset_read_reg_1334 <= p_in_offset_dout;
        trunc_ln_reg_1346 <= {{mul_ln54_fu_752_p2[31:3]}};
        zext_ln60_1_reg_1356[2 : 0] <= zext_ln60_1_fu_782_p1[2 : 0];
        zext_ln60_2_reg_1361[2 : 0] <= zext_ln60_2_fu_792_p1[2 : 0];
        zext_ln60_3_reg_1366[2 : 0] <= zext_ln60_3_fu_802_p1[2 : 0];
        zext_ln60_4_reg_1371[2 : 0] <= zext_ln60_4_fu_812_p1[2 : 0];
        zext_ln60_5_reg_1376[2 : 0] <= zext_ln60_5_fu_822_p1[2 : 0];
        zext_ln60_6_reg_1381[2 : 0] <= zext_ln60_6_fu_832_p1[2 : 0];
        zext_ln60_7_reg_1386[2 : 0] <= zext_ln60_7_fu_842_p1[2 : 0];
        zext_ln60_reg_1351[2 : 0] <= zext_ln60_fu_772_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln55_reg_1391 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_1_reg_1495 <= tmp_1_fu_950_p10;
        tmp_reg_1490 <= tmp_fu_929_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln55_reg_1391 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        tmp_4_reg_1680 <= tmp_4_fu_1181_p10;
        tmp_5_reg_1685 <= tmp_5_fu_1202_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln55_fu_846_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_9_reg_1400[11 : 3] <= tmp_9_fu_861_p3[11 : 3];
    end
end

always @ (*) begin
    if ((icmp_ln55_fu_846_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln55_reg_1391 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_phi_fu_745_p4 = add_ln55_reg_1395;
    end else begin
        ap_phi_mux_i_phi_fu_745_p4 = i_reg_741;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            p_in1_address0 = zext_ln60_15_fu_1234_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            p_in1_address0 = zext_ln60_13_fu_1129_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            p_in1_address0 = zext_ln60_11_fu_1023_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            p_in1_address0 = zext_ln60_9_fu_917_p1;
        end else begin
            p_in1_address0 = 'bx;
        end
    end else begin
        p_in1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            p_in1_address1 = zext_ln60_14_fu_1223_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            p_in1_address1 = zext_ln60_12_fu_1097_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            p_in1_address1 = zext_ln60_10_fu_991_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            p_in1_address1 = zext_ln60_8_fu_884_p1;
        end else begin
            p_in1_address1 = 'bx;
        end
    end else begin
        p_in1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_in1_ce0 = 1'b1;
    end else begin
        p_in1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_in1_ce1 = 1'b1;
    end else begin
        p_in1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            p_in2_address0 = zext_ln60_15_fu_1234_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            p_in2_address0 = zext_ln60_13_fu_1129_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            p_in2_address0 = zext_ln60_11_fu_1023_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            p_in2_address0 = zext_ln60_9_fu_917_p1;
        end else begin
            p_in2_address0 = 'bx;
        end
    end else begin
        p_in2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            p_in2_address1 = zext_ln60_14_fu_1223_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            p_in2_address1 = zext_ln60_12_fu_1097_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            p_in2_address1 = zext_ln60_10_fu_991_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            p_in2_address1 = zext_ln60_8_fu_884_p1;
        end else begin
            p_in2_address1 = 'bx;
        end
    end else begin
        p_in2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_in2_ce0 = 1'b1;
    end else begin
        p_in2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_in2_ce1 = 1'b1;
    end else begin
        p_in2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            p_in3_address0 = zext_ln60_15_fu_1234_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            p_in3_address0 = zext_ln60_13_fu_1129_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            p_in3_address0 = zext_ln60_11_fu_1023_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            p_in3_address0 = zext_ln60_9_fu_917_p1;
        end else begin
            p_in3_address0 = 'bx;
        end
    end else begin
        p_in3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            p_in3_address1 = zext_ln60_14_fu_1223_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            p_in3_address1 = zext_ln60_12_fu_1097_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            p_in3_address1 = zext_ln60_10_fu_991_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            p_in3_address1 = zext_ln60_8_fu_884_p1;
        end else begin
            p_in3_address1 = 'bx;
        end
    end else begin
        p_in3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_in3_ce0 = 1'b1;
    end else begin
        p_in3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_in3_ce1 = 1'b1;
    end else begin
        p_in3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            p_in4_address0 = zext_ln60_15_fu_1234_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            p_in4_address0 = zext_ln60_13_fu_1129_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            p_in4_address0 = zext_ln60_11_fu_1023_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            p_in4_address0 = zext_ln60_9_fu_917_p1;
        end else begin
            p_in4_address0 = 'bx;
        end
    end else begin
        p_in4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            p_in4_address1 = zext_ln60_14_fu_1223_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            p_in4_address1 = zext_ln60_12_fu_1097_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            p_in4_address1 = zext_ln60_10_fu_991_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            p_in4_address1 = zext_ln60_8_fu_884_p1;
        end else begin
            p_in4_address1 = 'bx;
        end
    end else begin
        p_in4_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_in4_ce0 = 1'b1;
    end else begin
        p_in4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_in4_ce1 = 1'b1;
    end else begin
        p_in4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            p_in5_address0 = zext_ln60_15_fu_1234_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            p_in5_address0 = zext_ln60_13_fu_1129_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            p_in5_address0 = zext_ln60_11_fu_1023_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            p_in5_address0 = zext_ln60_9_fu_917_p1;
        end else begin
            p_in5_address0 = 'bx;
        end
    end else begin
        p_in5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            p_in5_address1 = zext_ln60_14_fu_1223_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            p_in5_address1 = zext_ln60_12_fu_1097_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            p_in5_address1 = zext_ln60_10_fu_991_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            p_in5_address1 = zext_ln60_8_fu_884_p1;
        end else begin
            p_in5_address1 = 'bx;
        end
    end else begin
        p_in5_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_in5_ce0 = 1'b1;
    end else begin
        p_in5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_in5_ce1 = 1'b1;
    end else begin
        p_in5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            p_in6_address0 = zext_ln60_15_fu_1234_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            p_in6_address0 = zext_ln60_13_fu_1129_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            p_in6_address0 = zext_ln60_11_fu_1023_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            p_in6_address0 = zext_ln60_9_fu_917_p1;
        end else begin
            p_in6_address0 = 'bx;
        end
    end else begin
        p_in6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            p_in6_address1 = zext_ln60_14_fu_1223_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            p_in6_address1 = zext_ln60_12_fu_1097_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            p_in6_address1 = zext_ln60_10_fu_991_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            p_in6_address1 = zext_ln60_8_fu_884_p1;
        end else begin
            p_in6_address1 = 'bx;
        end
    end else begin
        p_in6_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_in6_ce0 = 1'b1;
    end else begin
        p_in6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_in6_ce1 = 1'b1;
    end else begin
        p_in6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            p_in7_address0 = zext_ln60_15_fu_1234_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            p_in7_address0 = zext_ln60_13_fu_1129_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            p_in7_address0 = zext_ln60_11_fu_1023_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            p_in7_address0 = zext_ln60_9_fu_917_p1;
        end else begin
            p_in7_address0 = 'bx;
        end
    end else begin
        p_in7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            p_in7_address1 = zext_ln60_14_fu_1223_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            p_in7_address1 = zext_ln60_12_fu_1097_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            p_in7_address1 = zext_ln60_10_fu_991_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            p_in7_address1 = zext_ln60_8_fu_884_p1;
        end else begin
            p_in7_address1 = 'bx;
        end
    end else begin
        p_in7_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_in7_ce0 = 1'b1;
    end else begin
        p_in7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_in7_ce1 = 1'b1;
    end else begin
        p_in7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            p_in_address0 = zext_ln60_15_fu_1234_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            p_in_address0 = zext_ln60_13_fu_1129_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            p_in_address0 = zext_ln60_11_fu_1023_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            p_in_address0 = zext_ln60_9_fu_917_p1;
        end else begin
            p_in_address0 = 'bx;
        end
    end else begin
        p_in_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            p_in_address1 = zext_ln60_14_fu_1223_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            p_in_address1 = zext_ln60_12_fu_1097_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            p_in_address1 = zext_ln60_10_fu_991_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            p_in_address1 = zext_ln60_8_fu_884_p1;
        end else begin
            p_in_address1 = 'bx;
        end
    end else begin
        p_in_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_in_ce0 = 1'b1;
    end else begin
        p_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_in_ce1 = 1'b1;
    end else begin
        p_in_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_in_offset_blk_n = p_in_offset_empty_n;
    end else begin
        p_in_offset_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_n_empty_n == 1'b0) | (p_m_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (p_n_out_full_n == 1'b0) | (p_m_out_full_n == 1'b0) | (real_start == 1'b0) | (p_in_offset_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_in_offset_read = 1'b1;
    end else begin
        p_in_offset_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_m_blk_n = p_m_empty_n;
    end else begin
        p_m_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_m_out_blk_n = p_m_out_full_n;
    end else begin
        p_m_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_n_empty_n == 1'b0) | (p_m_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (p_n_out_full_n == 1'b0) | (p_m_out_full_n == 1'b0) | (real_start == 1'b0) | (p_in_offset_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_m_out_write = 1'b1;
    end else begin
        p_m_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_n_empty_n == 1'b0) | (p_m_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (p_n_out_full_n == 1'b0) | (p_m_out_full_n == 1'b0) | (real_start == 1'b0) | (p_in_offset_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_m_read = 1'b1;
    end else begin
        p_m_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_n_blk_n = p_n_empty_n;
    end else begin
        p_n_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_n_out_blk_n = p_n_out_full_n;
    end else begin
        p_n_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_n_empty_n == 1'b0) | (p_m_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (p_n_out_full_n == 1'b0) | (p_m_out_full_n == 1'b0) | (real_start == 1'b0) | (p_in_offset_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_n_out_write = 1'b1;
    end else begin
        p_n_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_n_empty_n == 1'b0) | (p_m_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (p_n_out_full_n == 1'b0) | (p_m_out_full_n == 1'b0) | (real_start == 1'b0) | (p_in_offset_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_n_read = 1'b1;
    end else begin
        p_n_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln55_reg_1391 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_out_blk_n = p_out_full_n;
    end else begin
        p_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln55_reg_1391 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_out_write = 1'b1;
    end else begin
        p_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_n_empty_n == 1'b0) | (p_m_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (p_n_out_full_n == 1'b0) | (p_m_out_full_n == 1'b0) | (real_start == 1'b0) | (p_in_offset_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln55_fu_846_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln55_fu_846_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln55_fu_851_p2 = (ap_phi_mux_i_phi_fu_745_p4 + 29'd1);

assign add_ln60_10_fu_1082_p2 = (p_in_offset_read_reg_1334 + or_ln60_3_fu_1077_p2);

assign add_ln60_11_fu_1114_p2 = (p_in_offset_read_reg_1334 + or_ln60_4_fu_1109_p2);

assign add_ln60_12_fu_1146_p2 = (p_in_offset_read_reg_1334 + or_ln60_5_fu_1141_p2);

assign add_ln60_13_fu_1166_p2 = (p_in_offset_read_reg_1334 + or_ln60_6_fu_1161_p2);

assign add_ln60_1_fu_786_p2 = (3'd2 + trunc_ln60_fu_768_p1);

assign add_ln60_2_fu_796_p2 = (3'd3 + trunc_ln60_fu_768_p1);

assign add_ln60_3_fu_816_p2 = ($signed(3'd5) + $signed(trunc_ln60_fu_768_p1));

assign add_ln60_4_fu_826_p2 = ($signed(3'd6) + $signed(trunc_ln60_fu_768_p1));

assign add_ln60_5_fu_836_p2 = ($signed(3'd7) + $signed(trunc_ln60_fu_768_p1));

assign add_ln60_6_fu_869_p2 = (p_in_offset_read_reg_1334 + tmp_9_fu_861_p3);

assign add_ln60_7_fu_902_p2 = (p_in_offset_read_reg_1334 + or_ln60_fu_896_p2);

assign add_ln60_8_fu_976_p2 = (p_in_offset_read_reg_1334 + or_ln60_1_fu_971_p2);

assign add_ln60_9_fu_1008_p2 = (p_in_offset_read_reg_1334 + or_ln60_2_fu_1003_p2);

assign add_ln60_fu_776_p2 = (3'd1 + trunc_ln60_fu_768_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((p_out_full_n == 1'b0) & (icmp_ln55_reg_1391 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((p_out_full_n == 1'b0) & (icmp_ln55_reg_1391 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((p_out_full_n == 1'b0) & (icmp_ln55_reg_1391 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((p_n_empty_n == 1'b0) | (p_m_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (p_n_out_full_n == 1'b0) | (p_m_out_full_n == 1'b0) | (real_start == 1'b0) | (p_in_offset_empty_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter1 = ((p_out_full_n == 1'b0) & (icmp_ln55_reg_1391 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign empty_fu_857_p1 = ap_phi_mux_i_phi_fu_745_p4[8:0];

assign icmp_ln55_fu_846_p2 = ((ap_phi_mux_i_phi_fu_745_p4 == trunc_ln_reg_1346) ? 1'b1 : 1'b0);

assign l_v_29_fu_1290_p1 = tmp_1_reg_1495;

assign l_v_30_fu_1293_p1 = tmp_2_reg_1580;

assign l_v_31_fu_1296_p1 = tmp_3_reg_1585;

assign l_v_32_fu_1299_p1 = tmp_4_reg_1680;

assign l_v_33_fu_1302_p1 = tmp_5_reg_1685;

assign l_v_34_fu_1305_p1 = tmp_6_fu_1245_p10;

assign l_v_35_fu_1309_p1 = tmp_7_fu_1266_p10;

assign l_v_fu_1287_p1 = tmp_reg_1490;

assign lshr_ln60_1_fu_907_p4 = {{add_ln60_7_fu_902_p2[11:3]}};

assign lshr_ln60_2_fu_981_p4 = {{add_ln60_8_fu_976_p2[11:3]}};

assign lshr_ln60_3_fu_1013_p4 = {{add_ln60_9_fu_1008_p2[11:3]}};

assign lshr_ln60_4_fu_1087_p4 = {{add_ln60_10_fu_1082_p2[11:3]}};

assign lshr_ln60_5_fu_1119_p4 = {{add_ln60_11_fu_1114_p2[11:3]}};

assign lshr_ln_fu_874_p4 = {{add_ln60_6_fu_869_p2[11:3]}};

assign or_ln60_1_fu_971_p2 = (tmp_9_reg_1400 | 12'd2);

assign or_ln60_2_fu_1003_p2 = (tmp_9_reg_1400 | 12'd3);

assign or_ln60_3_fu_1077_p2 = (tmp_9_reg_1400 | 12'd4);

assign or_ln60_4_fu_1109_p2 = (tmp_9_reg_1400 | 12'd5);

assign or_ln60_5_fu_1141_p2 = (tmp_9_reg_1400 | 12'd6);

assign or_ln60_6_fu_1161_p2 = (tmp_9_reg_1400 | 12'd7);

assign or_ln60_fu_896_p2 = (tmp_9_fu_861_p3 | 12'd1);

assign p_m_out_din = p_m_dout;

assign p_n_out_din = p_n_dout;

assign p_out_din = {{{{{{{{l_v_35_fu_1309_p1}, {l_v_34_fu_1305_p1}}, {l_v_33_fu_1302_p1}}, {l_v_32_fu_1299_p1}}, {l_v_31_fu_1296_p1}}, {l_v_30_fu_1293_p1}}, {l_v_29_fu_1290_p1}}, {l_v_fu_1287_p1}};

assign start_out = real_start;

assign tmp_9_fu_861_p3 = {{empty_fu_857_p1}, {3'd0}};

assign trunc_ln60_fu_768_p1 = p_in_offset_dout[2:0];

assign xor_ln60_fu_806_p2 = (trunc_ln60_fu_768_p1 ^ 3'd4);

assign zext_ln60_10_fu_991_p1 = lshr_ln60_2_fu_981_p4;

assign zext_ln60_11_fu_1023_p1 = lshr_ln60_3_fu_1013_p4;

assign zext_ln60_12_fu_1097_p1 = lshr_ln60_4_fu_1087_p4;

assign zext_ln60_13_fu_1129_p1 = lshr_ln60_5_fu_1119_p4;

assign zext_ln60_14_fu_1223_p1 = lshr_ln60_6_reg_1670;

assign zext_ln60_15_fu_1234_p1 = lshr_ln60_7_reg_1675;

assign zext_ln60_1_fu_782_p1 = add_ln60_fu_776_p2;

assign zext_ln60_2_fu_792_p1 = add_ln60_1_fu_786_p2;

assign zext_ln60_3_fu_802_p1 = add_ln60_2_fu_796_p2;

assign zext_ln60_4_fu_812_p1 = xor_ln60_fu_806_p2;

assign zext_ln60_5_fu_822_p1 = add_ln60_3_fu_816_p2;

assign zext_ln60_6_fu_832_p1 = add_ln60_4_fu_826_p2;

assign zext_ln60_7_fu_842_p1 = add_ln60_5_fu_836_p2;

assign zext_ln60_8_fu_884_p1 = lshr_ln_fu_874_p4;

assign zext_ln60_9_fu_917_p1 = lshr_ln60_1_fu_907_p4;

assign zext_ln60_fu_772_p1 = trunc_ln60_fu_768_p1;

always @ (posedge ap_clk) begin
    zext_ln60_reg_1351[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln60_1_reg_1356[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln60_2_reg_1361[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln60_3_reg_1366[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln60_4_reg_1371[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln60_5_reg_1376[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln60_6_reg_1381[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln60_7_reg_1386[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_9_reg_1400[2:0] <= 3'b000;
end

endmodule //MultiLayerPerceptronDecoupled_gem2Stream_float_8u_15
