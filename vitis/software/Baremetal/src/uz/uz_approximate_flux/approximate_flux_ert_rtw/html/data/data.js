var dataJson = {"arch":{"ispc":true,"isunix":false,"ismac":false},"build":"uz_approximate_flux/approximate_flux","ref":false,"files":[{"name":"approximate_flux.c","type":"source","group":"model","path":"C:\\Users\\Philipp\\uz_temp\\ultrazohm_sw\\vitis\\software\\Baremetal\\src\\uz\\uz_approximate_flux\\approximate_flux_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: approximate_flux.c\r\n *\r\n * Code generated for Simulink model 'approximate_flux'.\r\n *\r\n * Model version                  : 7.3\r\n * Simulink Coder version         : 23.2 (R2023b) 01-Aug-2023\r\n * C/C++ source code generated on : Wed Feb 21 16:05:24 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-R\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. Traceability\r\n * Validation result: Passed (12), Warning (1), Error (0)\r\n */\r\n\r\n#include \"approximate_flux.h\"\r\n#include <math.h>\r\n#include \"rtwtypes.h\"\r\n#include <string.h>\r\n\r\n/* Model step function */\r\nvoid approximate_flux_step(RT_MODEL *const rtM)\r\n{\r\n  ExtU *rtU = (ExtU *) rtM->inputs;\r\n  ExtY *rtY = (ExtY *) rtM->outputs;\r\n  real32_T psid_approx_tmp;\r\n  real32_T psid_approx_tmp_0;\r\n  real32_T psid_approx_tmp_1;\r\n  real32_T rtb_psidself;\r\n  real32_T rtb_psidself_tmp;\r\n\r\n  /* Product: '<S2>/Product' incorporates:\r\n   *  Product: '<S3>/Product7'\r\n   *  Sum: '<S2>/Sum'\r\n   */\r\n  rtb_psidself_tmp = (rtU->id - rtU->fitting_parameters[2]) *\r\n    rtU->fitting_parameters[1];\r\n\r\n  /* Product: '<S2>/Product1' incorporates:\r\n   *  Product: '<S2>/Product'\r\n   *  Trigonometry: '<S2>/Tanh'\r\n   */\r\n  rtb_psidself = tanhf(rtb_psidself_tmp) * rtU->fitting_parameters[0];\r\n\r\n  /* Product: '<S2>/Product4' incorporates:\r\n   *  Product: '<S3>/Product'\r\n   */\r\n  psid_approx_tmp = rtU->iq * rtU->fitting_parameters[7];\r\n\r\n  /* Product: '<S2>/Product5' incorporates:\r\n   *  Product: '<S3>/Product2'\r\n   */\r\n  psid_approx_tmp_0 = rtU->iq * rtU->fitting_parameters[10];\r\n\r\n  /* Product: '<S2>/Product2' incorporates:\r\n   *  Product: '<S3>/Product10'\r\n   *  Sum: '<S2>/Sum1'\r\n   */\r\n  psid_approx_tmp_1 = (rtU->id - rtU->fitting_parameters[5]) *\r\n    rtU->fitting_parameters[4];\r\n\r\n  /* Outport: '<Root>/psid_approx' incorporates:\r\n   *  Math: '<S2>/Log'\r\n   *  Math: '<S2>/Log1'\r\n   *  Product: '<S2>/Product10'\r\n   *  Product: '<S2>/Product12'\r\n   *  Product: '<S2>/Product2'\r\n   *  Product: '<S2>/Product3'\r\n   *  Product: '<S2>/Product4'\r\n   *  Product: '<S2>/Product5'\r\n   *  Product: '<S2>/Product6'\r\n   *  Product: '<S2>/Product7'\r\n   *  Product: '<S2>/Product8'\r\n   *  Sum: '<S2>/Sum2'\r\n   *  Sum: '<S2>/Sum3'\r\n   *  Sum: '<S2>/Sum7'\r\n   *  Trigonometry: '<S2>/Tanh1'\r\n   *  Trigonometry: '<S2>/Tanh2'\r\n   *  Trigonometry: '<S2>/Tanh3'\r\n   *\r\n   * About '<S2>/Log':\r\n   *  Operator: log\r\n   *\r\n   * About '<S2>/Log1':\r\n   *  Operator: log\r\n   */\r\n  rtY->psid_approx = rtb_psidself - ((rtU->iq * rtU->iq *\r\n    rtU->fitting_parameters[22] + logf(coshf(psid_approx_tmp)) *\r\n    rtU->fitting_parameters[19]) - logf(coshf(psid_approx_tmp_0)) *\r\n    rtU->fitting_parameters[18]) * (rtb_psidself - tanhf(psid_approx_tmp_1) *\r\n    rtU->fitting_parameters[3]) * rtU->fitting_parameters[12];\r\n\r\n  /* Sum: '<S3>/Sum4' incorporates:\r\n   *  Product: '<S3>/Product1'\r\n   *  Product: '<S3>/Product5'\r\n   *  Trigonometry: '<S3>/Tanh'\r\n   */\r\n  rtb_psidself = tanhf(psid_approx_tmp) * rtU->fitting_parameters[6] + rtU->iq *\r\n    rtU->fitting_parameters[8];\r\n\r\n  /* Outport: '<Root>/psiq_approx' incorporates:\r\n   *  Math: '<S3>/Log1'\r\n   *  Math: '<S3>/Log2'\r\n   *  Product: '<S3>/Product20'\r\n   *  Product: '<S3>/Product3'\r\n   *  Product: '<S3>/Product4'\r\n   *  Product: '<S3>/Product6'\r\n   *  Product: '<S3>/Product9'\r\n   *  Sum: '<S3>/Sum1'\r\n   *  Sum: '<S3>/Sum10'\r\n   *  Sum: '<S3>/Sum2'\r\n   *  Sum: '<S3>/Sum5'\r\n   *  Trigonometry: '<S3>/Tanh1'\r\n   *  Trigonometry: '<S3>/Tanh2'\r\n   *  Trigonometry: '<S3>/Tanh4'\r\n   *\r\n   * About '<S3>/Log1':\r\n   *  Operator: log\r\n   *\r\n   * About '<S3>/Log2':\r\n   *  Operator: log\r\n   */\r\n  rtY->psiq_approx = rtb_psidself - (rtb_psidself - (tanhf(psid_approx_tmp_0) *\r\n    rtU->fitting_parameters[9] + rtU->iq * rtU->fitting_parameters[11])) * (logf\r\n    (coshf(rtb_psidself_tmp)) * rtU->fitting_parameters[21] - logf(coshf\r\n    (psid_approx_tmp_1)) * rtU->fitting_parameters[20]) *\r\n    rtU->fitting_parameters[13];\r\n}\r\n\r\n/* Model initialize function */\r\nvoid approximate_flux_initialize(RT_MODEL *const rtM)\r\n{\r\n  ExtU *rtU = (ExtU *) rtM->inputs;\r\n  ExtY *rtY = (ExtY *) rtM->outputs;\r\n\r\n  /* Registration code */\r\n\r\n  /* external inputs */\r\n  (void)memset(rtU, 0, sizeof(ExtU));\r\n\r\n  /* external outputs */\r\n  (void)memset(rtY, 0, sizeof(ExtY));\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"approximate_flux.h","type":"header","group":"model","path":"C:\\Users\\Philipp\\uz_temp\\ultrazohm_sw\\vitis\\software\\Baremetal\\src\\uz\\uz_approximate_flux\\approximate_flux_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: approximate_flux.h\r\n *\r\n * Code generated for Simulink model 'approximate_flux'.\r\n *\r\n * Model version                  : 7.3\r\n * Simulink Coder version         : 23.2 (R2023b) 01-Aug-2023\r\n * C/C++ source code generated on : Wed Feb 21 16:05:24 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-R\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. Traceability\r\n * Validation result: Passed (12), Warning (1), Error (0)\r\n */\r\n\r\n#ifndef RTW_HEADER_approximate_flux_h_\r\n#define RTW_HEADER_approximate_flux_h_\r\n#ifndef approximate_flux_COMMON_INCLUDES_\r\n#define approximate_flux_COMMON_INCLUDES_\r\n#include \"rtwtypes.h\"\r\n#endif                                 /* approximate_flux_COMMON_INCLUDES_ */\r\n\r\n#include <stddef.h>\r\n\r\n/* Macros for accessing real-time model data structure */\r\n#ifndef rtmGetU\r\n#define rtmGetU(rtm)                   ((rtm)->inputs)\r\n#endif\r\n\r\n#ifndef rtmSetU\r\n#define rtmSetU(rtm, val)              ((rtm)->inputs = (val))\r\n#endif\r\n\r\n#ifndef rtmGetY\r\n#define rtmGetY(rtm)                   ((rtm)->outputs)\r\n#endif\r\n\r\n#ifndef rtmSetY\r\n#define rtmSetY(rtm, val)              ((rtm)->outputs = (val))\r\n#endif\r\n\r\n#define approximate_flux_M             (rtM)\r\n\r\n/* Forward declaration for rtModel */\r\ntypedef struct tag_RTM RT_MODEL;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\ntypedef struct {\r\n  real32_T id;                         /* '<Root>/id' */\r\n  real32_T iq;                         /* '<Root>/iq' */\r\n  real32_T fitting_parameters[23];     /* '<Root>/fitting_parameters' */\r\n} ExtU;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\ntypedef struct {\r\n  real32_T psid_approx;                /* '<Root>/psid_approx' */\r\n  real32_T psiq_approx;                /* '<Root>/psiq_approx' */\r\n} ExtY;\r\n\r\n/* Real-time Model Data Structure */\r\nstruct tag_RTM {\r\n  ExtU *inputs;\r\n  ExtY *outputs;\r\n};\r\n\r\n/* Model entry point functions */\r\nextern void approximate_flux_initialize(RT_MODEL *const rtM);\r\nextern void approximate_flux_step(RT_MODEL *const rtM);\r\n\r\n/*-\r\n * The generated code includes comments that allow you to trace directly\r\n * back to the appropriate location in the model.  The basic format\r\n * is <system>/block_name, where system is the system number (uniquely\r\n * assigned by Simulink) and block_name is the name of the block.\r\n *\r\n * Note that this particular code originates from a subsystem build,\r\n * and has its own system numbers different from the parent model.\r\n * Refer to the system hierarchy for this subsystem below, and use the\r\n * MATLAB hilite_system command to trace the generated code back\r\n * to the parent model.  For example,\r\n *\r\n * hilite_system('uz_approximate_flux/approximate_flux')    - opens subsystem uz_approximate_flux/approximate_flux\r\n * hilite_system('uz_approximate_flux/approximate_flux/Kp') - opens and selects block Kp\r\n *\r\n * Here is the system hierarchy for this model\r\n *\r\n * '<Root>' : 'uz_approximate_flux'\r\n * '<S1>'   : 'uz_approximate_flux/approximate_flux'\r\n * '<S2>'   : 'uz_approximate_flux/approximate_flux/approximate_flux_d'\r\n * '<S3>'   : 'uz_approximate_flux/approximate_flux/approximate_flux_q'\r\n */\r\n\r\n/*-\r\n * Requirements for '<Root>': approximate_flux\r\n\r\n */\r\n#endif                                 /* RTW_HEADER_approximate_flux_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtwtypes.h","type":"header","group":"utility","path":"C:\\Users\\Philipp\\uz_temp\\ultrazohm_sw\\vitis\\software\\Baremetal\\src\\uz\\uz_approximate_flux\\approximate_flux_ert_rtw","tag":"","groupDisplay":"Utility files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtwtypes.h\r\n *\r\n * Code generated for Simulink model 'approximate_flux'.\r\n *\r\n * Model version                  : 7.3\r\n * Simulink Coder version         : 23.2 (R2023b) 01-Aug-2023\r\n * C/C++ source code generated on : Wed Feb 21 16:05:24 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-R\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. Traceability\r\n * Validation result: Passed (12), Warning (1), Error (0)\r\n */\r\n\r\n#ifndef RTWTYPES_H\r\n#define RTWTYPES_H\r\n\r\n/* Logical type definitions */\r\n#if (!defined(__cplusplus))\r\n#ifndef false\r\n#define false                          (0U)\r\n#endif\r\n\r\n#ifndef true\r\n#define true                           (1U)\r\n#endif\r\n#endif\r\n\r\n/*=======================================================================*\r\n * Target hardware information\r\n *   Device type: ARM Compatible->ARM Cortex-R\r\n *   Number of bits:     char:   8    short:   16    int:  32\r\n *                       long:  32    long long:  64\r\n *                       native word size:  32\r\n *   Byte ordering: LittleEndian\r\n *   Signed integer division rounds to: Zero\r\n *   Shift right on a signed integer as arithmetic shift: on\r\n *=======================================================================*/\r\n\r\n/*=======================================================================*\r\n * Fixed width word size data types:                                     *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *   real32_T, real64_T           - 32 and 64 bit floating point numbers *\r\n *=======================================================================*/\r\ntypedef signed char int8_T;\r\ntypedef unsigned char uint8_T;\r\ntypedef short int16_T;\r\ntypedef unsigned short uint16_T;\r\ntypedef int int32_T;\r\ntypedef unsigned int uint32_T;\r\ntypedef long long int64_T;\r\ntypedef unsigned long long uint64_T;\r\ntypedef float real32_T;\r\ntypedef double real64_T;\r\n\r\n/*===========================================================================*\r\n * Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\r\n *                           real_T, time_T, ulong_T, ulonglong_T.           *\r\n *===========================================================================*/\r\ntypedef double real_T;\r\ntypedef double time_T;\r\ntypedef unsigned char boolean_T;\r\ntypedef int int_T;\r\ntypedef unsigned int uint_T;\r\ntypedef unsigned long ulong_T;\r\ntypedef unsigned long long ulonglong_T;\r\ntypedef char char_T;\r\ntypedef unsigned char uchar_T;\r\ntypedef char_T byte_T;\r\n\r\n/*===========================================================================*\r\n * Complex number type definitions                                           *\r\n *===========================================================================*/\r\n#define CREAL_T\r\n\r\ntypedef struct {\r\n  real32_T re;\r\n  real32_T im;\r\n} creal32_T;\r\n\r\ntypedef struct {\r\n  real64_T re;\r\n  real64_T im;\r\n} creal64_T;\r\n\r\ntypedef struct {\r\n  real_T re;\r\n  real_T im;\r\n} creal_T;\r\n\r\n#define CINT8_T\r\n\r\ntypedef struct {\r\n  int8_T re;\r\n  int8_T im;\r\n} cint8_T;\r\n\r\n#define CUINT8_T\r\n\r\ntypedef struct {\r\n  uint8_T re;\r\n  uint8_T im;\r\n} cuint8_T;\r\n\r\n#define CINT16_T\r\n\r\ntypedef struct {\r\n  int16_T re;\r\n  int16_T im;\r\n} cint16_T;\r\n\r\n#define CUINT16_T\r\n\r\ntypedef struct {\r\n  uint16_T re;\r\n  uint16_T im;\r\n} cuint16_T;\r\n\r\n#define CINT32_T\r\n\r\ntypedef struct {\r\n  int32_T re;\r\n  int32_T im;\r\n} cint32_T;\r\n\r\n#define CUINT32_T\r\n\r\ntypedef struct {\r\n  uint32_T re;\r\n  uint32_T im;\r\n} cuint32_T;\r\n\r\n#define CINT64_T\r\n\r\ntypedef struct {\r\n  int64_T re;\r\n  int64_T im;\r\n} cint64_T;\r\n\r\n#define CUINT64_T\r\n\r\ntypedef struct {\r\n  uint64_T re;\r\n  uint64_T im;\r\n} cuint64_T;\r\n\r\n/*=======================================================================*\r\n * Min and Max:                                                          *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *=======================================================================*/\r\n#define MAX_int8_T                     ((int8_T)(127))\r\n#define MIN_int8_T                     ((int8_T)(-128))\r\n#define MAX_uint8_T                    ((uint8_T)(255U))\r\n#define MAX_int16_T                    ((int16_T)(32767))\r\n#define MIN_int16_T                    ((int16_T)(-32768))\r\n#define MAX_uint16_T                   ((uint16_T)(65535U))\r\n#define MAX_int32_T                    ((int32_T)(2147483647))\r\n#define MIN_int32_T                    ((int32_T)(-2147483647-1))\r\n#define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))\r\n#define MAX_int64_T                    ((int64_T)(9223372036854775807LL))\r\n#define MIN_int64_T                    ((int64_T)(-9223372036854775807LL-1LL))\r\n#define MAX_uint64_T                   ((uint64_T)(0xFFFFFFFFFFFFFFFFULL))\r\n\r\n/* Block D-Work pointer type */\r\ntypedef void * pointer_T;\r\n\r\n#endif                                 /* RTWTYPES_H */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtmodel.h","type":"header","group":"interface","path":"C:\\Users\\Philipp\\uz_temp\\ultrazohm_sw\\vitis\\software\\Baremetal\\src\\uz\\uz_approximate_flux\\approximate_flux_ert_rtw","tag":"","groupDisplay":"Interface files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtmodel.h\r\n *\r\n * Code generated for Simulink model 'approximate_flux'.\r\n *\r\n * Model version                  : 7.3\r\n * Simulink Coder version         : 23.2 (R2023b) 01-Aug-2023\r\n * C/C++ source code generated on : Wed Feb 21 16:05:24 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-R\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. Traceability\r\n * Validation result: Passed (12), Warning (1), Error (0)\r\n */\r\n\r\n#ifndef RTW_HEADER_rtmodel_h_\r\n#define RTW_HEADER_rtmodel_h_\r\n#include \"approximate_flux.h\"\r\n\r\n/*\r\n * ROOT_IO_FORMAT: 0 (Individual arguments)\r\n * ROOT_IO_FORMAT: 1 (Structure reference)\r\n * ROOT_IO_FORMAT: 2 (Part of model data structure)\r\n */\r\n#define ROOT_IO_FORMAT                 2\r\n\r\n/* Macros generated for backwards compatibility  */\r\n#ifndef rtmGetErrorStatus\r\n#define rtmGetErrorStatus(rtm)         ((void*) 0)\r\n#endif\r\n\r\n#ifndef rtmSetErrorStatus\r\n#define rtmSetErrorStatus(rtm, val)    ((void) 0)\r\n#endif\r\n\r\n#ifndef rtmGetStopRequested\r\n#define rtmGetStopRequested(rtm)       ((void*) 0)\r\n#endif\r\n#endif                                 /* RTW_HEADER_rtmodel_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"}],"trace":"{\"model\":\"approximate_flux\",\"sources\":[\"approximate_flux.c\",\"approximate_flux.h\"],\"categoricalProps\":[\"ModelElemCategory\",\"StorageClass\"],\"categoricalValues\":[\"Inports\",\"Default\",\"Outports\"],\"sidPrefixes\":[\"approximate_flux\"],\"fileRecords\":{\"1\":{\"records\":[{\"tk\":[55,3,55,11],\"els\":[\"1:569\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[55,12,55,14],\"els\":[\"1:569\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[55,14,55,15],\"els\":[\"1:569\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[56,3,56,11],\"els\":[\"1:570\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[56,12,56,14],\"els\":[\"1:570\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[56,14,56,15],\"els\":[\"1:570\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[57,3,57,11],\"els\":[\"1:571\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[57,12,57,30],\"els\":[\"1:571\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[57,30,57,31],\"els\":[\"1:571\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[57,31,57,33],\"els\":[\"1:571\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[57,33,57,34],\"els\":[\"1:571\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[57,34,57,35],\"els\":[\"1:571\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[62,3,62,11],\"els\":[\"1:572\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[62,12,62,23],\"els\":[\"1:572\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[62,23,62,24],\"els\":[\"1:572\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[63,3,63,11],\"els\":[\"1:573\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[63,12,63,23],\"els\":[\"1:573\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[63,23,63,24],\"els\":[\"1:573\"],\"ct\":{\"1\":1,\"0\":2}}]},\"0\":{\"records\":[{\"tk\":[42,3,42,19],\"els\":[\"0:516\"]},{\"tk\":[42,20,42,21],\"els\":[\"0:516\",\"0:555\"]},{\"tk\":[42,31,42,32],\"els\":[\"0:527\"]},{\"tk\":[42,56,42,57],\"els\":[\"0:527\"]},{\"tk\":[42,57,42,58],\"els\":[\"0:527\"]},{\"tk\":[42,61,42,62],\"els\":[\"0:516\"]},{\"tk\":[43,28,43,29],\"els\":[\"0:516\"]},{\"tk\":[43,29,43,30],\"els\":[\"0:516\"]},{\"tk\":[49,3,49,15],\"els\":[\"0:517#out:1\"]},{\"tk\":[49,16,49,17],\"els\":[\"0:517\"]},{\"tk\":[49,18,49,23],\"els\":[\"0:532\"]},{\"tk\":[49,24,49,40],\"els\":[\"0:516\"]},{\"tk\":[49,42,49,43],\"els\":[\"0:517\"]},{\"tk\":[49,67,49,68],\"els\":[\"0:517\"]},{\"tk\":[49,68,49,69],\"els\":[\"0:517\"]},{\"tk\":[54,3,54,18],\"els\":[\"0:522\"]},{\"tk\":[54,19,54,20],\"els\":[\"0:522\",\"0:546\"]},{\"tk\":[54,29,54,30],\"els\":[\"0:522\"]},{\"tk\":[54,54,54,55],\"els\":[\"0:522\"]},{\"tk\":[54,55,54,56],\"els\":[\"0:522\"]},{\"tk\":[59,3,59,20],\"els\":[\"0:523\"]},{\"tk\":[59,21,59,22],\"els\":[\"0:523\",\"0:549\"]},{\"tk\":[59,31,59,32],\"els\":[\"0:523\"]},{\"tk\":[59,56,59,57],\"els\":[\"0:523\"]},{\"tk\":[59,57,59,59],\"els\":[\"0:523\"]},{\"tk\":[65,3,65,20],\"els\":[\"0:520\"]},{\"tk\":[65,21,65,22],\"els\":[\"0:520\",\"0:548\"]},{\"tk\":[65,32,65,33],\"els\":[\"0:528\"]},{\"tk\":[65,57,65,58],\"els\":[\"0:528\"]},{\"tk\":[65,58,65,59],\"els\":[\"0:528\"]},{\"tk\":[65,62,65,63],\"els\":[\"0:520\"]},{\"tk\":[66,28,66,29],\"els\":[\"0:520\"]},{\"tk\":[66,29,66,30],\"els\":[\"0:520\"]},{\"tk\":[93,20,93,21],\"els\":[\"0:572\"]},{\"tk\":[93,22,93,34],\"els\":[\"0:517#out:1\"]},{\"tk\":[93,35,93,36],\"els\":[\"0:531\"]},{\"tk\":[93,47,93,48],\"els\":[\"0:526\"]},{\"tk\":[93,57,93,58],\"els\":[\"0:525\"]},{\"tk\":[94,28,94,29],\"els\":[\"0:525\"]},{\"tk\":[94,29,94,31],\"els\":[\"0:525\"]},{\"tk\":[94,33,94,34],\"els\":[\"0:530\"]},{\"tk\":[94,35,94,39],\"els\":[\"0:514\"]},{\"tk\":[94,40,94,45],\"els\":[\"0:534\"]},{\"tk\":[94,46,94,61],\"els\":[\"0:522\"]},{\"tk\":[94,64,94,65],\"els\":[\"0:524\"]},{\"tk\":[95,28,95,29],\"els\":[\"0:524\"]},{\"tk\":[95,29,95,31],\"els\":[\"0:524\"]},{\"tk\":[95,34,95,35],\"els\":[\"0:530\"]},{\"tk\":[95,36,95,40],\"els\":[\"0:515\"]},{\"tk\":[95,41,95,46],\"els\":[\"0:535\"]},{\"tk\":[95,47,95,64],\"els\":[\"0:523\"]},{\"tk\":[95,67,95,68],\"els\":[\"0:519\"]},{\"tk\":[96,28,96,29],\"els\":[\"0:519\"]},{\"tk\":[96,29,96,31],\"els\":[\"0:519\"]},{\"tk\":[96,34,96,35],\"els\":[\"0:518\"]},{\"tk\":[96,37,96,49],\"els\":[\"0:517#out:1\"]},{\"tk\":[96,50,96,51],\"els\":[\"0:529\"]},{\"tk\":[96,52,96,57],\"els\":[\"0:533\"]},{\"tk\":[96,58,96,75],\"els\":[\"0:520\"]},{\"tk\":[96,77,96,78],\"els\":[\"0:521\"]},{\"tk\":[97,28,97,29],\"els\":[\"0:521\"]},{\"tk\":[97,29,97,30],\"els\":[\"0:521\"]},{\"tk\":[97,33,97,34],\"els\":[\"0:518\"]},{\"tk\":[97,58,97,59],\"els\":[\"0:518\"]},{\"tk\":[97,59,97,61],\"els\":[\"0:518\"]},{\"tk\":[104,3,104,15],\"els\":[\"0:517#out:1\"]},{\"tk\":[104,16,104,17],\"els\":[\"0:561\"]},{\"tk\":[104,18,104,23],\"els\":[\"0:564\"]},{\"tk\":[104,41,104,42],\"els\":[\"0:547\"]},{\"tk\":[104,66,104,67],\"els\":[\"0:547\"]},{\"tk\":[104,67,104,68],\"els\":[\"0:547\"]},{\"tk\":[104,70,104,71],\"els\":[\"0:561\"]},{\"tk\":[104,80,104,81],\"els\":[\"0:553\"]},{\"tk\":[105,28,105,29],\"els\":[\"0:553\"]},{\"tk\":[105,29,105,30],\"els\":[\"0:553\"]},{\"tk\":[129,20,129,21],\"els\":[\"0:573\"]},{\"tk\":[129,22,129,34],\"els\":[\"0:517#out:1\"]},{\"tk\":[129,35,129,36],\"els\":[\"0:558\"]},{\"tk\":[129,38,129,50],\"els\":[\"0:517#out:1\"]},{\"tk\":[129,51,129,52],\"els\":[\"0:559\"]},{\"tk\":[129,54,129,59],\"els\":[\"0:565\"]},{\"tk\":[129,79,129,80],\"els\":[\"0:551\"]},{\"tk\":[130,28,130,29],\"els\":[\"0:551\"]},{\"tk\":[130,29,130,30],\"els\":[\"0:551\"]},{\"tk\":[130,32,130,33],\"els\":[\"0:557\"]},{\"tk\":[130,42,130,43],\"els\":[\"0:554\"]},{\"tk\":[130,67,130,68],\"els\":[\"0:554\"]},{\"tk\":[130,68,130,70],\"els\":[\"0:554\"]},{\"tk\":[130,74,130,75],\"els\":[\"0:550\"]},{\"tk\":[130,77,130,81],\"els\":[\"0:545\"]},{\"tk\":[131,6,131,11],\"els\":[\"0:567\"]},{\"tk\":[131,31,131,32],\"els\":[\"0:552\"]},{\"tk\":[131,56,131,57],\"els\":[\"0:552\"]},{\"tk\":[131,57,131,59],\"els\":[\"0:552\"]},{\"tk\":[131,61,131,62],\"els\":[\"0:562\"]},{\"tk\":[131,63,131,67],\"els\":[\"0:544\"]},{\"tk\":[131,68,131,73],\"els\":[\"0:566\"]},{\"tk\":[132,26,132,27],\"els\":[\"0:556\"]},{\"tk\":[132,51,132,52],\"els\":[\"0:556\"]},{\"tk\":[132,52,132,54],\"els\":[\"0:556\"]},{\"tk\":[132,57,132,58],\"els\":[\"0:550\"]},{\"tk\":[133,28,133,29],\"els\":[\"0:550\"]},{\"tk\":[133,29,133,31],\"els\":[\"0:550\"]}]}}}","blocks":[{"RTWName":"<S1>/id","SIDString":"uz_approximate_flux:269"},{"RTWName":"<S1>/iq","SIDString":"uz_approximate_flux:270"},{"RTWName":"<S1>/fitting_parameters","SIDString":"uz_approximate_flux:271"},{"RTWName":"<S2>/id","SIDString":"uz_approximate_flux:510"},{"RTWName":"<S2>/iq","SIDString":"uz_approximate_flux:511"},{"RTWName":"<S2>/fitting_parameters","SIDString":"uz_approximate_flux:512"},{"RTWName":"<S2>/Demux","SIDString":"uz_approximate_flux:513"},{"RTWName":"<S2>/Log","SIDString":"uz_approximate_flux:514"},{"RTWName":"<S2>/Log1","SIDString":"uz_approximate_flux:515"},{"RTWName":"<S2>/Product","SIDString":"uz_approximate_flux:516"},{"RTWName":"<S2>/Product1","SIDString":"uz_approximate_flux:517"},{"RTWName":"<S2>/Product10","SIDString":"uz_approximate_flux:518"},{"RTWName":"<S2>/Product12","SIDString":"uz_approximate_flux:519"},{"RTWName":"<S2>/Product2","SIDString":"uz_approximate_flux:520"},{"RTWName":"<S2>/Product3","SIDString":"uz_approximate_flux:521"},{"RTWName":"<S2>/Product4","SIDString":"uz_approximate_flux:522"},{"RTWName":"<S2>/Product5","SIDString":"uz_approximate_flux:523"},{"RTWName":"<S2>/Product6","SIDString":"uz_approximate_flux:524"},{"RTWName":"<S2>/Product7","SIDString":"uz_approximate_flux:525"},{"RTWName":"<S2>/Product8","SIDString":"uz_approximate_flux:526"},{"RTWName":"<S2>/Sum","SIDString":"uz_approximate_flux:527"},{"RTWName":"<S2>/Sum1","SIDString":"uz_approximate_flux:528"},{"RTWName":"<S2>/Sum2","SIDString":"uz_approximate_flux:529"},{"RTWName":"<S2>/Sum3","SIDString":"uz_approximate_flux:530"},{"RTWName":"<S2>/Sum7","SIDString":"uz_approximate_flux:531"},{"RTWName":"<S2>/Tanh","SIDString":"uz_approximate_flux:532"},{"RTWName":"<S2>/Tanh1","SIDString":"uz_approximate_flux:533"},{"RTWName":"<S2>/Tanh2","SIDString":"uz_approximate_flux:534"},{"RTWName":"<S2>/Tanh3","SIDString":"uz_approximate_flux:535"},{"RTWName":"<S2>/Terminator","SIDString":"uz_approximate_flux:536"},{"RTWName":"<S2>/psid_approx","SIDString":"uz_approximate_flux:537"},{"RTWName":"<S3>/id","SIDString":"uz_approximate_flux:540"},{"RTWName":"<S3>/iq","SIDString":"uz_approximate_flux:541"},{"RTWName":"<S3>/fitting_parameters","SIDString":"uz_approximate_flux:542"},{"RTWName":"<S3>/Demux","SIDString":"uz_approximate_flux:543"},{"RTWName":"<S3>/Log1","SIDString":"uz_approximate_flux:544"},{"RTWName":"<S3>/Log2","SIDString":"uz_approximate_flux:545"},{"RTWName":"<S3>/Product","SIDString":"uz_approximate_flux:546"},{"RTWName":"<S3>/Product1","SIDString":"uz_approximate_flux:547"},{"RTWName":"<S3>/Product10","SIDString":"uz_approximate_flux:548"},{"RTWName":"<S3>/Product2","SIDString":"uz_approximate_flux:549"},{"RTWName":"<S3>/Product20","SIDString":"uz_approximate_flux:550"},{"RTWName":"<S3>/Product3","SIDString":"uz_approximate_flux:551"},{"RTWName":"<S3>/Product4","SIDString":"uz_approximate_flux:552"},{"RTWName":"<S3>/Product5","SIDString":"uz_approximate_flux:553"},{"RTWName":"<S3>/Product6","SIDString":"uz_approximate_flux:554"},{"RTWName":"<S3>/Product7","SIDString":"uz_approximate_flux:555"},{"RTWName":"<S3>/Product9","SIDString":"uz_approximate_flux:556"},{"RTWName":"<S3>/Sum1","SIDString":"uz_approximate_flux:557"},{"RTWName":"<S3>/Sum10","SIDString":"uz_approximate_flux:558"},{"RTWName":"<S3>/Sum2","SIDString":"uz_approximate_flux:559"},{"RTWName":"<S3>/Sum3","SIDString":"uz_approximate_flux:560"},{"RTWName":"<S3>/Sum4","SIDString":"uz_approximate_flux:561"},{"RTWName":"<S3>/Sum5","SIDString":"uz_approximate_flux:562"},{"RTWName":"<S3>/Sum6","SIDString":"uz_approximate_flux:563"},{"RTWName":"<S3>/Tanh","SIDString":"uz_approximate_flux:564"},{"RTWName":"<S3>/Tanh1","SIDString":"uz_approximate_flux:565"},{"RTWName":"<S3>/Tanh2","SIDString":"uz_approximate_flux:566"},{"RTWName":"<S3>/Tanh4","SIDString":"uz_approximate_flux:567"},{"RTWName":"<S3>/psiq_approx","SIDString":"uz_approximate_flux:568"},{"RTWName":"<S1>/psid_approx","SIDString":"uz_approximate_flux:296"},{"RTWName":"<S1>/psiq_approx","SIDString":"uz_approximate_flux:538"},{"RTWName":"<Root>/approximate_flux","SIDString":"uz_approximate_flux:268"},{"RTWName":"<S1>/approximate_flux_d","SIDString":"uz_approximate_flux:509"},{"RTWName":"<S1>/approximate_flux_q","SIDString":"uz_approximate_flux:539"}],"cm":{"GlobalVarInfo":[],"GlobalConstInfo":[],"FcnInfo":[{"Name":"approximate_flux_initialize","UniqueKey":"$approximate_flux_initialize","Idx":1,"NumCommentLines":3,"NumTotalLines":13,"NumCodeLines":4,"Callee":{"Name":"memset","Weight":2},"Caller":[],"Stack":12,"HasDefinition":1,"File":["C:\\Users\\Philipp\\uz_temp\\ultrazohm_sw\\vitis\\software\\Baremetal\\src\\uz\\uz_approximate_flux\\approximate_flux_ert_rtw\\approximate_flux.c"],"IsStatic":0,"Complexity":1,"StackTotal":12,"CalleeIdx":5},{"Name":"approximate_flux_step","UniqueKey":"$approximate_flux_step","Idx":2,"NumCommentLines":70,"NumTotalLines":107,"NumCodeLines":26,"Callee":[{"Name":"tanhf","Weight":4},{"Name":"coshf","Weight":4},{"Name":"logf","Weight":4}],"Caller":[],"Stack":32,"HasDefinition":1,"File":["C:\\Users\\Philipp\\uz_temp\\ultrazohm_sw\\vitis\\software\\Baremetal\\src\\uz\\uz_approximate_flux\\approximate_flux_ert_rtw\\approximate_flux.c"],"IsStatic":0,"Complexity":1,"StackTotal":32,"CalleeIdx":[6,3,4]},{"Name":"coshf","UniqueKey":"$coshf","Idx":3,"NumCommentLines":0,"NumTotalLines":0,"NumCodeLines":0,"Callee":[],"Caller":{"Name":"approximate_flux_step","Weight":4},"Stack":0,"HasDefinition":0,"File":["C:\\Program Files\\MATLAB\\R2023b\\polyspace\\verifier\\cxx\\include\\include-libc\\bits\\mathcalls.h"],"IsStatic":0,"Complexity":0,"StackTotal":0,"CalleeIdx":[]},{"Name":"logf","UniqueKey":"$logf","Idx":4,"NumCommentLines":0,"NumTotalLines":0,"NumCodeLines":0,"Callee":[],"Caller":{"Name":"approximate_flux_step","Weight":4},"Stack":0,"HasDefinition":0,"File":["C:\\Program Files\\MATLAB\\R2023b\\polyspace\\verifier\\cxx\\include\\include-libc\\bits\\mathcalls.h"],"IsStatic":0,"Complexity":0,"StackTotal":0,"CalleeIdx":[]},{"Name":"memset","UniqueKey":"$memset","Idx":5,"NumCommentLines":0,"NumTotalLines":0,"NumCodeLines":0,"Callee":[],"Caller":{"Name":"approximate_flux_initialize","Weight":2},"Stack":0,"HasDefinition":0,"File":["C:\\Program Files\\MATLAB\\R2023b\\polyspace\\verifier\\cxx\\include\\include-libc\\string.h"],"IsStatic":0,"Complexity":0,"StackTotal":0,"CalleeIdx":[]},{"Name":"tanhf","UniqueKey":"$tanhf","Idx":6,"NumCommentLines":0,"NumTotalLines":0,"NumCodeLines":0,"Callee":[],"Caller":{"Name":"approximate_flux_step","Weight":4},"Stack":0,"HasDefinition":0,"File":["C:\\Program Files\\MATLAB\\R2023b\\polyspace\\verifier\\cxx\\include\\include-libc\\bits\\mathcalls.h"],"IsStatic":0,"Complexity":0,"StackTotal":0,"CalleeIdx":[]}]},"features":{"annotation":false,"coverage":true,"profiling":true,"tooltip":true,"coverageTooltip":true,"showJustificationLinks":true,"useMWTable":false,"showProfilingInfo":true,"showTaskSummary":true}};