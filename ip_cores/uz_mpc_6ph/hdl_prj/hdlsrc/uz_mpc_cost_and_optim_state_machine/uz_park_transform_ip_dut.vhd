-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\uz_mpc_cost_and_optim_state_machine\uz_park_transform_ip_dut.vhd
-- Created: 2022-10-12 15:32:42
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_park_transform_ip_dut
-- Source Path: uz_park_transform_ip/uz_park_transform_ip_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY uz_park_transform_ip_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        u1                                :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        u2                                :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        angle_el                          :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En14
        trigger                           :   IN    std_logic;  -- ufix1
        factor_angle_el_AXI               :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En14
        offset_angle_el_AXI               :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En14
        ce_out                            :   OUT   std_logic;  -- ufix1
        y1                                :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En16
        y2                                :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En16
        y1_AXI                            :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En16
        y2_AXI                            :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En16
        sin                               :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En16
        cos                               :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En16
        park_done                         :   OUT   std_logic  -- ufix1
        );
END uz_park_transform_ip_dut;


ARCHITECTURE rtl OF uz_park_transform_ip_dut IS

  -- Component Declarations
  COMPONENT uz_park_transform_ip_src_uz_park_transformation
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          u1                              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          u2                              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          angle_el                        :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En14
          trigger                         :   IN    std_logic;  -- ufix1
          factor_angle_el_AXI             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En14
          offset_angle_el_AXI             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En14
          ce_out                          :   OUT   std_logic;  -- ufix1
          y1                              :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En16
          y2                              :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En16
          y1_AXI                          :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En16
          y2_AXI                          :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En16
          sin                             :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En16
          cos                             :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En16
          park_done                       :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : uz_park_transform_ip_src_uz_park_transformation
    USE ENTITY work.uz_park_transform_ip_src_uz_park_transformation(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL trigger_sig                      : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL y1_sig                           : std_logic_vector(26 DOWNTO 0);  -- ufix27
  SIGNAL y2_sig                           : std_logic_vector(26 DOWNTO 0);  -- ufix27
  SIGNAL y1_AXI_sig                       : std_logic_vector(26 DOWNTO 0);  -- ufix27
  SIGNAL y2_AXI_sig                       : std_logic_vector(26 DOWNTO 0);  -- ufix27
  SIGNAL sin_sig                          : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL cos_sig                          : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL park_done_sig                    : std_logic;  -- ufix1

BEGIN
  u_uz_park_transform_ip_src_uz_park_transformation : uz_park_transform_ip_src_uz_park_transformation
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              u1 => u1,  -- sfix18_En11
              u2 => u2,  -- sfix18_En11
              angle_el => angle_el,  -- sfix18_En14
              trigger => trigger_sig,  -- ufix1
              factor_angle_el_AXI => factor_angle_el_AXI,  -- sfix18_En14
              offset_angle_el_AXI => offset_angle_el_AXI,  -- sfix18_En14
              ce_out => ce_out_sig,  -- ufix1
              y1 => y1_sig,  -- sfix27_En16
              y2 => y2_sig,  -- sfix27_En16
              y1_AXI => y1_AXI_sig,  -- sfix27_En16
              y2_AXI => y2_AXI_sig,  -- sfix27_En16
              sin => sin_sig,  -- sfix18_En16
              cos => cos_sig,  -- sfix18_En16
              park_done => park_done_sig  -- ufix1
              );

  trigger_sig <= trigger;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  y1 <= y1_sig;

  y2 <= y2_sig;

  y1_AXI <= y1_AXI_sig;

  y2_AXI <= y2_AXI_sig;

  sin <= sin_sig;

  cos <= cos_sig;

  park_done <= park_done_sig;

END rtl;

