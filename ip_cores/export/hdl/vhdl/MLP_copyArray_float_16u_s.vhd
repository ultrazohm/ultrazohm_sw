-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MLP_copyArray_float_16u_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_input_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    p_input_ce0 : OUT STD_LOGIC;
    p_input_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_input_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    p_input_ce1 : OUT STD_LOGIC;
    p_input_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_output_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_output_ce0 : OUT STD_LOGIC;
    p_output_we0 : OUT STD_LOGIC;
    p_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_output_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_output_ce1 : OUT STD_LOGIC;
    p_output_we1 : OUT STD_LOGIC;
    p_output_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_output_offset : IN STD_LOGIC_VECTOR (9 downto 0);
    size : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of MLP_copyArray_float_16u_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv28_1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv10_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_const_lv10_5 : STD_LOGIC_VECTOR (9 downto 0) := "0000000101";
    constant ap_const_lv10_6 : STD_LOGIC_VECTOR (9 downto 0) := "0000000110";
    constant ap_const_lv10_7 : STD_LOGIC_VECTOR (9 downto 0) := "0000000111";
    constant ap_const_lv10_8 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_const_lv10_9 : STD_LOGIC_VECTOR (9 downto 0) := "0000001001";
    constant ap_const_lv10_A : STD_LOGIC_VECTOR (9 downto 0) := "0000001010";
    constant ap_const_lv10_B : STD_LOGIC_VECTOR (9 downto 0) := "0000001011";
    constant ap_const_lv10_C : STD_LOGIC_VECTOR (9 downto 0) := "0000001100";
    constant ap_const_lv10_D : STD_LOGIC_VECTOR (9 downto 0) := "0000001101";
    constant ap_const_lv10_E : STD_LOGIC_VECTOR (9 downto 0) := "0000001110";
    constant ap_const_lv10_F : STD_LOGIC_VECTOR (9 downto 0) := "0000001111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_reg_360 : STD_LOGIC_VECTOR (27 downto 0);
    signal reg_371 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln130_reg_734 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state10_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal trunc_ln_reg_729 : STD_LOGIC_VECTOR (27 downto 0);
    signal icmp_ln130_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln130_fu_392_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln130_reg_738 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_s_fu_402_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_reg_743 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_fu_415_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_reg_767 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_1_fu_435_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_1_reg_777 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_2_fu_445_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_2_reg_787 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_3_fu_473_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_3_reg_797 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_4_fu_483_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_4_reg_807 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_5_fu_511_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_5_reg_817 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_6_fu_521_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_6_reg_827 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_7_fu_549_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_7_reg_837 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_8_fu_559_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_8_reg_847 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_9_fu_587_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_9_reg_857 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_10_fu_597_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_10_reg_867 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_11_fu_625_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_11_reg_877 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_12_fu_635_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_12_reg_887 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_13_fu_663_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_13_reg_897 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_14_fu_677_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_14_reg_907 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_15_fu_692_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_15_reg_917 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_phi_mux_i_phi_fu_364_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln136_fu_410_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_17_fu_421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_16_fu_430_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln136_19_fu_440_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_21_fu_450_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_18_fu_459_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln136_20_fu_468_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_23_fu_478_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_25_fu_488_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_22_fu_497_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln136_24_fu_506_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_27_fu_516_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_29_fu_526_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_26_fu_535_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln136_28_fu_544_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_31_fu_554_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_33_fu_564_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_30_fu_573_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln136_32_fu_582_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_35_fu_592_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_37_fu_602_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_34_fu_611_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln136_36_fu_620_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_39_fu_630_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_41_fu_640_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_38_fu_649_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln136_40_fu_658_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_43_fu_672_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_45_fu_687_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_42_fu_697_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal zext_ln136_44_fu_701_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_46_fu_705_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_398_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln136_fu_426_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_1_fu_455_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_2_fu_464_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_3_fu_493_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_4_fu_502_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_5_fu_531_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_6_fu_540_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_7_fu_569_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_8_fu_578_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_9_fu_607_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_10_fu_616_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_11_fu_645_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_12_fu_654_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_13_fu_667_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln136_14_fu_682_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage8_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_360 <= add_ln130_reg_738;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_360 <= ap_const_lv28_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln130_reg_738 <= add_ln130_fu_392_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                add_ln136_13_reg_897 <= add_ln136_13_fu_663_p2;
                add_ln136_14_reg_907 <= add_ln136_14_fu_677_p2;
                add_ln136_15_reg_917 <= add_ln136_15_fu_692_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln130_reg_734 <= icmp_ln130_fu_387_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                    or_ln136_10_reg_867(9 downto 4) <= or_ln136_10_fu_597_p2(9 downto 4);
                    or_ln136_9_reg_857(9 downto 4) <= or_ln136_9_fu_587_p2(9 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                    or_ln136_11_reg_877(9 downto 4) <= or_ln136_11_fu_625_p2(9 downto 4);
                    or_ln136_12_reg_887(9 downto 4) <= or_ln136_12_fu_635_p2(9 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    or_ln136_1_reg_777(9 downto 4) <= or_ln136_1_fu_435_p2(9 downto 4);
                    or_ln136_2_reg_787(9 downto 4) <= or_ln136_2_fu_445_p2(9 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                    or_ln136_3_reg_797(9 downto 4) <= or_ln136_3_fu_473_p2(9 downto 4);
                    or_ln136_4_reg_807(9 downto 4) <= or_ln136_4_fu_483_p2(9 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                    or_ln136_5_reg_817(9 downto 4) <= or_ln136_5_fu_511_p2(9 downto 4);
                    or_ln136_6_reg_827(9 downto 4) <= or_ln136_6_fu_521_p2(9 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                    or_ln136_7_reg_837(9 downto 4) <= or_ln136_7_fu_549_p2(9 downto 4);
                    or_ln136_8_reg_847(9 downto 4) <= or_ln136_8_fu_559_p2(9 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln130_fu_387_p2 = ap_const_lv1_0))) then
                    or_ln136_reg_767(9 downto 4) <= or_ln136_fu_415_p2(9 downto 4);
                    tmp_s_reg_743(9 downto 4) <= tmp_s_fu_402_p3(9 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then
                reg_371 <= p_input_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                trunc_ln_reg_729 <= size(31 downto 4);
            end if;
        end if;
    end process;
    tmp_s_reg_743(3 downto 0) <= "0000";
    or_ln136_reg_767(3 downto 0) <= "0001";
    or_ln136_1_reg_777(3 downto 0) <= "0010";
    or_ln136_2_reg_787(3 downto 0) <= "0011";
    or_ln136_3_reg_797(3 downto 0) <= "0100";
    or_ln136_4_reg_807(3 downto 0) <= "0101";
    or_ln136_5_reg_817(3 downto 0) <= "0110";
    or_ln136_6_reg_827(3 downto 0) <= "0111";
    or_ln136_7_reg_837(3 downto 0) <= "1000";
    or_ln136_8_reg_847(3 downto 0) <= "1001";
    or_ln136_9_reg_857(3 downto 0) <= "1010";
    or_ln136_10_reg_867(3 downto 0) <= "1011";
    or_ln136_11_reg_877(3 downto 0) <= "1100";
    or_ln136_12_reg_887(3 downto 0) <= "1101";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln130_fu_387_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln130_fu_387_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln130_fu_387_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    add_ln130_fu_392_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_phi_fu_364_p4) + unsigned(ap_const_lv28_1));
    add_ln136_10_fu_616_p2 <= std_logic_vector(unsigned(p_output_offset) + unsigned(or_ln136_9_reg_857));
    add_ln136_11_fu_645_p2 <= std_logic_vector(unsigned(p_output_offset) + unsigned(or_ln136_10_reg_867));
    add_ln136_12_fu_654_p2 <= std_logic_vector(unsigned(p_output_offset) + unsigned(or_ln136_11_reg_877));
    add_ln136_13_fu_663_p2 <= std_logic_vector(unsigned(p_output_offset) + unsigned(or_ln136_12_reg_887));
    add_ln136_14_fu_677_p2 <= std_logic_vector(unsigned(p_output_offset) + unsigned(or_ln136_13_fu_667_p2));
    add_ln136_15_fu_692_p2 <= std_logic_vector(unsigned(p_output_offset) + unsigned(or_ln136_14_fu_682_p2));
    add_ln136_1_fu_455_p2 <= std_logic_vector(unsigned(p_output_offset) + unsigned(or_ln136_reg_767));
    add_ln136_2_fu_464_p2 <= std_logic_vector(unsigned(p_output_offset) + unsigned(or_ln136_1_reg_777));
    add_ln136_3_fu_493_p2 <= std_logic_vector(unsigned(p_output_offset) + unsigned(or_ln136_2_reg_787));
    add_ln136_4_fu_502_p2 <= std_logic_vector(unsigned(p_output_offset) + unsigned(or_ln136_3_reg_797));
    add_ln136_5_fu_531_p2 <= std_logic_vector(unsigned(p_output_offset) + unsigned(or_ln136_4_reg_807));
    add_ln136_6_fu_540_p2 <= std_logic_vector(unsigned(p_output_offset) + unsigned(or_ln136_5_reg_817));
    add_ln136_7_fu_569_p2 <= std_logic_vector(unsigned(p_output_offset) + unsigned(or_ln136_6_reg_827));
    add_ln136_8_fu_578_p2 <= std_logic_vector(unsigned(p_output_offset) + unsigned(or_ln136_7_reg_837));
    add_ln136_9_fu_607_p2 <= std_logic_vector(unsigned(p_output_offset) + unsigned(or_ln136_8_reg_847));
    add_ln136_fu_426_p2 <= std_logic_vector(unsigned(p_output_offset) + unsigned(tmp_s_reg_743));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(9);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(10);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln130_fu_387_p2)
    begin
        if ((icmp_ln130_fu_387_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_364_p4_assign_proc : process(i_reg_360, icmp_ln130_reg_734, ap_CS_fsm_pp0_stage0, add_ln130_reg_738, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_364_p4 <= add_ln130_reg_738;
        else 
            ap_phi_mux_i_phi_fu_364_p4 <= i_reg_360;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_398_p1 <= ap_phi_mux_i_phi_fu_364_p4(6 - 1 downto 0);
    icmp_ln130_fu_387_p2 <= "1" when (ap_phi_mux_i_phi_fu_364_p4 = trunc_ln_reg_729) else "0";
    or_ln136_10_fu_597_p2 <= (tmp_s_reg_743 or ap_const_lv10_B);
    or_ln136_11_fu_625_p2 <= (tmp_s_reg_743 or ap_const_lv10_C);
    or_ln136_12_fu_635_p2 <= (tmp_s_reg_743 or ap_const_lv10_D);
    or_ln136_13_fu_667_p2 <= (tmp_s_reg_743 or ap_const_lv10_E);
    or_ln136_14_fu_682_p2 <= (tmp_s_reg_743 or ap_const_lv10_F);
    or_ln136_1_fu_435_p2 <= (tmp_s_reg_743 or ap_const_lv10_2);
    or_ln136_2_fu_445_p2 <= (tmp_s_reg_743 or ap_const_lv10_3);
    or_ln136_3_fu_473_p2 <= (tmp_s_reg_743 or ap_const_lv10_4);
    or_ln136_4_fu_483_p2 <= (tmp_s_reg_743 or ap_const_lv10_5);
    or_ln136_5_fu_511_p2 <= (tmp_s_reg_743 or ap_const_lv10_6);
    or_ln136_6_fu_521_p2 <= (tmp_s_reg_743 or ap_const_lv10_7);
    or_ln136_7_fu_549_p2 <= (tmp_s_reg_743 or ap_const_lv10_8);
    or_ln136_8_fu_559_p2 <= (tmp_s_reg_743 or ap_const_lv10_9);
    or_ln136_9_fu_587_p2 <= (tmp_s_reg_743 or ap_const_lv10_A);
    or_ln136_fu_415_p2 <= (tmp_s_fu_402_p3 or ap_const_lv10_1);

    p_input_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln136_17_fu_421_p1, ap_block_pp0_stage1, zext_ln136_21_fu_450_p1, ap_block_pp0_stage2, zext_ln136_25_fu_488_p1, ap_block_pp0_stage3, zext_ln136_29_fu_526_p1, ap_block_pp0_stage4, zext_ln136_33_fu_564_p1, ap_block_pp0_stage5, zext_ln136_37_fu_602_p1, ap_block_pp0_stage6, zext_ln136_41_fu_640_p1, ap_block_pp0_stage7, zext_ln136_45_fu_687_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                p_input_address0 <= zext_ln136_45_fu_687_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                p_input_address0 <= zext_ln136_41_fu_640_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                p_input_address0 <= zext_ln136_37_fu_602_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                p_input_address0 <= zext_ln136_33_fu_564_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                p_input_address0 <= zext_ln136_29_fu_526_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                p_input_address0 <= zext_ln136_25_fu_488_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                p_input_address0 <= zext_ln136_21_fu_450_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                p_input_address0 <= zext_ln136_17_fu_421_p1(4 - 1 downto 0);
            else 
                p_input_address0 <= "XXXX";
            end if;
        else 
            p_input_address0 <= "XXXX";
        end if; 
    end process;


    p_input_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln136_fu_410_p1, ap_block_pp0_stage1, zext_ln136_19_fu_440_p1, ap_block_pp0_stage2, zext_ln136_23_fu_478_p1, ap_block_pp0_stage3, zext_ln136_27_fu_516_p1, ap_block_pp0_stage4, zext_ln136_31_fu_554_p1, ap_block_pp0_stage5, zext_ln136_35_fu_592_p1, ap_block_pp0_stage6, zext_ln136_39_fu_630_p1, ap_block_pp0_stage7, zext_ln136_43_fu_672_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                p_input_address1 <= zext_ln136_43_fu_672_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                p_input_address1 <= zext_ln136_39_fu_630_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                p_input_address1 <= zext_ln136_35_fu_592_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                p_input_address1 <= zext_ln136_31_fu_554_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                p_input_address1 <= zext_ln136_27_fu_516_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                p_input_address1 <= zext_ln136_23_fu_478_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                p_input_address1 <= zext_ln136_19_fu_440_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                p_input_address1 <= zext_ln136_fu_410_p1(4 - 1 downto 0);
            else 
                p_input_address1 <= "XXXX";
            end if;
        else 
            p_input_address1 <= "XXXX";
        end if; 
    end process;


    p_input_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            p_input_ce0 <= ap_const_logic_1;
        else 
            p_input_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_input_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            p_input_ce1 <= ap_const_logic_1;
        else 
            p_input_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_output_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln136_16_fu_430_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln136_20_fu_468_p1, zext_ln136_22_fu_497_p1, ap_block_pp0_stage3, zext_ln136_26_fu_535_p1, ap_block_pp0_stage4, zext_ln136_30_fu_573_p1, ap_block_pp0_stage5, zext_ln136_34_fu_611_p1, ap_block_pp0_stage6, zext_ln136_38_fu_649_p1, ap_block_pp0_stage7, zext_ln136_42_fu_697_p1, ap_block_pp0_stage8, zext_ln136_46_fu_705_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_output_address0 <= zext_ln136_46_fu_705_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            p_output_address0 <= zext_ln136_42_fu_697_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            p_output_address0 <= zext_ln136_38_fu_649_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            p_output_address0 <= zext_ln136_34_fu_611_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            p_output_address0 <= zext_ln136_30_fu_573_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            p_output_address0 <= zext_ln136_26_fu_535_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            p_output_address0 <= zext_ln136_22_fu_497_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            p_output_address0 <= zext_ln136_20_fu_468_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            p_output_address0 <= zext_ln136_16_fu_430_p1(10 - 1 downto 0);
        else 
            p_output_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    p_output_address1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, zext_ln136_18_fu_459_p1, ap_block_pp0_stage2, ap_block_pp0_stage3, zext_ln136_24_fu_506_p1, ap_block_pp0_stage4, zext_ln136_28_fu_544_p1, ap_block_pp0_stage5, zext_ln136_32_fu_582_p1, ap_block_pp0_stage6, zext_ln136_36_fu_620_p1, ap_block_pp0_stage7, zext_ln136_40_fu_658_p1, ap_block_pp0_stage8, zext_ln136_44_fu_701_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                p_output_address1 <= zext_ln136_44_fu_701_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                p_output_address1 <= zext_ln136_40_fu_658_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                p_output_address1 <= zext_ln136_36_fu_620_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                p_output_address1 <= zext_ln136_32_fu_582_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                p_output_address1 <= zext_ln136_28_fu_544_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                p_output_address1 <= zext_ln136_24_fu_506_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                p_output_address1 <= zext_ln136_18_fu_459_p1(10 - 1 downto 0);
            else 
                p_output_address1 <= "XXXXXXXXXX";
            end if;
        else 
            p_output_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    p_output_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            p_output_ce0 <= ap_const_logic_1;
        else 
            p_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_output_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            p_output_ce1 <= ap_const_logic_1;
        else 
            p_output_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_output_d0_assign_proc : process(p_input_q1, reg_371, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_output_d0 <= reg_371;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            p_output_d0 <= p_input_q1;
        else 
            p_output_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_output_d1_assign_proc : process(p_input_q1, reg_371, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            p_output_d1 <= p_input_q1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            p_output_d1 <= reg_371;
        else 
            p_output_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_output_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, icmp_ln130_reg_734, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            p_output_we0 <= ap_const_logic_1;
        else 
            p_output_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_output_we1_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln130_reg_734, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001)
    begin
        if ((((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln130_reg_734 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            p_output_we1 <= ap_const_logic_1;
        else 
            p_output_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_s_fu_402_p3 <= (empty_fu_398_p1 & ap_const_lv4_0);
    zext_ln136_16_fu_430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_fu_426_p2),64));
    zext_ln136_17_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln136_fu_415_p2),64));
    zext_ln136_18_fu_459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_1_fu_455_p2),64));
    zext_ln136_19_fu_440_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln136_1_fu_435_p2),64));
    zext_ln136_20_fu_468_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_2_fu_464_p2),64));
    zext_ln136_21_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln136_2_fu_445_p2),64));
    zext_ln136_22_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_3_fu_493_p2),64));
    zext_ln136_23_fu_478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln136_3_fu_473_p2),64));
    zext_ln136_24_fu_506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_4_fu_502_p2),64));
    zext_ln136_25_fu_488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln136_4_fu_483_p2),64));
    zext_ln136_26_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_5_fu_531_p2),64));
    zext_ln136_27_fu_516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln136_5_fu_511_p2),64));
    zext_ln136_28_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_6_fu_540_p2),64));
    zext_ln136_29_fu_526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln136_6_fu_521_p2),64));
    zext_ln136_30_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_7_fu_569_p2),64));
    zext_ln136_31_fu_554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln136_7_fu_549_p2),64));
    zext_ln136_32_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_8_fu_578_p2),64));
    zext_ln136_33_fu_564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln136_8_fu_559_p2),64));
    zext_ln136_34_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_9_fu_607_p2),64));
    zext_ln136_35_fu_592_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln136_9_fu_587_p2),64));
    zext_ln136_36_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_10_fu_616_p2),64));
    zext_ln136_37_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln136_10_fu_597_p2),64));
    zext_ln136_38_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_11_fu_645_p2),64));
    zext_ln136_39_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln136_11_fu_625_p2),64));
    zext_ln136_40_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_12_fu_654_p2),64));
    zext_ln136_41_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln136_12_fu_635_p2),64));
    zext_ln136_42_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_13_reg_897),64));
    zext_ln136_43_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln136_13_fu_667_p2),64));
    zext_ln136_44_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_14_reg_907),64));
    zext_ln136_45_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln136_14_fu_682_p2),64));
    zext_ln136_46_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_15_reg_917),64));
    zext_ln136_fu_410_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_402_p3),64));
end behav;
