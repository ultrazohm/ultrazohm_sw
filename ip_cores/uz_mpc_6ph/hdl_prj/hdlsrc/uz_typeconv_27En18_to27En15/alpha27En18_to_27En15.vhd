-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\uz_typeconv_27En18_to27En15\alpha27En18_to_27En15.vhd
-- Created: 2022-10-04 12:54:28
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: alpha27En18_to_27En15
-- Source Path: 27En18_to_27En15
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY alpha27En18_to_27En15 IS
  PORT( IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESETN                     :   IN    std_logic;  -- ufix1
        alpha27En18                       :   IN    std_logic_vector(26 DOWNTO 0);  -- ufix27
        trigger                           :   IN    std_logic;  -- ufix1
        alpha27En15                       :   OUT   std_logic_vector(26 DOWNTO 0);  -- ufix27
        done                              :   OUT   std_logic  -- ufix1
        );
END alpha27En18_to_27En15;


ARCHITECTURE rtl OF alpha27En18_to_27En15 IS

  -- Component Declarations
  COMPONENT alpha27En18_to_27En15_reset_sync
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset_in                        :   IN    std_logic;  -- ufix1
          reset_out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT alpha27En18_to_27En15_dut
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          dut_enable                      :   IN    std_logic;  -- ufix1
          alpha27En18                     :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En18
          trigger                         :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          alpha27En15                     :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En15
          done                            :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : alpha27En18_to_27En15_reset_sync
    USE ENTITY work.alpha27En18_to_27En15_reset_sync(rtl);

  FOR ALL : alpha27En18_to_27En15_dut
    USE ENTITY work.alpha27En18_to_27En15_dut(rtl);

  -- Signals
  SIGNAL reset                            : std_logic;
  SIGNAL const_axi_enable                 : std_logic;  -- ufix1
  SIGNAL alpha27En18_unsigned             : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL alpha27En18_sig                  : signed(26 DOWNTO 0);  -- sfix27_En18
  SIGNAL reset_cm                         : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL alpha27En15_sig                  : std_logic_vector(26 DOWNTO 0);  -- ufix27
  SIGNAL done_sig                         : std_logic;  -- ufix1
  SIGNAL alpha27En15_sig_signed           : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL alpha27En15_tmp                  : unsigned(26 DOWNTO 0);  -- ufix27

BEGIN
  u_27En18_to_27En15_reset_sync_inst : alpha27En18_to_27En15_reset_sync
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset_in => reset_cm,  -- ufix1
              reset_out => reset
              );

  u_27En18_to_27En15_dut_inst : alpha27En18_to_27En15_dut
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset => reset,
              dut_enable => const_axi_enable,  -- ufix1
              alpha27En18 => std_logic_vector(alpha27En18_sig),  -- sfix27_En18
              trigger => trigger,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              alpha27En15 => alpha27En15_sig,  -- sfix27_En15
              done => done_sig  -- ufix1
              );

  const_axi_enable <= '1';

  alpha27En18_unsigned <= unsigned(alpha27En18);

  alpha27En18_sig <= signed(alpha27En18_unsigned);

  reset_cm <=  NOT IPCORE_RESETN;

  alpha27En15_sig_signed <= signed(alpha27En15_sig);

  alpha27En15_tmp <= unsigned(alpha27En15_sig_signed);

  alpha27En15 <= std_logic_vector(alpha27En15_tmp);

  done <= done_sig;

END rtl;

