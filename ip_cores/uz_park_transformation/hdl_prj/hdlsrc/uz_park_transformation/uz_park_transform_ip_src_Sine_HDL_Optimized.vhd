-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\uz_park_transformation\uz_park_transform_ip_src_Sine_HDL_Optimized.vhd
-- Created: 2023-05-05 14:55:37
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_park_transform_ip_src_Sine_HDL_Optimized
-- Source Path: uz_park_transformation/uz_park_transformation/Sine HDL Optimized
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.uz_park_transform_ip_src_uz_park_transformation_pkg.ALL;

ENTITY uz_park_transform_ip_src_Sine_HDL_Optimized IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        u                                 :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En20
        x                                 :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En20
        y                                 :   OUT   std_logic_vector(26 DOWNTO 0)  -- sfix27_En20
        );
END uz_park_transform_ip_src_Sine_HDL_Optimized;


ARCHITECTURE rtl OF uz_park_transform_ip_src_Sine_HDL_Optimized IS

  -- Constants
  CONSTANT Look_Up_Table1_data            : vector_of_signed27(0 TO 255) := 
    (to_signed(16#0000000#, 27), to_signed(16#0001922#, 27), to_signed(16#0003244#, 27),
     to_signed(16#0004B65#, 27), to_signed(16#0006485#, 27), to_signed(16#0007DA5#, 27),
     to_signed(16#00096C3#, 27), to_signed(16#000AFE0#, 27), to_signed(16#000C8FB#, 27),
     to_signed(16#000E214#, 27), to_signed(16#000FB2B#, 27), to_signed(16#0011440#, 27),
     to_signed(16#0012D52#, 27), to_signed(16#0014661#, 27), to_signed(16#0015F6D#, 27),
     to_signed(16#0017876#, 27), to_signed(16#001917A#, 27), to_signed(16#001AA7B#, 27),
     to_signed(16#001C378#, 27), to_signed(16#001DC71#, 27), to_signed(16#001F565#, 27),
     to_signed(16#0020E54#, 27), to_signed(16#002273E#, 27), to_signed(16#0024023#, 27),
     to_signed(16#0025902#, 27), to_signed(16#00271DB#, 27), to_signed(16#0028AAF#, 27),
     to_signed(16#002A37C#, 27), to_signed(16#002BC43#, 27), to_signed(16#002D502#, 27),
     to_signed(16#002EDBB#, 27), to_signed(16#003066D#, 27), to_signed(16#0031F17#, 27),
     to_signed(16#00337B9#, 27), to_signed(16#0035054#, 27), to_signed(16#00368E6#, 27),
     to_signed(16#0038170#, 27), to_signed(16#00399F2#, 27), to_signed(16#003B26A#, 27),
     to_signed(16#003CAD9#, 27), to_signed(16#003E33F#, 27), to_signed(16#003FB9C#, 27),
     to_signed(16#00413EE#, 27), to_signed(16#0042C36#, 27), to_signed(16#0044475#, 27),
     to_signed(16#0045CA8#, 27), to_signed(16#00474D1#, 27), to_signed(16#0048CEF#, 27),
     to_signed(16#004A502#, 27), to_signed(16#004BD09#, 27), to_signed(16#004D504#, 27),
     to_signed(16#004ECF4#, 27), to_signed(16#00504D7#, 27), to_signed(16#0051CAE#, 27),
     to_signed(16#0053479#, 27), to_signed(16#0054C36#, 27), to_signed(16#00563E7#, 27),
     to_signed(16#0057B8A#, 27), to_signed(16#005931F#, 27), to_signed(16#005AAA7#, 27),
     to_signed(16#005C221#, 27), to_signed(16#005D98D#, 27), to_signed(16#005F0EA#, 27),
     to_signed(16#0060839#, 27), to_signed(16#0061F79#, 27), to_signed(16#00636A9#, 27),
     to_signed(16#0064DCB#, 27), to_signed(16#00664DC#, 27), to_signed(16#0067BDE#, 27),
     to_signed(16#00692D0#, 27), to_signed(16#006A9B2#, 27), to_signed(16#006C083#, 27),
     to_signed(16#006D744#, 27), to_signed(16#006EDF4#, 27), to_signed(16#0070492#, 27),
     to_signed(16#0071B20#, 27), to_signed(16#007319C#, 27), to_signed(16#0074806#, 27),
     to_signed(16#0075E5E#, 27), to_signed(16#00774A4#, 27), to_signed(16#0078AD7#, 27),
     to_signed(16#007A0F8#, 27), to_signed(16#007B706#, 27), to_signed(16#007CD01#, 27),
     to_signed(16#007E2E9#, 27), to_signed(16#007F8BE#, 27), to_signed(16#0080E7E#, 27),
     to_signed(16#008242B#, 27), to_signed(16#00839C4#, 27), to_signed(16#0084F48#, 27),
     to_signed(16#00864B8#, 27), to_signed(16#0087A13#, 27), to_signed(16#0088F5A#, 27),
     to_signed(16#008A48B#, 27), to_signed(16#008B9A7#, 27), to_signed(16#008CEAD#, 27),
     to_signed(16#008E39E#, 27), to_signed(16#008F878#, 27), to_signed(16#0090D3D#, 27),
     to_signed(16#00921EB#, 27), to_signed(16#0093683#, 27), to_signed(16#0094B04#, 27),
     to_signed(16#0095F6E#, 27), to_signed(16#00973C0#, 27), to_signed(16#00987FC#, 27),
     to_signed(16#0099C20#, 27), to_signed(16#009B02C#, 27), to_signed(16#009C421#, 27),
     to_signed(16#009D7FD#, 27), to_signed(16#009EBC1#, 27), to_signed(16#009FF6D#, 27),
     to_signed(16#00A1300#, 27), to_signed(16#00A267A#, 27), to_signed(16#00A39DB#, 27),
     to_signed(16#00A4D22#, 27), to_signed(16#00A6051#, 27), to_signed(16#00A7365#, 27),
     to_signed(16#00A8660#, 27), to_signed(16#00A9941#, 27), to_signed(16#00AAC08#, 27),
     to_signed(16#00ABEB5#, 27), to_signed(16#00AD147#, 27), to_signed(16#00AE3BE#, 27),
     to_signed(16#00AF61A#, 27), to_signed(16#00B085C#, 27), to_signed(16#00B1A82#, 27),
     to_signed(16#00B2C8D#, 27), to_signed(16#00B3E7C#, 27), to_signed(16#00B504F#, 27),
     to_signed(16#00B6207#, 27), to_signed(16#00B73A2#, 27), to_signed(16#00B8521#, 27),
     to_signed(16#00B9684#, 27), to_signed(16#00BA7CA#, 27), to_signed(16#00BB8F4#, 27),
     to_signed(16#00BCA00#, 27), to_signed(16#00BDAF0#, 27), to_signed(16#00BEBC2#, 27),
     to_signed(16#00BFC76#, 27), to_signed(16#00C0D0E#, 27), to_signed(16#00C1D87#, 27),
     to_signed(16#00C2DE3#, 27), to_signed(16#00C3E20#, 27), to_signed(16#00C4E3F#, 27),
     to_signed(16#00C5E40#, 27), to_signed(16#00C6E23#, 27), to_signed(16#00C7DE6#, 27),
     to_signed(16#00C8D8B#, 27), to_signed(16#00C9D11#, 27), to_signed(16#00CAC78#, 27),
     to_signed(16#00CBBBF#, 27), to_signed(16#00CCAE8#, 27), to_signed(16#00CD9F0#, 27),
     to_signed(16#00CE8D9#, 27), to_signed(16#00CF7A2#, 27), to_signed(16#00D064B#, 27),
     to_signed(16#00D14D4#, 27), to_signed(16#00D233C#, 27), to_signed(16#00D3185#, 27),
     to_signed(16#00D3FAC#, 27), to_signed(16#00D4DB3#, 27), to_signed(16#00D5B99#, 27),
     to_signed(16#00D695E#, 27), to_signed(16#00D7702#, 27), to_signed(16#00D8485#, 27),
     to_signed(16#00D91E7#, 27), to_signed(16#00D9F27#, 27), to_signed(16#00DAC45#, 27),
     to_signed(16#00DB942#, 27), to_signed(16#00DC61C#, 27), to_signed(16#00DD2D5#, 27),
     to_signed(16#00DDF6C#, 27), to_signed(16#00DEBE0#, 27), to_signed(16#00DF832#, 27),
     to_signed(16#00E0462#, 27), to_signed(16#00E106F#, 27), to_signed(16#00E1C59#, 27),
     to_signed(16#00E2821#, 27), to_signed(16#00E33C6#, 27), to_signed(16#00E3F47#, 27),
     to_signed(16#00E4AA6#, 27), to_signed(16#00E55E1#, 27), to_signed(16#00E60F8#, 27),
     to_signed(16#00E6BED#, 27), to_signed(16#00E76BD#, 27), to_signed(16#00E816A#, 27),
     to_signed(16#00E8BF4#, 27), to_signed(16#00E9659#, 27), to_signed(16#00EA09A#, 27),
     to_signed(16#00EAAB8#, 27), to_signed(16#00EB4B1#, 27), to_signed(16#00EBE86#, 27),
     to_signed(16#00EC836#, 27), to_signed(16#00ED1C2#, 27), to_signed(16#00EDB29#, 27),
     to_signed(16#00EE46C#, 27), to_signed(16#00EED8A#, 27), to_signed(16#00EF683#, 27),
     to_signed(16#00EFF57#, 27), to_signed(16#00F0806#, 27), to_signed(16#00F1091#, 27),
     to_signed(16#00F18F5#, 27), to_signed(16#00F2135#, 27), to_signed(16#00F2950#, 27),
     to_signed(16#00F3144#, 27), to_signed(16#00F3914#, 27), to_signed(16#00F40BE#, 27),
     to_signed(16#00F4842#, 27), to_signed(16#00F4FA1#, 27), to_signed(16#00F56D9#, 27),
     to_signed(16#00F5DEC#, 27), to_signed(16#00F64D9#, 27), to_signed(16#00F6BA0#, 27),
     to_signed(16#00F7241#, 27), to_signed(16#00F78BC#, 27), to_signed(16#00F7F11#, 27),
     to_signed(16#00F853F#, 27), to_signed(16#00F8B48#, 27), to_signed(16#00F9129#, 27),
     to_signed(16#00F96E5#, 27), to_signed(16#00F9C7A#, 27), to_signed(16#00FA1E8#, 27),
     to_signed(16#00FA730#, 27), to_signed(16#00FAC51#, 27), to_signed(16#00FB14C#, 27),
     to_signed(16#00FB620#, 27), to_signed(16#00FBACD#, 27), to_signed(16#00FBF53#, 27),
     to_signed(16#00FC3B2#, 27), to_signed(16#00FC7EB#, 27), to_signed(16#00FCBFD#, 27),
     to_signed(16#00FCFE7#, 27), to_signed(16#00FD3AB#, 27), to_signed(16#00FD747#, 27),
     to_signed(16#00FDABD#, 27), to_signed(16#00FDE0B#, 27), to_signed(16#00FE132#, 27),
     to_signed(16#00FE432#, 27), to_signed(16#00FE70B#, 27), to_signed(16#00FE9BD#, 27),
     to_signed(16#00FEC47#, 27), to_signed(16#00FEEAA#, 27), to_signed(16#00FF0E5#, 27),
     to_signed(16#00FF2FA#, 27), to_signed(16#00FF4E7#, 27), to_signed(16#00FF6AC#, 27),
     to_signed(16#00FF84B#, 27), to_signed(16#00FF9C2#, 27), to_signed(16#00FFB11#, 27),
     to_signed(16#00FFC39#, 27), to_signed(16#00FFD39#, 27), to_signed(16#00FFE13#, 27),
     to_signed(16#00FFEC4#, 27), to_signed(16#00FFF4E#, 27), to_signed(16#00FFFB1#, 27),
     to_signed(16#00FFFEC#, 27));  -- sfix27 [256]
  CONSTANT Look_Up_Table_data             : vector_of_signed27(0 TO 255) := 
    (to_signed(16#0000000#, 27), to_signed(16#0001922#, 27), to_signed(16#0003244#, 27),
     to_signed(16#0004B65#, 27), to_signed(16#0006485#, 27), to_signed(16#0007DA5#, 27),
     to_signed(16#00096C3#, 27), to_signed(16#000AFE0#, 27), to_signed(16#000C8FB#, 27),
     to_signed(16#000E214#, 27), to_signed(16#000FB2B#, 27), to_signed(16#0011440#, 27),
     to_signed(16#0012D52#, 27), to_signed(16#0014661#, 27), to_signed(16#0015F6D#, 27),
     to_signed(16#0017876#, 27), to_signed(16#001917A#, 27), to_signed(16#001AA7B#, 27),
     to_signed(16#001C378#, 27), to_signed(16#001DC71#, 27), to_signed(16#001F565#, 27),
     to_signed(16#0020E54#, 27), to_signed(16#002273E#, 27), to_signed(16#0024023#, 27),
     to_signed(16#0025902#, 27), to_signed(16#00271DB#, 27), to_signed(16#0028AAF#, 27),
     to_signed(16#002A37C#, 27), to_signed(16#002BC43#, 27), to_signed(16#002D502#, 27),
     to_signed(16#002EDBB#, 27), to_signed(16#003066D#, 27), to_signed(16#0031F17#, 27),
     to_signed(16#00337B9#, 27), to_signed(16#0035054#, 27), to_signed(16#00368E6#, 27),
     to_signed(16#0038170#, 27), to_signed(16#00399F2#, 27), to_signed(16#003B26A#, 27),
     to_signed(16#003CAD9#, 27), to_signed(16#003E33F#, 27), to_signed(16#003FB9C#, 27),
     to_signed(16#00413EE#, 27), to_signed(16#0042C36#, 27), to_signed(16#0044475#, 27),
     to_signed(16#0045CA8#, 27), to_signed(16#00474D1#, 27), to_signed(16#0048CEF#, 27),
     to_signed(16#004A502#, 27), to_signed(16#004BD09#, 27), to_signed(16#004D504#, 27),
     to_signed(16#004ECF4#, 27), to_signed(16#00504D7#, 27), to_signed(16#0051CAE#, 27),
     to_signed(16#0053479#, 27), to_signed(16#0054C36#, 27), to_signed(16#00563E7#, 27),
     to_signed(16#0057B8A#, 27), to_signed(16#005931F#, 27), to_signed(16#005AAA7#, 27),
     to_signed(16#005C221#, 27), to_signed(16#005D98D#, 27), to_signed(16#005F0EA#, 27),
     to_signed(16#0060839#, 27), to_signed(16#0061F79#, 27), to_signed(16#00636A9#, 27),
     to_signed(16#0064DCB#, 27), to_signed(16#00664DC#, 27), to_signed(16#0067BDE#, 27),
     to_signed(16#00692D0#, 27), to_signed(16#006A9B2#, 27), to_signed(16#006C083#, 27),
     to_signed(16#006D744#, 27), to_signed(16#006EDF4#, 27), to_signed(16#0070492#, 27),
     to_signed(16#0071B20#, 27), to_signed(16#007319C#, 27), to_signed(16#0074806#, 27),
     to_signed(16#0075E5E#, 27), to_signed(16#00774A4#, 27), to_signed(16#0078AD7#, 27),
     to_signed(16#007A0F8#, 27), to_signed(16#007B706#, 27), to_signed(16#007CD01#, 27),
     to_signed(16#007E2E9#, 27), to_signed(16#007F8BE#, 27), to_signed(16#0080E7E#, 27),
     to_signed(16#008242B#, 27), to_signed(16#00839C4#, 27), to_signed(16#0084F48#, 27),
     to_signed(16#00864B8#, 27), to_signed(16#0087A13#, 27), to_signed(16#0088F5A#, 27),
     to_signed(16#008A48B#, 27), to_signed(16#008B9A7#, 27), to_signed(16#008CEAD#, 27),
     to_signed(16#008E39E#, 27), to_signed(16#008F878#, 27), to_signed(16#0090D3D#, 27),
     to_signed(16#00921EB#, 27), to_signed(16#0093683#, 27), to_signed(16#0094B04#, 27),
     to_signed(16#0095F6E#, 27), to_signed(16#00973C0#, 27), to_signed(16#00987FC#, 27),
     to_signed(16#0099C20#, 27), to_signed(16#009B02C#, 27), to_signed(16#009C421#, 27),
     to_signed(16#009D7FD#, 27), to_signed(16#009EBC1#, 27), to_signed(16#009FF6D#, 27),
     to_signed(16#00A1300#, 27), to_signed(16#00A267A#, 27), to_signed(16#00A39DB#, 27),
     to_signed(16#00A4D22#, 27), to_signed(16#00A6051#, 27), to_signed(16#00A7365#, 27),
     to_signed(16#00A8660#, 27), to_signed(16#00A9941#, 27), to_signed(16#00AAC08#, 27),
     to_signed(16#00ABEB5#, 27), to_signed(16#00AD147#, 27), to_signed(16#00AE3BE#, 27),
     to_signed(16#00AF61A#, 27), to_signed(16#00B085C#, 27), to_signed(16#00B1A82#, 27),
     to_signed(16#00B2C8D#, 27), to_signed(16#00B3E7C#, 27), to_signed(16#00B504F#, 27),
     to_signed(16#00B6207#, 27), to_signed(16#00B73A2#, 27), to_signed(16#00B8521#, 27),
     to_signed(16#00B9684#, 27), to_signed(16#00BA7CA#, 27), to_signed(16#00BB8F4#, 27),
     to_signed(16#00BCA00#, 27), to_signed(16#00BDAF0#, 27), to_signed(16#00BEBC2#, 27),
     to_signed(16#00BFC76#, 27), to_signed(16#00C0D0E#, 27), to_signed(16#00C1D87#, 27),
     to_signed(16#00C2DE3#, 27), to_signed(16#00C3E20#, 27), to_signed(16#00C4E3F#, 27),
     to_signed(16#00C5E40#, 27), to_signed(16#00C6E23#, 27), to_signed(16#00C7DE6#, 27),
     to_signed(16#00C8D8B#, 27), to_signed(16#00C9D11#, 27), to_signed(16#00CAC78#, 27),
     to_signed(16#00CBBBF#, 27), to_signed(16#00CCAE8#, 27), to_signed(16#00CD9F0#, 27),
     to_signed(16#00CE8D9#, 27), to_signed(16#00CF7A2#, 27), to_signed(16#00D064B#, 27),
     to_signed(16#00D14D4#, 27), to_signed(16#00D233C#, 27), to_signed(16#00D3185#, 27),
     to_signed(16#00D3FAC#, 27), to_signed(16#00D4DB3#, 27), to_signed(16#00D5B99#, 27),
     to_signed(16#00D695E#, 27), to_signed(16#00D7702#, 27), to_signed(16#00D8485#, 27),
     to_signed(16#00D91E7#, 27), to_signed(16#00D9F27#, 27), to_signed(16#00DAC45#, 27),
     to_signed(16#00DB942#, 27), to_signed(16#00DC61C#, 27), to_signed(16#00DD2D5#, 27),
     to_signed(16#00DDF6C#, 27), to_signed(16#00DEBE0#, 27), to_signed(16#00DF832#, 27),
     to_signed(16#00E0462#, 27), to_signed(16#00E106F#, 27), to_signed(16#00E1C59#, 27),
     to_signed(16#00E2821#, 27), to_signed(16#00E33C6#, 27), to_signed(16#00E3F47#, 27),
     to_signed(16#00E4AA6#, 27), to_signed(16#00E55E1#, 27), to_signed(16#00E60F8#, 27),
     to_signed(16#00E6BED#, 27), to_signed(16#00E76BD#, 27), to_signed(16#00E816A#, 27),
     to_signed(16#00E8BF4#, 27), to_signed(16#00E9659#, 27), to_signed(16#00EA09A#, 27),
     to_signed(16#00EAAB8#, 27), to_signed(16#00EB4B1#, 27), to_signed(16#00EBE86#, 27),
     to_signed(16#00EC836#, 27), to_signed(16#00ED1C2#, 27), to_signed(16#00EDB29#, 27),
     to_signed(16#00EE46C#, 27), to_signed(16#00EED8A#, 27), to_signed(16#00EF683#, 27),
     to_signed(16#00EFF57#, 27), to_signed(16#00F0806#, 27), to_signed(16#00F1091#, 27),
     to_signed(16#00F18F5#, 27), to_signed(16#00F2135#, 27), to_signed(16#00F2950#, 27),
     to_signed(16#00F3144#, 27), to_signed(16#00F3914#, 27), to_signed(16#00F40BE#, 27),
     to_signed(16#00F4842#, 27), to_signed(16#00F4FA1#, 27), to_signed(16#00F56D9#, 27),
     to_signed(16#00F5DEC#, 27), to_signed(16#00F64D9#, 27), to_signed(16#00F6BA0#, 27),
     to_signed(16#00F7241#, 27), to_signed(16#00F78BC#, 27), to_signed(16#00F7F11#, 27),
     to_signed(16#00F853F#, 27), to_signed(16#00F8B48#, 27), to_signed(16#00F9129#, 27),
     to_signed(16#00F96E5#, 27), to_signed(16#00F9C7A#, 27), to_signed(16#00FA1E8#, 27),
     to_signed(16#00FA730#, 27), to_signed(16#00FAC51#, 27), to_signed(16#00FB14C#, 27),
     to_signed(16#00FB620#, 27), to_signed(16#00FBACD#, 27), to_signed(16#00FBF53#, 27),
     to_signed(16#00FC3B2#, 27), to_signed(16#00FC7EB#, 27), to_signed(16#00FCBFD#, 27),
     to_signed(16#00FCFE7#, 27), to_signed(16#00FD3AB#, 27), to_signed(16#00FD747#, 27),
     to_signed(16#00FDABD#, 27), to_signed(16#00FDE0B#, 27), to_signed(16#00FE132#, 27),
     to_signed(16#00FE432#, 27), to_signed(16#00FE70B#, 27), to_signed(16#00FE9BD#, 27),
     to_signed(16#00FEC47#, 27), to_signed(16#00FEEAA#, 27), to_signed(16#00FF0E5#, 27),
     to_signed(16#00FF2FA#, 27), to_signed(16#00FF4E7#, 27), to_signed(16#00FF6AC#, 27),
     to_signed(16#00FF84B#, 27), to_signed(16#00FF9C2#, 27), to_signed(16#00FFB11#, 27),
     to_signed(16#00FFC39#, 27), to_signed(16#00FFD39#, 27), to_signed(16#00FFE13#, 27),
     to_signed(16#00FFEC4#, 27), to_signed(16#00FFF4E#, 27), to_signed(16#00FFFB1#, 27),
     to_signed(16#00FFFEC#, 27));  -- sfix27 [256]

  -- Signals
  SIGNAL u_signed                         : signed(26 DOWNTO 0);  -- sfix27_En20
  SIGNAL insig_out1                       : unsigned(9 DOWNTO 0);  -- ufix10_En10
  SIGNAL Point50_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En27
  SIGNAL LTEp501_1_cast                   : unsigned(26 DOWNTO 0);  -- ufix27_En27
  SIGNAL LTEp501_relop1                   : std_logic;
  SIGNAL RAMDelayBalance_out1             : std_logic;
  SIGNAL pow2switch_out1                  : std_logic;
  SIGNAL Amp50_sub_cast                   : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL Amp50_sub_cast_1                 : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL Amp50_out1                       : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL insig_out1_dtc                   : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL QuadHandle1_out1                 : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL Point25_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En27
  SIGNAL LTEp251_1_cast                   : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL LTEp251_relop1                   : std_logic;
  SIGNAL p50mA_sub_cast                   : signed(28 DOWNTO 0);  -- sfix29_En27
  SIGNAL p50mA_sub_cast_1                 : signed(28 DOWNTO 0);  -- sfix29_En27
  SIGNAL p50mA_out1                       : signed(28 DOWNTO 0);  -- sfix29_En27
  SIGNAL p50mA_out1_dtc                   : unsigned(9 DOWNTO 0);  -- ufix10_En10
  SIGNAL QuadHandle1_out1_dtc             : unsigned(9 DOWNTO 0);  -- ufix10_En10
  SIGNAL QuadHandle2_out1                 : unsigned(9 DOWNTO 0);  -- ufix10_En10
  SIGNAL CastU16En2_out1                  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL CastU16En4_out1                  : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL CastU16En3_out1                  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Saturation_out1                  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Switch_out1                      : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Look_Up_Table1_k                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Look_Up_Table_out1               : signed(26 DOWNTO 0);  -- sfix27_En20
  SIGNAL Look_Up_Table_out1_1             : signed(26 DOWNTO 0) := to_signed(16#0000000#, 27);  -- sfix27_En20
  SIGNAL Negate1_cast                     : signed(27 DOWNTO 0);  -- sfix28_En20
  SIGNAL Negate1_cast_1                   : signed(27 DOWNTO 0);  -- sfix28_En20
  SIGNAL Negate_out1                      : signed(26 DOWNTO 0);  -- sfix27_En20
  SIGNAL Sine                             : signed(26 DOWNTO 0);  -- sfix27_En20
  SIGNAL insig_out1_1                     : unsigned(9 DOWNTO 0);  -- ufix10_En10
  SIGNAL Point25_out1_1                   : unsigned(26 DOWNTO 0);  -- ufix27_En27
  SIGNAL LTEp25_1_cast                    : unsigned(26 DOWNTO 0);  -- ufix27_En27
  SIGNAL LTEp25_relop1                    : std_logic;
  SIGNAL Point75_out1                     : unsigned(26 DOWNTO 0);  -- ufix27_En27
  SIGNAL GTEp75_1_cast                    : unsigned(26 DOWNTO 0);  -- ufix27_En27
  SIGNAL GTEp75_relop1                    : std_logic;
  SIGNAL alpha1st_or_4th_Quad_bool        : std_logic;
  SIGNAL alpha1st_or_4th_Quad_out1        : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL RAMDelayBalance_out1_1           : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL pow2switch_out1_1                : std_logic;
  SIGNAL Point50_out1_1                   : unsigned(26 DOWNTO 0);  -- ufix27_En27
  SIGNAL p75mA_sub_cast                   : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL p75mA_sub_cast_1                 : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL p75mA_out1                       : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL Amp75_sub_cast                   : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL Amp75_sub_cast_1                 : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL Amp75_out1                       : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL Amp25_sub_cast                   : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL Amp25_sub_cast_1                 : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL Amp25_out1                       : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL p25mA_sub_cast                   : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL p25mA_sub_cast_1                 : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL p25mA_out1                       : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL LTEp50_1_cast                    : unsigned(26 DOWNTO 0);  -- ufix27_En27
  SIGNAL LTEp50_relop1                    : std_logic;
  SIGNAL QuadHandle1b_out1                : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL QuadHandle1b_out1_dtc            : unsigned(9 DOWNTO 0);  -- ufix10_En10
  SIGNAL QuadHandle1a_out1                : signed(27 DOWNTO 0);  -- sfix28_En27
  SIGNAL QuadHandle1a_out1_dtc            : unsigned(9 DOWNTO 0);  -- ufix10_En10
  SIGNAL QuadHandle2_out1_1               : unsigned(9 DOWNTO 0);  -- ufix10_En10
  SIGNAL CastU16En1_out1                  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL CastU16En3_out1_1                : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL CastU16En2_out1_1                : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Saturation_out1_1                : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Switch_out1_1                    : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Look_Up_Table_k                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Look_Up_Table_out1_2             : signed(26 DOWNTO 0);  -- sfix27_En20
  SIGNAL Look_Up_Table_out1_3             : signed(26 DOWNTO 0) := to_signed(16#0000000#, 27);  -- sfix27_En20
  SIGNAL Negate_cast                      : signed(27 DOWNTO 0);  -- sfix28_En20
  SIGNAL Negate_cast_1                    : signed(27 DOWNTO 0);  -- sfix28_En20
  SIGNAL Negate_out1_1                    : signed(26 DOWNTO 0);  -- sfix27_En20
  SIGNAL Cosine                           : signed(26 DOWNTO 0);  -- sfix27_En20

BEGIN
  -- (C) 2016 Mathworks, Inc
  -- 
  -- (C) 2016 Mathworks, Inc

  u_signed <= signed(u);

  insig_out1 <= unsigned(u_signed(19 DOWNTO 10));

  Point50_out1 <= to_unsigned(16#4000000#, 27);

  LTEp501_1_cast <= insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  LTEp501_relop1 <= '1' WHEN LTEp501_1_cast <= Point50_out1 ELSE
      '0';

  delayMatch_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        RAMDelayBalance_out1 <= '0';
      ELSIF enb = '1' THEN
        RAMDelayBalance_out1 <= LTEp501_relop1;
      END IF;
    END IF;
  END PROCESS delayMatch_process;


  pow2switch_out1 <= '1';

  Amp50_sub_cast <= signed(resize(insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 28));
  Amp50_sub_cast_1 <= signed(resize(Point50_out1, 28));
  Amp50_out1 <= Amp50_sub_cast - Amp50_sub_cast_1;

  insig_out1_dtc <= signed(resize(insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 28));

  
  QuadHandle1_out1 <= Amp50_out1 WHEN LTEp501_relop1 = '0' ELSE
      insig_out1_dtc;

  Point25_out1 <= to_unsigned(16#2000000#, 27);

  LTEp251_1_cast <= signed(resize(Point25_out1, 28));
  
  LTEp251_relop1 <= '1' WHEN QuadHandle1_out1 <= LTEp251_1_cast ELSE
      '0';

  p50mA_sub_cast <= signed(resize(Point50_out1, 29));
  p50mA_sub_cast_1 <= resize(QuadHandle1_out1, 29);
  p50mA_out1 <= p50mA_sub_cast - p50mA_sub_cast_1;

  p50mA_out1_dtc <= unsigned(p50mA_out1(26 DOWNTO 17));

  QuadHandle1_out1_dtc <= unsigned(QuadHandle1_out1(26 DOWNTO 17));

  
  QuadHandle2_out1 <= p50mA_out1_dtc WHEN LTEp251_relop1 = '0' ELSE
      QuadHandle1_out1_dtc;

  CastU16En2_out1 <= QuadHandle2_out1;

  CastU16En4_out1 <= resize(CastU16En2_out1, 11);

  
  CastU16En3_out1 <= "1111111111" WHEN CastU16En4_out1(10) /= '0' ELSE
      CastU16En4_out1(9 DOWNTO 0);

  -- saturation block maybe optimized away
  -- if the NumDataPoints is a power of 2
  
  Saturation_out1 <= to_unsigned(16#0FF#, 10) WHEN CastU16En3_out1 > to_unsigned(16#0FF#, 10) ELSE
      CastU16En3_out1;

  
  Switch_out1 <= CastU16En3_out1 WHEN pow2switch_out1 = '0' ELSE
      Saturation_out1;

  
  Look_Up_Table1_k <= to_unsigned(16#00#, 8) WHEN Switch_out1 = to_unsigned(16#000#, 10) ELSE
      to_unsigned(16#FF#, 8) WHEN Switch_out1 >= to_unsigned(16#0FF#, 10) ELSE
      Switch_out1(7 DOWNTO 0);
  Look_Up_Table_out1 <= Look_Up_Table1_data(to_integer(Look_Up_Table1_k));

  PipelineRegister1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Look_Up_Table_out1_1 <= Look_Up_Table_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister1_process;


  Negate1_cast <= resize(Look_Up_Table_out1_1, 28);
  Negate1_cast_1 <=  - (Negate1_cast);
  Negate_out1 <= Negate1_cast_1(26 DOWNTO 0);

  
  Sine <= Negate_out1 WHEN RAMDelayBalance_out1 = '0' ELSE
      Look_Up_Table_out1_1;

  x <= std_logic_vector(Sine);

  insig_out1_1 <= unsigned(u_signed(19 DOWNTO 10));

  Point25_out1_1 <= to_unsigned(16#2000000#, 27);

  LTEp25_1_cast <= insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  LTEp25_relop1 <= '1' WHEN LTEp25_1_cast <= Point25_out1_1 ELSE
      '0';

  Point75_out1 <= to_unsigned(16#6000000#, 27);

  GTEp75_1_cast <= insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  GTEp75_relop1 <= '1' WHEN GTEp75_1_cast >= Point75_out1 ELSE
      '0';

  alpha1st_or_4th_Quad_bool <= LTEp25_relop1 OR GTEp75_relop1;

  alpha1st_or_4th_Quad_out1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & alpha1st_or_4th_Quad_bool;

  delayMatch1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        RAMDelayBalance_out1_1 <= to_unsigned(16#00#, 8);
      ELSIF enb = '1' THEN
        RAMDelayBalance_out1_1 <= alpha1st_or_4th_Quad_out1;
      END IF;
    END IF;
  END PROCESS delayMatch1_process;


  pow2switch_out1_1 <= '1';

  Point50_out1_1 <= to_unsigned(16#4000000#, 27);

  p75mA_sub_cast <= signed(resize(Point75_out1, 28));
  p75mA_sub_cast_1 <= signed(resize(insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 28));
  p75mA_out1 <= p75mA_sub_cast - p75mA_sub_cast_1;

  Amp75_sub_cast <= signed(resize(insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 28));
  Amp75_sub_cast_1 <= signed(resize(Point75_out1, 28));
  Amp75_out1 <= Amp75_sub_cast - Amp75_sub_cast_1;

  Amp25_sub_cast <= signed(resize(insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 28));
  Amp25_sub_cast_1 <= signed(resize(Point25_out1_1, 28));
  Amp25_out1 <= Amp25_sub_cast - Amp25_sub_cast_1;

  p25mA_sub_cast <= signed(resize(Point25_out1_1, 28));
  p25mA_sub_cast_1 <= signed(resize(insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 28));
  p25mA_out1 <= p25mA_sub_cast - p25mA_sub_cast_1;

  LTEp50_1_cast <= insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  LTEp50_relop1 <= '1' WHEN LTEp50_1_cast <= Point50_out1_1 ELSE
      '0';

  
  QuadHandle1b_out1 <= p75mA_out1 WHEN GTEp75_relop1 = '0' ELSE
      Amp75_out1;

  
  QuadHandle1b_out1_dtc <= "1111111111" WHEN (QuadHandle1b_out1(27) = '0') AND (QuadHandle1b_out1(26 DOWNTO 17) = "1111111111") ELSE
      "0000000000" WHEN QuadHandle1b_out1(27) = '1' ELSE
      unsigned(QuadHandle1b_out1(26 DOWNTO 17));

  
  QuadHandle1a_out1 <= Amp25_out1 WHEN LTEp25_relop1 = '0' ELSE
      p25mA_out1;

  
  QuadHandle1a_out1_dtc <= "1111111111" WHEN (QuadHandle1a_out1(27) = '0') AND (QuadHandle1a_out1(26 DOWNTO 17) = "1111111111") ELSE
      "0000000000" WHEN QuadHandle1a_out1(27) = '1' ELSE
      unsigned(QuadHandle1a_out1(26 DOWNTO 17));

  
  QuadHandle2_out1_1 <= QuadHandle1b_out1_dtc WHEN LTEp50_relop1 = '0' ELSE
      QuadHandle1a_out1_dtc;

  CastU16En1_out1 <= QuadHandle2_out1_1;

  CastU16En3_out1_1 <= resize(CastU16En1_out1, 11);

  
  CastU16En2_out1_1 <= "1111111111" WHEN CastU16En3_out1_1(10) /= '0' ELSE
      CastU16En3_out1_1(9 DOWNTO 0);

  -- saturation block maybe optimized away
  -- if the NumDataPoints is a power of 2
  
  Saturation_out1_1 <= to_unsigned(16#0FF#, 10) WHEN CastU16En2_out1_1 > to_unsigned(16#0FF#, 10) ELSE
      CastU16En2_out1_1;

  
  Switch_out1_1 <= CastU16En2_out1_1 WHEN pow2switch_out1_1 = '0' ELSE
      Saturation_out1_1;

  
  Look_Up_Table_k <= to_unsigned(16#00#, 8) WHEN Switch_out1_1 = to_unsigned(16#000#, 10) ELSE
      to_unsigned(16#FF#, 8) WHEN Switch_out1_1 >= to_unsigned(16#0FF#, 10) ELSE
      Switch_out1_1(7 DOWNTO 0);
  Look_Up_Table_out1_2 <= Look_Up_Table_data(to_integer(Look_Up_Table_k));

  PipelineRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Look_Up_Table_out1_3 <= Look_Up_Table_out1_2;
      END IF;
    END IF;
  END PROCESS PipelineRegister_process;


  Negate_cast <= resize(Look_Up_Table_out1_3, 28);
  Negate_cast_1 <=  - (Negate_cast);
  Negate_out1_1 <= Negate_cast_1(26 DOWNTO 0);

  
  Cosine <= Negate_out1_1 WHEN RAMDelayBalance_out1_1 = to_unsigned(16#00#, 8) ELSE
      Look_Up_Table_out1_3;

  y <= std_logic_vector(Cosine);

END rtl;

