// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="BGD_BGD,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvc900-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=12.561000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=81,HLS_SYN_DSP=0,HLS_SYN_FF=28749,HLS_SYN_LUT=28652,HLS_VERSION=2020_1}" *)

module BGD (
        ap_clk,
        ap_rst_n,
        m_axi_axi_read_AWVALID,
        m_axi_axi_read_AWREADY,
        m_axi_axi_read_AWADDR,
        m_axi_axi_read_AWID,
        m_axi_axi_read_AWLEN,
        m_axi_axi_read_AWSIZE,
        m_axi_axi_read_AWBURST,
        m_axi_axi_read_AWLOCK,
        m_axi_axi_read_AWCACHE,
        m_axi_axi_read_AWPROT,
        m_axi_axi_read_AWQOS,
        m_axi_axi_read_AWREGION,
        m_axi_axi_read_AWUSER,
        m_axi_axi_read_WVALID,
        m_axi_axi_read_WREADY,
        m_axi_axi_read_WDATA,
        m_axi_axi_read_WSTRB,
        m_axi_axi_read_WLAST,
        m_axi_axi_read_WID,
        m_axi_axi_read_WUSER,
        m_axi_axi_read_ARVALID,
        m_axi_axi_read_ARREADY,
        m_axi_axi_read_ARADDR,
        m_axi_axi_read_ARID,
        m_axi_axi_read_ARLEN,
        m_axi_axi_read_ARSIZE,
        m_axi_axi_read_ARBURST,
        m_axi_axi_read_ARLOCK,
        m_axi_axi_read_ARCACHE,
        m_axi_axi_read_ARPROT,
        m_axi_axi_read_ARQOS,
        m_axi_axi_read_ARREGION,
        m_axi_axi_read_ARUSER,
        m_axi_axi_read_RVALID,
        m_axi_axi_read_RREADY,
        m_axi_axi_read_RDATA,
        m_axi_axi_read_RLAST,
        m_axi_axi_read_RID,
        m_axi_axi_read_RUSER,
        m_axi_axi_read_RRESP,
        m_axi_axi_read_BVALID,
        m_axi_axi_read_BREADY,
        m_axi_axi_read_BRESP,
        m_axi_axi_read_BID,
        m_axi_axi_read_BUSER,
        m_axi_axi_write_AWVALID,
        m_axi_axi_write_AWREADY,
        m_axi_axi_write_AWADDR,
        m_axi_axi_write_AWID,
        m_axi_axi_write_AWLEN,
        m_axi_axi_write_AWSIZE,
        m_axi_axi_write_AWBURST,
        m_axi_axi_write_AWLOCK,
        m_axi_axi_write_AWCACHE,
        m_axi_axi_write_AWPROT,
        m_axi_axi_write_AWQOS,
        m_axi_axi_write_AWREGION,
        m_axi_axi_write_AWUSER,
        m_axi_axi_write_WVALID,
        m_axi_axi_write_WREADY,
        m_axi_axi_write_WDATA,
        m_axi_axi_write_WSTRB,
        m_axi_axi_write_WLAST,
        m_axi_axi_write_WID,
        m_axi_axi_write_WUSER,
        m_axi_axi_write_ARVALID,
        m_axi_axi_write_ARREADY,
        m_axi_axi_write_ARADDR,
        m_axi_axi_write_ARID,
        m_axi_axi_write_ARLEN,
        m_axi_axi_write_ARSIZE,
        m_axi_axi_write_ARBURST,
        m_axi_axi_write_ARLOCK,
        m_axi_axi_write_ARCACHE,
        m_axi_axi_write_ARPROT,
        m_axi_axi_write_ARQOS,
        m_axi_axi_write_ARREGION,
        m_axi_axi_write_ARUSER,
        m_axi_axi_write_RVALID,
        m_axi_axi_write_RREADY,
        m_axi_axi_write_RDATA,
        m_axi_axi_write_RLAST,
        m_axi_axi_write_RID,
        m_axi_axi_write_RUSER,
        m_axi_axi_write_RRESP,
        m_axi_axi_write_BVALID,
        m_axi_axi_write_BREADY,
        m_axi_axi_write_BRESP,
        m_axi_axi_write_BID,
        m_axi_axi_write_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 79'd1;
parameter    ap_ST_fsm_state2 = 79'd2;
parameter    ap_ST_fsm_state3 = 79'd4;
parameter    ap_ST_fsm_state4 = 79'd8;
parameter    ap_ST_fsm_state5 = 79'd16;
parameter    ap_ST_fsm_state6 = 79'd32;
parameter    ap_ST_fsm_state7 = 79'd64;
parameter    ap_ST_fsm_state8 = 79'd128;
parameter    ap_ST_fsm_state9 = 79'd256;
parameter    ap_ST_fsm_pp0_stage0 = 79'd512;
parameter    ap_ST_fsm_state13 = 79'd1024;
parameter    ap_ST_fsm_state14 = 79'd2048;
parameter    ap_ST_fsm_state15 = 79'd4096;
parameter    ap_ST_fsm_state16 = 79'd8192;
parameter    ap_ST_fsm_state17 = 79'd16384;
parameter    ap_ST_fsm_state18 = 79'd32768;
parameter    ap_ST_fsm_state19 = 79'd65536;
parameter    ap_ST_fsm_state20 = 79'd131072;
parameter    ap_ST_fsm_pp1_stage0 = 79'd262144;
parameter    ap_ST_fsm_state24 = 79'd524288;
parameter    ap_ST_fsm_state25 = 79'd1048576;
parameter    ap_ST_fsm_state26 = 79'd2097152;
parameter    ap_ST_fsm_state27 = 79'd4194304;
parameter    ap_ST_fsm_state28 = 79'd8388608;
parameter    ap_ST_fsm_state29 = 79'd16777216;
parameter    ap_ST_fsm_state30 = 79'd33554432;
parameter    ap_ST_fsm_state31 = 79'd67108864;
parameter    ap_ST_fsm_pp2_stage0 = 79'd134217728;
parameter    ap_ST_fsm_state35 = 79'd268435456;
parameter    ap_ST_fsm_state36 = 79'd536870912;
parameter    ap_ST_fsm_state37 = 79'd1073741824;
parameter    ap_ST_fsm_state38 = 79'd2147483648;
parameter    ap_ST_fsm_state39 = 79'd4294967296;
parameter    ap_ST_fsm_state40 = 79'd8589934592;
parameter    ap_ST_fsm_state41 = 79'd17179869184;
parameter    ap_ST_fsm_state42 = 79'd34359738368;
parameter    ap_ST_fsm_state43 = 79'd68719476736;
parameter    ap_ST_fsm_pp3_stage0 = 79'd137438953472;
parameter    ap_ST_fsm_state47 = 79'd274877906944;
parameter    ap_ST_fsm_state48 = 79'd549755813888;
parameter    ap_ST_fsm_state49 = 79'd1099511627776;
parameter    ap_ST_fsm_state50 = 79'd2199023255552;
parameter    ap_ST_fsm_state51 = 79'd4398046511104;
parameter    ap_ST_fsm_state52 = 79'd8796093022208;
parameter    ap_ST_fsm_state53 = 79'd17592186044416;
parameter    ap_ST_fsm_state54 = 79'd35184372088832;
parameter    ap_ST_fsm_state55 = 79'd70368744177664;
parameter    ap_ST_fsm_pp4_stage0 = 79'd140737488355328;
parameter    ap_ST_fsm_pp4_stage1 = 79'd281474976710656;
parameter    ap_ST_fsm_state59 = 79'd562949953421312;
parameter    ap_ST_fsm_state60 = 79'd1125899906842624;
parameter    ap_ST_fsm_state61 = 79'd2251799813685248;
parameter    ap_ST_fsm_state62 = 79'd4503599627370496;
parameter    ap_ST_fsm_state63 = 79'd9007199254740992;
parameter    ap_ST_fsm_state64 = 79'd18014398509481984;
parameter    ap_ST_fsm_state65 = 79'd36028797018963968;
parameter    ap_ST_fsm_state66 = 79'd72057594037927936;
parameter    ap_ST_fsm_state67 = 79'd144115188075855872;
parameter    ap_ST_fsm_pp5_stage0 = 79'd288230376151711744;
parameter    ap_ST_fsm_pp5_stage1 = 79'd576460752303423488;
parameter    ap_ST_fsm_state71 = 79'd1152921504606846976;
parameter    ap_ST_fsm_state72 = 79'd2305843009213693952;
parameter    ap_ST_fsm_state73 = 79'd4611686018427387904;
parameter    ap_ST_fsm_state74 = 79'd9223372036854775808;
parameter    ap_ST_fsm_state75 = 79'd18446744073709551616;
parameter    ap_ST_fsm_state76 = 79'd36893488147419103232;
parameter    ap_ST_fsm_pp6_stage0 = 79'd73786976294838206464;
parameter    ap_ST_fsm_state80 = 79'd147573952589676412928;
parameter    ap_ST_fsm_state81 = 79'd295147905179352825856;
parameter    ap_ST_fsm_state82 = 79'd590295810358705651712;
parameter    ap_ST_fsm_state83 = 79'd1180591620717411303424;
parameter    ap_ST_fsm_state84 = 79'd2361183241434822606848;
parameter    ap_ST_fsm_state85 = 79'd4722366482869645213696;
parameter    ap_ST_fsm_pp7_stage0 = 79'd9444732965739290427392;
parameter    ap_ST_fsm_state89 = 79'd18889465931478580854784;
parameter    ap_ST_fsm_state90 = 79'd37778931862957161709568;
parameter    ap_ST_fsm_state91 = 79'd75557863725914323419136;
parameter    ap_ST_fsm_state92 = 79'd151115727451828646838272;
parameter    ap_ST_fsm_state93 = 79'd302231454903657293676544;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AXI_READ_ID_WIDTH = 1;
parameter    C_M_AXI_AXI_READ_ADDR_WIDTH = 32;
parameter    C_M_AXI_AXI_READ_DATA_WIDTH = 32;
parameter    C_M_AXI_AXI_READ_AWUSER_WIDTH = 1;
parameter    C_M_AXI_AXI_READ_ARUSER_WIDTH = 1;
parameter    C_M_AXI_AXI_READ_WUSER_WIDTH = 1;
parameter    C_M_AXI_AXI_READ_RUSER_WIDTH = 1;
parameter    C_M_AXI_AXI_READ_BUSER_WIDTH = 1;
parameter    C_M_AXI_AXI_READ_USER_VALUE = 0;
parameter    C_M_AXI_AXI_READ_PROT_VALUE = 0;
parameter    C_M_AXI_AXI_READ_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AXI_WRITE_ID_WIDTH = 1;
parameter    C_M_AXI_AXI_WRITE_ADDR_WIDTH = 32;
parameter    C_M_AXI_AXI_WRITE_DATA_WIDTH = 32;
parameter    C_M_AXI_AXI_WRITE_AWUSER_WIDTH = 1;
parameter    C_M_AXI_AXI_WRITE_ARUSER_WIDTH = 1;
parameter    C_M_AXI_AXI_WRITE_WUSER_WIDTH = 1;
parameter    C_M_AXI_AXI_WRITE_RUSER_WIDTH = 1;
parameter    C_M_AXI_AXI_WRITE_BUSER_WIDTH = 1;
parameter    C_M_AXI_AXI_WRITE_USER_VALUE = 0;
parameter    C_M_AXI_AXI_WRITE_PROT_VALUE = 0;
parameter    C_M_AXI_AXI_WRITE_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_AXI_READ_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_AXI_WRITE_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_axi_read_AWVALID;
input   m_axi_axi_read_AWREADY;
output  [C_M_AXI_AXI_READ_ADDR_WIDTH - 1:0] m_axi_axi_read_AWADDR;
output  [C_M_AXI_AXI_READ_ID_WIDTH - 1:0] m_axi_axi_read_AWID;
output  [7:0] m_axi_axi_read_AWLEN;
output  [2:0] m_axi_axi_read_AWSIZE;
output  [1:0] m_axi_axi_read_AWBURST;
output  [1:0] m_axi_axi_read_AWLOCK;
output  [3:0] m_axi_axi_read_AWCACHE;
output  [2:0] m_axi_axi_read_AWPROT;
output  [3:0] m_axi_axi_read_AWQOS;
output  [3:0] m_axi_axi_read_AWREGION;
output  [C_M_AXI_AXI_READ_AWUSER_WIDTH - 1:0] m_axi_axi_read_AWUSER;
output   m_axi_axi_read_WVALID;
input   m_axi_axi_read_WREADY;
output  [C_M_AXI_AXI_READ_DATA_WIDTH - 1:0] m_axi_axi_read_WDATA;
output  [C_M_AXI_AXI_READ_WSTRB_WIDTH - 1:0] m_axi_axi_read_WSTRB;
output   m_axi_axi_read_WLAST;
output  [C_M_AXI_AXI_READ_ID_WIDTH - 1:0] m_axi_axi_read_WID;
output  [C_M_AXI_AXI_READ_WUSER_WIDTH - 1:0] m_axi_axi_read_WUSER;
output   m_axi_axi_read_ARVALID;
input   m_axi_axi_read_ARREADY;
output  [C_M_AXI_AXI_READ_ADDR_WIDTH - 1:0] m_axi_axi_read_ARADDR;
output  [C_M_AXI_AXI_READ_ID_WIDTH - 1:0] m_axi_axi_read_ARID;
output  [7:0] m_axi_axi_read_ARLEN;
output  [2:0] m_axi_axi_read_ARSIZE;
output  [1:0] m_axi_axi_read_ARBURST;
output  [1:0] m_axi_axi_read_ARLOCK;
output  [3:0] m_axi_axi_read_ARCACHE;
output  [2:0] m_axi_axi_read_ARPROT;
output  [3:0] m_axi_axi_read_ARQOS;
output  [3:0] m_axi_axi_read_ARREGION;
output  [C_M_AXI_AXI_READ_ARUSER_WIDTH - 1:0] m_axi_axi_read_ARUSER;
input   m_axi_axi_read_RVALID;
output   m_axi_axi_read_RREADY;
input  [C_M_AXI_AXI_READ_DATA_WIDTH - 1:0] m_axi_axi_read_RDATA;
input   m_axi_axi_read_RLAST;
input  [C_M_AXI_AXI_READ_ID_WIDTH - 1:0] m_axi_axi_read_RID;
input  [C_M_AXI_AXI_READ_RUSER_WIDTH - 1:0] m_axi_axi_read_RUSER;
input  [1:0] m_axi_axi_read_RRESP;
input   m_axi_axi_read_BVALID;
output   m_axi_axi_read_BREADY;
input  [1:0] m_axi_axi_read_BRESP;
input  [C_M_AXI_AXI_READ_ID_WIDTH - 1:0] m_axi_axi_read_BID;
input  [C_M_AXI_AXI_READ_BUSER_WIDTH - 1:0] m_axi_axi_read_BUSER;
output   m_axi_axi_write_AWVALID;
input   m_axi_axi_write_AWREADY;
output  [C_M_AXI_AXI_WRITE_ADDR_WIDTH - 1:0] m_axi_axi_write_AWADDR;
output  [C_M_AXI_AXI_WRITE_ID_WIDTH - 1:0] m_axi_axi_write_AWID;
output  [7:0] m_axi_axi_write_AWLEN;
output  [2:0] m_axi_axi_write_AWSIZE;
output  [1:0] m_axi_axi_write_AWBURST;
output  [1:0] m_axi_axi_write_AWLOCK;
output  [3:0] m_axi_axi_write_AWCACHE;
output  [2:0] m_axi_axi_write_AWPROT;
output  [3:0] m_axi_axi_write_AWQOS;
output  [3:0] m_axi_axi_write_AWREGION;
output  [C_M_AXI_AXI_WRITE_AWUSER_WIDTH - 1:0] m_axi_axi_write_AWUSER;
output   m_axi_axi_write_WVALID;
input   m_axi_axi_write_WREADY;
output  [C_M_AXI_AXI_WRITE_DATA_WIDTH - 1:0] m_axi_axi_write_WDATA;
output  [C_M_AXI_AXI_WRITE_WSTRB_WIDTH - 1:0] m_axi_axi_write_WSTRB;
output   m_axi_axi_write_WLAST;
output  [C_M_AXI_AXI_WRITE_ID_WIDTH - 1:0] m_axi_axi_write_WID;
output  [C_M_AXI_AXI_WRITE_WUSER_WIDTH - 1:0] m_axi_axi_write_WUSER;
output   m_axi_axi_write_ARVALID;
input   m_axi_axi_write_ARREADY;
output  [C_M_AXI_AXI_WRITE_ADDR_WIDTH - 1:0] m_axi_axi_write_ARADDR;
output  [C_M_AXI_AXI_WRITE_ID_WIDTH - 1:0] m_axi_axi_write_ARID;
output  [7:0] m_axi_axi_write_ARLEN;
output  [2:0] m_axi_axi_write_ARSIZE;
output  [1:0] m_axi_axi_write_ARBURST;
output  [1:0] m_axi_axi_write_ARLOCK;
output  [3:0] m_axi_axi_write_ARCACHE;
output  [2:0] m_axi_axi_write_ARPROT;
output  [3:0] m_axi_axi_write_ARQOS;
output  [3:0] m_axi_axi_write_ARREGION;
output  [C_M_AXI_AXI_WRITE_ARUSER_WIDTH - 1:0] m_axi_axi_write_ARUSER;
input   m_axi_axi_write_RVALID;
output   m_axi_axi_write_RREADY;
input  [C_M_AXI_AXI_WRITE_DATA_WIDTH - 1:0] m_axi_axi_write_RDATA;
input   m_axi_axi_write_RLAST;
input  [C_M_AXI_AXI_WRITE_ID_WIDTH - 1:0] m_axi_axi_write_RID;
input  [C_M_AXI_AXI_WRITE_RUSER_WIDTH - 1:0] m_axi_axi_write_RUSER;
input  [1:0] m_axi_axi_write_RRESP;
input   m_axi_axi_write_BVALID;
output   m_axi_axi_write_BREADY;
input  [1:0] m_axi_axi_write_BRESP;
input  [C_M_AXI_AXI_WRITE_ID_WIDTH - 1:0] m_axi_axi_write_BID;
input  [C_M_AXI_AXI_WRITE_BUSER_WIDTH - 1:0] m_axi_axi_write_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [78:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] axiMlpResultsInput;
wire   [63:0] axiClassesInput;
wire   [63:0] axiWeightInput;
wire   [63:0] axiBiasInput;
wire   [63:0] axiWeightOutput;
wire   [63:0] axiBiasOutput;
wire   [31:0] numberInputs;
wire   [31:0] numberOutputs;
wire   [31:0] numberLayers;
wire  signed [31:0] numberNeurons;
wire   [31:0] loadParameters;
wire  signed [31:0] batchSize;
wire   [31:0] learningRate;
reg   [13:0] bramWeight_address0;
reg    bramWeight_ce0;
reg    bramWeight_we0;
reg   [31:0] bramWeight_d0;
wire   [31:0] bramWeight_q0;
reg   [13:0] bramWeight_address1;
reg    bramWeight_ce1;
reg    bramWeight_we1;
wire   [31:0] bramWeight_q1;
reg   [8:0] bramBias_address0;
reg    bramBias_ce0;
reg    bramBias_we0;
reg   [31:0] bramBias_d0;
wire   [31:0] bramBias_q0;
reg    bramBias_ce1;
reg    bramBias_we1;
wire   [31:0] bramBias_q1;
reg   [13:0] bramWeightGradientAvg_address0;
reg    bramWeightGradientAvg_ce0;
reg    bramWeightGradientAvg_we0;
reg   [31:0] bramWeightGradientAvg_d0;
wire   [31:0] bramWeightGradientAvg_q0;
reg   [13:0] bramWeightGradientAvg_address1;
reg    bramWeightGradientAvg_ce1;
reg    bramWeightGradientAvg_we1;
reg   [31:0] bramWeightGradientAvg_d1;
wire   [31:0] bramWeightGradientAvg_q1;
reg   [8:0] bramBiasGradientAvg_address0;
reg    bramBiasGradientAvg_ce0;
reg    bramBiasGradientAvg_we0;
reg   [31:0] bramBiasGradientAvg_d0;
wire   [31:0] bramBiasGradientAvg_q0;
reg    bramBiasGradientAvg_ce1;
wire   [31:0] bramBiasGradientAvg_q1;
reg    axi_read_blk_n_AR;
wire    ap_CS_fsm_state3;
reg    axi_read_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond10911_reg_1576;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] exitcond1079_reg_1643;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] exitcond1068_reg_1707;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond10810_reg_1606;
wire    ap_CS_fsm_state14;
reg    axi_write_blk_n_AW;
wire    ap_CS_fsm_state76;
reg   [0:0] icmp_ln152_reg_2059;
reg    axi_write_blk_n_W;
reg    ap_enable_reg_pp6_iter2;
wire    ap_block_pp6_stage0;
reg   [0:0] exitcond892_reg_2069;
reg   [0:0] exitcond892_reg_2069_pp6_iter1_reg;
reg    axi_write_blk_n_B;
wire    ap_CS_fsm_state84;
reg    ap_enable_reg_pp7_iter2;
wire    ap_block_pp7_stage0;
reg   [0:0] exitcond1_reg_2098;
reg   [0:0] exitcond1_reg_2098_pp7_iter1_reg;
wire    ap_CS_fsm_state93;
reg   [0:0] icmp_ln157_reg_2088;
wire    ap_CS_fsm_state85;
wire    axi_read_AWREADY;
wire    axi_read_WREADY;
reg    axi_read_ARVALID;
wire    axi_read_ARREADY;
reg   [31:0] axi_read_ARADDR;
reg   [31:0] axi_read_ARLEN;
wire    axi_read_RVALID;
reg    axi_read_RREADY;
wire   [31:0] axi_read_RDATA;
wire    axi_read_RLAST;
wire   [0:0] axi_read_RID;
wire   [0:0] axi_read_RUSER;
wire   [1:0] axi_read_RRESP;
wire    axi_read_BVALID;
wire   [1:0] axi_read_BRESP;
wire   [0:0] axi_read_BID;
wire   [0:0] axi_read_BUSER;
reg    axi_write_AWVALID;
wire    axi_write_AWREADY;
reg   [31:0] axi_write_AWADDR;
reg   [31:0] axi_write_AWLEN;
reg    axi_write_WVALID;
wire    axi_write_WREADY;
reg   [31:0] axi_write_WDATA;
wire    axi_write_ARREADY;
wire    axi_write_RVALID;
wire   [31:0] axi_write_RDATA;
wire    axi_write_RLAST;
wire   [0:0] axi_write_RID;
wire   [0:0] axi_write_RUSER;
wire   [1:0] axi_write_RRESP;
wire    axi_write_BVALID;
reg    axi_write_BREADY;
wire   [1:0] axi_write_BRESP;
wire   [0:0] axi_write_BID;
wire   [0:0] axi_write_BUSER;
reg   [31:0] loop_index85_reg_538;
reg   [31:0] loop_index85_reg_538_pp0_iter1_reg;
wire    ap_block_state10_pp0_stage0_iter0;
reg    ap_block_state11_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] loop_index79_reg_550;
reg   [31:0] loop_index79_reg_550_pp1_iter1_reg;
wire    ap_block_state21_pp1_stage0_iter0;
reg    ap_block_state22_pp1_stage0_iter1;
wire    ap_block_state23_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
reg   [31:0] loop_index73_reg_562;
reg   [31:0] loop_index73_reg_562_pp2_iter1_reg;
wire    ap_block_state32_pp2_stage0_iter0;
reg    ap_block_state33_pp2_stage0_iter1;
wire    ap_block_state34_pp2_stage0_iter2;
reg    ap_block_pp2_stage0_11001;
reg   [31:0] loop_index67_reg_574;
reg   [31:0] loop_index67_reg_574_pp3_iter1_reg;
wire    ap_block_state44_pp3_stage0_iter0;
reg    ap_block_state45_pp3_stage0_iter1;
wire    ap_block_state46_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
reg   [29:0] i_8_reg_607;
reg   [29:0] i_10_reg_637;
reg   [31:0] loop_index61_reg_648;
reg   [31:0] loop_index_reg_659;
reg   [63:0] axiBiasOutput_read_reg_1471;
reg   [63:0] axiWeightOutput_read_reg_1476;
reg   [63:0] axiBiasInput_read_reg_1481;
reg   [63:0] axiWeightInput_read_reg_1486;
reg   [63:0] axiClassesInput_read_reg_1491;
reg   [63:0] axiMlpResultsInput_read_reg_1496;
wire   [0:0] icmp_ln50_fu_734_p2;
reg  signed [31:0] numberOutputs_read_reg_1505;
reg   [31:0] numberInputs_read_reg_1519;
reg   [31:0] numberNeurons_read_reg_1530;
reg  signed [31:0] numberLayers_read_reg_1547;
wire   [31:0] mul_ln55_fu_746_p2;
reg   [31:0] mul_ln55_reg_1555;
wire   [31:0] valuesToLoad_fu_761_p2;
reg   [31:0] valuesToLoad_reg_1560;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln58_fu_766_p2;
reg   [31:0] axi_read_addr_reg_1570;
wire   [0:0] exitcond10911_fu_791_p2;
reg   [0:0] exitcond10911_reg_1576_pp0_iter1_reg;
wire   [31:0] empty_171_fu_796_p2;
reg   [31:0] empty_171_reg_1580;
reg    ap_enable_reg_pp0_iter0;
reg   [31:0] axi_read_addr_read_reg_1585;
wire   [31:0] valuesToLoad_2_fu_815_p2;
reg   [31:0] valuesToLoad_2_reg_1590;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln63_fu_820_p2;
reg   [31:0] axi_read_addr_1_reg_1600;
wire   [0:0] exitcond10810_fu_845_p2;
reg   [0:0] exitcond10810_reg_1606_pp1_iter1_reg;
wire   [31:0] empty_173_fu_850_p2;
reg   [31:0] empty_173_reg_1610;
reg    ap_enable_reg_pp1_iter0;
reg   [31:0] axi_read_addr_1_read_reg_1615;
reg  signed [31:0] batchSize_read_reg_1620;
wire    ap_CS_fsm_state24;
wire   [31:0] mul_ln67_fu_865_p2;
reg   [31:0] mul_ln67_reg_1627;
wire   [0:0] icmp_ln67_fu_870_p2;
reg   [31:0] axi_read_addr_2_reg_1637;
wire   [0:0] exitcond1079_fu_895_p2;
reg   [0:0] exitcond1079_reg_1643_pp2_iter1_reg;
wire   [31:0] empty_176_fu_900_p2;
reg   [31:0] empty_176_reg_1647;
reg    ap_enable_reg_pp2_iter0;
reg   [31:0] axi_read_addr_2_read_reg_1652;
wire   [31:0] valuesToStore_2_fu_915_p2;
reg   [31:0] valuesToStore_2_reg_1657;
wire    ap_CS_fsm_state35;
wire   [31:0] add_ln71_fu_919_p2;
reg   [31:0] add_ln71_reg_1663;
wire   [12:0] trunc_ln71_2_fu_924_p1;
reg   [12:0] trunc_ln71_2_reg_1668;
wire  signed [13:0] trunc_ln71_fu_928_p1;
reg  signed [13:0] trunc_ln71_reg_1674;
wire    ap_CS_fsm_state36;
wire  signed [13:0] trunc_ln71_1_fu_931_p1;
reg  signed [13:0] trunc_ln71_1_reg_1681;
wire   [31:0] mul_ln71_1_fu_938_p2;
reg   [31:0] mul_ln71_1_reg_1691;
wire   [0:0] icmp_ln68_fu_943_p2;
reg   [31:0] axi_read_addr_3_reg_1701;
wire   [0:0] exitcond1068_fu_968_p2;
reg   [0:0] exitcond1068_reg_1707_pp3_iter1_reg;
wire   [31:0] empty_178_fu_973_p2;
reg   [31:0] empty_178_reg_1711;
reg    ap_enable_reg_pp3_iter0;
reg   [31:0] axi_read_addr_3_read_reg_1716;
wire  signed [31:0] layer_fu_988_p2;
reg  signed [31:0] layer_reg_1721;
wire    ap_CS_fsm_state47;
wire   [31:0] mul34_fu_993_p2;
reg   [31:0] mul34_reg_1727;
wire   [31:0] add35_fu_998_p2;
reg   [31:0] add35_reg_1732;
wire   [12:0] empty_191_fu_1007_p1;
reg   [12:0] empty_191_reg_1742;
wire   [0:0] icmp_fu_1020_p2;
reg   [0:0] icmp_reg_1747;
wire  signed [13:0] grp_fu_1426_p2;
reg   [13:0] mul41_reg_1753;
wire    ap_CS_fsm_state50;
wire   [8:0] empty_192_fu_1026_p1;
reg   [8:0] empty_192_reg_1758;
wire   [31:0] l_n_fu_1029_p3;
reg   [31:0] l_n_reg_1763;
wire  signed [13:0] grp_fu_1431_p2;
reg  signed [13:0] valuesToStore_reg_1768;
wire   [12:0] trunc_ln75_fu_1034_p1;
reg   [12:0] trunc_ln75_reg_1773;
wire   [63:0] zext_ln75_fu_1037_p1;
reg   [63:0] zext_ln75_reg_1778;
reg   [29:0] trunc_ln75_1_reg_1784;
wire   [31:0] i_9_fu_1054_p2;
reg   [31:0] i_9_reg_1792;
wire    ap_CS_fsm_state51;
wire  signed [7:0] trunc_ln75_2_fu_1060_p1;
reg  signed [7:0] trunc_ln75_2_reg_1797;
wire   [0:0] icmp_ln75_fu_1049_p2;
wire   [0:0] initZero_fu_1077_p2;
reg   [0:0] initZero_reg_1812;
wire  signed [31:0] add_ln143_fu_1083_p2;
reg  signed [31:0] add_ln143_reg_1818;
wire   [31:0] valuesToStore_1_fu_1096_p2;
reg   [31:0] valuesToStore_1_reg_1823;
wire  signed [12:0] grp_fu_1435_p2;
reg  signed [12:0] mul_ln78_reg_1830;
wire    ap_CS_fsm_state54;
wire   [7:0] mul_ln79_fu_1105_p2;
reg   [7:0] mul_ln79_reg_1838;
(* use_dsp48 = "no" *) wire   [12:0] add_ln85_fu_1111_p2;
reg   [12:0] add_ln85_reg_1843;
(* use_dsp48 = "no" *) wire   [12:0] add_ln87_fu_1116_p2;
reg   [12:0] add_ln87_reg_1848;
reg   [29:0] trunc_ln3_reg_1853;
wire    ap_CS_fsm_state55;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_ready;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_done;
wire    ap_sync_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_ready;
wire    ap_sync_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_done;
reg    ap_block_state55_on_subcall_done;
wire   [0:0] icmp_ln137_fu_1131_p2;
reg   [0:0] icmp_ln137_reg_1858;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state56_pp4_stage0_iter0;
wire    ap_block_state58_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [29:0] add_ln137_fu_1136_p2;
reg   [29:0] add_ln137_reg_1862;
reg    ap_enable_reg_pp4_iter0;
wire   [5:0] tmp_s_fu_1146_p3;
reg   [5:0] tmp_s_reg_1867;
wire   [63:0] zext_ln143_fu_1154_p1;
reg   [63:0] zext_ln143_reg_1873;
wire   [63:0] zext_ln143_1_fu_1165_p1;
reg   [63:0] zext_ln143_1_reg_1883;
wire   [63:0] zext_ln143_2_fu_1175_p1;
reg   [63:0] zext_ln143_2_reg_1893;
wire    ap_CS_fsm_pp4_stage1;
wire    ap_block_state57_pp4_stage1_iter0;
wire    ap_block_pp4_stage1_11001;
wire   [63:0] zext_ln143_3_fu_1185_p1;
reg   [63:0] zext_ln143_3_reg_1903;
wire   [31:0] p_n_fu_1201_p3;
reg   [31:0] p_n_reg_1916;
wire    ap_CS_fsm_state60;
wire   [0:0] icmp_ln98_fu_1190_p2;
wire   [31:0] layer_2_fu_1216_p2;
reg   [31:0] layer_2_reg_1926;
wire   [31:0] select_ln121_fu_1222_p3;
reg   [31:0] select_ln121_reg_1931;
(* use_dsp48 = "no" *) wire   [12:0] add_ln128_fu_1228_p2;
reg   [12:0] add_ln128_reg_1936;
(* use_dsp48 = "no" *) wire  signed [13:0] add_ln106_fu_1233_p2;
wire    ap_CS_fsm_state63;
(* use_dsp48 = "no" *) wire   [12:0] add_ln108_fu_1241_p2;
reg   [12:0] add_ln108_reg_1946;
wire  signed [13:0] grp_fu_1450_p4;
(* use_dsp48 = "no" *) wire   [12:0] add_ln109_2_fu_1249_p2;
reg   [12:0] add_ln109_2_reg_1956;
wire   [8:0] trunc_ln102_fu_1254_p1;
reg   [8:0] trunc_ln102_reg_1961;
wire  signed [13:0] grp_fu_1459_p2;
reg  signed [13:0] mul_ln106_1_reg_1966;
wire    ap_CS_fsm_state66;
wire  signed [13:0] grp_fu_1465_p2;
reg  signed [13:0] mul_ln110_reg_1971;
wire   [0:0] icmp_ln137_1_fu_1257_p2;
reg   [0:0] icmp_ln137_1_reg_1976;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state68_pp5_stage0_iter0;
wire    ap_block_state70_pp5_stage0_iter1;
wire    ap_block_pp5_stage0_11001;
wire   [29:0] add_ln137_1_fu_1262_p2;
reg   [29:0] add_ln137_1_reg_1980;
reg    ap_enable_reg_pp5_iter0;
wire   [5:0] tmp_1_fu_1272_p3;
reg   [5:0] tmp_1_reg_1985;
wire   [63:0] zext_ln143_4_fu_1280_p1;
reg   [63:0] zext_ln143_4_reg_1991;
wire   [63:0] zext_ln143_5_fu_1291_p1;
reg   [63:0] zext_ln143_5_reg_2001;
wire   [63:0] zext_ln143_6_fu_1301_p1;
reg   [63:0] zext_ln143_6_reg_2011;
wire    ap_CS_fsm_pp5_stage1;
wire    ap_block_state69_pp5_stage1_iter0;
wire    ap_block_pp5_stage1_11001;
wire   [63:0] zext_ln143_7_fu_1311_p1;
reg   [63:0] zext_ln143_7_reg_2021;
wire   [63:0] add_ln98_fu_1316_p2;
wire    ap_CS_fsm_state71;
wire   [31:0] bitcast_ln141_fu_1322_p1;
reg   [31:0] bitcast_ln141_reg_2036;
wire    ap_CS_fsm_state75;
wire   [31:0] grp_fu_730_p1;
reg   [31:0] conv_reg_2041;
wire   [31:0] mul_ln143_fu_1327_p2;
reg   [31:0] mul_ln143_reg_2046;
wire   [31:0] valuesToStore_3_fu_1332_p2;
reg   [31:0] valuesToStore_3_reg_2051;
wire   [0:0] icmp_ln152_fu_1337_p2;
reg    ap_block_state76_io;
wire    grp_updateParameter_float_4u_s_fu_694_ap_ready;
wire    grp_updateParameter_float_4u_s_fu_694_ap_done;
wire    ap_sync_grp_updateParameter_float_4u_s_fu_694_ap_ready;
wire    ap_sync_grp_updateParameter_float_4u_s_fu_694_ap_done;
reg    ap_block_state76_on_subcall_done;
wire   [0:0] exitcond892_fu_1362_p2;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state77_pp6_stage0_iter0;
wire    ap_block_state78_pp6_stage0_iter1;
wire    ap_block_state79_pp6_stage0_iter2;
reg    ap_block_state79_io;
reg    ap_block_pp6_stage0_11001;
wire   [31:0] empty_183_fu_1367_p2;
reg    ap_enable_reg_pp6_iter0;
reg   [31:0] bramWeight_load_reg_2083;
reg    ap_enable_reg_pp6_iter1;
wire   [0:0] icmp_ln157_fu_1382_p2;
reg    ap_block_state84;
reg   [31:0] axi_write_addr_1_reg_2092;
wire   [0:0] exitcond1_fu_1406_p2;
wire    ap_CS_fsm_pp7_stage0;
wire    ap_block_state86_pp7_stage0_iter0;
wire    ap_block_state87_pp7_stage0_iter1;
wire    ap_block_state88_pp7_stage0_iter2;
reg    ap_block_state88_io;
reg    ap_block_pp7_stage0_11001;
wire   [31:0] empty_185_fu_1411_p2;
reg    ap_enable_reg_pp7_iter0;
reg   [31:0] bramBias_load_reg_2112;
reg    ap_enable_reg_pp7_iter1;
wire    ap_CS_fsm_state9;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state10;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state20;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state21;
reg    ap_enable_reg_pp1_iter2;
wire    ap_CS_fsm_state31;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state32;
reg    ap_enable_reg_pp2_iter2;
wire    ap_CS_fsm_state43;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state44;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state56;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage1_subdone;
wire    ap_CS_fsm_state67;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_ready;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_done;
wire    ap_sync_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_ready;
wire    ap_sync_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_done;
reg    ap_block_state67_on_subcall_done;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state68;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp5_stage1_subdone;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state77;
reg    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state86;
reg   [7:0] bramClasses_address0;
reg    bramClasses_ce0;
reg    bramClasses_we0;
wire   [31:0] bramClasses_d0;
wire   [31:0] bramClasses_q0;
reg   [12:0] bramMlpResults_address0;
reg    bramMlpResults_ce0;
reg    bramMlpResults_we0;
wire   [31:0] bramMlpResults_d0;
wire   [31:0] bramMlpResults_q0;
reg   [12:0] bramMlpResults_address1;
reg    bramMlpResults_ce1;
wire   [31:0] bramMlpResults_q1;
reg   [5:0] bramError0_address0;
reg    bramError0_ce0;
reg    bramError0_we0;
reg   [31:0] bramError0_d0;
wire   [31:0] bramError0_q0;
reg   [5:0] bramError0_address1;
reg    bramError0_ce1;
wire   [31:0] bramError0_q1;
reg   [5:0] bramError1_address0;
reg    bramError1_ce0;
reg    bramError1_we0;
wire   [31:0] bramError1_q0;
reg   [5:0] bramError1_address1;
reg    bramError1_ce1;
reg    bramError1_we1;
wire   [31:0] bramError1_q1;
reg   [31:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_n;
reg   [31:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_numberOutputsPrev;
wire   [13:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_address0;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_ce0;
wire   [31:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_d0;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_we0;
wire   [13:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_address1;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_ce1;
wire   [31:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_d1;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_we1;
reg   [13:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_offset;
wire   [5:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_address0;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_ce0;
wire   [31:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_d0;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_we0;
wire   [5:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_address1;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_ce1;
wire   [31:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_d1;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_we1;
wire   [12:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_address0;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_ce0;
wire   [31:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_d0;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_we0;
wire   [12:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_address1;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_ce1;
wire   [31:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_d1;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_we1;
reg   [12:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_offset;
reg   [12:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputPrevLayer_offset;
wire   [13:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_address0;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_ce0;
wire   [31:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_d0;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_we0;
wire   [13:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_address1;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_ce1;
wire   [31:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_d1;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_we1;
reg   [13:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_offset;
wire   [8:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_address0;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_ce0;
wire   [31:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_d0;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_we0;
wire   [8:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_address1;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_ce1;
wire   [31:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_d1;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_we1;
reg   [8:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_offset;
wire   [5:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_address0;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_ce0;
wire   [31:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_d0;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_we0;
wire   [5:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_address1;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_ce1;
wire   [31:0] grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_d1;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_we1;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_initZero;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_start;
wire    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_idle;
reg    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_continue;
wire   [13:0] grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_address0;
wire    grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_ce0;
wire   [31:0] grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_d0;
wire    grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_we0;
wire   [13:0] grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_address1;
wire    grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_ce1;
wire   [31:0] grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_d1;
wire    grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_we1;
wire   [8:0] grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_address0;
wire    grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_ce0;
wire   [31:0] grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_d0;
wire    grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_we0;
wire   [8:0] grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_address1;
wire    grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_ce1;
wire   [31:0] grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_d1;
wire    grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_we1;
wire   [13:0] grp_updateParameter_float_4u_s_fu_694_bramWeight_address0;
wire    grp_updateParameter_float_4u_s_fu_694_bramWeight_ce0;
wire   [31:0] grp_updateParameter_float_4u_s_fu_694_bramWeight_d0;
wire    grp_updateParameter_float_4u_s_fu_694_bramWeight_we0;
wire   [13:0] grp_updateParameter_float_4u_s_fu_694_bramWeight_address1;
wire    grp_updateParameter_float_4u_s_fu_694_bramWeight_ce1;
wire   [31:0] grp_updateParameter_float_4u_s_fu_694_bramWeight_d1;
wire    grp_updateParameter_float_4u_s_fu_694_bramWeight_we1;
wire   [8:0] grp_updateParameter_float_4u_s_fu_694_bramBias_address0;
wire    grp_updateParameter_float_4u_s_fu_694_bramBias_ce0;
wire   [31:0] grp_updateParameter_float_4u_s_fu_694_bramBias_d0;
wire    grp_updateParameter_float_4u_s_fu_694_bramBias_we0;
wire   [8:0] grp_updateParameter_float_4u_s_fu_694_bramBias_address1;
wire    grp_updateParameter_float_4u_s_fu_694_bramBias_ce1;
wire   [31:0] grp_updateParameter_float_4u_s_fu_694_bramBias_d1;
wire    grp_updateParameter_float_4u_s_fu_694_bramBias_we1;
wire    grp_updateParameter_float_4u_s_fu_694_ap_start;
wire    grp_updateParameter_float_4u_s_fu_694_ap_idle;
reg    grp_updateParameter_float_4u_s_fu_694_ap_continue;
wire   [12:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_address0;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_ce0;
wire   [31:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_d0;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_we0;
wire   [12:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_address1;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_ce1;
wire   [31:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_d1;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_we1;
wire   [7:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_address0;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_ce0;
wire   [31:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_d0;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_we0;
wire   [7:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_address1;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_ce1;
wire   [31:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_d1;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_we1;
wire   [13:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_address0;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_ce0;
wire   [31:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_d0;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_we0;
wire   [13:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_address1;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_ce1;
wire   [31:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_d1;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_we1;
wire   [8:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_address0;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_ce0;
wire   [31:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_d0;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_we0;
wire   [8:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_address1;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_ce1;
wire   [31:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_d1;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_we1;
wire   [5:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_address0;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_ce0;
wire   [31:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_d0;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_we0;
wire   [5:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_address1;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_ce1;
wire   [31:0] grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_d1;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_we1;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_p_initZero;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_start;
wire    grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_idle;
reg    grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_continue;
reg   [31:0] ap_phi_mux_loop_index85_phi_fu_542_p4;
reg   [31:0] ap_phi_mux_loop_index79_phi_fu_554_p4;
reg   [31:0] ap_phi_mux_loop_index73_phi_fu_566_p4;
reg   [31:0] ap_phi_mux_loop_index67_phi_fu_578_p4;
reg   [31:0] size_assign_reg_586;
wire    ap_CS_fsm_state72;
reg    ap_block_state72_on_subcall_done;
reg   [31:0] i_reg_596;
reg   [29:0] ap_phi_mux_i_8_phi_fu_611_p4;
wire    ap_block_pp4_stage0;
reg   [63:0] layer_1_reg_618;
wire    ap_CS_fsm_state59;
reg   [31:0] layer_011_reg_628;
reg   [29:0] ap_phi_mux_i_10_phi_fu_641_p4;
wire    ap_block_pp5_stage0;
reg    grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_start_reg;
reg    ap_sync_reg_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_ready;
reg    ap_sync_reg_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_done;
reg    grp_updateParameter_float_4u_s_fu_694_ap_start_reg;
reg    ap_sync_reg_grp_updateParameter_float_4u_s_fu_694_ap_ready;
reg    ap_sync_reg_grp_updateParameter_float_4u_s_fu_694_ap_done;
reg    grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_start_reg;
reg    ap_sync_reg_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_ready;
reg    ap_sync_reg_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_done;
wire   [63:0] loop_index85_cast_fu_802_p1;
wire   [63:0] loop_index79_cast_fu_856_p1;
wire   [63:0] loop_index73_cast_fu_906_p1;
wire   [63:0] loop_index67_cast_fu_979_p1;
wire    ap_block_pp4_stage1;
wire    ap_block_pp5_stage1;
wire   [63:0] loop_index61_cast_fu_1373_p1;
wire   [63:0] loop_index_cast_fu_1417_p1;
wire  signed [63:0] p_cast1_cast_fu_781_p1;
wire  signed [63:0] p_cast3_cast_fu_835_p1;
wire  signed [63:0] p_cast_cast_fu_885_p1;
wire  signed [63:0] p_cast2_cast_fu_958_p1;
wire  signed [63:0] p_cast8_cast_fu_1351_p1;
wire  signed [63:0] p_cast9_cast_fu_1396_p1;
wire   [31:0] empty_184_fu_1378_p1;
wire    ap_block_pp6_stage0_01001;
reg    ap_block_state93;
wire   [31:0] empty_186_fu_1422_p1;
wire    ap_block_pp7_stage0_01001;
wire   [31:0] empty_172_fu_807_p1;
wire   [31:0] empty_174_fu_861_p1;
wire  signed [31:0] add_ln55_fu_740_p0;
wire  signed [31:0] mul_ln55_fu_746_p1;
wire   [31:0] add_ln56_1_fu_752_p2;
wire  signed [31:0] valuesToLoad_fu_761_p1;
wire   [61:0] p_cast1_fu_772_p4;
wire   [31:0] valuesToLoad_1_fu_811_p2;
wire   [61:0] p_cast3_fu_826_p4;
wire   [61:0] p_cast_fu_876_p4;
wire  signed [31:0] mul_ln71_1_fu_938_p1;
wire   [61:0] p_cast2_fu_949_p4;
wire  signed [31:0] mul34_fu_993_p0;
wire   [30:0] tmp_fu_1011_p4;
wire   [12:0] trunc_ln75_5_fu_1068_p1;
wire   [31:0] add_ln150_1_fu_1087_p2;
wire  signed [31:0] valuesToStore_1_fu_1096_p1;
wire  signed [7:0] mul_ln79_fu_1105_p0;
wire   [3:0] empty_180_fu_1142_p1;
wire   [5:0] or_ln143_fu_1159_p2;
wire   [5:0] or_ln143_1_fu_1170_p2;
wire   [5:0] or_ln143_2_fu_1180_p2;
wire   [0:0] icmp_ln100_fu_1196_p2;
wire  signed [13:0] grp_fu_1443_p2;
wire   [12:0] trunc_ln108_fu_1237_p1;
wire   [12:0] trunc_ln109_1_fu_1246_p1;
wire   [3:0] empty_181_fu_1268_p1;
wire   [5:0] or_ln143_3_fu_1285_p2;
wire   [5:0] or_ln143_4_fu_1296_p2;
wire   [5:0] or_ln143_5_fu_1306_p2;
wire   [61:0] p_cast8_fu_1342_p4;
wire   [61:0] p_cast9_fu_1387_p4;
wire  signed [13:0] grp_fu_1426_p1;
wire  signed [12:0] grp_fu_1435_p0;
wire  signed [12:0] grp_fu_1435_p1;
wire  signed [13:0] grp_fu_1443_p1;
wire  signed [0:0] grp_fu_1450_p0;
wire   [13:0] grp_fu_1450_p1;
wire    ap_CS_fsm_state62;
reg   [78:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;

// power-on initialization
initial begin
#0 ap_CS_fsm = 79'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_ready = 1'b0;
#0 ap_sync_reg_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_done = 1'b0;
#0 grp_updateParameter_float_4u_s_fu_694_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_updateParameter_float_4u_s_fu_694_ap_ready = 1'b0;
#0 ap_sync_reg_grp_updateParameter_float_4u_s_fu_694_ap_done = 1'b0;
#0 grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_ready = 1'b0;
#0 ap_sync_reg_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_done = 1'b0;
end

BGD_bramWeight #(
    .DataWidth( 32 ),
    .AddressRange( 13312 ),
    .AddressWidth( 14 ))
bramWeight_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bramWeight_address0),
    .ce0(bramWeight_ce0),
    .we0(bramWeight_we0),
    .d0(bramWeight_d0),
    .q0(bramWeight_q0),
    .address1(bramWeight_address1),
    .ce1(bramWeight_ce1),
    .we1(bramWeight_we1),
    .d1(grp_updateParameter_float_4u_s_fu_694_bramWeight_d1),
    .q1(bramWeight_q1)
);

BGD_bramBias #(
    .DataWidth( 32 ),
    .AddressRange( 264 ),
    .AddressWidth( 9 ))
bramBias_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bramBias_address0),
    .ce0(bramBias_ce0),
    .we0(bramBias_we0),
    .d0(bramBias_d0),
    .q0(bramBias_q0),
    .address1(grp_updateParameter_float_4u_s_fu_694_bramBias_address1),
    .ce1(bramBias_ce1),
    .we1(bramBias_we1),
    .d1(grp_updateParameter_float_4u_s_fu_694_bramBias_d1),
    .q1(bramBias_q1)
);

BGD_bramWeight #(
    .DataWidth( 32 ),
    .AddressRange( 13312 ),
    .AddressWidth( 14 ))
bramWeightGradientAvg_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bramWeightGradientAvg_address0),
    .ce0(bramWeightGradientAvg_ce0),
    .we0(bramWeightGradientAvg_we0),
    .d0(bramWeightGradientAvg_d0),
    .q0(bramWeightGradientAvg_q0),
    .address1(bramWeightGradientAvg_address1),
    .ce1(bramWeightGradientAvg_ce1),
    .we1(bramWeightGradientAvg_we1),
    .d1(bramWeightGradientAvg_d1),
    .q1(bramWeightGradientAvg_q1)
);

BGD_bramBiasGradientAvg #(
    .DataWidth( 32 ),
    .AddressRange( 264 ),
    .AddressWidth( 9 ))
bramBiasGradientAvg_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bramBiasGradientAvg_address0),
    .ce0(bramBiasGradientAvg_ce0),
    .we0(bramBiasGradientAvg_we0),
    .d0(bramBiasGradientAvg_d0),
    .q0(bramBiasGradientAvg_q0),
    .address1(grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_address1),
    .ce1(bramBiasGradientAvg_ce1),
    .q1(bramBiasGradientAvg_q1)
);

BGD_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .axiMlpResultsInput(axiMlpResultsInput),
    .axiClassesInput(axiClassesInput),
    .axiWeightInput(axiWeightInput),
    .axiBiasInput(axiBiasInput),
    .axiWeightOutput(axiWeightOutput),
    .axiBiasOutput(axiBiasOutput),
    .numberInputs(numberInputs),
    .numberOutputs(numberOutputs),
    .numberLayers(numberLayers),
    .numberNeurons(numberNeurons),
    .loadParameters(loadParameters),
    .batchSize(batchSize),
    .learningRate(learningRate),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

BGD_axi_read_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 128 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_AXI_READ_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_AXI_READ_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_AXI_READ_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_AXI_READ_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_AXI_READ_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_AXI_READ_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_AXI_READ_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_AXI_READ_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_AXI_READ_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_AXI_READ_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_AXI_READ_CACHE_VALUE ))
axi_read_m_axi_U(
    .AWVALID(m_axi_axi_read_AWVALID),
    .AWREADY(m_axi_axi_read_AWREADY),
    .AWADDR(m_axi_axi_read_AWADDR),
    .AWID(m_axi_axi_read_AWID),
    .AWLEN(m_axi_axi_read_AWLEN),
    .AWSIZE(m_axi_axi_read_AWSIZE),
    .AWBURST(m_axi_axi_read_AWBURST),
    .AWLOCK(m_axi_axi_read_AWLOCK),
    .AWCACHE(m_axi_axi_read_AWCACHE),
    .AWPROT(m_axi_axi_read_AWPROT),
    .AWQOS(m_axi_axi_read_AWQOS),
    .AWREGION(m_axi_axi_read_AWREGION),
    .AWUSER(m_axi_axi_read_AWUSER),
    .WVALID(m_axi_axi_read_WVALID),
    .WREADY(m_axi_axi_read_WREADY),
    .WDATA(m_axi_axi_read_WDATA),
    .WSTRB(m_axi_axi_read_WSTRB),
    .WLAST(m_axi_axi_read_WLAST),
    .WID(m_axi_axi_read_WID),
    .WUSER(m_axi_axi_read_WUSER),
    .ARVALID(m_axi_axi_read_ARVALID),
    .ARREADY(m_axi_axi_read_ARREADY),
    .ARADDR(m_axi_axi_read_ARADDR),
    .ARID(m_axi_axi_read_ARID),
    .ARLEN(m_axi_axi_read_ARLEN),
    .ARSIZE(m_axi_axi_read_ARSIZE),
    .ARBURST(m_axi_axi_read_ARBURST),
    .ARLOCK(m_axi_axi_read_ARLOCK),
    .ARCACHE(m_axi_axi_read_ARCACHE),
    .ARPROT(m_axi_axi_read_ARPROT),
    .ARQOS(m_axi_axi_read_ARQOS),
    .ARREGION(m_axi_axi_read_ARREGION),
    .ARUSER(m_axi_axi_read_ARUSER),
    .RVALID(m_axi_axi_read_RVALID),
    .RREADY(m_axi_axi_read_RREADY),
    .RDATA(m_axi_axi_read_RDATA),
    .RLAST(m_axi_axi_read_RLAST),
    .RID(m_axi_axi_read_RID),
    .RUSER(m_axi_axi_read_RUSER),
    .RRESP(m_axi_axi_read_RRESP),
    .BVALID(m_axi_axi_read_BVALID),
    .BREADY(m_axi_axi_read_BREADY),
    .BRESP(m_axi_axi_read_BRESP),
    .BID(m_axi_axi_read_BID),
    .BUSER(m_axi_axi_read_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(axi_read_ARVALID),
    .I_ARREADY(axi_read_ARREADY),
    .I_ARADDR(axi_read_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(axi_read_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(axi_read_RVALID),
    .I_RREADY(axi_read_RREADY),
    .I_RDATA(axi_read_RDATA),
    .I_RID(axi_read_RID),
    .I_RUSER(axi_read_RUSER),
    .I_RRESP(axi_read_RRESP),
    .I_RLAST(axi_read_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(axi_read_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(axi_read_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(axi_read_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(axi_read_BRESP),
    .I_BID(axi_read_BID),
    .I_BUSER(axi_read_BUSER)
);

BGD_axi_write_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 128 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_AXI_WRITE_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_AXI_WRITE_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_AXI_WRITE_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_AXI_WRITE_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_AXI_WRITE_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_AXI_WRITE_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_AXI_WRITE_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_AXI_WRITE_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_AXI_WRITE_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_AXI_WRITE_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_AXI_WRITE_CACHE_VALUE ))
axi_write_m_axi_U(
    .AWVALID(m_axi_axi_write_AWVALID),
    .AWREADY(m_axi_axi_write_AWREADY),
    .AWADDR(m_axi_axi_write_AWADDR),
    .AWID(m_axi_axi_write_AWID),
    .AWLEN(m_axi_axi_write_AWLEN),
    .AWSIZE(m_axi_axi_write_AWSIZE),
    .AWBURST(m_axi_axi_write_AWBURST),
    .AWLOCK(m_axi_axi_write_AWLOCK),
    .AWCACHE(m_axi_axi_write_AWCACHE),
    .AWPROT(m_axi_axi_write_AWPROT),
    .AWQOS(m_axi_axi_write_AWQOS),
    .AWREGION(m_axi_axi_write_AWREGION),
    .AWUSER(m_axi_axi_write_AWUSER),
    .WVALID(m_axi_axi_write_WVALID),
    .WREADY(m_axi_axi_write_WREADY),
    .WDATA(m_axi_axi_write_WDATA),
    .WSTRB(m_axi_axi_write_WSTRB),
    .WLAST(m_axi_axi_write_WLAST),
    .WID(m_axi_axi_write_WID),
    .WUSER(m_axi_axi_write_WUSER),
    .ARVALID(m_axi_axi_write_ARVALID),
    .ARREADY(m_axi_axi_write_ARREADY),
    .ARADDR(m_axi_axi_write_ARADDR),
    .ARID(m_axi_axi_write_ARID),
    .ARLEN(m_axi_axi_write_ARLEN),
    .ARSIZE(m_axi_axi_write_ARSIZE),
    .ARBURST(m_axi_axi_write_ARBURST),
    .ARLOCK(m_axi_axi_write_ARLOCK),
    .ARCACHE(m_axi_axi_write_ARCACHE),
    .ARPROT(m_axi_axi_write_ARPROT),
    .ARQOS(m_axi_axi_write_ARQOS),
    .ARREGION(m_axi_axi_write_ARREGION),
    .ARUSER(m_axi_axi_write_ARUSER),
    .RVALID(m_axi_axi_write_RVALID),
    .RREADY(m_axi_axi_write_RREADY),
    .RDATA(m_axi_axi_write_RDATA),
    .RLAST(m_axi_axi_write_RLAST),
    .RID(m_axi_axi_write_RID),
    .RUSER(m_axi_axi_write_RUSER),
    .RRESP(m_axi_axi_write_RRESP),
    .BVALID(m_axi_axi_write_BVALID),
    .BREADY(m_axi_axi_write_BREADY),
    .BRESP(m_axi_axi_write_BRESP),
    .BID(m_axi_axi_write_BID),
    .BUSER(m_axi_axi_write_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(axi_write_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(axi_write_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(axi_write_RDATA),
    .I_RID(axi_write_RID),
    .I_RUSER(axi_write_RUSER),
    .I_RRESP(axi_write_RRESP),
    .I_RLAST(axi_write_RLAST),
    .I_AWVALID(axi_write_AWVALID),
    .I_AWREADY(axi_write_AWREADY),
    .I_AWADDR(axi_write_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(axi_write_AWLEN),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(axi_write_WVALID),
    .I_WREADY(axi_write_WREADY),
    .I_WDATA(axi_write_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(axi_write_BVALID),
    .I_BREADY(axi_write_BREADY),
    .I_BRESP(axi_write_BRESP),
    .I_BID(axi_write_BID),
    .I_BUSER(axi_write_BUSER)
);

BGD_bramClasses #(
    .DataWidth( 32 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
bramClasses_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bramClasses_address0),
    .ce0(bramClasses_ce0),
    .we0(bramClasses_we0),
    .d0(bramClasses_d0),
    .q0(bramClasses_q0)
);

BGD_bramMlpResults #(
    .DataWidth( 32 ),
    .AddressRange( 5440 ),
    .AddressWidth( 13 ))
bramMlpResults_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bramMlpResults_address0),
    .ce0(bramMlpResults_ce0),
    .we0(bramMlpResults_we0),
    .d0(bramMlpResults_d0),
    .q0(bramMlpResults_q0),
    .address1(bramMlpResults_address1),
    .ce1(bramMlpResults_ce1),
    .q1(bramMlpResults_q1)
);

BGD_bramError0 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
bramError0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bramError0_address0),
    .ce0(bramError0_ce0),
    .we0(bramError0_we0),
    .d0(bramError0_d0),
    .q0(bramError0_q0),
    .address1(bramError0_address1),
    .ce1(bramError0_ce1),
    .q1(bramError0_q1)
);

BGD_bramError1 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
bramError1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bramError1_address0),
    .ce0(bramError1_ce0),
    .we0(bramError1_we0),
    .d0(bramError0_q0),
    .q0(bramError1_q0),
    .address1(bramError1_address1),
    .ce1(bramError1_ce1),
    .we1(bramError1_we1),
    .d1(bramError0_q1),
    .q1(bramError1_q1)
);

BGD_computeHiddenGradient_float_4u_2u_16u_s grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670(
    .p_n(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_n),
    .p_k(numberNeurons_read_reg_1530),
    .p_numberOutputsPrev(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_numberOutputsPrev),
    .p_weights_address0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_address0),
    .p_weights_ce0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_ce0),
    .p_weights_d0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_d0),
    .p_weights_q0(bramWeight_q0),
    .p_weights_we0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_we0),
    .p_weights_address1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_address1),
    .p_weights_ce1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_ce1),
    .p_weights_d1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_d1),
    .p_weights_q1(bramWeight_q1),
    .p_weights_we1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_we1),
    .p_weights_offset(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_offset),
    .p_latterError_address0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_address0),
    .p_latterError_ce0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_ce0),
    .p_latterError_d0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_d0),
    .p_latterError_q0(bramError1_q0),
    .p_latterError_we0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_we0),
    .p_latterError_address1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_address1),
    .p_latterError_ce1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_ce1),
    .p_latterError_d1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_d1),
    .p_latterError_q1(bramError1_q1),
    .p_latterError_we1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_we1),
    .p_outputCurrentLayer_address0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_address0),
    .p_outputCurrentLayer_ce0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_ce0),
    .p_outputCurrentLayer_d0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_d0),
    .p_outputCurrentLayer_q0(bramMlpResults_q0),
    .p_outputCurrentLayer_we0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_we0),
    .p_outputCurrentLayer_address1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_address1),
    .p_outputCurrentLayer_ce1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_ce1),
    .p_outputCurrentLayer_d1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_d1),
    .p_outputCurrentLayer_q1(bramMlpResults_q1),
    .p_outputCurrentLayer_we1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_we1),
    .p_outputCurrentLayer_offset(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_offset),
    .p_outputPrevLayer_offset(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputPrevLayer_offset),
    .p_weightGradientAvg_address0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_address0),
    .p_weightGradientAvg_ce0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_ce0),
    .p_weightGradientAvg_d0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_d0),
    .p_weightGradientAvg_q0(bramWeightGradientAvg_q0),
    .p_weightGradientAvg_we0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_we0),
    .p_weightGradientAvg_address1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_address1),
    .p_weightGradientAvg_ce1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_ce1),
    .p_weightGradientAvg_d1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_d1),
    .p_weightGradientAvg_q1(bramWeightGradientAvg_q1),
    .p_weightGradientAvg_we1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_we1),
    .p_weightGradientAvg_offset(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_offset),
    .p_biasGradientAvg_address0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_address0),
    .p_biasGradientAvg_ce0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_ce0),
    .p_biasGradientAvg_d0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_d0),
    .p_biasGradientAvg_q0(bramBiasGradientAvg_q0),
    .p_biasGradientAvg_we0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_we0),
    .p_biasGradientAvg_address1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_address1),
    .p_biasGradientAvg_ce1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_ce1),
    .p_biasGradientAvg_d1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_d1),
    .p_biasGradientAvg_q1(32'd0),
    .p_biasGradientAvg_we1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_we1),
    .p_biasGradientAvg_offset(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_offset),
    .p_error_address0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_address0),
    .p_error_ce0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_ce0),
    .p_error_d0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_d0),
    .p_error_q0(32'd0),
    .p_error_we0(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_we0),
    .p_error_address1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_address1),
    .p_error_ce1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_ce1),
    .p_error_d1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_d1),
    .p_error_q1(32'd0),
    .p_error_we1(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_we1),
    .p_initZero(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_initZero),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .p_n_ap_vld(1'b1),
    .p_k_ap_vld(1'b1),
    .p_numberOutputsPrev_ap_vld(1'b1),
    .p_weights_offset_ap_vld(1'b1),
    .p_outputCurrentLayer_offset_ap_vld(1'b1),
    .p_outputPrevLayer_offset_ap_vld(1'b1),
    .p_weightGradientAvg_offset_ap_vld(1'b1),
    .p_biasGradientAvg_offset_ap_vld(1'b1),
    .p_initZero_ap_vld(1'b1),
    .ap_start(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_start),
    .ap_done(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_done),
    .ap_ready(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_ready),
    .ap_idle(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_idle),
    .ap_continue(grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_continue)
);

BGD_updateParameter_float_4u_s grp_updateParameter_float_4u_s_fu_694(
    .p_learningRate(bitcast_ln141_reg_2036),
    .p_batchSize(conv_reg_2041),
    .p_weightSize(mul_ln143_reg_2046),
    .p_biasSize(valuesToStore_3_reg_2051),
    .bramWeightGradientAvg_address0(grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_address0),
    .bramWeightGradientAvg_ce0(grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_ce0),
    .bramWeightGradientAvg_d0(grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_d0),
    .bramWeightGradientAvg_q0(bramWeightGradientAvg_q0),
    .bramWeightGradientAvg_we0(grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_we0),
    .bramWeightGradientAvg_address1(grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_address1),
    .bramWeightGradientAvg_ce1(grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_ce1),
    .bramWeightGradientAvg_d1(grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_d1),
    .bramWeightGradientAvg_q1(bramWeightGradientAvg_q1),
    .bramWeightGradientAvg_we1(grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_we1),
    .bramBiasGradientAvg_address0(grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_address0),
    .bramBiasGradientAvg_ce0(grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_ce0),
    .bramBiasGradientAvg_d0(grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_d0),
    .bramBiasGradientAvg_q0(bramBiasGradientAvg_q0),
    .bramBiasGradientAvg_we0(grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_we0),
    .bramBiasGradientAvg_address1(grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_address1),
    .bramBiasGradientAvg_ce1(grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_ce1),
    .bramBiasGradientAvg_d1(grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_d1),
    .bramBiasGradientAvg_q1(bramBiasGradientAvg_q1),
    .bramBiasGradientAvg_we1(grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_we1),
    .bramWeight_address0(grp_updateParameter_float_4u_s_fu_694_bramWeight_address0),
    .bramWeight_ce0(grp_updateParameter_float_4u_s_fu_694_bramWeight_ce0),
    .bramWeight_d0(grp_updateParameter_float_4u_s_fu_694_bramWeight_d0),
    .bramWeight_q0(bramWeight_q0),
    .bramWeight_we0(grp_updateParameter_float_4u_s_fu_694_bramWeight_we0),
    .bramWeight_address1(grp_updateParameter_float_4u_s_fu_694_bramWeight_address1),
    .bramWeight_ce1(grp_updateParameter_float_4u_s_fu_694_bramWeight_ce1),
    .bramWeight_d1(grp_updateParameter_float_4u_s_fu_694_bramWeight_d1),
    .bramWeight_q1(bramWeight_q1),
    .bramWeight_we1(grp_updateParameter_float_4u_s_fu_694_bramWeight_we1),
    .bramBias_address0(grp_updateParameter_float_4u_s_fu_694_bramBias_address0),
    .bramBias_ce0(grp_updateParameter_float_4u_s_fu_694_bramBias_ce0),
    .bramBias_d0(grp_updateParameter_float_4u_s_fu_694_bramBias_d0),
    .bramBias_q0(bramBias_q0),
    .bramBias_we0(grp_updateParameter_float_4u_s_fu_694_bramBias_we0),
    .bramBias_address1(grp_updateParameter_float_4u_s_fu_694_bramBias_address1),
    .bramBias_ce1(grp_updateParameter_float_4u_s_fu_694_bramBias_ce1),
    .bramBias_d1(grp_updateParameter_float_4u_s_fu_694_bramBias_d1),
    .bramBias_q1(bramBias_q1),
    .bramBias_we1(grp_updateParameter_float_4u_s_fu_694_bramBias_we1),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .p_learningRate_ap_vld(1'b1),
    .p_batchSize_ap_vld(1'b1),
    .p_weightSize_ap_vld(1'b1),
    .p_biasSize_ap_vld(1'b1),
    .ap_start(grp_updateParameter_float_4u_s_fu_694_ap_start),
    .ap_done(grp_updateParameter_float_4u_s_fu_694_ap_done),
    .ap_ready(grp_updateParameter_float_4u_s_fu_694_ap_ready),
    .ap_idle(grp_updateParameter_float_4u_s_fu_694_ap_idle),
    .ap_continue(grp_updateParameter_float_4u_s_fu_694_ap_continue)
);

BGD_computeOutputGradient_float_4u_16u_s grp_computeOutputGradient_float_4u_16u_s_fu_710(
    .p_n(size_assign_reg_586),
    .p_k(numberNeurons_read_reg_1530),
    .p_results_address0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_address0),
    .p_results_ce0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_ce0),
    .p_results_d0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_d0),
    .p_results_q0(bramMlpResults_q0),
    .p_results_we0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_we0),
    .p_results_address1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_address1),
    .p_results_ce1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_ce1),
    .p_results_d1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_d1),
    .p_results_q1(bramMlpResults_q1),
    .p_results_we1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_we1),
    .p_results_offset(add_ln85_reg_1843),
    .p_classes_address0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_address0),
    .p_classes_ce0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_ce0),
    .p_classes_d0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_d0),
    .p_classes_q0(bramClasses_q0),
    .p_classes_we0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_we0),
    .p_classes_address1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_address1),
    .p_classes_ce1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_ce1),
    .p_classes_d1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_d1),
    .p_classes_q1(32'd0),
    .p_classes_we1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_we1),
    .p_classes_offset(mul_ln79_reg_1838),
    .p_outputPrevLayer_offset(add_ln87_reg_1848),
    .p_weightGradientAvg_address0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_address0),
    .p_weightGradientAvg_ce0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_ce0),
    .p_weightGradientAvg_d0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_d0),
    .p_weightGradientAvg_q0(bramWeightGradientAvg_q0),
    .p_weightGradientAvg_we0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_we0),
    .p_weightGradientAvg_address1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_address1),
    .p_weightGradientAvg_ce1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_ce1),
    .p_weightGradientAvg_d1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_d1),
    .p_weightGradientAvg_q1(bramWeightGradientAvg_q1),
    .p_weightGradientAvg_we1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_we1),
    .p_weightGradientAvg_offset(mul41_reg_1753),
    .p_biasGradientAvg_address0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_address0),
    .p_biasGradientAvg_ce0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_ce0),
    .p_biasGradientAvg_d0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_d0),
    .p_biasGradientAvg_q0(bramBiasGradientAvg_q0),
    .p_biasGradientAvg_we0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_we0),
    .p_biasGradientAvg_address1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_address1),
    .p_biasGradientAvg_ce1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_ce1),
    .p_biasGradientAvg_d1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_d1),
    .p_biasGradientAvg_q1(32'd0),
    .p_biasGradientAvg_we1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_we1),
    .p_biasGradientAvg_offset(empty_192_reg_1758),
    .p_error_address0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_address0),
    .p_error_ce0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_ce0),
    .p_error_d0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_d0),
    .p_error_q0(32'd0),
    .p_error_we0(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_we0),
    .p_error_address1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_address1),
    .p_error_ce1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_ce1),
    .p_error_d1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_d1),
    .p_error_q1(32'd0),
    .p_error_we1(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_we1),
    .p_initZero(grp_computeOutputGradient_float_4u_16u_s_fu_710_p_initZero),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .p_n_ap_vld(1'b1),
    .p_k_ap_vld(1'b1),
    .p_results_offset_ap_vld(1'b1),
    .p_classes_offset_ap_vld(1'b1),
    .p_outputPrevLayer_offset_ap_vld(1'b1),
    .p_weightGradientAvg_offset_ap_vld(1'b1),
    .p_biasGradientAvg_offset_ap_vld(1'b1),
    .p_initZero_ap_vld(1'b1),
    .ap_start(grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_start),
    .ap_done(grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_done),
    .ap_ready(grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_ready),
    .ap_idle(grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_idle),
    .ap_continue(grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_continue)
);

BGD_uitofp_32s_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32s_32_4_no_dsp_1_U466(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(batchSize_read_reg_1620),
    .ce(1'b1),
    .dout(grp_fu_730_p1)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U467(
    .din0(numberNeurons),
    .din1(mul_ln55_fu_746_p1),
    .dout(mul_ln55_fu_746_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U468(
    .din0(numberNeurons_read_reg_1530),
    .din1(valuesToLoad_fu_761_p1),
    .dout(valuesToLoad_fu_761_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U469(
    .din0(numberLayers_read_reg_1547),
    .din1(numberNeurons_read_reg_1530),
    .dout(valuesToLoad_1_fu_811_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U470(
    .din0(batchSize),
    .din1(numberOutputs_read_reg_1505),
    .dout(mul_ln67_fu_865_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U471(
    .din0(numberNeurons_read_reg_1530),
    .din1(numberLayers_read_reg_1547),
    .dout(valuesToStore_2_fu_915_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U472(
    .din0(batchSize_read_reg_1620),
    .din1(mul_ln71_1_fu_938_p1),
    .dout(mul_ln71_1_fu_938_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U473(
    .din0(mul34_fu_993_p0),
    .din1(numberNeurons_read_reg_1530),
    .dout(mul34_fu_993_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U474(
    .din0(numberNeurons_read_reg_1530),
    .din1(valuesToStore_1_fu_1096_p1),
    .dout(valuesToStore_1_fu_1096_p2)
);

BGD_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U475(
    .din0(mul_ln79_fu_1105_p0),
    .din1(trunc_ln75_2_reg_1797),
    .dout(mul_ln79_fu_1105_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U476(
    .din0(numberNeurons_read_reg_1530),
    .din1(add_ln143_reg_1818),
    .dout(mul_ln143_fu_1327_p2)
);

BGD_mul_mul_14s_14s_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mul_mul_14s_14s_14_4_1_U477(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln71_1_reg_1681),
    .din1(grp_fu_1426_p1),
    .ce(1'b1),
    .dout(grp_fu_1426_p2)
);

BGD_mul_mul_14s_14s_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mul_mul_14s_14s_14_4_1_U478(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln71_reg_1674),
    .din1(trunc_ln71_1_reg_1681),
    .ce(1'b1),
    .dout(grp_fu_1431_p2)
);

BGD_mul_mul_13s_13s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_mul_13s_13s_13_4_1_U479(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1435_p0),
    .din1(grp_fu_1435_p1),
    .ce(1'b1),
    .dout(grp_fu_1435_p2)
);

BGD_mul_mul_14s_14s_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mul_mul_14s_14s_14_4_1_U480(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln71_1_reg_1681),
    .din1(grp_fu_1443_p1),
    .ce(1'b1),
    .dout(grp_fu_1443_p2)
);

BGD_ama_addmuladd_1s_14ns_14s_14s_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .din3_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
ama_addmuladd_1s_14ns_14s_14s_14_4_1_U481(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1450_p0),
    .din1(grp_fu_1450_p1),
    .din2(trunc_ln71_1_reg_1681),
    .din3(trunc_ln71_reg_1674),
    .ce(1'b1),
    .dout(grp_fu_1450_p4)
);

BGD_mul_mul_14s_14s_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mul_mul_14s_14s_14_4_1_U482(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln71_1_reg_1681),
    .din1(add_ln106_fu_1233_p2),
    .ce(1'b1),
    .dout(grp_fu_1459_p2)
);

BGD_mul_mul_14s_14s_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mul_mul_14s_14s_14_4_1_U483(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(trunc_ln71_1_reg_1681),
    .din1(grp_fu_1450_p4),
    .ce(1'b1),
    .dout(grp_fu_1465_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state10))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state10)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state21))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state21)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state21);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state32))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state32)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state32);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state44))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state43)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state44)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state44);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state43)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state56))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((1'b0 == ap_block_state55_on_subcall_done) & (1'b1 == ap_CS_fsm_state55))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp4_iter0 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if (((1'b0 == ap_block_state55_on_subcall_done) & (1'b1 == ap_CS_fsm_state55))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state68))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((1'b0 == ap_block_state67_on_subcall_done) & (1'b1 == ap_CS_fsm_state67))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp5_iter0 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp5_stage1_subdone) & (1'b1 == ap_CS_fsm_pp5_stage1)))) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end else if (((1'b0 == ap_block_state67_on_subcall_done) & (1'b1 == ap_CS_fsm_state67))) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state77) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((~((1'b1 == ap_block_state76_on_subcall_done) | (1'b1 == ap_block_state76_io)) & (icmp_ln152_reg_2059 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state77)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state77);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end else if ((~((1'b1 == ap_block_state76_on_subcall_done) | (1'b1 == ap_block_state76_io)) & (icmp_ln152_reg_2059 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
            ap_enable_reg_pp6_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_condition_pp7_exit_iter0_state86) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if (((axi_write_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state85))) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state86)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state86);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end else if (((axi_write_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state85))) begin
            ap_enable_reg_pp7_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_done <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_state72_on_subcall_done) & (1'b1 == ap_CS_fsm_state72)) | ((1'b0 == ap_block_state67_on_subcall_done) & (1'b1 == ap_CS_fsm_state67)))) begin
            ap_sync_reg_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_done <= 1'b0;
        end else if ((grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_done == 1'b1)) begin
            ap_sync_reg_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_ready <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_state72_on_subcall_done) & (1'b1 == ap_CS_fsm_state72)) | ((1'b0 == ap_block_state67_on_subcall_done) & (1'b1 == ap_CS_fsm_state67)))) begin
            ap_sync_reg_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_ready <= 1'b0;
        end else if ((grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state55_on_subcall_done) & (1'b1 == ap_CS_fsm_state55))) begin
            ap_sync_reg_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_done <= 1'b0;
        end else if ((grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_done == 1'b1)) begin
            ap_sync_reg_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state55_on_subcall_done) & (1'b1 == ap_CS_fsm_state55))) begin
            ap_sync_reg_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_ready <= 1'b0;
        end else if ((grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_updateParameter_float_4u_s_fu_694_ap_done <= 1'b0;
    end else begin
        if ((~((1'b1 == ap_block_state76_on_subcall_done) | (1'b1 == ap_block_state76_io)) & (1'b1 == ap_CS_fsm_state76))) begin
            ap_sync_reg_grp_updateParameter_float_4u_s_fu_694_ap_done <= 1'b0;
        end else if ((grp_updateParameter_float_4u_s_fu_694_ap_done == 1'b1)) begin
            ap_sync_reg_grp_updateParameter_float_4u_s_fu_694_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_updateParameter_float_4u_s_fu_694_ap_ready <= 1'b0;
    end else begin
        if ((~((1'b1 == ap_block_state76_on_subcall_done) | (1'b1 == ap_block_state76_io)) & (1'b1 == ap_CS_fsm_state76))) begin
            ap_sync_reg_grp_updateParameter_float_4u_s_fu_694_ap_ready <= 1'b0;
        end else if ((grp_updateParameter_float_4u_s_fu_694_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_updateParameter_float_4u_s_fu_694_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state66) | ((icmp_ln98_fu_1190_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state60)) | ((1'b1 == ap_CS_fsm_state72) & (ap_sync_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_ready == 1'b0)) | ((1'b1 == ap_CS_fsm_state67) & (ap_sync_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_ready == 1'b0)))) begin
            grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_start_reg <= 1'b1;
        end else if ((grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_ready == 1'b1)) begin
            grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state54) | ((ap_sync_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state55)))) begin
            grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_start_reg <= 1'b1;
        end else if ((grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_ready == 1'b1)) begin
            grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_updateParameter_float_4u_s_fu_694_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state75) | ((1'b1 == ap_CS_fsm_state76) & (ap_sync_grp_updateParameter_float_4u_s_fu_694_ap_ready == 1'b0)))) begin
            grp_updateParameter_float_4u_s_fu_694_ap_start_reg <= 1'b1;
        end else if ((grp_updateParameter_float_4u_s_fu_694_ap_ready == 1'b1)) begin
            grp_updateParameter_float_4u_s_fu_694_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state67_on_subcall_done) & (1'b1 == ap_CS_fsm_state67))) begin
        i_10_reg_637 <= 30'd0;
    end else if (((icmp_ln137_1_reg_1976 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        i_10_reg_637 <= add_ln137_1_reg_1980;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state55_on_subcall_done) & (1'b1 == ap_CS_fsm_state55))) begin
        i_8_reg_607 <= 30'd0;
    end else if (((icmp_ln137_reg_1858 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        i_8_reg_607 <= add_ln137_reg_1862;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state72_on_subcall_done) & (1'b1 == ap_CS_fsm_state72))) begin
        i_reg_596 <= i_9_reg_1792;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        i_reg_596 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        layer_011_reg_628 <= layer_reg_1721;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        layer_011_reg_628 <= layer_2_reg_1926;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        layer_1_reg_618 <= zext_ln75_reg_1778;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        layer_1_reg_618 <= add_ln98_fu_1316_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state76_on_subcall_done) | (1'b1 == ap_block_state76_io)) & (icmp_ln152_reg_2059 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        loop_index61_reg_648 <= 32'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (exitcond892_fu_1362_p2 == 1'd0))) begin
        loop_index61_reg_648 <= empty_183_fu_1367_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        loop_index67_reg_574 <= 32'd0;
    end else if (((exitcond1068_reg_1707 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        loop_index67_reg_574 <= empty_178_reg_1711;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        loop_index73_reg_562 <= 32'd0;
    end else if (((exitcond1079_reg_1643 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        loop_index73_reg_562 <= empty_176_reg_1647;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        loop_index79_reg_550 <= 32'd0;
    end else if (((exitcond10810_reg_1606 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        loop_index79_reg_550 <= empty_173_reg_1610;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        loop_index85_reg_538 <= 32'd0;
    end else if (((exitcond10911_reg_1576 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        loop_index85_reg_538 <= empty_171_reg_1580;
    end
end

always @ (posedge ap_clk) begin
    if (((axi_write_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state85))) begin
        loop_index_reg_659 <= 32'd0;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (exitcond1_fu_1406_p2 == 1'd0))) begin
        loop_index_reg_659 <= empty_185_fu_1411_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state72_on_subcall_done) & (1'b1 == ap_CS_fsm_state72))) begin
        size_assign_reg_586 <= select_ln121_reg_1931;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        size_assign_reg_586 <= numberOutputs_read_reg_1505;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        add35_reg_1732 <= add35_fu_998_p2;
        empty_191_reg_1742 <= empty_191_fu_1007_p1;
        icmp_reg_1747 <= icmp_fu_1020_p2;
        layer_reg_1721 <= layer_fu_988_p2;
        mul34_reg_1727 <= mul34_fu_993_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        add_ln108_reg_1946 <= add_ln108_fu_1241_p2;
        add_ln109_2_reg_1956 <= add_ln109_2_fu_1249_p2;
        trunc_ln102_reg_1961 <= trunc_ln102_fu_1254_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_fu_1190_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state60))) begin
        add_ln128_reg_1936 <= add_ln128_fu_1228_p2;
        select_ln121_reg_1931 <= select_ln121_fu_1222_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        add_ln137_1_reg_1980 <= add_ln137_1_fu_1262_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        add_ln137_reg_1862 <= add_ln137_fu_1136_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_fu_1049_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
        add_ln143_reg_1818 <= add_ln143_fu_1083_p2;
        valuesToStore_1_reg_1823 <= valuesToStore_1_fu_1096_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        add_ln71_reg_1663 <= add_ln71_fu_919_p2;
        trunc_ln71_2_reg_1668 <= trunc_ln71_2_fu_924_p1;
        valuesToStore_2_reg_1657 <= valuesToStore_2_fu_915_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        add_ln85_reg_1843 <= add_ln85_fu_1111_p2;
        add_ln87_reg_1848 <= add_ln87_fu_1116_p2;
        mul_ln78_reg_1830 <= grp_fu_1435_p2;
        mul_ln79_reg_1838 <= mul_ln79_fu_1105_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        axiBiasInput_read_reg_1481 <= axiBiasInput;
        axiBiasOutput_read_reg_1471 <= axiBiasOutput;
        axiClassesInput_read_reg_1491 <= axiClassesInput;
        axiMlpResultsInput_read_reg_1496 <= axiMlpResultsInput;
        axiWeightInput_read_reg_1486 <= axiWeightInput;
        axiWeightOutput_read_reg_1476 <= axiWeightOutput;
        numberInputs_read_reg_1519 <= numberInputs;
        numberLayers_read_reg_1547 <= numberLayers;
        numberNeurons_read_reg_1530 <= numberNeurons;
        numberOutputs_read_reg_1505 <= numberOutputs;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond10810_reg_1606 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        axi_read_addr_1_read_reg_1615 <= axi_read_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln63_fu_820_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        axi_read_addr_1_reg_1600 <= p_cast3_cast_fu_835_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1079_reg_1643 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        axi_read_addr_2_read_reg_1652 <= axi_read_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_fu_870_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        axi_read_addr_2_reg_1637 <= p_cast_cast_fu_885_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1068_reg_1707 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        axi_read_addr_3_read_reg_1716 <= axi_read_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_fu_943_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        axi_read_addr_3_reg_1701 <= p_cast2_cast_fu_958_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond10911_reg_1576 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        axi_read_addr_read_reg_1585 <= axi_read_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_fu_766_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        axi_read_addr_reg_1570 <= p_cast1_cast_fu_781_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((axi_write_BVALID == 1'b0) & (icmp_ln152_reg_2059 == 1'd0)) & (1'b1 == ap_CS_fsm_state84) & (icmp_ln157_fu_1382_p2 == 1'd0))) begin
        axi_write_addr_1_reg_2092 <= p_cast9_cast_fu_1396_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        batchSize_read_reg_1620 <= batchSize;
        mul_ln67_reg_1627 <= mul_ln67_fu_865_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        bitcast_ln141_reg_2036 <= bitcast_ln141_fu_1322_p1;
        conv_reg_2041 <= grp_fu_730_p1;
        icmp_ln152_reg_2059 <= icmp_ln152_fu_1337_p2;
        mul_ln143_reg_2046 <= mul_ln143_fu_1327_p2;
        valuesToStore_3_reg_2051 <= valuesToStore_3_fu_1332_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_2098 == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1))) begin
        bramBias_load_reg_2112 <= bramBias_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond892_reg_2069 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        bramWeight_load_reg_2083 <= bramWeight_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_171_reg_1580 <= empty_171_fu_796_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        empty_173_reg_1610 <= empty_173_fu_850_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        empty_176_reg_1647 <= empty_176_fu_900_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        empty_178_reg_1711 <= empty_178_fu_973_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        empty_192_reg_1758 <= empty_192_fu_1026_p1;
        l_n_reg_1763 <= l_n_fu_1029_p3;
        mul41_reg_1753 <= grp_fu_1426_p2;
        trunc_ln75_1_reg_1784 <= {{numberNeurons_read_reg_1530[31:2]}};
        trunc_ln75_reg_1773 <= trunc_ln75_fu_1034_p1;
        valuesToStore_reg_1768 <= grp_fu_1431_p2;
        zext_ln75_reg_1778[31 : 0] <= zext_ln75_fu_1037_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond1068_reg_1707 <= exitcond1068_fu_968_p2;
        exitcond1068_reg_1707_pp3_iter1_reg <= exitcond1068_reg_1707;
        loop_index67_reg_574_pp3_iter1_reg <= loop_index67_reg_574;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond1079_reg_1643 <= exitcond1079_fu_895_p2;
        exitcond1079_reg_1643_pp2_iter1_reg <= exitcond1079_reg_1643;
        loop_index73_reg_562_pp2_iter1_reg <= loop_index73_reg_562;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond10810_reg_1606 <= exitcond10810_fu_845_p2;
        exitcond10810_reg_1606_pp1_iter1_reg <= exitcond10810_reg_1606;
        loop_index79_reg_550_pp1_iter1_reg <= loop_index79_reg_550;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond10911_reg_1576 <= exitcond10911_fu_791_p2;
        exitcond10911_reg_1576_pp0_iter1_reg <= exitcond10911_reg_1576;
        loop_index85_reg_538_pp0_iter1_reg <= loop_index85_reg_538;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        exitcond1_reg_2098 <= exitcond1_fu_1406_p2;
        exitcond1_reg_2098_pp7_iter1_reg <= exitcond1_reg_2098;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        exitcond892_reg_2069 <= exitcond892_fu_1362_p2;
        exitcond892_reg_2069_pp6_iter1_reg <= exitcond892_reg_2069;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        i_9_reg_1792 <= i_9_fu_1054_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln137_1_reg_1976 <= icmp_ln137_1_fu_1257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln137_reg_1858 <= icmp_ln137_fu_1131_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((axi_write_BVALID == 1'b0) & (icmp_ln152_reg_2059 == 1'd0)) & (1'b1 == ap_CS_fsm_state84))) begin
        icmp_ln157_reg_2088 <= icmp_ln157_fu_1382_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_fu_1049_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state51))) begin
        initZero_reg_1812 <= initZero_fu_1077_p2;
        trunc_ln75_2_reg_1797 <= trunc_ln75_2_fu_1060_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_fu_1190_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state60))) begin
        layer_2_reg_1926 <= layer_2_fu_1216_p2;
        p_n_reg_1916 <= p_n_fu_1201_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        mul_ln106_1_reg_1966 <= grp_fu_1459_p2;
        mul_ln110_reg_1971 <= grp_fu_1465_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (icmp_ln50_fu_734_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        mul_ln55_reg_1555 <= mul_ln55_fu_746_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        mul_ln71_1_reg_1691 <= mul_ln71_1_fu_938_p2;
        trunc_ln71_1_reg_1681 <= trunc_ln71_1_fu_931_p1;
        trunc_ln71_reg_1674 <= trunc_ln71_fu_928_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln137_1_fu_1257_p2 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        tmp_1_reg_1985[5 : 2] <= tmp_1_fu_1272_p3[5 : 2];
        zext_ln143_4_reg_1991[5 : 2] <= zext_ln143_4_fu_1280_p1[5 : 2];
        zext_ln143_5_reg_2001[5 : 2] <= zext_ln143_5_fu_1291_p1[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln137_fu_1131_p2 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        tmp_s_reg_1867[5 : 2] <= tmp_s_fu_1146_p3[5 : 2];
        zext_ln143_1_reg_1883[5 : 2] <= zext_ln143_1_fu_1165_p1[5 : 2];
        zext_ln143_reg_1873[5 : 2] <= zext_ln143_fu_1154_p1[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state55_on_subcall_done) & (1'b1 == ap_CS_fsm_state55))) begin
        trunc_ln3_reg_1853 <= {{size_assign_reg_586[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        valuesToLoad_2_reg_1590 <= valuesToLoad_2_fu_815_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        valuesToLoad_reg_1560 <= valuesToLoad_fu_761_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln137_reg_1858 == 1'd0) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        zext_ln143_2_reg_1893[5 : 2] <= zext_ln143_2_fu_1175_p1[5 : 2];
        zext_ln143_3_reg_1903[5 : 2] <= zext_ln143_3_fu_1185_p1[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln137_1_reg_1976 == 1'd0) & (1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1))) begin
        zext_ln143_6_reg_2011[5 : 2] <= zext_ln143_6_fu_1301_p1[5 : 2];
        zext_ln143_7_reg_2021[5 : 2] <= zext_ln143_7_fu_1311_p1[5 : 2];
    end
end

always @ (*) begin
    if ((exitcond10911_fu_791_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond10810_fu_845_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1079_fu_895_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state32 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state32 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1068_fu_968_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state44 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state44 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln137_fu_1131_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state56 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state56 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln137_1_fu_1257_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state68 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state68 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond892_fu_1362_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state77 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state77 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1_fu_1406_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state86 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state86 = 1'b0;
    end
end

always @ (*) begin
    if ((~((axi_write_BVALID == 1'b0) & (icmp_ln157_reg_2088 == 1'd0)) & (1'b1 == ap_CS_fsm_state93))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln137_1_reg_1976 == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        ap_phi_mux_i_10_phi_fu_641_p4 = add_ln137_1_reg_1980;
    end else begin
        ap_phi_mux_i_10_phi_fu_641_p4 = i_10_reg_637;
    end
end

always @ (*) begin
    if (((icmp_ln137_reg_1858 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        ap_phi_mux_i_8_phi_fu_611_p4 = add_ln137_reg_1862;
    end else begin
        ap_phi_mux_i_8_phi_fu_611_p4 = i_8_reg_607;
    end
end

always @ (*) begin
    if (((exitcond1068_reg_1707 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_loop_index67_phi_fu_578_p4 = empty_178_reg_1711;
    end else begin
        ap_phi_mux_loop_index67_phi_fu_578_p4 = loop_index67_reg_574;
    end
end

always @ (*) begin
    if (((exitcond1079_reg_1643 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_loop_index73_phi_fu_566_p4 = empty_176_reg_1647;
    end else begin
        ap_phi_mux_loop_index73_phi_fu_566_p4 = loop_index73_reg_562;
    end
end

always @ (*) begin
    if (((exitcond10810_reg_1606 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_loop_index79_phi_fu_554_p4 = empty_173_reg_1610;
    end else begin
        ap_phi_mux_loop_index79_phi_fu_554_p4 = loop_index79_reg_550;
    end
end

always @ (*) begin
    if (((exitcond10911_reg_1576 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_loop_index85_phi_fu_542_p4 = empty_171_reg_1580;
    end else begin
        ap_phi_mux_loop_index85_phi_fu_542_p4 = loop_index85_reg_538;
    end
end

always @ (*) begin
    if ((~((axi_write_BVALID == 1'b0) & (icmp_ln157_reg_2088 == 1'd0)) & (1'b1 == ap_CS_fsm_state93))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((axi_read_ARREADY == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state37)) begin
            axi_read_ARADDR = axi_read_addr_3_reg_1701;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            axi_read_ARADDR = axi_read_addr_2_reg_1637;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            axi_read_ARADDR = axi_read_addr_1_reg_1600;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            axi_read_ARADDR = axi_read_addr_reg_1570;
        end else begin
            axi_read_ARADDR = 'bx;
        end
    end else begin
        axi_read_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((axi_read_ARREADY == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state37)) begin
            axi_read_ARLEN = mul_ln71_1_reg_1691;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            axi_read_ARLEN = mul_ln67_reg_1627;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            axi_read_ARLEN = valuesToLoad_2_reg_1590;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            axi_read_ARLEN = valuesToLoad_reg_1560;
        end else begin
            axi_read_ARLEN = 'bx;
        end
    end else begin
        axi_read_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((axi_read_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((axi_read_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state37)) | ((axi_read_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((axi_read_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        axi_read_ARVALID = 1'b1;
    end else begin
        axi_read_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond10810_reg_1606 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond1068_reg_1707 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((exitcond1079_reg_1643 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((exitcond10911_reg_1576 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        axi_read_RREADY = 1'b1;
    end else begin
        axi_read_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state3))) begin
        axi_read_blk_n_AR = m_axi_axi_read_ARREADY;
    end else begin
        axi_read_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((exitcond10810_reg_1606 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond1068_reg_1707 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((exitcond1079_reg_1643 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((exitcond10911_reg_1576 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        axi_read_blk_n_R = m_axi_axi_read_RVALID;
    end else begin
        axi_read_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((axi_write_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state85))) begin
        axi_write_AWADDR = axi_write_addr_1_reg_2092;
    end else if ((~((1'b1 == ap_block_state76_on_subcall_done) | (1'b1 == ap_block_state76_io)) & (icmp_ln152_reg_2059 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        axi_write_AWADDR = p_cast8_cast_fu_1351_p1;
    end else begin
        axi_write_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((axi_write_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state85))) begin
        axi_write_AWLEN = valuesToStore_3_reg_2051;
    end else if ((~((1'b1 == ap_block_state76_on_subcall_done) | (1'b1 == ap_block_state76_io)) & (icmp_ln152_reg_2059 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        axi_write_AWLEN = valuesToStore_1_reg_1823;
    end else begin
        axi_write_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((axi_write_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state85)) | (~((1'b1 == ap_block_state76_on_subcall_done) | (1'b1 == ap_block_state76_io)) & (icmp_ln152_reg_2059 == 1'd0) & (1'b1 == ap_CS_fsm_state76)))) begin
        axi_write_AWVALID = 1'b1;
    end else begin
        axi_write_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((axi_write_BVALID == 1'b0) & (icmp_ln157_reg_2088 == 1'd0)) & (icmp_ln157_reg_2088 == 1'd0) & (1'b1 == ap_CS_fsm_state93)) | (~((axi_write_BVALID == 1'b0) & (icmp_ln152_reg_2059 == 1'd0)) & (icmp_ln152_reg_2059 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        axi_write_BREADY = 1'b1;
    end else begin
        axi_write_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_reg_2098_pp7_iter1_reg == 1'd0) & (ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0_01001))) begin
        axi_write_WDATA = empty_186_fu_1422_p1;
    end else if (((exitcond892_reg_2069_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_01001))) begin
        axi_write_WDATA = empty_184_fu_1378_p1;
    end else begin
        axi_write_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond1_reg_2098_pp7_iter1_reg == 1'd0) & (ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((exitcond892_reg_2069_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        axi_write_WVALID = 1'b1;
    end else begin
        axi_write_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((icmp_ln152_reg_2059 == 1'd0) & (1'b1 == ap_CS_fsm_state76)))) begin
        axi_write_blk_n_AW = m_axi_axi_write_AWREADY;
    end else begin
        axi_write_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln157_reg_2088 == 1'd0) & (1'b1 == ap_CS_fsm_state93)) | ((icmp_ln152_reg_2059 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        axi_write_blk_n_B = m_axi_axi_write_BVALID;
    end else begin
        axi_write_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((exitcond1_reg_2098_pp7_iter1_reg == 1'd0) & (ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0)) | ((exitcond892_reg_2069_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0)))) begin
        axi_write_blk_n_W = m_axi_axi_write_WREADY;
    end else begin
        axi_write_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bramBiasGradientAvg_address0 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_address0;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bramBiasGradientAvg_address0 = grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_address0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramBiasGradientAvg_address0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_address0;
    end else begin
        bramBiasGradientAvg_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bramBiasGradientAvg_ce0 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_ce0;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bramBiasGradientAvg_ce0 = grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_ce0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramBiasGradientAvg_ce0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_ce0;
    end else begin
        bramBiasGradientAvg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        bramBiasGradientAvg_ce1 = grp_updateParameter_float_4u_s_fu_694_bramBiasGradientAvg_ce1;
    end else begin
        bramBiasGradientAvg_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bramBiasGradientAvg_d0 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_d0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramBiasGradientAvg_d0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_d0;
    end else begin
        bramBiasGradientAvg_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bramBiasGradientAvg_we0 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_biasGradientAvg_we0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramBiasGradientAvg_we0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_we0;
    end else begin
        bramBiasGradientAvg_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        bramBias_address0 = loop_index_cast_fu_1417_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        bramBias_address0 = loop_index79_cast_fu_856_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bramBias_address0 = grp_updateParameter_float_4u_s_fu_694_bramBias_address0;
    end else begin
        bramBias_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1)))) begin
        bramBias_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bramBias_ce0 = grp_updateParameter_float_4u_s_fu_694_bramBias_ce0;
    end else begin
        bramBias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        bramBias_ce1 = grp_updateParameter_float_4u_s_fu_694_bramBias_ce1;
    end else begin
        bramBias_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        bramBias_d0 = empty_174_fu_861_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bramBias_d0 = grp_updateParameter_float_4u_s_fu_694_bramBias_d0;
    end else begin
        bramBias_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond10810_reg_1606_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        bramBias_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bramBias_we0 = grp_updateParameter_float_4u_s_fu_694_bramBias_we0;
    end else begin
        bramBias_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        bramBias_we1 = grp_updateParameter_float_4u_s_fu_694_bramBias_we1;
    end else begin
        bramBias_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        bramClasses_address0 = loop_index73_cast_fu_906_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        bramClasses_address0 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_address0;
    end else begin
        bramClasses_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        bramClasses_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        bramClasses_ce0 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_classes_ce0;
    end else begin
        bramClasses_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1079_reg_1643_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        bramClasses_we0 = 1'b1;
    end else begin
        bramClasses_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1) & (1'b1 == ap_CS_fsm_pp5_stage1))) begin
        bramError0_address0 = zext_ln143_7_fu_1311_p1;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        bramError0_address0 = zext_ln143_5_fu_1291_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        bramError0_address0 = zext_ln143_3_fu_1185_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        bramError0_address0 = zext_ln143_1_fu_1165_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        bramError0_address0 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_address0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramError0_address0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_address0;
    end else begin
        bramError0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1) & (1'b1 == ap_CS_fsm_pp5_stage1))) begin
        bramError0_address1 = zext_ln143_6_fu_1301_p1;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        bramError0_address1 = zext_ln143_4_fu_1280_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        bramError0_address1 = zext_ln143_2_fu_1175_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        bramError0_address1 = zext_ln143_fu_1154_p1;
    end else begin
        bramError0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1)))) begin
        bramError0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        bramError0_ce0 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_ce0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramError0_ce0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_ce0;
    end else begin
        bramError0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1)))) begin
        bramError0_ce1 = 1'b1;
    end else begin
        bramError0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bramError0_d0 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_d0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramError0_d0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_d0;
    end else begin
        bramError0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bramError0_we0 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_error_we0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramError0_we0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_error_we0;
    end else begin
        bramError0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        bramError1_address0 = zext_ln143_7_reg_2021;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1) & (1'b1 == ap_CS_fsm_pp5_stage1))) begin
        bramError1_address0 = zext_ln143_5_reg_2001;
    end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        bramError1_address0 = zext_ln143_3_reg_1903;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        bramError1_address0 = zext_ln143_1_reg_1883;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramError1_address0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_address0;
    end else begin
        bramError1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        bramError1_address1 = zext_ln143_6_reg_2011;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1) & (1'b1 == ap_CS_fsm_pp5_stage1))) begin
        bramError1_address1 = zext_ln143_4_reg_1991;
    end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        bramError1_address1 = zext_ln143_2_reg_1893;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        bramError1_address1 = zext_ln143_reg_1873;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramError1_address1 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_address1;
    end else begin
        bramError1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1)))) begin
        bramError1_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramError1_ce0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_ce0;
    end else begin
        bramError1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1)))) begin
        bramError1_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramError1_ce1 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_latterError_ce1;
    end else begin
        bramError1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln137_reg_1858 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln137_reg_1858 == 1'd0) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((icmp_ln137_1_reg_1976 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln137_1_reg_1976 == 1'd0) & (1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1)))) begin
        bramError1_we0 = 1'b1;
    end else begin
        bramError1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln137_reg_1858 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln137_reg_1858 == 1'd0) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((icmp_ln137_1_reg_1976 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln137_1_reg_1976 == 1'd0) & (1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1)))) begin
        bramError1_we1 = 1'b1;
    end else begin
        bramError1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        bramMlpResults_address0 = loop_index67_cast_fu_979_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        bramMlpResults_address0 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_address0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramMlpResults_address0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_address0;
    end else begin
        bramMlpResults_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bramMlpResults_address1 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_address1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramMlpResults_address1 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_address1;
    end else begin
        bramMlpResults_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        bramMlpResults_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        bramMlpResults_ce0 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_ce0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramMlpResults_ce0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_ce0;
    end else begin
        bramMlpResults_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bramMlpResults_ce1 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_results_ce1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramMlpResults_ce1 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_ce1;
    end else begin
        bramMlpResults_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1068_reg_1707_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        bramMlpResults_we0 = 1'b1;
    end else begin
        bramMlpResults_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bramWeightGradientAvg_address0 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_address0;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bramWeightGradientAvg_address0 = grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_address0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramWeightGradientAvg_address0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_address0;
    end else begin
        bramWeightGradientAvg_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bramWeightGradientAvg_address1 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_address1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bramWeightGradientAvg_address1 = grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_address1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramWeightGradientAvg_address1 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_address1;
    end else begin
        bramWeightGradientAvg_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bramWeightGradientAvg_ce0 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_ce0;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bramWeightGradientAvg_ce0 = grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_ce0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramWeightGradientAvg_ce0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_ce0;
    end else begin
        bramWeightGradientAvg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bramWeightGradientAvg_ce1 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_ce1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bramWeightGradientAvg_ce1 = grp_updateParameter_float_4u_s_fu_694_bramWeightGradientAvg_ce1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramWeightGradientAvg_ce1 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_ce1;
    end else begin
        bramWeightGradientAvg_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bramWeightGradientAvg_d0 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_d0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramWeightGradientAvg_d0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_d0;
    end else begin
        bramWeightGradientAvg_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bramWeightGradientAvg_d1 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_d1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramWeightGradientAvg_d1 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_d1;
    end else begin
        bramWeightGradientAvg_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bramWeightGradientAvg_we0 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_we0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramWeightGradientAvg_we0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_we0;
    end else begin
        bramWeightGradientAvg_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bramWeightGradientAvg_we1 = grp_computeOutputGradient_float_4u_16u_s_fu_710_p_weightGradientAvg_we1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramWeightGradientAvg_we1 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_we1;
    end else begin
        bramWeightGradientAvg_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        bramWeight_address0 = loop_index61_cast_fu_1373_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        bramWeight_address0 = loop_index85_cast_fu_802_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bramWeight_address0 = grp_updateParameter_float_4u_s_fu_694_bramWeight_address0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramWeight_address0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_address0;
    end else begin
        bramWeight_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        bramWeight_address1 = grp_updateParameter_float_4u_s_fu_694_bramWeight_address1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramWeight_address1 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_address1;
    end else begin
        bramWeight_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1)))) begin
        bramWeight_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bramWeight_ce0 = grp_updateParameter_float_4u_s_fu_694_bramWeight_ce0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramWeight_ce0 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_ce0;
    end else begin
        bramWeight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        bramWeight_ce1 = grp_updateParameter_float_4u_s_fu_694_bramWeight_ce1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67))) begin
        bramWeight_ce1 = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_ce1;
    end else begin
        bramWeight_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        bramWeight_d0 = empty_172_fu_807_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bramWeight_d0 = grp_updateParameter_float_4u_s_fu_694_bramWeight_d0;
    end else begin
        bramWeight_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond10911_reg_1576_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        bramWeight_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bramWeight_we0 = grp_updateParameter_float_4u_s_fu_694_bramWeight_we0;
    end else begin
        bramWeight_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        bramWeight_we1 = grp_updateParameter_float_4u_s_fu_694_bramWeight_we1;
    end else begin
        bramWeight_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state72_on_subcall_done) & (1'b1 == ap_CS_fsm_state72)) | ((1'b0 == ap_block_state67_on_subcall_done) & (1'b1 == ap_CS_fsm_state67)))) begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_continue = 1'b1;
    end else begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_offset = trunc_ln102_reg_1961;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_offset = 9'd0;
    end else begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_biasGradientAvg_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_n = p_n_reg_1916;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_n = l_n_reg_1763;
    end else begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_n = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_numberOutputsPrev = numberNeurons_read_reg_1530;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_numberOutputsPrev = numberInputs_read_reg_1519;
    end else begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_numberOutputsPrev = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_offset = add_ln108_reg_1946;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_offset = add_ln128_reg_1936;
    end else begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputCurrentLayer_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputPrevLayer_offset = add_ln109_2_reg_1956;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputPrevLayer_offset = mul_ln78_reg_1830;
    end else begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_outputPrevLayer_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_offset = mul_ln110_reg_1971;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_offset = 14'd0;
    end else begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weightGradientAvg_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_offset = mul_ln106_1_reg_1966;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_offset = valuesToStore_reg_1768;
    end else begin
        grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_weights_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state55_on_subcall_done) & (1'b1 == ap_CS_fsm_state55))) begin
        grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_continue = 1'b1;
    end else begin
        grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state76_on_subcall_done) | (1'b1 == ap_block_state76_io)) & (1'b1 == ap_CS_fsm_state76))) begin
        grp_updateParameter_float_4u_s_fu_694_ap_continue = 1'b1;
    end else begin
        grp_updateParameter_float_4u_s_fu_694_ap_continue = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (icmp_ln50_fu_734_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else if (((ap_start == 1'b1) & (icmp_ln50_fu_734_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln58_fu_766_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((axi_read_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond10911_fu_791_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond10911_fu_791_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln63_fu_820_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((axi_read_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond10810_fu_845_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond10810_fu_845_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((icmp_ln67_fu_870_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((axi_read_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond1079_fu_895_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond1079_fu_895_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln68_fu_943_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((axi_read_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond1068_fu_968_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond1068_fu_968_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if (((icmp_ln75_fu_1049_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            if (((1'b0 == ap_block_state55_on_subcall_done) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln137_fu_1131_p2 == 1'd1) & (1'b0 == ap_block_pp4_stage0_subdone)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln137_fu_1131_p2 == 1'd1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((1'b0 == ap_block_pp4_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            if (((icmp_ln98_fu_1190_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            if (((1'b0 == ap_block_state67_on_subcall_done) & (1'b1 == ap_CS_fsm_state67))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln137_1_fu_1257_p2 == 1'd1) & (1'b0 == ap_block_pp5_stage0_subdone)) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln137_1_fu_1257_p2 == 1'd1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_pp5_stage1 : begin
            if ((1'b0 == ap_block_pp5_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state72 : begin
            if (((1'b0 == ap_block_state72_on_subcall_done) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if ((~((1'b1 == ap_block_state76_on_subcall_done) | (1'b1 == ap_block_state76_io)) & (icmp_ln152_reg_2059 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((~((1'b1 == ap_block_state76_on_subcall_done) | (1'b1 == ap_block_state76_io)) & (icmp_ln152_reg_2059 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (exitcond892_fu_1362_p2 == 1'd1)) & ~((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0)) | ((1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (exitcond892_fu_1362_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            if ((~((axi_write_BVALID == 1'b0) & (icmp_ln152_reg_2059 == 1'd0)) & (1'b1 == ap_CS_fsm_state84) & (icmp_ln157_fu_1382_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else if ((~((axi_write_BVALID == 1'b0) & (icmp_ln152_reg_2059 == 1'd0)) & (1'b1 == ap_CS_fsm_state84) & (icmp_ln157_fu_1382_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end
        end
        ap_ST_fsm_state85 : begin
            if (((axi_write_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state85))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (exitcond1_fu_1406_p2 == 1'd1)) & ~((ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0)) | ((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (exitcond1_fu_1406_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            if ((~((axi_write_BVALID == 1'b0) & (icmp_ln157_reg_2088 == 1'd0)) & (1'b1 == ap_CS_fsm_state93))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add35_fu_998_p2 = (mul34_fu_993_p2 + numberInputs_read_reg_1519);

assign add_ln106_fu_1233_p2 = ($signed(trunc_ln71_reg_1674) + $signed(grp_fu_1443_p2));

assign add_ln108_fu_1241_p2 = ($signed(mul_ln78_reg_1830) + $signed(trunc_ln108_fu_1237_p1));

assign add_ln109_2_fu_1249_p2 = ($signed(mul_ln78_reg_1830) + $signed(trunc_ln109_1_fu_1246_p1));

assign add_ln128_fu_1228_p2 = ($signed(mul_ln78_reg_1830) + $signed(trunc_ln75_reg_1773));

assign add_ln137_1_fu_1262_p2 = (ap_phi_mux_i_10_phi_fu_641_p4 + 30'd1);

assign add_ln137_fu_1136_p2 = (ap_phi_mux_i_8_phi_fu_611_p4 + 30'd1);

assign add_ln143_fu_1083_p2 = ($signed(numberOutputs_read_reg_1505) + $signed(add35_reg_1732));

assign add_ln150_1_fu_1087_p2 = ($signed(numberOutputs_read_reg_1505) + $signed(mul34_reg_1727));

assign add_ln55_fu_740_p0 = numberLayers;

assign add_ln56_1_fu_752_p2 = ($signed(numberOutputs_read_reg_1505) + $signed(mul_ln55_reg_1555));

assign add_ln71_fu_919_p2 = (numberInputs_read_reg_1519 + valuesToStore_2_fu_915_p2);

assign add_ln85_fu_1111_p2 = ($signed(trunc_ln71_2_reg_1668) + $signed(grp_fu_1435_p2));

assign add_ln87_fu_1116_p2 = ($signed(empty_191_reg_1742) + $signed(grp_fu_1435_p2));

assign add_ln98_fu_1316_p2 = ($signed(layer_1_reg_618) + $signed(64'd18446744073709551615));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_pp5_stage1 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd78];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((axi_read_RVALID == 1'b0) & (exitcond10911_reg_1576 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((axi_read_RVALID == 1'b0) & (exitcond10911_reg_1576 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((axi_read_RVALID == 1'b0) & (exitcond10810_reg_1606 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((axi_read_RVALID == 1'b0) & (exitcond10810_reg_1606 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((axi_read_RVALID == 1'b0) & (exitcond1079_reg_1643 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((axi_read_RVALID == 1'b0) & (exitcond1079_reg_1643 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((axi_read_RVALID == 1'b0) & (exitcond1068_reg_1707 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((axi_read_RVALID == 1'b0) & (exitcond1068_reg_1707 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((1'b1 == ap_block_state79_io) & (ap_enable_reg_pp6_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((1'b1 == ap_block_state79_io) & (ap_enable_reg_pp6_iter2 == 1'b1));
end

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp7_stage0_11001 = ((1'b1 == ap_block_state88_io) & (ap_enable_reg_pp7_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp7_stage0_subdone = ((1'b1 == ap_block_state88_io) & (ap_enable_reg_pp7_iter2 == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage0_iter1 = ((axi_read_RVALID == 1'b0) & (exitcond10911_reg_1576 == 1'd0));
end

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_pp1_stage0_iter1 = ((axi_read_RVALID == 1'b0) & (exitcond10810_reg_1606 == 1'd0));
end

assign ap_block_state23_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state33_pp2_stage0_iter1 = ((axi_read_RVALID == 1'b0) & (exitcond1079_reg_1643 == 1'd0));
end

assign ap_block_state34_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state45_pp3_stage0_iter1 = ((axi_read_RVALID == 1'b0) & (exitcond1068_reg_1707 == 1'd0));
end

assign ap_block_state46_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state55_on_subcall_done = ((ap_sync_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_ready & ap_sync_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_done) == 1'b0);
end

assign ap_block_state56_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state67_on_subcall_done = ((ap_sync_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_ready & ap_sync_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_done) == 1'b0);
end

assign ap_block_state68_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp5_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state72_on_subcall_done = ((ap_sync_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_ready & ap_sync_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_done) == 1'b0);
end

always @ (*) begin
    ap_block_state76_io = ((axi_write_AWREADY == 1'b0) & (icmp_ln152_reg_2059 == 1'd0));
end

always @ (*) begin
    ap_block_state76_on_subcall_done = ((ap_sync_grp_updateParameter_float_4u_s_fu_694_ap_ready & ap_sync_grp_updateParameter_float_4u_s_fu_694_ap_done) == 1'b0);
end

assign ap_block_state77_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state79_io = ((axi_write_WREADY == 1'b0) & (exitcond892_reg_2069_pp6_iter1_reg == 1'd0));
end

assign ap_block_state79_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state84 = ((axi_write_BVALID == 1'b0) & (icmp_ln152_reg_2059 == 1'd0));
end

assign ap_block_state86_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state88_io = ((axi_write_WREADY == 1'b0) & (exitcond1_reg_2098_pp7_iter1_reg == 1'd0));
end

assign ap_block_state88_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state93 = ((axi_write_BVALID == 1'b0) & (icmp_ln157_reg_2088 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_done = (grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_done | ap_sync_reg_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_done);

assign ap_sync_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_ready = (grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_ready | ap_sync_reg_grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_ready);

assign ap_sync_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_done = (grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_done | ap_sync_reg_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_done);

assign ap_sync_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_ready = (grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_ready | ap_sync_reg_grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_ready);

assign ap_sync_grp_updateParameter_float_4u_s_fu_694_ap_done = (grp_updateParameter_float_4u_s_fu_694_ap_done | ap_sync_reg_grp_updateParameter_float_4u_s_fu_694_ap_done);

assign ap_sync_grp_updateParameter_float_4u_s_fu_694_ap_ready = (grp_updateParameter_float_4u_s_fu_694_ap_ready | ap_sync_reg_grp_updateParameter_float_4u_s_fu_694_ap_ready);

assign bitcast_ln141_fu_1322_p1 = learningRate;

assign bramClasses_d0 = axi_read_addr_2_read_reg_1652;

assign bramMlpResults_d0 = axi_read_addr_3_read_reg_1716;

assign empty_171_fu_796_p2 = (ap_phi_mux_loop_index85_phi_fu_542_p4 + 32'd1);

assign empty_172_fu_807_p1 = axi_read_addr_read_reg_1585;

assign empty_173_fu_850_p2 = (ap_phi_mux_loop_index79_phi_fu_554_p4 + 32'd1);

assign empty_174_fu_861_p1 = axi_read_addr_1_read_reg_1615;

assign empty_176_fu_900_p2 = (ap_phi_mux_loop_index73_phi_fu_566_p4 + 32'd1);

assign empty_178_fu_973_p2 = (ap_phi_mux_loop_index67_phi_fu_578_p4 + 32'd1);

assign empty_180_fu_1142_p1 = ap_phi_mux_i_8_phi_fu_611_p4[3:0];

assign empty_181_fu_1268_p1 = ap_phi_mux_i_10_phi_fu_641_p4[3:0];

assign empty_183_fu_1367_p2 = (loop_index61_reg_648 + 32'd1);

assign empty_184_fu_1378_p1 = bramWeight_load_reg_2083;

assign empty_185_fu_1411_p2 = (loop_index_reg_659 + 32'd1);

assign empty_186_fu_1422_p1 = bramBias_load_reg_2112;

assign empty_191_fu_1007_p1 = add35_fu_998_p2[12:0];

assign empty_192_fu_1026_p1 = valuesToStore_2_reg_1657[8:0];

assign exitcond1068_fu_968_p2 = ((ap_phi_mux_loop_index67_phi_fu_578_p4 == mul_ln71_1_reg_1691) ? 1'b1 : 1'b0);

assign exitcond1079_fu_895_p2 = ((ap_phi_mux_loop_index73_phi_fu_566_p4 == mul_ln67_reg_1627) ? 1'b1 : 1'b0);

assign exitcond10810_fu_845_p2 = ((ap_phi_mux_loop_index79_phi_fu_554_p4 == valuesToLoad_2_reg_1590) ? 1'b1 : 1'b0);

assign exitcond10911_fu_791_p2 = ((ap_phi_mux_loop_index85_phi_fu_542_p4 == valuesToLoad_reg_1560) ? 1'b1 : 1'b0);

assign exitcond1_fu_1406_p2 = ((loop_index_reg_659 == valuesToStore_3_reg_2051) ? 1'b1 : 1'b0);

assign exitcond892_fu_1362_p2 = ((loop_index61_reg_648 == valuesToStore_1_reg_1823) ? 1'b1 : 1'b0);

assign grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_start = grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_ap_start_reg;

assign grp_computeHiddenGradient_float_4u_2u_16u_s_fu_670_p_initZero = initZero_reg_1812;

assign grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_start = grp_computeOutputGradient_float_4u_16u_s_fu_710_ap_start_reg;

assign grp_computeOutputGradient_float_4u_16u_s_fu_710_p_initZero = initZero_reg_1812;

assign grp_fu_1426_p1 = add35_fu_998_p2[13:0];

assign grp_fu_1435_p0 = (trunc_ln71_2_reg_1668 + trunc_ln75_5_fu_1068_p1);

assign grp_fu_1435_p1 = i_reg_596[12:0];

assign grp_fu_1443_p1 = layer_1_reg_618[13:0];

assign grp_fu_1450_p0 = 14'd16383;

assign grp_fu_1450_p1 = layer_011_reg_628[13:0];

assign grp_updateParameter_float_4u_s_fu_694_ap_start = grp_updateParameter_float_4u_s_fu_694_ap_start_reg;

assign i_9_fu_1054_p2 = (i_reg_596 + 32'd1);

assign icmp_fu_1020_p2 = ((tmp_fu_1011_p4 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln100_fu_1196_p2 = ((layer_1_reg_618 < zext_ln75_reg_1778) ? 1'b1 : 1'b0);

assign icmp_ln137_1_fu_1257_p2 = ((ap_phi_mux_i_10_phi_fu_641_p4 == trunc_ln75_1_reg_1784) ? 1'b1 : 1'b0);

assign icmp_ln137_fu_1131_p2 = ((ap_phi_mux_i_8_phi_fu_611_p4 == trunc_ln3_reg_1853) ? 1'b1 : 1'b0);

assign icmp_ln152_fu_1337_p2 = ((valuesToStore_1_reg_1823 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln157_fu_1382_p2 = ((valuesToStore_3_reg_2051 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_734_p2 = ((loadParameters == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_766_p2 = ((valuesToLoad_fu_761_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_820_p2 = ((valuesToLoad_2_fu_815_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_870_p2 = ((mul_ln67_fu_865_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_943_p2 = ((mul_ln71_1_fu_938_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_1049_p2 = ((i_reg_596 == batchSize_read_reg_1620) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_1190_p2 = (($signed(layer_011_reg_628) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign initZero_fu_1077_p2 = ((i_reg_596 == 32'd0) ? 1'b1 : 1'b0);

assign l_n_fu_1029_p3 = ((icmp_reg_1747[0:0] === 1'b1) ? numberNeurons_read_reg_1530 : numberOutputs_read_reg_1505);

assign layer_2_fu_1216_p2 = ($signed(32'd4294967295) + $signed(layer_011_reg_628));

assign layer_fu_988_p2 = ($signed(32'd4294967295) + $signed(numberLayers_read_reg_1547));

assign loop_index61_cast_fu_1373_p1 = loop_index61_reg_648;

assign loop_index67_cast_fu_979_p1 = loop_index67_reg_574_pp3_iter1_reg;

assign loop_index73_cast_fu_906_p1 = loop_index73_reg_562_pp2_iter1_reg;

assign loop_index79_cast_fu_856_p1 = loop_index79_reg_550_pp1_iter1_reg;

assign loop_index85_cast_fu_802_p1 = loop_index85_reg_538_pp0_iter1_reg;

assign loop_index_cast_fu_1417_p1 = loop_index_reg_659;

assign mul34_fu_993_p0 = ($signed(32'd4294967295) + $signed(numberLayers_read_reg_1547));

assign mul_ln55_fu_746_p1 = ($signed(add_ln55_fu_740_p0) + $signed(32'd4294967295));

assign mul_ln71_1_fu_938_p1 = ($signed(numberOutputs_read_reg_1505) + $signed(add_ln71_reg_1663));

assign mul_ln79_fu_1105_p0 = size_assign_reg_586[7:0];

assign or_ln143_1_fu_1170_p2 = (tmp_s_reg_1867 | 6'd2);

assign or_ln143_2_fu_1180_p2 = (tmp_s_reg_1867 | 6'd3);

assign or_ln143_3_fu_1285_p2 = (tmp_1_fu_1272_p3 | 6'd1);

assign or_ln143_4_fu_1296_p2 = (tmp_1_reg_1985 | 6'd2);

assign or_ln143_5_fu_1306_p2 = (tmp_1_reg_1985 | 6'd3);

assign or_ln143_fu_1159_p2 = (tmp_s_fu_1146_p3 | 6'd1);

assign p_cast1_cast_fu_781_p1 = $signed(p_cast1_fu_772_p4);

assign p_cast1_fu_772_p4 = {{axiWeightInput_read_reg_1486[63:2]}};

assign p_cast2_cast_fu_958_p1 = $signed(p_cast2_fu_949_p4);

assign p_cast2_fu_949_p4 = {{axiMlpResultsInput_read_reg_1496[63:2]}};

assign p_cast3_cast_fu_835_p1 = $signed(p_cast3_fu_826_p4);

assign p_cast3_fu_826_p4 = {{axiBiasInput_read_reg_1481[63:2]}};

assign p_cast8_cast_fu_1351_p1 = $signed(p_cast8_fu_1342_p4);

assign p_cast8_fu_1342_p4 = {{axiWeightOutput_read_reg_1476[63:2]}};

assign p_cast9_cast_fu_1396_p1 = $signed(p_cast9_fu_1387_p4);

assign p_cast9_fu_1387_p4 = {{axiBiasOutput_read_reg_1471[63:2]}};

assign p_cast_cast_fu_885_p1 = $signed(p_cast_fu_876_p4);

assign p_cast_fu_876_p4 = {{axiClassesInput_read_reg_1491[63:2]}};

assign p_n_fu_1201_p3 = ((icmp_ln100_fu_1196_p2[0:0] === 1'b1) ? numberNeurons_read_reg_1530 : size_assign_reg_586);

assign select_ln121_fu_1222_p3 = ((icmp_reg_1747[0:0] === 1'b1) ? size_assign_reg_586 : numberOutputs_read_reg_1505);

assign tmp_1_fu_1272_p3 = {{empty_181_fu_1268_p1}, {2'd0}};

assign tmp_fu_1011_p4 = {{numberLayers_read_reg_1547[31:1]}};

assign tmp_s_fu_1146_p3 = {{empty_180_fu_1142_p1}, {2'd0}};

assign trunc_ln102_fu_1254_p1 = grp_fu_1443_p2[8:0];

assign trunc_ln108_fu_1237_p1 = add_ln106_fu_1233_p2[12:0];

assign trunc_ln109_1_fu_1246_p1 = grp_fu_1450_p4[12:0];

assign trunc_ln71_1_fu_931_p1 = numberNeurons_read_reg_1530[13:0];

assign trunc_ln71_2_fu_924_p1 = add_ln71_fu_919_p2[12:0];

assign trunc_ln71_fu_928_p1 = numberInputs_read_reg_1519[13:0];

assign trunc_ln75_2_fu_1060_p1 = i_reg_596[7:0];

assign trunc_ln75_5_fu_1068_p1 = size_assign_reg_586[12:0];

assign trunc_ln75_fu_1034_p1 = numberInputs_read_reg_1519[12:0];

assign valuesToLoad_2_fu_815_p2 = ($signed(numberOutputs_read_reg_1505) + $signed(valuesToLoad_1_fu_811_p2));

assign valuesToLoad_fu_761_p1 = (add_ln56_1_fu_752_p2 + numberInputs_read_reg_1519);

assign valuesToStore_1_fu_1096_p1 = (add_ln150_1_fu_1087_p2 + numberInputs_read_reg_1519);

assign valuesToStore_3_fu_1332_p2 = ($signed(numberOutputs_read_reg_1505) + $signed(valuesToStore_2_reg_1657));

assign zext_ln143_1_fu_1165_p1 = or_ln143_fu_1159_p2;

assign zext_ln143_2_fu_1175_p1 = or_ln143_1_fu_1170_p2;

assign zext_ln143_3_fu_1185_p1 = or_ln143_2_fu_1180_p2;

assign zext_ln143_4_fu_1280_p1 = tmp_1_fu_1272_p3;

assign zext_ln143_5_fu_1291_p1 = or_ln143_3_fu_1285_p2;

assign zext_ln143_6_fu_1301_p1 = or_ln143_4_fu_1296_p2;

assign zext_ln143_7_fu_1311_p1 = or_ln143_5_fu_1306_p2;

assign zext_ln143_fu_1154_p1 = tmp_s_fu_1146_p3;

assign zext_ln75_fu_1037_p1 = $unsigned(layer_reg_1721);

always @ (posedge ap_clk) begin
    zext_ln75_reg_1778[63:32] <= 32'b00000000000000000000000000000000;
    tmp_s_reg_1867[1:0] <= 2'b00;
    zext_ln143_reg_1873[1:0] <= 2'b00;
    zext_ln143_reg_1873[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln143_1_reg_1883[1:0] <= 2'b01;
    zext_ln143_1_reg_1883[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln143_2_reg_1893[1:0] <= 2'b10;
    zext_ln143_2_reg_1893[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln143_3_reg_1903[1:0] <= 2'b11;
    zext_ln143_3_reg_1903[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_1_reg_1985[1:0] <= 2'b00;
    zext_ln143_4_reg_1991[1:0] <= 2'b00;
    zext_ln143_4_reg_1991[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln143_5_reg_2001[1:0] <= 2'b01;
    zext_ln143_5_reg_2001[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln143_6_reg_2011[1:0] <= 2'b10;
    zext_ln143_6_reg_2011[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln143_7_reg_2021[1:0] <= 2'b11;
    zext_ln143_7_reg_2021[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //BGD
