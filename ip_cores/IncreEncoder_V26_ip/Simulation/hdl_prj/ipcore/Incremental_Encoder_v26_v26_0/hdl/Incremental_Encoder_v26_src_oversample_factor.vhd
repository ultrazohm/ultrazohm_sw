-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\inc_enc_v26\Incremental_Encoder_v26_src_oversample_factor.vhd
-- Created: 2023-02-24 10:23:06
-- 
-- Generated by MATLAB 9.13 and HDL Coder 4.0
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Incremental_Encoder_v26_src_oversample_factor
-- Source Path: inc_enc_v26/IncEnc_V25/speed/OS_factor_logic/oversample_factor
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Incremental_Encoder_v26_src_oversample_factor IS
  PORT( AllowCheckOverSampl               :   IN    std_logic;
        ReadBack_Omega                    :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        OverSamplOmega                    :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        state                             :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        InternalOmega                     :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        state_Out                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- uint16
        InternalOmega_Out                 :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En11
        );
END Incremental_Encoder_v26_src_oversample_factor;


ARCHITECTURE rtl OF Incremental_Encoder_v26_src_oversample_factor IS

  -- Signals
  SIGNAL ReadBack_Omega_signed            : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL OverSamplOmega_signed            : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL state_unsigned                   : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL InternalOmega_signed             : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL state_Out_tmp                    : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL InternalOmega_Out_tmp            : signed(23 DOWNTO 0);  -- sfix24_En11

BEGIN
  ReadBack_Omega_signed <= signed(ReadBack_Omega);

  OverSamplOmega_signed <= signed(OverSamplOmega);

  state_unsigned <= unsigned(state);

  InternalOmega_signed <= signed(InternalOmega);

  oversample_factor_output : PROCESS (AllowCheckOverSampl, InternalOmega_signed, OverSamplOmega_signed,
       ReadBack_Omega_signed, state_unsigned)
    VARIABLE Omega_ADD : signed(23 DOWNTO 0);
    VARIABLE Omega_SUB : signed(23 DOWNTO 0);
    VARIABLE cast : signed(24 DOWNTO 0);
    VARIABLE cast_0 : signed(24 DOWNTO 0);
  BEGIN
    cast := to_signed(16#0000000#, 25);
    cast_0 := to_signed(16#0000000#, 25);
    state_Out_tmp <= state_unsigned;
    InternalOmega_Out_tmp <= InternalOmega_signed;
    --MATLAB Function 'IncEnc_V25/speed/OS_factor_logic/oversample_factor'
    --Counter State
    -- Count Up 
    -- pre-calculate since used in comparison and assignment afterwards
    Omega_ADD := InternalOmega_signed + OverSamplOmega_signed;
    Omega_SUB := InternalOmega_signed - OverSamplOmega_signed;
    IF (ReadBack_Omega_signed > Omega_ADD) AND AllowCheckOverSampl = '1' THEN 
      state_Out_tmp <= state_unsigned + to_unsigned(16#0001#, 16);
      --Count up the measure-state
      InternalOmega_Out_tmp <= Omega_ADD;
    ELSIF (ReadBack_Omega_signed < Omega_SUB) AND AllowCheckOverSampl = '1' THEN 
      state_Out_tmp <= state_unsigned - to_unsigned(16#0001#, 16);
      --Count down the measure-state
      InternalOmega_Out_tmp <= Omega_SUB;
    ELSE 
      cast := ReadBack_Omega_signed & '0';
      cast_0 := resize(OverSamplOmega_signed, 25);
      IF (cast < cast_0) AND AllowCheckOverSampl = '1' THEN 
        state_Out_tmp <= to_unsigned(16#0001#, 16);
      END IF;
    END IF;
    -- Output the variables
  END PROCESS oversample_factor_output;


  state_Out <= std_logic_vector(state_Out_tmp);

  InternalOmega_Out <= std_logic_vector(InternalOmega_Out_tmp);

END rtl;

