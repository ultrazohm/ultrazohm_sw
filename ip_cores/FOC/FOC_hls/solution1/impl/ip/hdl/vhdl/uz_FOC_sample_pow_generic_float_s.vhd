-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity uz_FOC_sample_pow_generic_float_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    base_r : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of uz_FOC_sample_pow_generic_float_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv9_182 : STD_LOGIC_VECTOR (8 downto 0) := "110000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv52_B17217F7D1C : STD_LOGIC_VECTOR (51 downto 0) := "0000000010110001011100100001011111110111110100011100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv15_4000 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv36_B17217F7D : STD_LOGIC_VECTOR (35 downto 0) := "101100010111001000010111111101111101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv32_7F800000 : STD_LOGIC_VECTOR (31 downto 0) := "01111111100000000000000000000000";
    constant ap_const_lv27_4 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000100";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_382 : STD_LOGIC_VECTOR (9 downto 0) := "1110000010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv25_B8A : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000101110001010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_float_0_5_64_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_float_0_5_64_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_float_0_5_64_array_V_q0 : STD_LOGIC_VECTOR (55 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_q0 : STD_LOGIC_VECTOR (51 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_q0 : STD_LOGIC_VECTOR (48 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_q0 : STD_LOGIC_VECTOR (43 downto 0);
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_s_fu_373_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Repl2_s_reg_1438 : STD_LOGIC_VECTOR (22 downto 0);
    signal x_is_p1_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1444 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1444_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1444_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1444_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1444_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1444_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1444_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1444_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1444_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1444_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1444_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1444_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1444_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1444_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_1444_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_reg_1450 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_reg_1450_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_reg_1450_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_reg_1450_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_reg_1450_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_reg_1450_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_reg_1450_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_reg_1450_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_reg_1450_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_reg_1450_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_reg_1450_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_reg_1450_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_reg_1450_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_reg_1450_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_reg_1450_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1455 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1455_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1455_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1455_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1455_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1455_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1455_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1455_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1455_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1455_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1455_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1455_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1455_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1455_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_1455_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_1_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_1_reg_1460 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_1_reg_1460_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_1_reg_1460_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_1_reg_1460_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_1_reg_1460_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_1_reg_1460_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_1_reg_1460_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_1_reg_1460_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_1_reg_1460_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_1_reg_1460_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_1_reg_1460_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_1_reg_1460_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_1_reg_1460_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_1_reg_1460_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_1_reg_1460_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_2_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_2_reg_1465 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_2_reg_1465_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_2_reg_1465_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_2_reg_1465_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_2_reg_1465_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_2_reg_1465_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_2_reg_1465_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_2_reg_1465_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_2_reg_1465_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_2_reg_1465_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_2_reg_1465_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_2_reg_1465_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_2_reg_1465_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_2_reg_1465_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_2_reg_1465_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_459_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1471 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_exp_2_fu_483_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_2_reg_1476 : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_2_reg_1476_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_2_reg_1476_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_2_reg_1476_pp0_iter3_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_2_reg_1476_pp0_iter4_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_2_reg_1476_pp0_iter5_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_2_reg_1476_pp0_iter6_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal log_sum_V_reg_1496 : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1496_pp0_iter2_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1496_pp0_iter3_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1496_pp0_iter4_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1496_pp0_iter5_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal a_fu_535_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_1506 : STD_LOGIC_VECTOR (3 downto 0);
    signal z2_V_reg_1511 : STD_LOGIC_VECTOR (40 downto 0);
    signal a_1_reg_1517 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_reg_1523 : STD_LOGIC_VECTOR (34 downto 0);
    signal z3_V_reg_1533 : STD_LOGIC_VECTOR (43 downto 0);
    signal a_2_fu_732_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_2_reg_1544 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_15_reg_1549 : STD_LOGIC_VECTOR (37 downto 0);
    signal log_sum_V_1_fu_842_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_1_reg_1559 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_16_reg_1564 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_17_reg_1569 : STD_LOGIC_VECTOR (22 downto 0);
    signal ret_V_9_fu_948_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_9_reg_1574 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_9_reg_1574_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_9_reg_1574_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_9_reg_1574_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_9_reg_1574_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_9_reg_1574_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_9_reg_1574_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_9_reg_1574_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_17_reg_1579 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_17_reg_1579_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1_reg_1589 : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln1_reg_1589_pp0_iter8_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln1_reg_1589_pp0_iter9_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal r_exp_V_fu_1036_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_reg_1599 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_reg_1599_pp0_iter11_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_reg_1599_pp0_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_reg_1599_pp0_iter13_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_reg_1599_pp0_iter14_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal m_diff_hi_V_reg_1605 : STD_LOGIC_VECTOR (8 downto 0);
    signal m_diff_lo_V_fu_1079_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal m_diff_lo_V_reg_1610 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_Z1P_m_1_V_reg_1625 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_Z1_V_reg_1630 : STD_LOGIC_VECTOR (26 downto 0);
    signal exp_Z1_V_reg_1630_pp0_iter13_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal exp_Z1_V_reg_1630_pp0_iter14_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln492_fu_491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln492_1_fu_656_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln492_2_fu_728_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln492_5_fu_752_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln492_4_fu_1093_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln492_3_fu_1098_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_s_fu_351_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_3_fu_363_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln340_fu_377_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_fu_381_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln369_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln828_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_15_fu_355_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln964_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln376_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_inf_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_exp_1_fu_477_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal index0_V_fu_467_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_frac_fu_506_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1287_1_fu_513_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Result_16_fu_497_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1406_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sf_fu_554_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_39_fu_547_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_563_p4 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln1287_fu_572_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln657_fu_544_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal lhs_V_1_fu_584_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal select_ln1287_fu_576_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln1146_fu_592_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal z1_V_fu_528_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal r_V_7_fu_610_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_7_fu_610_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal r_V_7_fu_610_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_14_fu_596_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln1147_fu_616_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal ret_V_3_fu_620_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal lhs_V_3_fu_667_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal eZ_V_fu_660_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal zext_ln657_fu_678_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal zext_ln1146_1_fu_674_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_fu_694_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_fu_694_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal r_V_fu_694_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal rhs_V_2_fu_700_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal ret_V_15_fu_682_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal zext_ln1147_1_fu_708_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_5_fu_712_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_5_fu_775_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal eZ_V_1_fu_768_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal zext_ln657_1_fu_786_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln1146_2_fu_782_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal r_V_3_fu_799_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_3_fu_799_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal r_V_3_fu_799_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal rhs_V_4_fu_805_p3 : STD_LOGIC_VECTOR (55 downto 0);
    signal ret_V_16_fu_790_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln1147_2_fu_813_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln163_fu_757_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln163_2_fu_823_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal zext_ln163_1_fu_761_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal add_ln657_1_fu_832_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal add_ln657_fu_827_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln657_2_fu_838_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal ret_V_7_fu_817_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal Elog2_V_fu_871_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_8_fu_880_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln1072_4_fu_877_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal r_V_8_fu_880_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_8_fu_880_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal lhs_V_fu_896_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal rhs_V_5_fu_886_p4 : STD_LOGIC_VECTOR (44 downto 0);
    signal zext_ln1147_3_fu_903_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1147_4_fu_907_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_fu_911_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Elog2_V_fu_871_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal sext_ln1146_fu_935_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs_V_7_fu_927_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_fu_917_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln1146_1_fu_944_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_8_fu_938_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fix_hi_V_fu_954_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_6_fu_986_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1418_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln805_fu_1013_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_cast_fu_997_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln805_fu_1016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln649_fu_1022_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_10_fu_1006_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln804_fu_1028_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1069_fu_1048_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln657_1_fu_1054_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal m_diff_fu_1064_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal Z2_ind_V_fu_1083_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln657_4_fu_1105_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln657_3_fu_1102_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_11_fu_1109_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal exp_Z1_hi_V_fu_1125_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal or_ln407_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln407_fu_1146_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln407_1_fu_1153_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln407_2_fu_1161_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_12_fu_1179_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1429_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln1146_fu_1198_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln1146_2_fu_1213_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln1146_3_fu_1192_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal lhs_V_11_fu_1184_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln1146_1_fu_1217_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal zext_ln1146_5_fu_1210_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal trunc_ln2_fu_1202_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal zext_ln1146_4_fu_1195_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_13_fu_1225_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_42_fu_1243_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_1_fu_1251_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_2_fu_1256_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_43_fu_1263_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_44_fu_1279_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1146_2_fu_1237_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal add_ln1146_1_fu_1231_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_fu_1300_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_s_fu_1310_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln170_fu_1328_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_exp_fu_1332_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_fu_1320_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_14_fu_1338_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln407_3_fu_1168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln844_fu_1273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln407_fu_1352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln657_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln658_fu_1286_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln350_fu_1348_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln407_3_fu_1172_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln657_fu_1364_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln657_fu_1380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln848_fu_1294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln657_fu_1386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln848_fu_1392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln407_4_fu_1372_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1406_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1406_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1418_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1429_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1429_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1406_ce : STD_LOGIC;
    signal grp_fu_1418_ce : STD_LOGIC;
    signal grp_fu_1429_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to14 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1406_p00 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1429_p00 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1429_p10 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_3_fu_799_p00 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_3_fu_799_p10 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_7_fu_610_p00 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_7_fu_610_p10 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_fu_694_p00 : STD_LOGIC_VECTOR (46 downto 0);
    signal r_V_fu_694_p10 : STD_LOGIC_VECTOR (46 downto 0);

    component uz_FOC_sample_mul_4ns_39ns_43_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (38 downto 0);
        dout : OUT STD_LOGIC_VECTOR (42 downto 0) );
    end component;


    component uz_FOC_sample_mul_6ns_41ns_47_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (40 downto 0);
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component uz_FOC_sample_mul_6ns_44ns_50_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (43 downto 0);
        dout : OUT STD_LOGIC_VECTOR (49 downto 0) );
    end component;


    component uz_FOC_sample_mul_9s_45ns_52_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (44 downto 0);
        dout : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component uz_FOC_sample_mul_23ns_23ns_46_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (22 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component uz_FOC_sample_mul_10s_36s_36_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (35 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component uz_FOC_sample_mul_mul_6ns_25s_25_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (24 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component uz_FOC_sample_mac_muladd_13s_13ns_16s_25_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component uz_FOC_sample_mul_mul_18ns_18ns_36_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component uz_FOC_sample_pow_generic_float_s_pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component uz_FOC_sample_pow_generic_float_s_pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_65cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (55 downto 0) );
    end component;


    component uz_FOC_sample_pow_generic_float_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component uz_FOC_sample_pow_generic_float_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (48 downto 0) );
    end component;


    component uz_FOC_sample_pow_generic_float_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_fYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component uz_FOC_sample_pow_generic_float_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_g8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component uz_FOC_sample_pow_generic_float_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_hbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_U : component uz_FOC_sample_pow_generic_float_s_pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_bkb
    generic map (
        DataWidth => 6,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_q0);

    pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_float_0_5_64_array_V_U : component uz_FOC_sample_pow_generic_float_s_pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_65cud
    generic map (
        DataWidth => 56,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_float_0_5_64_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_float_0_5_64_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_float_0_5_64_array_V_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_U : component uz_FOC_sample_pow_generic_float_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_dEe
    generic map (
        DataWidth => 52,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_U : component uz_FOC_sample_pow_generic_float_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_eOg
    generic map (
        DataWidth => 49,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_U : component uz_FOC_sample_pow_generic_float_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_fYi
    generic map (
        DataWidth => 44,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_q0);

    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_U : component uz_FOC_sample_pow_generic_float_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_g8j
    generic map (
        DataWidth => 27,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0);

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_U : component uz_FOC_sample_pow_generic_float_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0);

    mul_4ns_39ns_43_1_1_U1 : component uz_FOC_sample_mul_4ns_39ns_43_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 39,
        dout_WIDTH => 43)
    port map (
        din0 => r_V_7_fu_610_p0,
        din1 => r_V_7_fu_610_p1,
        dout => r_V_7_fu_610_p2);

    mul_6ns_41ns_47_1_1_U2 : component uz_FOC_sample_mul_6ns_41ns_47_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 41,
        dout_WIDTH => 47)
    port map (
        din0 => r_V_fu_694_p0,
        din1 => r_V_fu_694_p1,
        dout => r_V_fu_694_p2);

    mul_6ns_44ns_50_1_1_U3 : component uz_FOC_sample_mul_6ns_44ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 44,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_3_fu_799_p0,
        din1 => r_V_3_fu_799_p1,
        dout => r_V_3_fu_799_p2);

    mul_9s_45ns_52_1_1_U4 : component uz_FOC_sample_mul_9s_45ns_52_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 45,
        dout_WIDTH => 52)
    port map (
        din0 => b_exp_2_reg_1476_pp0_iter6_reg,
        din1 => Elog2_V_fu_871_p1,
        dout => Elog2_V_fu_871_p2);

    mul_23ns_23ns_46_1_1_U5 : component uz_FOC_sample_mul_23ns_23ns_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 23,
        din1_WIDTH => 23,
        dout_WIDTH => 46)
    port map (
        din0 => r_V_8_fu_880_p0,
        din1 => r_V_8_fu_880_p1,
        dout => r_V_8_fu_880_p2);

    mul_10s_36s_36_1_1_U6 : component uz_FOC_sample_mul_10s_36s_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => r_exp_V_fu_1036_p3,
        din1 => ap_const_lv36_B17217F7D,
        dout => mul_ln1069_fu_1048_p2);

    mul_mul_6ns_25s_25_4_1_U7 : component uz_FOC_sample_mul_mul_6ns_25s_25_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 6,
        din1_WIDTH => 25,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1406_p0,
        din1 => grp_fu_1406_p1,
        ce => grp_fu_1406_ce,
        dout => grp_fu_1406_p2);

    mac_muladd_13s_13ns_16s_25_4_1_U8 : component uz_FOC_sample_mac_muladd_13s_13ns_16s_25_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        din2_WIDTH => 16,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => m_fix_hi_V_fu_954_p4,
        din1 => grp_fu_1418_p1,
        din2 => rhs_V_6_fu_986_p3,
        ce => grp_fu_1418_ce,
        dout => grp_fu_1418_p3);

    mul_mul_18ns_18ns_36_4_1_U9 : component uz_FOC_sample_mul_mul_18ns_18ns_36_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1429_p0,
        din1 => grp_fu_1429_p1,
        ce => grp_fu_1429_ce,
        dout => grp_fu_1429_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then
                a_1_reg_1517 <= ret_V_3_fu_620_p2(43 downto 38);
                a_2_reg_1544 <= ret_V_5_fu_712_p2(49 downto 44);
                a_reg_1506 <= grp_fu_1406_p2(24 downto 21);
                b_exp_2_reg_1476_pp0_iter2_reg <= b_exp_2_reg_1476_pp0_iter1_reg;
                b_exp_2_reg_1476_pp0_iter3_reg <= b_exp_2_reg_1476_pp0_iter2_reg;
                b_exp_2_reg_1476_pp0_iter4_reg <= b_exp_2_reg_1476_pp0_iter3_reg;
                b_exp_2_reg_1476_pp0_iter5_reg <= b_exp_2_reg_1476_pp0_iter4_reg;
                b_exp_2_reg_1476_pp0_iter6_reg <= b_exp_2_reg_1476_pp0_iter5_reg;
                exp_Z1P_m_1_V_reg_1625 <= ret_V_11_fu_1109_p2(18 downto 1);
                exp_Z1_V_reg_1630 <= pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
                exp_Z1_V_reg_1630_pp0_iter13_reg <= exp_Z1_V_reg_1630;
                exp_Z1_V_reg_1630_pp0_iter14_reg <= exp_Z1_V_reg_1630_pp0_iter13_reg;
                log_sum_V_1_reg_1559 <= log_sum_V_1_fu_842_p2;
                log_sum_V_reg_1496_pp0_iter2_reg <= log_sum_V_reg_1496;
                log_sum_V_reg_1496_pp0_iter3_reg <= log_sum_V_reg_1496_pp0_iter2_reg;
                log_sum_V_reg_1496_pp0_iter4_reg <= log_sum_V_reg_1496_pp0_iter3_reg;
                log_sum_V_reg_1496_pp0_iter5_reg <= log_sum_V_reg_1496_pp0_iter4_reg;
                m_diff_hi_V_reg_1605 <= m_diff_fu_1064_p2(26 downto 18);
                m_diff_lo_V_reg_1610 <= m_diff_lo_V_fu_1079_p1;
                or_ln407_1_reg_1460_pp0_iter10_reg <= or_ln407_1_reg_1460_pp0_iter9_reg;
                or_ln407_1_reg_1460_pp0_iter11_reg <= or_ln407_1_reg_1460_pp0_iter10_reg;
                or_ln407_1_reg_1460_pp0_iter12_reg <= or_ln407_1_reg_1460_pp0_iter11_reg;
                or_ln407_1_reg_1460_pp0_iter13_reg <= or_ln407_1_reg_1460_pp0_iter12_reg;
                or_ln407_1_reg_1460_pp0_iter14_reg <= or_ln407_1_reg_1460_pp0_iter13_reg;
                or_ln407_1_reg_1460_pp0_iter2_reg <= or_ln407_1_reg_1460_pp0_iter1_reg;
                or_ln407_1_reg_1460_pp0_iter3_reg <= or_ln407_1_reg_1460_pp0_iter2_reg;
                or_ln407_1_reg_1460_pp0_iter4_reg <= or_ln407_1_reg_1460_pp0_iter3_reg;
                or_ln407_1_reg_1460_pp0_iter5_reg <= or_ln407_1_reg_1460_pp0_iter4_reg;
                or_ln407_1_reg_1460_pp0_iter6_reg <= or_ln407_1_reg_1460_pp0_iter5_reg;
                or_ln407_1_reg_1460_pp0_iter7_reg <= or_ln407_1_reg_1460_pp0_iter6_reg;
                or_ln407_1_reg_1460_pp0_iter8_reg <= or_ln407_1_reg_1460_pp0_iter7_reg;
                or_ln407_1_reg_1460_pp0_iter9_reg <= or_ln407_1_reg_1460_pp0_iter8_reg;
                or_ln407_2_reg_1465_pp0_iter10_reg <= or_ln407_2_reg_1465_pp0_iter9_reg;
                or_ln407_2_reg_1465_pp0_iter11_reg <= or_ln407_2_reg_1465_pp0_iter10_reg;
                or_ln407_2_reg_1465_pp0_iter12_reg <= or_ln407_2_reg_1465_pp0_iter11_reg;
                or_ln407_2_reg_1465_pp0_iter13_reg <= or_ln407_2_reg_1465_pp0_iter12_reg;
                or_ln407_2_reg_1465_pp0_iter14_reg <= or_ln407_2_reg_1465_pp0_iter13_reg;
                or_ln407_2_reg_1465_pp0_iter2_reg <= or_ln407_2_reg_1465_pp0_iter1_reg;
                or_ln407_2_reg_1465_pp0_iter3_reg <= or_ln407_2_reg_1465_pp0_iter2_reg;
                or_ln407_2_reg_1465_pp0_iter4_reg <= or_ln407_2_reg_1465_pp0_iter3_reg;
                or_ln407_2_reg_1465_pp0_iter5_reg <= or_ln407_2_reg_1465_pp0_iter4_reg;
                or_ln407_2_reg_1465_pp0_iter6_reg <= or_ln407_2_reg_1465_pp0_iter5_reg;
                or_ln407_2_reg_1465_pp0_iter7_reg <= or_ln407_2_reg_1465_pp0_iter6_reg;
                or_ln407_2_reg_1465_pp0_iter8_reg <= or_ln407_2_reg_1465_pp0_iter7_reg;
                or_ln407_2_reg_1465_pp0_iter9_reg <= or_ln407_2_reg_1465_pp0_iter8_reg;
                p_Result_17_reg_1579 <= ret_V_9_fu_948_p2(63 downto 63);
                p_Result_17_reg_1579_pp0_iter8_reg <= p_Result_17_reg_1579;
                r_exp_V_reg_1599 <= r_exp_V_fu_1036_p3;
                r_exp_V_reg_1599_pp0_iter11_reg <= r_exp_V_reg_1599;
                r_exp_V_reg_1599_pp0_iter12_reg <= r_exp_V_reg_1599_pp0_iter11_reg;
                r_exp_V_reg_1599_pp0_iter13_reg <= r_exp_V_reg_1599_pp0_iter12_reg;
                r_exp_V_reg_1599_pp0_iter14_reg <= r_exp_V_reg_1599_pp0_iter13_reg;
                ret_V_9_reg_1574 <= ret_V_9_fu_948_p2;
                ret_V_9_reg_1574_pp0_iter10_reg <= ret_V_9_reg_1574_pp0_iter9_reg;
                ret_V_9_reg_1574_pp0_iter11_reg <= ret_V_9_reg_1574_pp0_iter10_reg;
                ret_V_9_reg_1574_pp0_iter12_reg <= ret_V_9_reg_1574_pp0_iter11_reg;
                ret_V_9_reg_1574_pp0_iter13_reg <= ret_V_9_reg_1574_pp0_iter12_reg;
                ret_V_9_reg_1574_pp0_iter14_reg <= ret_V_9_reg_1574_pp0_iter13_reg;
                ret_V_9_reg_1574_pp0_iter8_reg <= ret_V_9_reg_1574;
                ret_V_9_reg_1574_pp0_iter9_reg <= ret_V_9_reg_1574_pp0_iter8_reg;
                tmp_14_reg_1523 <= ret_V_3_fu_620_p2(37 downto 3);
                tmp_15_reg_1549 <= ret_V_5_fu_712_p2(43 downto 6);
                tmp_16_reg_1564 <= ret_V_7_fu_817_p2(62 downto 24);
                tmp_17_reg_1569 <= ret_V_7_fu_817_p2(62 downto 40);
                trunc_ln1_reg_1589 <= ret_V_9_fu_948_p2(54 downto 28);
                trunc_ln1_reg_1589_pp0_iter8_reg <= trunc_ln1_reg_1589;
                trunc_ln1_reg_1589_pp0_iter9_reg <= trunc_ln1_reg_1589_pp0_iter8_reg;
                x_is_0_reg_1455_pp0_iter10_reg <= x_is_0_reg_1455_pp0_iter9_reg;
                x_is_0_reg_1455_pp0_iter11_reg <= x_is_0_reg_1455_pp0_iter10_reg;
                x_is_0_reg_1455_pp0_iter12_reg <= x_is_0_reg_1455_pp0_iter11_reg;
                x_is_0_reg_1455_pp0_iter13_reg <= x_is_0_reg_1455_pp0_iter12_reg;
                x_is_0_reg_1455_pp0_iter14_reg <= x_is_0_reg_1455_pp0_iter13_reg;
                x_is_0_reg_1455_pp0_iter2_reg <= x_is_0_reg_1455_pp0_iter1_reg;
                x_is_0_reg_1455_pp0_iter3_reg <= x_is_0_reg_1455_pp0_iter2_reg;
                x_is_0_reg_1455_pp0_iter4_reg <= x_is_0_reg_1455_pp0_iter3_reg;
                x_is_0_reg_1455_pp0_iter5_reg <= x_is_0_reg_1455_pp0_iter4_reg;
                x_is_0_reg_1455_pp0_iter6_reg <= x_is_0_reg_1455_pp0_iter5_reg;
                x_is_0_reg_1455_pp0_iter7_reg <= x_is_0_reg_1455_pp0_iter6_reg;
                x_is_0_reg_1455_pp0_iter8_reg <= x_is_0_reg_1455_pp0_iter7_reg;
                x_is_0_reg_1455_pp0_iter9_reg <= x_is_0_reg_1455_pp0_iter8_reg;
                x_is_NaN_reg_1450_pp0_iter10_reg <= x_is_NaN_reg_1450_pp0_iter9_reg;
                x_is_NaN_reg_1450_pp0_iter11_reg <= x_is_NaN_reg_1450_pp0_iter10_reg;
                x_is_NaN_reg_1450_pp0_iter12_reg <= x_is_NaN_reg_1450_pp0_iter11_reg;
                x_is_NaN_reg_1450_pp0_iter13_reg <= x_is_NaN_reg_1450_pp0_iter12_reg;
                x_is_NaN_reg_1450_pp0_iter14_reg <= x_is_NaN_reg_1450_pp0_iter13_reg;
                x_is_NaN_reg_1450_pp0_iter2_reg <= x_is_NaN_reg_1450_pp0_iter1_reg;
                x_is_NaN_reg_1450_pp0_iter3_reg <= x_is_NaN_reg_1450_pp0_iter2_reg;
                x_is_NaN_reg_1450_pp0_iter4_reg <= x_is_NaN_reg_1450_pp0_iter3_reg;
                x_is_NaN_reg_1450_pp0_iter5_reg <= x_is_NaN_reg_1450_pp0_iter4_reg;
                x_is_NaN_reg_1450_pp0_iter6_reg <= x_is_NaN_reg_1450_pp0_iter5_reg;
                x_is_NaN_reg_1450_pp0_iter7_reg <= x_is_NaN_reg_1450_pp0_iter6_reg;
                x_is_NaN_reg_1450_pp0_iter8_reg <= x_is_NaN_reg_1450_pp0_iter7_reg;
                x_is_NaN_reg_1450_pp0_iter9_reg <= x_is_NaN_reg_1450_pp0_iter8_reg;
                x_is_p1_reg_1444_pp0_iter10_reg <= x_is_p1_reg_1444_pp0_iter9_reg;
                x_is_p1_reg_1444_pp0_iter11_reg <= x_is_p1_reg_1444_pp0_iter10_reg;
                x_is_p1_reg_1444_pp0_iter12_reg <= x_is_p1_reg_1444_pp0_iter11_reg;
                x_is_p1_reg_1444_pp0_iter13_reg <= x_is_p1_reg_1444_pp0_iter12_reg;
                x_is_p1_reg_1444_pp0_iter14_reg <= x_is_p1_reg_1444_pp0_iter13_reg;
                x_is_p1_reg_1444_pp0_iter2_reg <= x_is_p1_reg_1444_pp0_iter1_reg;
                x_is_p1_reg_1444_pp0_iter3_reg <= x_is_p1_reg_1444_pp0_iter2_reg;
                x_is_p1_reg_1444_pp0_iter4_reg <= x_is_p1_reg_1444_pp0_iter3_reg;
                x_is_p1_reg_1444_pp0_iter5_reg <= x_is_p1_reg_1444_pp0_iter4_reg;
                x_is_p1_reg_1444_pp0_iter6_reg <= x_is_p1_reg_1444_pp0_iter5_reg;
                x_is_p1_reg_1444_pp0_iter7_reg <= x_is_p1_reg_1444_pp0_iter6_reg;
                x_is_p1_reg_1444_pp0_iter8_reg <= x_is_p1_reg_1444_pp0_iter7_reg;
                x_is_p1_reg_1444_pp0_iter9_reg <= x_is_p1_reg_1444_pp0_iter8_reg;
                z2_V_reg_1511 <= ret_V_3_fu_620_p2(43 downto 3);
                z3_V_reg_1533 <= ret_V_5_fu_712_p2(49 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce))) then
                b_exp_2_reg_1476 <= b_exp_2_fu_483_p3;
                b_exp_2_reg_1476_pp0_iter1_reg <= b_exp_2_reg_1476;
                log_sum_V_reg_1496 <= pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_float_0_5_64_array_V_q0;
                or_ln407_1_reg_1460 <= or_ln407_1_fu_447_p2;
                or_ln407_1_reg_1460_pp0_iter1_reg <= or_ln407_1_reg_1460;
                or_ln407_2_reg_1465 <= or_ln407_2_fu_453_p2;
                or_ln407_2_reg_1465_pp0_iter1_reg <= or_ln407_2_reg_1465;
                p_Repl2_s_reg_1438 <= p_Repl2_s_fu_373_p1;
                p_Result_s_reg_1471 <= p_Val2_s_fu_351_p1(22 downto 22);
                x_is_0_reg_1455 <= x_is_0_fu_435_p2;
                x_is_0_reg_1455_pp0_iter1_reg <= x_is_0_reg_1455;
                x_is_NaN_reg_1450 <= x_is_NaN_fu_429_p2;
                x_is_NaN_reg_1450_pp0_iter1_reg <= x_is_NaN_reg_1450;
                x_is_p1_reg_1444 <= x_is_p1_fu_411_p2;
                x_is_p1_reg_1444_pp0_iter1_reg <= x_is_p1_reg_1444;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Elog2_V_fu_871_p1 <= ap_const_lv52_B17217F7D1C(45 - 1 downto 0);
    Z2_ind_V_fu_1083_p4 <= m_diff_fu_1064_p2(17 downto 13);
    a_2_fu_732_p4 <= ret_V_5_fu_712_p2(49 downto 44);
    a_fu_535_p4 <= grp_fu_1406_p2(24 downto 21);
    add_ln1146_1_fu_1231_p2 <= std_logic_vector(unsigned(trunc_ln1146_1_fu_1217_p3) + unsigned(zext_ln1146_5_fu_1210_p1));
    add_ln1146_2_fu_1237_p2 <= std_logic_vector(unsigned(trunc_ln2_fu_1202_p3) + unsigned(zext_ln1146_4_fu_1195_p1));
    add_ln649_fu_1022_p2 <= std_logic_vector(unsigned(p_Result_cast_fu_997_p4) + unsigned(ap_const_lv10_1));
    add_ln657_1_fu_832_p2 <= std_logic_vector(unsigned(zext_ln163_2_fu_823_p1) + unsigned(zext_ln163_1_fu_761_p1));
    add_ln657_fu_827_p2 <= std_logic_vector(unsigned(log_sum_V_reg_1496_pp0_iter5_reg) + unsigned(zext_ln163_fu_757_p1));
    and_ln657_fu_1358_p2 <= (xor_ln407_fu_1352_p2 and icmp_ln844_fu_1273_p2);
    and_ln848_fu_1392_p2 <= (xor_ln657_fu_1386_p2 and icmp_ln848_fu_1294_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to14_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to14 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_start = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to14)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        ap_const_lv32_0 when (and_ln848_fu_1392_p2(0) = '1') else 
        select_ln407_4_fu_1372_p3;
    b_exp_1_fu_477_p2 <= std_logic_vector(unsigned(zext_ln340_fu_377_p1) + unsigned(ap_const_lv9_182));
    b_exp_2_fu_483_p3 <= 
        b_exp_1_fu_477_p2 when (p_Result_s_fu_459_p3(0) = '1') else 
        b_exp_fu_381_p2;
    b_exp_fu_381_p2 <= std_logic_vector(unsigned(zext_ln340_fu_377_p1) + unsigned(ap_const_lv9_181));
    b_frac_fu_506_p3 <= (ap_const_lv1_1 & p_Repl2_s_reg_1438);
    bitcast_ln350_fu_1348_p1 <= p_Result_14_fu_1338_p4;
    eZ_V_1_fu_768_p3 <= (ap_const_lv13_1000 & z3_V_reg_1533);
    eZ_V_fu_660_p3 <= (ap_const_lv8_80 & z2_V_reg_1511);
    exp_Z1_hi_V_fu_1125_p4 <= pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0(26 downto 9);

    grp_fu_1406_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_1406_ce <= ap_const_logic_1;
        else 
            grp_fu_1406_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1406_p0 <= grp_fu_1406_p00(6 - 1 downto 0);
    grp_fu_1406_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_q0),25));
    grp_fu_1406_p1 <= 
        zext_ln1287_1_fu_513_p1 when (p_Result_s_reg_1471(0) = '1') else 
        p_Result_16_fu_497_p4;

    grp_fu_1418_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_1418_ce <= ap_const_logic_1;
        else 
            grp_fu_1418_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1418_p1 <= ap_const_lv25_B8A(13 - 1 downto 0);

    grp_fu_1429_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_1429_ce <= ap_const_logic_1;
        else 
            grp_fu_1429_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1429_p0 <= grp_fu_1429_p00(18 - 1 downto 0);
    grp_fu_1429_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_hi_V_fu_1125_p4),36));
    grp_fu_1429_p1 <= grp_fu_1429_p10(18 - 1 downto 0);
    grp_fu_1429_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_V_reg_1625),36));
    icmp_ln18_fu_423_p2 <= "0" when (p_Repl2_s_fu_373_p1 = ap_const_lv23_0) else "1";
    icmp_ln369_fu_387_p2 <= "1" when (b_exp_fu_381_p2 = ap_const_lv9_0) else "0";
    icmp_ln376_fu_417_p2 <= "1" when (p_Repl2_3_fu_363_p4 = ap_const_lv8_FF) else "0";
    icmp_ln805_fu_1016_p2 <= "1" when (trunc_ln805_fu_1013_p1 = ap_const_lv15_0) else "0";
    icmp_ln828_fu_393_p2 <= "1" when (p_Repl2_s_fu_373_p1 = ap_const_lv23_0) else "0";
    icmp_ln844_fu_1273_p2 <= "1" when (signed(tmp_43_fu_1263_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln848_fu_1294_p2 <= "1" when (signed(r_exp_V_2_fu_1256_p3) < signed(ap_const_lv10_382)) else "0";
    index0_V_fu_467_p4 <= p_Val2_s_fu_351_p1(22 downto 17);
    lhs_V_11_fu_1184_p3 <= (ret_V_12_fu_1179_p2 & ap_const_lv17_0);
    lhs_V_1_fu_584_p3 <= (trunc_ln657_fu_544_p1 & ap_const_lv22_0);
    lhs_V_3_fu_667_p3 <= (tmp_14_reg_1523 & ap_const_lv14_0);
    lhs_V_5_fu_775_p3 <= (tmp_15_reg_1549 & ap_const_lv24_0);
    lhs_V_7_fu_927_p3 <= (Elog2_V_fu_871_p2 & ap_const_lv12_0);
    lhs_V_fu_896_p3 <= (tmp_16_reg_1564 & ap_const_lv24_0);
    log_sum_V_1_fu_842_p2 <= std_logic_vector(unsigned(add_ln657_fu_827_p2) + unsigned(zext_ln657_2_fu_838_p1));
    m_diff_fu_1064_p2 <= std_logic_vector(unsigned(trunc_ln1_reg_1589_pp0_iter9_reg) - unsigned(trunc_ln657_1_fu_1054_p4));
    m_diff_lo_V_fu_1079_p1 <= m_diff_fu_1064_p2(18 - 1 downto 0);
    m_fix_hi_V_fu_954_p4 <= ret_V_9_fu_948_p2(63 downto 51);
    or_ln407_1_fu_447_p2 <= (x_is_NaN_fu_429_p2 or x_is_1_fu_399_p2);
    or_ln407_2_fu_453_p2 <= (x_is_inf_fu_441_p2 or or_ln407_1_fu_447_p2);
    or_ln407_3_fu_1168_p2 <= (x_is_0_reg_1455_pp0_iter14_reg or or_ln407_2_reg_1465_pp0_iter14_reg);
    or_ln407_fu_1142_p2 <= (x_is_p1_reg_1444_pp0_iter14_reg or x_is_NaN_reg_1450_pp0_iter14_reg);
    or_ln657_fu_1380_p2 <= (or_ln407_3_fu_1168_p2 or icmp_ln844_fu_1273_p2);
    out_exp_fu_1332_p2 <= std_logic_vector(unsigned(trunc_ln170_fu_1328_p1) + unsigned(ap_const_lv8_7F));
    p_Repl2_3_fu_363_p4 <= p_Val2_s_fu_351_p1(30 downto 23);
    p_Repl2_s_fu_373_p1 <= p_Val2_s_fu_351_p1(23 - 1 downto 0);
    p_Result_10_fu_1006_p3 <= grp_fu_1418_p3(24 downto 24);
    p_Result_14_fu_1338_p4 <= ((ap_const_lv1_0 & out_exp_fu_1332_p2) & tmp_V_fu_1320_p3);
    p_Result_15_fu_355_p3 <= p_Val2_s_fu_351_p1(31 downto 31);
    p_Result_16_fu_497_p4 <= ((ap_const_lv1_1 & p_Repl2_s_reg_1438) & ap_const_lv1_0);
    p_Result_cast_fu_997_p4 <= grp_fu_1418_p3(24 downto 15);
    p_Result_s_fu_459_p3 <= p_Val2_s_fu_351_p1(22 downto 22);
    p_Val2_s_fu_351_p1 <= base_r;
    pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_float_0_5_64_array_V_address0 <= zext_ln492_fu_491_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_float_0_5_64_array_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_start = ap_const_logic_1))) then 
            pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_float_0_5_64_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_float_0_5_64_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_address0 <= zext_ln492_fu_491_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_start = ap_const_logic_1))) then 
            pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_address0 <= zext_ln492_5_fu_752_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_address0 <= zext_ln492_1_fu_656_p1(4 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_address0 <= zext_ln492_2_fu_728_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 <= zext_ln492_3_fu_1098_p1(9 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_27_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 <= zext_ln492_4_fu_1093_p1(5 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_3_fu_799_p0 <= r_V_3_fu_799_p00(6 - 1 downto 0);
    r_V_3_fu_799_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_2_reg_1544),50));
    r_V_3_fu_799_p1 <= r_V_3_fu_799_p10(44 - 1 downto 0);
    r_V_3_fu_799_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z3_V_reg_1533),50));
    r_V_7_fu_610_p0 <= r_V_7_fu_610_p00(4 - 1 downto 0);
    r_V_7_fu_610_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_fu_535_p4),43));
    r_V_7_fu_610_p1 <= r_V_7_fu_610_p10(39 - 1 downto 0);
    r_V_7_fu_610_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z1_V_fu_528_p3),43));
    r_V_8_fu_880_p0 <= zext_ln1072_4_fu_877_p1(23 - 1 downto 0);
    r_V_8_fu_880_p1 <= zext_ln1072_4_fu_877_p1(23 - 1 downto 0);
    r_V_fu_694_p0 <= r_V_fu_694_p00(6 - 1 downto 0);
    r_V_fu_694_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_1_reg_1517),47));
    r_V_fu_694_p1 <= r_V_fu_694_p10(41 - 1 downto 0);
    r_V_fu_694_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z2_V_reg_1511),47));
    r_exp_V_1_fu_1251_p2 <= std_logic_vector(signed(r_exp_V_reg_1599_pp0_iter14_reg) + signed(ap_const_lv10_3FF));
    r_exp_V_2_fu_1256_p3 <= 
        r_exp_V_reg_1599_pp0_iter14_reg when (tmp_42_fu_1243_p3(0) = '1') else 
        r_exp_V_1_fu_1251_p2;
    r_exp_V_fu_1036_p3 <= 
        select_ln804_fu_1028_p3 when (p_Result_10_fu_1006_p3(0) = '1') else 
        p_Result_cast_fu_997_p4;
    ret_V_11_fu_1109_p2 <= std_logic_vector(unsigned(zext_ln657_4_fu_1105_p1) + unsigned(zext_ln657_3_fu_1102_p1));
    ret_V_12_fu_1179_p2 <= std_logic_vector(unsigned(exp_Z1_V_reg_1630_pp0_iter14_reg) + unsigned(ap_const_lv27_4));
    ret_V_13_fu_1225_p2 <= std_logic_vector(unsigned(zext_ln1146_3_fu_1192_p1) + unsigned(lhs_V_11_fu_1184_p3));
    ret_V_14_fu_596_p2 <= std_logic_vector(unsigned(select_ln1287_fu_576_p3) + unsigned(zext_ln1146_fu_592_p1));
    ret_V_15_fu_682_p2 <= std_logic_vector(unsigned(zext_ln657_fu_678_p1) + unsigned(zext_ln1146_1_fu_674_p1));
    ret_V_16_fu_790_p2 <= std_logic_vector(unsigned(zext_ln657_1_fu_786_p1) + unsigned(zext_ln1146_2_fu_782_p1));
    ret_V_3_fu_620_p2 <= std_logic_vector(unsigned(ret_V_14_fu_596_p2) - unsigned(zext_ln1147_fu_616_p1));
    ret_V_5_fu_712_p2 <= std_logic_vector(unsigned(ret_V_15_fu_682_p2) - unsigned(zext_ln1147_1_fu_708_p1));
    ret_V_7_fu_817_p2 <= std_logic_vector(unsigned(ret_V_16_fu_790_p2) - unsigned(zext_ln1147_2_fu_813_p1));
    ret_V_8_fu_938_p2 <= std_logic_vector(signed(sext_ln1146_fu_935_p1) + signed(lhs_V_7_fu_927_p3));
    ret_V_9_fu_948_p2 <= std_logic_vector(signed(sext_ln1146_1_fu_944_p1) + signed(ret_V_8_fu_938_p2));
    ret_V_fu_911_p2 <= std_logic_vector(unsigned(zext_ln1147_3_fu_903_p1) - unsigned(zext_ln1147_4_fu_907_p1));
    rhs_V_2_fu_700_p3 <= (r_V_fu_694_p2 & ap_const_lv1_0);
    rhs_V_4_fu_805_p3 <= (r_V_3_fu_799_p2 & ap_const_lv6_0);
    rhs_V_5_fu_886_p4 <= r_V_8_fu_880_p2(45 downto 1);
    rhs_V_6_fu_986_p3 <= (p_Result_17_reg_1579_pp0_iter8_reg & ap_const_lv15_4000);
    select_ln1287_fu_576_p3 <= 
        tmp_13_fu_563_p4 when (tmp_39_fu_547_p3(0) = '1') else 
        zext_ln1287_fu_572_p1;
    select_ln407_1_fu_1153_p3 <= 
        select_ln407_fu_1146_p3 when (or_ln407_fu_1142_p2(0) = '1') else 
        ap_const_lv32_3F800000;
    select_ln407_2_fu_1161_p3 <= 
        select_ln407_1_fu_1153_p3 when (or_ln407_1_reg_1460_pp0_iter14_reg(0) = '1') else 
        ap_const_lv32_7F800000;
    select_ln407_3_fu_1172_p3 <= 
        select_ln407_2_fu_1161_p3 when (or_ln407_2_reg_1465_pp0_iter14_reg(0) = '1') else 
        ap_const_lv32_0;
    select_ln407_4_fu_1372_p3 <= 
        select_ln407_3_fu_1172_p3 when (or_ln407_3_fu_1168_p2(0) = '1') else 
        select_ln657_fu_1364_p3;
    select_ln407_fu_1146_p3 <= 
        ap_const_lv32_3F800000 when (x_is_p1_reg_1444_pp0_iter14_reg(0) = '1') else 
        ap_const_lv32_7FFFFFFF;
    select_ln657_fu_1364_p3 <= 
        select_ln658_fu_1286_p3 when (and_ln657_fu_1358_p2(0) = '1') else 
        bitcast_ln350_fu_1348_p1;
    select_ln658_fu_1286_p3 <= 
        ap_const_lv32_0 when (tmp_44_fu_1279_p3(0) = '1') else 
        ap_const_lv32_7F800000;
    select_ln804_fu_1028_p3 <= 
        p_Result_cast_fu_997_p4 when (icmp_ln805_fu_1016_p2(0) = '1') else 
        add_ln649_fu_1022_p2;
        sext_ln1146_1_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_917_p4),64));

        sext_ln1146_fu_935_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(log_sum_V_1_reg_1559),64));

    sf_fu_554_p4 <= ((ap_const_lv5_10 & grp_fu_1406_p2) & ap_const_lv13_0);
    tmp_13_fu_563_p4 <= ((ap_const_lv5_10 & grp_fu_1406_p2) & ap_const_lv14_0);
    tmp_39_fu_547_p3 <= grp_fu_1406_p2(24 downto 24);
    tmp_42_fu_1243_p3 <= ret_V_13_fu_1225_p2(43 downto 43);
    tmp_43_fu_1263_p4 <= r_exp_V_2_fu_1256_p3(9 downto 7);
    tmp_44_fu_1279_p3 <= ret_V_9_reg_1574_pp0_iter14_reg(63 downto 63);
    tmp_V_fu_1320_p3 <= 
        tmp_fu_1300_p4 when (tmp_42_fu_1243_p3(0) = '1') else 
        tmp_s_fu_1310_p4;
    tmp_fu_1300_p4 <= add_ln1146_2_fu_1237_p2(42 downto 20);
    tmp_s_fu_1310_p4 <= add_ln1146_1_fu_1231_p2(41 downto 19);
    trunc_ln1146_1_fu_1217_p3 <= (trunc_ln1146_2_fu_1213_p1 & ap_const_lv17_0);
    trunc_ln1146_2_fu_1213_p1 <= ret_V_12_fu_1179_p2(25 - 1 downto 0);
    trunc_ln1146_fu_1198_p1 <= ret_V_12_fu_1179_p2(26 - 1 downto 0);
    trunc_ln170_fu_1328_p1 <= r_exp_V_2_fu_1256_p3(8 - 1 downto 0);
    trunc_ln2_fu_1202_p3 <= (trunc_ln1146_fu_1198_p1 & ap_const_lv17_0);
    trunc_ln657_1_fu_1054_p4 <= mul_ln1069_fu_1048_p2(35 downto 9);
    trunc_ln657_fu_544_p1 <= grp_fu_1406_p2(21 - 1 downto 0);
    trunc_ln805_fu_1013_p1 <= grp_fu_1418_p3(15 - 1 downto 0);
    trunc_ln_fu_917_p4 <= ret_V_fu_911_p2(63 downto 24);
    x_is_0_fu_435_p2 <= "1" when (p_Repl2_3_fu_363_p4 = ap_const_lv8_0) else "0";
    x_is_1_fu_399_p2 <= (icmp_ln828_fu_393_p2 and icmp_ln369_fu_387_p2);
    x_is_NaN_fu_429_p2 <= (icmp_ln376_fu_417_p2 and icmp_ln18_fu_423_p2);
    x_is_inf_fu_441_p2 <= (icmp_ln828_fu_393_p2 and icmp_ln376_fu_417_p2);
    x_is_p1_fu_411_p2 <= (xor_ln964_fu_405_p2 and x_is_1_fu_399_p2);
    xor_ln407_fu_1352_p2 <= (or_ln407_3_fu_1168_p2 xor ap_const_lv1_1);
    xor_ln657_fu_1386_p2 <= (or_ln657_fu_1380_p2 xor ap_const_lv1_1);
    xor_ln964_fu_405_p2 <= (p_Result_15_fu_355_p3 xor ap_const_lv1_1);
    z1_V_fu_528_p3 <= (grp_fu_1406_p2 & ap_const_lv14_0);
    zext_ln1072_4_fu_877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_reg_1569),46));
    zext_ln1146_1_fu_674_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_3_fu_667_p3),50));
    zext_ln1146_2_fu_782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_5_fu_775_p3),63));
    zext_ln1146_3_fu_1192_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1429_p2),44));
    zext_ln1146_4_fu_1195_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1429_p2),43));
    zext_ln1146_5_fu_1210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1429_p2),42));
    zext_ln1146_fu_592_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_1_fu_584_p3),44));
    zext_ln1147_1_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_V_2_fu_700_p3),50));
    zext_ln1147_2_fu_813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_V_4_fu_805_p3),63));
    zext_ln1147_3_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_fu_896_p3),64));
    zext_ln1147_4_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_V_5_fu_886_p4),64));
    zext_ln1147_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_7_fu_610_p2),44));
    zext_ln1287_1_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_frac_fu_506_p3),25));
    zext_ln1287_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sf_fu_554_p4),44));
    zext_ln163_1_fu_761_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_q0),50));
    zext_ln163_2_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_q0),50));
    zext_ln163_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_65_9_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_q0),56));
    zext_ln340_fu_377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Repl2_3_fu_363_p4),9));
    zext_ln492_1_fu_656_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_reg_1506),64));
    zext_ln492_2_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_1_reg_1517),64));
    zext_ln492_3_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_V_reg_1605),64));
    zext_ln492_4_fu_1093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_ind_V_fu_1083_p4),64));
    zext_ln492_5_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_2_fu_732_p4),64));
    zext_ln492_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index0_V_fu_467_p4),64));
    zext_ln657_1_fu_786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_V_1_fu_768_p3),63));
    zext_ln657_2_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln657_1_fu_832_p2),56));
    zext_ln657_3_fu_1102_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_lo_V_reg_1610),19));
    zext_ln657_4_fu_1105_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_27_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0),19));
    zext_ln657_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_V_fu_660_p3),50));
end behav;
