-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\Prediction_and_cost_function_FCS_MPC_6Phase_PMSM\hdlsrc\Prediction_and_cost_function_FCS_MPC_6Phase_PMSM\Prediction_and_cost_FCS_MPC_6Phase_PMSM.vhd
-- Created: 2022-09-01 11:27:57
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Prediction_and_cost_FCS_MPC_6Phase_PMSM
-- Source Path: Prediction_and_cost_FCS_MPC_6Phase_PMSM
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Prediction_and_cost_FCS_MPC_6Phase_PMSM IS
  PORT( IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESETN                     :   IN    std_logic;  -- ufix1
        id_k_1                            :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        iq_k_1                            :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        ix_k_1                            :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        iy_k_1                            :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        omega_m_measured                  :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        d_voltage_per_switching_state     :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        q_voltage_per_switching_state     :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        x_volatge_per_switching_state     :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        y_phase_volatge_per_switching_state :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        valid_in                          :   IN    std_logic;  -- ufix1
        Reset_1                           :   IN    std_logic;  -- ufix1
        valid_in_ADC                      :   IN    std_logic;  -- ufix1
        AXI4_Lite_ACLK                    :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARESETN                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_AWADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_AWVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_WDATA                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_WSTRB                   :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Lite_WVALID                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_BREADY                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_ARVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_RREADY                  :   IN    std_logic;  -- ufix1
        J                                 :   OUT   std_logic_vector(19 DOWNTO 0);  -- ufix20
        done                              :   OUT   std_logic;  -- ufix1
        Index                             :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_AWREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_WREADY                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_BRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_BVALID                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_ARREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_RDATA                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_RRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_RVALID                  :   OUT   std_logic  -- ufix1
        );
END Prediction_and_cost_FCS_MPC_6Phase_PMSM;


ARCHITECTURE rtl OF Prediction_and_cost_FCS_MPC_6Phase_PMSM IS

  -- Component Declarations
  COMPONENT Prediction_and_cost_FCS_MPC_6Phase_PMSM_reset_sync
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset_in                        :   IN    std_logic;  -- ufix1
          reset_out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Prediction_and_cost_FCS_MPC_6Phase_PMSM_axi_lite
    PORT( reset                           :   IN    std_logic;
          AXI4_Lite_ACLK                  :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARESETN               :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_AWVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_WDATA                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_WSTRB                 :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_Lite_WVALID                :   IN    std_logic;  -- ufix1
          AXI4_Lite_BREADY                :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_ARVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_RREADY                :   IN    std_logic;  -- ufix1
          read_ip_timestamp               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          read_J_AXI                      :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
          AXI4_Lite_AWREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_WREADY                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_BRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_BVALID                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_ARREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_RDATA                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_RRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_RVALID                :   OUT   std_logic;  -- ufix1
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          write_Lq_AXI                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Ld_AXI                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_SampleTime_div_Ld_AXI     :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_SampleTime_div_Lq_AXI     :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_SampleTime_div_Lx_AXI     :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_pole_pairs_AXI            :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_SampleTime_div_Ly_AXI     :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Rs_AXI                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_psiPM_AXI                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_id_ref_AXI                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_iq_ref_AXI                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_ix_ref_AXI                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_iy_ref_AXI                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_use_AXI                   :   OUT   std_logic;  -- ufix1
          write_id_k_1_AXI                :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          write_iq_k_1_AXI                :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          write_ix_k_1_AXI                :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          write_iy_k_1_AXI                :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          write_omega_m_measured_AXI      :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          write_d_voltage_per_switching_state_AXI :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          write_q_voltage_per_switching_state_AXI :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          write_x_voltage_per_switching_state_AXI :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          write_y_volatge_per_switching_state_AXI :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          reset_internal                  :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  COMPONENT Prediction_and_cost_FCS_MPC_6Phase_PMSM_dut
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          dut_enable                      :   IN    std_logic;  -- ufix1
          Lq_AXI                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Ld_AXI                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          SampleTime_div_Ld_AXI           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          SampleTime_div_Lq_AXI           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          SampleTime_div_Lx_AXI           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          SampleTime_div_Ly_AXI           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          id_k_1                          :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          iq_k_1                          :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          ix_k_1                          :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          iy_k_1                          :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          Rs_AXI                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          omega_m_measured                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          pole_pairs_AXI                  :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          psiPM_AXI                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          id_ref_AXI                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          iq_ref_AXI                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          ix_ref_AXI                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          iy_ref_AXI                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          d_voltage_per_switching_state   :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          q_voltage_per_switching_state   :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          x_volatge_per_switching_state   :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          y_phase_volatge_per_switching_state :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          use_AXI                         :   IN    std_logic;  -- ufix1
          id_k_1_AXI                      :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          iq_k_1_AXI                      :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          ix_k_1_AXI                      :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          iy_k_1_AXI                      :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          omega_m_measured_AXI            :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          d_voltage_per_switching_state_AXI :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          q_voltage_per_switching_state_AXI :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          x_voltage_per_switching_state_AXI :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          y_volatge_per_switching_state_AXI :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          valid_in                        :   IN    std_logic;  -- ufix1
          Reset_1                         :   IN    std_logic;  -- ufix1
          valid_in_ADC                    :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          J                               :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
          J_AXI                           :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
          done                            :   OUT   std_logic;  -- ufix1
          Index                           :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Prediction_and_cost_FCS_MPC_6Phase_PMSM_reset_sync
    USE ENTITY work.Prediction_and_cost_FCS_MPC_6Phase_PMSM_reset_sync(rtl);

  FOR ALL : Prediction_and_cost_FCS_MPC_6Phase_PMSM_axi_lite
    USE ENTITY work.Prediction_and_cost_FCS_MPC_6Phase_PMSM_axi_lite(rtl);

  FOR ALL : Prediction_and_cost_FCS_MPC_6Phase_PMSM_dut
    USE ENTITY work.Prediction_and_cost_FCS_MPC_6Phase_PMSM_dut(rtl);

  -- Signals
  SIGNAL reset                            : std_logic;
  SIGNAL ip_timestamp                     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL reset_cm                         : std_logic;  -- ufix1
  SIGNAL id_k_1_unsigned                  : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL id_k_1_sig                       : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL iq_k_1_unsigned                  : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL iq_k_1_sig                       : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL ix_k_1_unsigned                  : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL ix_k_1_sig                       : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL iy_k_1_unsigned                  : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL iy_k_1_sig                       : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL omega_m_measured_unsigned        : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL omega_m_measured_sig             : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL d_voltage_per_switching_state_unsigned : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL d_voltage_per_switching_state_sig : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL q_voltage_per_switching_state_unsigned : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL q_voltage_per_switching_state_sig : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL x_volatge_per_switching_state_unsigned : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL x_volatge_per_switching_state_sig : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL y_phase_volatge_per_switching_state_unsigned : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL y_phase_volatge_per_switching_state_sig : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL reset_internal                   : std_logic;  -- ufix1
  SIGNAL reset_before_sync                : std_logic;  -- ufix1
  SIGNAL J_AXI_sig                        : std_logic_vector(19 DOWNTO 0);  -- ufix20
  SIGNAL AXI4_Lite_BRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_Lite_RDATA_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_RRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL write_axi_enable                 : std_logic;  -- ufix1
  SIGNAL write_Lq_AXI                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Ld_AXI                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_SampleTime_div_Ld_AXI      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_SampleTime_div_Lq_AXI      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_SampleTime_div_Lx_AXI      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_pole_pairs_AXI             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_SampleTime_div_Ly_AXI      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Rs_AXI                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_psiPM_AXI                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_id_ref_AXI                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_iq_ref_AXI                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_ix_ref_AXI                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_iy_ref_AXI                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_use_AXI                    : std_logic;  -- ufix1
  SIGNAL write_id_k_1_AXI                 : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_iq_k_1_AXI                 : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_ix_k_1_AXI                 : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_iy_k_1_AXI                 : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_omega_m_measured_AXI       : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL write_d_voltage_per_switching_state_AXI : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL write_q_voltage_per_switching_state_AXI : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL write_x_voltage_per_switching_state_AXI : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL write_y_volatge_per_switching_state_AXI : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL J_sig                            : std_logic_vector(19 DOWNTO 0);  -- ufix20
  SIGNAL done_sig                         : std_logic;  -- ufix1
  SIGNAL Index_sig                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL J_sig_signed                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL J_tmp                            : unsigned(19 DOWNTO 0);  -- ufix20
  SIGNAL Index_sig_signed                 : signed(31 DOWNTO 0);  -- sfix32
  SIGNAL Index_tmp                        : unsigned(31 DOWNTO 0);  -- ufix32

BEGIN
  u_Prediction_and_cost_FCS_MPC_6Phase_PMSM_reset_sync_inst : Prediction_and_cost_FCS_MPC_6Phase_PMSM_reset_sync
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset_in => reset_before_sync,  -- ufix1
              reset_out => reset
              );

  u_Prediction_and_cost_FCS_MPC_6Phase_PMSM_axi_lite_inst : Prediction_and_cost_FCS_MPC_6Phase_PMSM_axi_lite
    PORT MAP( reset => reset,
              AXI4_Lite_ACLK => AXI4_Lite_ACLK,  -- ufix1
              AXI4_Lite_ARESETN => AXI4_Lite_ARESETN,  -- ufix1
              AXI4_Lite_AWADDR => AXI4_Lite_AWADDR,  -- ufix16
              AXI4_Lite_AWVALID => AXI4_Lite_AWVALID,  -- ufix1
              AXI4_Lite_WDATA => AXI4_Lite_WDATA,  -- ufix32
              AXI4_Lite_WSTRB => AXI4_Lite_WSTRB,  -- ufix4
              AXI4_Lite_WVALID => AXI4_Lite_WVALID,  -- ufix1
              AXI4_Lite_BREADY => AXI4_Lite_BREADY,  -- ufix1
              AXI4_Lite_ARADDR => AXI4_Lite_ARADDR,  -- ufix16
              AXI4_Lite_ARVALID => AXI4_Lite_ARVALID,  -- ufix1
              AXI4_Lite_RREADY => AXI4_Lite_RREADY,  -- ufix1
              read_ip_timestamp => std_logic_vector(ip_timestamp),  -- ufix32
              read_J_AXI => J_AXI_sig,  -- sfix20_En11
              AXI4_Lite_AWREADY => AXI4_Lite_AWREADY,  -- ufix1
              AXI4_Lite_WREADY => AXI4_Lite_WREADY,  -- ufix1
              AXI4_Lite_BRESP => AXI4_Lite_BRESP_tmp,  -- ufix2
              AXI4_Lite_BVALID => AXI4_Lite_BVALID,  -- ufix1
              AXI4_Lite_ARREADY => AXI4_Lite_ARREADY,  -- ufix1
              AXI4_Lite_RDATA => AXI4_Lite_RDATA_tmp,  -- ufix32
              AXI4_Lite_RRESP => AXI4_Lite_RRESP_tmp,  -- ufix2
              AXI4_Lite_RVALID => AXI4_Lite_RVALID,  -- ufix1
              write_axi_enable => write_axi_enable,  -- ufix1
              write_Lq_AXI => write_Lq_AXI,  -- ufix32
              write_Ld_AXI => write_Ld_AXI,  -- ufix32
              write_SampleTime_div_Ld_AXI => write_SampleTime_div_Ld_AXI,  -- ufix32
              write_SampleTime_div_Lq_AXI => write_SampleTime_div_Lq_AXI,  -- ufix32
              write_SampleTime_div_Lx_AXI => write_SampleTime_div_Lx_AXI,  -- ufix32
              write_pole_pairs_AXI => write_pole_pairs_AXI,  -- ufix32
              write_SampleTime_div_Ly_AXI => write_SampleTime_div_Ly_AXI,  -- ufix32
              write_Rs_AXI => write_Rs_AXI,  -- ufix32
              write_psiPM_AXI => write_psiPM_AXI,  -- ufix32
              write_id_ref_AXI => write_id_ref_AXI,  -- ufix32
              write_iq_ref_AXI => write_iq_ref_AXI,  -- ufix32
              write_ix_ref_AXI => write_ix_ref_AXI,  -- ufix32
              write_iy_ref_AXI => write_iy_ref_AXI,  -- ufix32
              write_use_AXI => write_use_AXI,  -- ufix1
              write_id_k_1_AXI => write_id_k_1_AXI,  -- sfix18_En11
              write_iq_k_1_AXI => write_iq_k_1_AXI,  -- sfix18_En11
              write_ix_k_1_AXI => write_ix_k_1_AXI,  -- sfix18_En11
              write_iy_k_1_AXI => write_iy_k_1_AXI,  -- sfix18_En11
              write_omega_m_measured_AXI => write_omega_m_measured_AXI,  -- sfix24_En11
              write_d_voltage_per_switching_state_AXI => write_d_voltage_per_switching_state_AXI,  -- sfix24_En11
              write_q_voltage_per_switching_state_AXI => write_q_voltage_per_switching_state_AXI,  -- sfix24_En11
              write_x_voltage_per_switching_state_AXI => write_x_voltage_per_switching_state_AXI,  -- sfix24_En11
              write_y_volatge_per_switching_state_AXI => write_y_volatge_per_switching_state_AXI,  -- sfix24_En11
              reset_internal => reset_internal  -- ufix1
              );

  u_Prediction_and_cost_FCS_MPC_6Phase_PMSM_dut_inst : Prediction_and_cost_FCS_MPC_6Phase_PMSM_dut
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset => reset,
              dut_enable => write_axi_enable,  -- ufix1
              Lq_AXI => write_Lq_AXI,  -- ufix32
              Ld_AXI => write_Ld_AXI,  -- ufix32
              SampleTime_div_Ld_AXI => write_SampleTime_div_Ld_AXI,  -- ufix32
              SampleTime_div_Lq_AXI => write_SampleTime_div_Lq_AXI,  -- ufix32
              SampleTime_div_Lx_AXI => write_SampleTime_div_Lx_AXI,  -- ufix32
              SampleTime_div_Ly_AXI => write_SampleTime_div_Ly_AXI,  -- ufix32
              id_k_1 => std_logic_vector(id_k_1_sig),  -- sfix18_En11
              iq_k_1 => std_logic_vector(iq_k_1_sig),  -- sfix18_En11
              ix_k_1 => std_logic_vector(ix_k_1_sig),  -- sfix18_En11
              iy_k_1 => std_logic_vector(iy_k_1_sig),  -- sfix18_En11
              Rs_AXI => write_Rs_AXI,  -- ufix32
              omega_m_measured => std_logic_vector(omega_m_measured_sig),  -- sfix24_En11
              pole_pairs_AXI => write_pole_pairs_AXI,  -- ufix32
              psiPM_AXI => write_psiPM_AXI,  -- ufix32
              id_ref_AXI => write_id_ref_AXI,  -- ufix32
              iq_ref_AXI => write_iq_ref_AXI,  -- ufix32
              ix_ref_AXI => write_ix_ref_AXI,  -- ufix32
              iy_ref_AXI => write_iy_ref_AXI,  -- ufix32
              d_voltage_per_switching_state => std_logic_vector(d_voltage_per_switching_state_sig),  -- sfix24_En11
              q_voltage_per_switching_state => std_logic_vector(q_voltage_per_switching_state_sig),  -- sfix24_En11
              x_volatge_per_switching_state => std_logic_vector(x_volatge_per_switching_state_sig),  -- sfix24_En11
              y_phase_volatge_per_switching_state => std_logic_vector(y_phase_volatge_per_switching_state_sig),  -- sfix24_En11
              use_AXI => write_use_AXI,  -- ufix1
              id_k_1_AXI => write_id_k_1_AXI,  -- sfix18_En11
              iq_k_1_AXI => write_iq_k_1_AXI,  -- sfix18_En11
              ix_k_1_AXI => write_ix_k_1_AXI,  -- sfix18_En11
              iy_k_1_AXI => write_iy_k_1_AXI,  -- sfix18_En11
              omega_m_measured_AXI => write_omega_m_measured_AXI,  -- sfix24_En11
              d_voltage_per_switching_state_AXI => write_d_voltage_per_switching_state_AXI,  -- sfix24_En11
              q_voltage_per_switching_state_AXI => write_q_voltage_per_switching_state_AXI,  -- sfix24_En11
              x_voltage_per_switching_state_AXI => write_x_voltage_per_switching_state_AXI,  -- sfix24_En11
              y_volatge_per_switching_state_AXI => write_y_volatge_per_switching_state_AXI,  -- sfix24_En11
              valid_in => valid_in,  -- ufix1
              Reset_1 => Reset_1,  -- ufix1
              valid_in_ADC => valid_in_ADC,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              J => J_sig,  -- sfix20_En11
              J_AXI => J_AXI_sig,  -- sfix20_En11
              done => done_sig,  -- ufix1
              Index => Index_sig  -- sfix32
              );

  ip_timestamp <= unsigned'(X"83AAD5B7");

  reset_cm <=  NOT IPCORE_RESETN;

  id_k_1_unsigned <= unsigned(id_k_1);

  id_k_1_sig <= signed(id_k_1_unsigned);

  iq_k_1_unsigned <= unsigned(iq_k_1);

  iq_k_1_sig <= signed(iq_k_1_unsigned);

  ix_k_1_unsigned <= unsigned(ix_k_1);

  ix_k_1_sig <= signed(ix_k_1_unsigned);

  iy_k_1_unsigned <= unsigned(iy_k_1);

  iy_k_1_sig <= signed(iy_k_1_unsigned);

  omega_m_measured_unsigned <= unsigned(omega_m_measured);

  omega_m_measured_sig <= signed(omega_m_measured_unsigned);

  d_voltage_per_switching_state_unsigned <= unsigned(d_voltage_per_switching_state);

  d_voltage_per_switching_state_sig <= signed(d_voltage_per_switching_state_unsigned);

  q_voltage_per_switching_state_unsigned <= unsigned(q_voltage_per_switching_state);

  q_voltage_per_switching_state_sig <= signed(q_voltage_per_switching_state_unsigned);

  x_volatge_per_switching_state_unsigned <= unsigned(x_volatge_per_switching_state);

  x_volatge_per_switching_state_sig <= signed(x_volatge_per_switching_state_unsigned);

  y_phase_volatge_per_switching_state_unsigned <= unsigned(y_phase_volatge_per_switching_state);

  y_phase_volatge_per_switching_state_sig <= signed(y_phase_volatge_per_switching_state_unsigned);

  reset_before_sync <= reset_cm OR reset_internal;

  J_sig_signed <= signed(J_sig);

  J_tmp <= unsigned(J_sig_signed);

  J <= std_logic_vector(J_tmp);

  done <= done_sig;

  Index_sig_signed <= signed(Index_sig);

  Index_tmp <= unsigned(Index_sig_signed);

  Index <= std_logic_vector(Index_tmp);

  AXI4_Lite_BRESP <= AXI4_Lite_BRESP_tmp;

  AXI4_Lite_RDATA <= AXI4_Lite_RDATA_tmp;

  AXI4_Lite_RRESP <= AXI4_Lite_RRESP_tmp;

END rtl;

