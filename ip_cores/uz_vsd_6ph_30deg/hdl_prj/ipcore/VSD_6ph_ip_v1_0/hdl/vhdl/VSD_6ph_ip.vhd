-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\VSD_6ph_30deg_HDL\VSD_6ph_ip.vhd
-- Created: 2022-08-08 09:36:15
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: VSD_6ph_ip
-- Source Path: VSD_6ph_ip
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY VSD_6ph_ip IS
  PORT( IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESETN                     :   IN    std_logic;  -- ufix1
        a1                                :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        b1                                :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        c1                                :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        a2                                :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        b2                                :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        c2                                :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        pu_conv_valid                     :   IN    std_logic;  -- ufix1
        AXI4_Lite_ACLK                    :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARESETN                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_AWADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_AWVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_WDATA                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_WSTRB                   :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Lite_WVALID                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_BREADY                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_ARVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_RREADY                  :   IN    std_logic;  -- ufix1
        alpha                             :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        beta                              :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        x1                                :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        y1                                :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        z1                                :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        z2                                :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        vsd_done                          :   OUT   std_logic;  -- ufix1
        AXI4_Lite_AWREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_WREADY                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_BRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_BVALID                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_ARREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_RDATA                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_RRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_RVALID                  :   OUT   std_logic  -- ufix1
        );
END VSD_6ph_ip;


ARCHITECTURE rtl OF VSD_6ph_ip IS

  -- Component Declarations
  COMPONENT VSD_6ph_ip_reset_sync
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset_in                        :   IN    std_logic;  -- ufix1
          reset_out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT VSD_6ph_ip_axi_lite
    PORT( reset                           :   IN    std_logic;
          AXI4_Lite_ACLK                  :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARESETN               :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_AWVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_WDATA                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_WSTRB                 :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_Lite_WVALID                :   IN    std_logic;  -- ufix1
          AXI4_Lite_BREADY                :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_ARVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_RREADY                :   IN    std_logic;  -- ufix1
          read_ip_timestamp               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          read_alpha_AXI                  :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          read_beta_AXI                   :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          read_y_AXI                      :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          read_x_AXI                      :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          read_z1_AXI                     :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          read_z2_AXI                     :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          AXI4_Lite_AWREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_WREADY                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_BRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_BVALID                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_ARREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_RDATA                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_RRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_RVALID                :   OUT   std_logic;  -- ufix1
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          reset_internal                  :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  COMPONENT VSD_6ph_ip_dut
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          dut_enable                      :   IN    std_logic;  -- ufix1
          a1                              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          b1                              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          c1                              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          a2                              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          b2                              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          c2                              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          pu_conv_valid                   :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          alpha                           :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          beta                            :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          x1                              :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          y1                              :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          z1                              :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          z2                              :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          vsd_done                        :   OUT   std_logic;  -- ufix1
          alpha_AXI                       :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          beta_AXI                        :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          x_AXI                           :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          y_AXI                           :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          z1_AXI                          :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          z2_AXI                          :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En11
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : VSD_6ph_ip_reset_sync
    USE ENTITY work.VSD_6ph_ip_reset_sync(rtl);

  FOR ALL : VSD_6ph_ip_axi_lite
    USE ENTITY work.VSD_6ph_ip_axi_lite(rtl);

  FOR ALL : VSD_6ph_ip_dut
    USE ENTITY work.VSD_6ph_ip_dut(rtl);

  -- Signals
  SIGNAL reset                            : std_logic;
  SIGNAL ip_timestamp                     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL reset_cm                         : std_logic;  -- ufix1
  SIGNAL a1_unsigned                      : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL a1_sig                           : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL b1_unsigned                      : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL b1_sig                           : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL c1_unsigned                      : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL c1_sig                           : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL a2_unsigned                      : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL a2_sig                           : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL b2_unsigned                      : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL b2_sig                           : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL c2_unsigned                      : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL c2_sig                           : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL reset_internal                   : std_logic;  -- ufix1
  SIGNAL reset_before_sync                : std_logic;  -- ufix1
  SIGNAL alpha_AXI_sig                    : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL beta_AXI_sig                     : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL y_AXI_sig                        : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL x_AXI_sig                        : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL z1_AXI_sig                       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL z2_AXI_sig                       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL AXI4_Lite_BRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_Lite_RDATA_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_RRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL write_axi_enable                 : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL alpha_sig                        : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL beta_sig                         : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL x1_sig                           : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL y1_sig                           : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL z1_sig                           : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL z2_sig                           : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL vsd_done_sig                     : std_logic;  -- ufix1
  SIGNAL alpha_sig_signed                 : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL alpha_tmp                        : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL beta_sig_signed                  : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL beta_tmp                         : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL x1_sig_signed                    : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL x1_tmp                           : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL y1_sig_signed                    : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL y1_tmp                           : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL z1_sig_signed                    : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL z1_tmp                           : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL z2_sig_signed                    : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL z2_tmp                           : unsigned(17 DOWNTO 0);  -- ufix18

BEGIN
  u_VSD_6ph_ip_reset_sync_inst : VSD_6ph_ip_reset_sync
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset_in => reset_before_sync,  -- ufix1
              reset_out => reset
              );

  u_VSD_6ph_ip_axi_lite_inst : VSD_6ph_ip_axi_lite
    PORT MAP( reset => reset,
              AXI4_Lite_ACLK => AXI4_Lite_ACLK,  -- ufix1
              AXI4_Lite_ARESETN => AXI4_Lite_ARESETN,  -- ufix1
              AXI4_Lite_AWADDR => AXI4_Lite_AWADDR,  -- ufix16
              AXI4_Lite_AWVALID => AXI4_Lite_AWVALID,  -- ufix1
              AXI4_Lite_WDATA => AXI4_Lite_WDATA,  -- ufix32
              AXI4_Lite_WSTRB => AXI4_Lite_WSTRB,  -- ufix4
              AXI4_Lite_WVALID => AXI4_Lite_WVALID,  -- ufix1
              AXI4_Lite_BREADY => AXI4_Lite_BREADY,  -- ufix1
              AXI4_Lite_ARADDR => AXI4_Lite_ARADDR,  -- ufix16
              AXI4_Lite_ARVALID => AXI4_Lite_ARVALID,  -- ufix1
              AXI4_Lite_RREADY => AXI4_Lite_RREADY,  -- ufix1
              read_ip_timestamp => std_logic_vector(ip_timestamp),  -- ufix32
              read_alpha_AXI => alpha_AXI_sig,  -- sfix18_En11
              read_beta_AXI => beta_AXI_sig,  -- sfix18_En11
              read_y_AXI => y_AXI_sig,  -- sfix18_En11
              read_x_AXI => x_AXI_sig,  -- sfix18_En11
              read_z1_AXI => z1_AXI_sig,  -- sfix18_En11
              read_z2_AXI => z2_AXI_sig,  -- sfix18_En11
              AXI4_Lite_AWREADY => AXI4_Lite_AWREADY,  -- ufix1
              AXI4_Lite_WREADY => AXI4_Lite_WREADY,  -- ufix1
              AXI4_Lite_BRESP => AXI4_Lite_BRESP_tmp,  -- ufix2
              AXI4_Lite_BVALID => AXI4_Lite_BVALID,  -- ufix1
              AXI4_Lite_ARREADY => AXI4_Lite_ARREADY,  -- ufix1
              AXI4_Lite_RDATA => AXI4_Lite_RDATA_tmp,  -- ufix32
              AXI4_Lite_RRESP => AXI4_Lite_RRESP_tmp,  -- ufix2
              AXI4_Lite_RVALID => AXI4_Lite_RVALID,  -- ufix1
              write_axi_enable => write_axi_enable,  -- ufix1
              reset_internal => reset_internal  -- ufix1
              );

  u_VSD_6ph_ip_dut_inst : VSD_6ph_ip_dut
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset => reset,
              dut_enable => write_axi_enable,  -- ufix1
              a1 => std_logic_vector(a1_sig),  -- sfix18_En15
              b1 => std_logic_vector(b1_sig),  -- sfix18_En15
              c1 => std_logic_vector(c1_sig),  -- sfix18_En15
              a2 => std_logic_vector(a2_sig),  -- sfix18_En15
              b2 => std_logic_vector(b2_sig),  -- sfix18_En15
              c2 => std_logic_vector(c2_sig),  -- sfix18_En15
              pu_conv_valid => pu_conv_valid,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              alpha => alpha_sig,  -- sfix18_En11
              beta => beta_sig,  -- sfix18_En11
              x1 => x1_sig,  -- sfix18_En11
              y1 => y1_sig,  -- sfix18_En11
              z1 => z1_sig,  -- sfix18_En11
              z2 => z2_sig,  -- sfix18_En11
              vsd_done => vsd_done_sig,  -- ufix1
              alpha_AXI => alpha_AXI_sig,  -- sfix18_En11
              beta_AXI => beta_AXI_sig,  -- sfix18_En11
              x_AXI => x_AXI_sig,  -- sfix18_En11
              y_AXI => y_AXI_sig,  -- sfix18_En11
              z1_AXI => z1_AXI_sig,  -- sfix18_En11
              z2_AXI => z2_AXI_sig  -- sfix18_En11
              );

  ip_timestamp <= unsigned'(X"839CA428");

  reset_cm <=  NOT IPCORE_RESETN;

  a1_unsigned <= unsigned(a1);

  a1_sig <= signed(a1_unsigned);

  b1_unsigned <= unsigned(b1);

  b1_sig <= signed(b1_unsigned);

  c1_unsigned <= unsigned(c1);

  c1_sig <= signed(c1_unsigned);

  a2_unsigned <= unsigned(a2);

  a2_sig <= signed(a2_unsigned);

  b2_unsigned <= unsigned(b2);

  b2_sig <= signed(b2_unsigned);

  c2_unsigned <= unsigned(c2);

  c2_sig <= signed(c2_unsigned);

  reset_before_sync <= reset_cm OR reset_internal;

  alpha_sig_signed <= signed(alpha_sig);

  alpha_tmp <= unsigned(alpha_sig_signed);

  alpha <= std_logic_vector(alpha_tmp);

  beta_sig_signed <= signed(beta_sig);

  beta_tmp <= unsigned(beta_sig_signed);

  beta <= std_logic_vector(beta_tmp);

  x1_sig_signed <= signed(x1_sig);

  x1_tmp <= unsigned(x1_sig_signed);

  x1 <= std_logic_vector(x1_tmp);

  y1_sig_signed <= signed(y1_sig);

  y1_tmp <= unsigned(y1_sig_signed);

  y1 <= std_logic_vector(y1_tmp);

  z1_sig_signed <= signed(z1_sig);

  z1_tmp <= unsigned(z1_sig_signed);

  z1 <= std_logic_vector(z1_tmp);

  z2_sig_signed <= signed(z2_sig);

  z2_tmp <= unsigned(z2_sig_signed);

  z2 <= std_logic_vector(z2_tmp);

  vsd_done <= vsd_done_sig;

  AXI4_Lite_BRESP <= AXI4_Lite_BRESP_tmp;

  AXI4_Lite_RDATA <= AXI4_Lite_RDATA_tmp;

  AXI4_Lite_RRESP <= AXI4_Lite_RRESP_tmp;

END rtl;

