-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity BGD_accumulate_float_8u_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_values_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    p_values_empty_n : IN STD_LOGIC;
    p_values_read : OUT STD_LOGIC;
    p_accumulator_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    p_accumulator_ce0 : OUT STD_LOGIC;
    p_accumulator_we0 : OUT STD_LOGIC;
    p_accumulator_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_accumulator_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_accumulator_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    p_accumulator_ce1 : OUT STD_LOGIC;
    p_accumulator_we1 : OUT STD_LOGIC;
    p_accumulator_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_accumulator_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_weightGradientAvg_offset_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    p_weightGradientAvg_offset_empty_n : IN STD_LOGIC;
    p_weightGradientAvg_offset_read : OUT STD_LOGIC;
    mul_ln559_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    mul_ln559_loc_empty_n : IN STD_LOGIC;
    mul_ln559_loc_read : OUT STD_LOGIC;
    p_initZero_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    p_initZero_empty_n : IN STD_LOGIC;
    p_initZero_read : OUT STD_LOGIC );
end;


architecture behav of BGD_accumulate_float_8u_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv29_1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv16_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000011";
    constant ap_const_lv16_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_const_lv16_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000101";
    constant ap_const_lv16_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000110";
    constant ap_const_lv16_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_values_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln409_reg_563 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_weightGradientAvg_offset_blk_n : STD_LOGIC;
    signal mul_ln559_loc_blk_n : STD_LOGIC;
    signal p_initZero_blk_n : STD_LOGIC;
    signal i_reg_205 : STD_LOGIC_VECTOR (28 downto 0);
    signal reg_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal p_initZero_read_reg_548 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal icmp_ln409_reg_563_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_216_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_224 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state25_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal icmp_ln409_reg_563_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_230 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal reg_235 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal p_weightGradientAvg_offset_read_reg_536 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal trunc_ln_reg_558 : STD_LOGIC_VECTOR (28 downto 0);
    signal icmp_ln409_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln409_fu_271_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln409_reg_567 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_s_fu_281_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_reg_572 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_reg_572_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_accumulator_addr_reg_583 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_fu_299_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_reg_588 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_i_i_reg_593 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_i_i_reg_593_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_60_i_i_reg_598 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_60_i_i_reg_598_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_61_i_i_reg_603 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_61_i_i_reg_603_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_62_i_i_reg_608 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_62_i_i_reg_608_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_63_i_i_reg_613 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_63_i_i_reg_613_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_64_i_i_reg_618 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_64_i_i_reg_618_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_65_i_i_reg_623 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_65_i_i_reg_623_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln101_fu_373_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_240_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_addr_15_reg_638 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_accumulator_addr_15_reg_638_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_accumulator_addr_16_reg_644 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_accumulator_addr_16_reg_644_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_accumulator_addr_17_reg_650 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_accumulator_addr_17_reg_650_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_accumulator_load_17_reg_656 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_addr_18_reg_661 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_accumulator_addr_18_reg_661_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_accumulator_addr_19_reg_667 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_accumulator_addr_19_reg_667_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln101_58_fu_452_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_248_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_load_19_reg_683 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_addr_20_reg_688 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_accumulator_addr_20_reg_688_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_accumulator_addr_21_reg_694 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_accumulator_addr_21_reg_694_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln101_59_fu_486_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln403_10_fu_490_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln403_10_reg_709 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln403_11_reg_714 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln403_12_fu_496_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln403_12_reg_719 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln403_13_fu_502_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln403_13_reg_724 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln403_14_fu_509_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln403_14_reg_729 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln101_60_fu_516_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln101_61_fu_520_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln101_62_fu_524_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln101_63_fu_528_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln101_64_fu_532_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_3_i_i_reg_759 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_4_i_i_reg_764 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_5_i_i_reg_769 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_phi_mux_i_phi_fu_209_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln416_fu_294_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln416_15_fu_387_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln416_16_fu_402_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln416_17_fu_417_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln416_18_fu_432_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln416_19_fu_447_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln416_20_fu_466_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln416_21_fu_481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal grp_fu_216_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_216_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_277_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln416_fu_289_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln416_fu_377_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln416_8_fu_382_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln416_13_fu_392_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln416_9_fu_397_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln416_14_fu_407_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln416_10_fu_412_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln416_15_fu_422_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln416_11_fu_427_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln416_16_fu_437_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln416_12_fu_442_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln416_17_fu_456_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln416_13_fu_461_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln416_18_fu_471_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln416_14_fu_476_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_216_ce : STD_LOGIC;
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op46_load_state2 : BOOLEAN;
    signal ap_enable_operation_46 : BOOLEAN;
    signal ap_enable_state2_pp0_iter0_stage0 : BOOLEAN;
    signal ap_predicate_op56_load_state3 : BOOLEAN;
    signal ap_enable_operation_56 : BOOLEAN;
    signal ap_enable_state3_pp0_iter0_stage1 : BOOLEAN;
    signal ap_enable_operation_64 : BOOLEAN;
    signal ap_enable_state9_pp0_iter0_stage7 : BOOLEAN;
    signal ap_enable_operation_153 : BOOLEAN;
    signal ap_enable_state22_pp0_iter2_stage4 : BOOLEAN;
    signal ap_enable_operation_154 : BOOLEAN;
    signal ap_enable_operation_157 : BOOLEAN;
    signal ap_enable_state23_pp0_iter2_stage5 : BOOLEAN;
    signal ap_enable_operation_158 : BOOLEAN;
    signal ap_enable_operation_160 : BOOLEAN;
    signal ap_enable_state24_pp0_iter2_stage6 : BOOLEAN;
    signal ap_enable_operation_161 : BOOLEAN;
    signal ap_enable_operation_164 : BOOLEAN;
    signal ap_enable_state25_pp0_iter2_stage7 : BOOLEAN;
    signal ap_predicate_op69_load_state10 : BOOLEAN;
    signal ap_enable_operation_69 : BOOLEAN;
    signal ap_enable_state10_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op70_load_state11 : BOOLEAN;
    signal ap_enable_operation_70 : BOOLEAN;
    signal ap_enable_state11_pp0_iter1_stage1 : BOOLEAN;
    signal ap_predicate_op75_load_state11 : BOOLEAN;
    signal ap_enable_operation_75 : BOOLEAN;
    signal ap_predicate_op81_load_state12 : BOOLEAN;
    signal ap_enable_operation_81 : BOOLEAN;
    signal ap_enable_state12_pp0_iter1_stage2 : BOOLEAN;
    signal ap_predicate_op80_load_state11 : BOOLEAN;
    signal ap_enable_operation_80 : BOOLEAN;
    signal ap_predicate_op82_load_state12 : BOOLEAN;
    signal ap_enable_operation_82 : BOOLEAN;
    signal ap_predicate_op87_load_state12 : BOOLEAN;
    signal ap_enable_operation_87 : BOOLEAN;
    signal ap_predicate_op96_load_state13 : BOOLEAN;
    signal ap_enable_operation_96 : BOOLEAN;
    signal ap_enable_state13_pp0_iter1_stage3 : BOOLEAN;
    signal ap_predicate_op92_load_state12 : BOOLEAN;
    signal ap_enable_operation_92 : BOOLEAN;
    signal ap_predicate_op97_load_state13 : BOOLEAN;
    signal ap_enable_operation_97 : BOOLEAN;
    signal ap_predicate_op102_load_state13 : BOOLEAN;
    signal ap_enable_operation_102 : BOOLEAN;
    signal ap_predicate_op115_load_state14 : BOOLEAN;
    signal ap_enable_operation_115 : BOOLEAN;
    signal ap_enable_state14_pp0_iter1_stage4 : BOOLEAN;
    signal ap_predicate_op107_load_state13 : BOOLEAN;
    signal ap_enable_operation_107 : BOOLEAN;
    signal ap_predicate_op117_load_state14 : BOOLEAN;
    signal ap_enable_operation_117 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_850 : BOOLEAN;

    component BGD_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    fadd_32ns_32ns_32_5_full_dsp_1_U361 : component BGD_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_216_p0,
        din1 => grp_fu_216_p1,
        ce => grp_fu_216_ce,
        dout => grp_fu_216_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((p_initZero_empty_n = ap_const_logic_0) or (mul_ln559_loc_empty_n = ap_const_logic_0) or (p_weightGradientAvg_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((p_initZero_empty_n = ap_const_logic_0) or (mul_ln559_loc_empty_n = ap_const_logic_0) or (p_weightGradientAvg_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_205_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_initZero_empty_n = ap_const_logic_0) or (mul_ln559_loc_empty_n = ap_const_logic_0) or (p_weightGradientAvg_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_205 <= ap_const_lv29_0;
            elsif (((icmp_ln409_reg_563 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                i_reg_205 <= add_ln409_reg_567;
            end if; 
        end if;
    end process;

    reg_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_850)) then
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    reg_230 <= p_accumulator_q1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    reg_230 <= p_accumulator_q0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                add3_3_i_i_reg_759 <= grp_fu_216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                add3_4_i_i_reg_764 <= grp_fu_216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                add3_5_i_i_reg_769 <= grp_fu_216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln409_reg_567 <= add_ln409_fu_271_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln409_reg_563 <= icmp_ln409_fu_266_p2;
                icmp_ln409_reg_563_pp0_iter1_reg <= icmp_ln409_reg_563;
                icmp_ln409_reg_563_pp0_iter2_reg <= icmp_ln409_reg_563_pp0_iter1_reg;
                p_accumulator_addr_15_reg_638_pp0_iter2_reg <= p_accumulator_addr_15_reg_638;
                    tmp_s_reg_572_pp0_iter1_reg(15 downto 3) <= tmp_s_reg_572(15 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln409_reg_563 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_Result_60_i_i_reg_598 <= p_values_dout(95 downto 64);
                p_Result_61_i_i_reg_603 <= p_values_dout(127 downto 96);
                p_Result_62_i_i_reg_608 <= p_values_dout(159 downto 128);
                p_Result_63_i_i_reg_613 <= p_values_dout(191 downto 160);
                p_Result_64_i_i_reg_618 <= p_values_dout(223 downto 192);
                p_Result_65_i_i_reg_623 <= p_values_dout(255 downto 224);
                p_Result_i_i_reg_593 <= p_values_dout(63 downto 32);
                trunc_ln674_reg_588 <= trunc_ln674_fu_299_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_Result_60_i_i_reg_598_pp0_iter1_reg <= p_Result_60_i_i_reg_598;
                p_Result_61_i_i_reg_603_pp0_iter1_reg <= p_Result_61_i_i_reg_603;
                p_Result_62_i_i_reg_608_pp0_iter1_reg <= p_Result_62_i_i_reg_608;
                p_Result_63_i_i_reg_613_pp0_iter1_reg <= p_Result_63_i_i_reg_613;
                p_Result_64_i_i_reg_618_pp0_iter1_reg <= p_Result_64_i_i_reg_618;
                p_Result_65_i_i_reg_623_pp0_iter1_reg <= p_Result_65_i_i_reg_623;
                p_Result_i_i_reg_593_pp0_iter1_reg <= p_Result_i_i_reg_593;
                p_accumulator_addr_16_reg_644_pp0_iter2_reg <= p_accumulator_addr_16_reg_644;
                p_accumulator_addr_17_reg_650_pp0_iter2_reg <= p_accumulator_addr_17_reg_650;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln409_reg_563 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_accumulator_addr_15_reg_638 <= zext_ln416_15_fu_387_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0))) then
                p_accumulator_addr_16_reg_644 <= zext_ln416_16_fu_402_p1(16 - 1 downto 0);
                p_accumulator_addr_17_reg_650 <= zext_ln416_17_fu_417_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0))) then
                p_accumulator_addr_18_reg_661 <= zext_ln416_18_fu_432_p1(16 - 1 downto 0);
                p_accumulator_addr_19_reg_667 <= zext_ln416_19_fu_447_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                p_accumulator_addr_18_reg_661_pp0_iter2_reg <= p_accumulator_addr_18_reg_661;
                p_accumulator_addr_19_reg_667_pp0_iter2_reg <= p_accumulator_addr_19_reg_667;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0))) then
                p_accumulator_addr_20_reg_688 <= zext_ln416_20_fu_466_p1(16 - 1 downto 0);
                p_accumulator_addr_21_reg_694 <= zext_ln416_21_fu_481_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                p_accumulator_addr_20_reg_688_pp0_iter2_reg <= p_accumulator_addr_20_reg_688;
                p_accumulator_addr_21_reg_694_pp0_iter2_reg <= p_accumulator_addr_21_reg_694;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln409_fu_266_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_accumulator_addr_reg_583 <= zext_ln416_fu_294_p1(16 - 1 downto 0);
                    tmp_s_reg_572(15 downto 3) <= tmp_s_fu_281_p3(15 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_initZero_read_reg_548 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                p_accumulator_load_17_reg_656 <= p_accumulator_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_initZero_read_reg_548 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                p_accumulator_load_19_reg_683 <= p_accumulator_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_initZero_empty_n = ap_const_logic_0) or (mul_ln559_loc_empty_n = ap_const_logic_0) or (p_weightGradientAvg_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                p_initZero_read_reg_548 <= p_initZero_dout;
                p_weightGradientAvg_offset_read_reg_536 <= p_weightGradientAvg_offset_dout;
                trunc_ln_reg_558 <= mul_ln559_loc_dout(31 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_reg_563 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((p_initZero_read_reg_548 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then
                reg_220 <= p_accumulator_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln409_reg_563 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then
                reg_224 <= grp_fu_216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0)))) then
                reg_235 <= grp_fu_216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0))) then
                select_ln403_10_reg_709 <= select_ln403_10_fu_490_p3;
                select_ln403_12_reg_719 <= select_ln403_12_fu_496_p3;
                select_ln403_13_reg_724 <= select_ln403_13_fu_502_p3;
                select_ln403_14_reg_729 <= select_ln403_14_fu_509_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                select_ln403_11_reg_714 <= grp_fu_248_p3;
            end if;
        end if;
    end process;
    tmp_s_reg_572(2 downto 0) <= "000";
    tmp_s_reg_572_pp0_iter1_reg(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_weightGradientAvg_offset_empty_n, mul_ln559_loc_empty_n, p_initZero_empty_n, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter2, icmp_ln409_fu_266_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((p_initZero_empty_n = ap_const_logic_0) or (mul_ln559_loc_empty_n = ap_const_logic_0) or (p_weightGradientAvg_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln409_fu_266_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln409_fu_266_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    add_ln409_fu_271_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_phi_fu_209_p4) + unsigned(ap_const_lv29_1));
    add_ln416_10_fu_412_p2 <= std_logic_vector(unsigned(p_weightGradientAvg_offset_read_reg_536) + unsigned(or_ln416_14_fu_407_p2));
    add_ln416_11_fu_427_p2 <= std_logic_vector(unsigned(p_weightGradientAvg_offset_read_reg_536) + unsigned(or_ln416_15_fu_422_p2));
    add_ln416_12_fu_442_p2 <= std_logic_vector(unsigned(p_weightGradientAvg_offset_read_reg_536) + unsigned(or_ln416_16_fu_437_p2));
    add_ln416_13_fu_461_p2 <= std_logic_vector(unsigned(p_weightGradientAvg_offset_read_reg_536) + unsigned(or_ln416_17_fu_456_p2));
    add_ln416_14_fu_476_p2 <= std_logic_vector(unsigned(p_weightGradientAvg_offset_read_reg_536) + unsigned(or_ln416_18_fu_471_p2));
    add_ln416_8_fu_382_p2 <= std_logic_vector(unsigned(p_weightGradientAvg_offset_read_reg_536) + unsigned(or_ln416_fu_377_p2));
    add_ln416_9_fu_397_p2 <= std_logic_vector(unsigned(p_weightGradientAvg_offset_read_reg_536) + unsigned(or_ln416_13_fu_392_p2));
    add_ln416_fu_289_p2 <= std_logic_vector(unsigned(p_weightGradientAvg_offset_read_reg_536) + unsigned(tmp_s_fu_281_p3));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state26 <= ap_CS_fsm(9);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
                ap_block_pp0 <= (((ap_const_boolean_1 = ap_block_pp0_stage6_subdone) and (ap_ST_fsm_pp0_stage6 = ap_CS_fsm)) or ((ap_ST_fsm_pp0_stage1 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage1_subdone)) or ((ap_const_boolean_1 = ap_block_pp0_stage7_subdone) and (ap_ST_fsm_pp0_stage7 = ap_CS_fsm)) or ((ap_ST_fsm_pp0_stage5 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage5_subdone)) or ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone)) or ((ap_ST_fsm_pp0_stage3 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage3_subdone)) or ((ap_ST_fsm_pp0_stage4 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage4_subdone)) or ((ap_ST_fsm_pp0_stage2 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage2_subdone)));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(p_values_empty_n, ap_enable_reg_pp0_iter0, icmp_ln409_reg_563)
    begin
                ap_block_pp0_stage1_11001 <= ((icmp_ln409_reg_563 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (p_values_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(p_values_empty_n, ap_enable_reg_pp0_iter0, icmp_ln409_reg_563)
    begin
                ap_block_pp0_stage1_subdone <= ((icmp_ln409_reg_563 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (p_values_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, p_weightGradientAvg_offset_empty_n, mul_ln559_loc_empty_n, p_initZero_empty_n)
    begin
                ap_block_state1 <= ((p_initZero_empty_n = ap_const_logic_0) or (mul_ln559_loc_empty_n = ap_const_logic_0) or (p_weightGradientAvg_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage1_iter0_assign_proc : process(p_values_empty_n, icmp_ln409_reg_563)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((icmp_ln409_reg_563 = ap_const_lv1_0) and (p_values_empty_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_850_assign_proc : process(p_initZero_read_reg_548, ap_enable_reg_pp0_iter1, icmp_ln409_reg_563_pp0_iter1_reg)
    begin
                ap_condition_850 <= ((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln409_fu_266_p2)
    begin
        if ((icmp_ln409_fu_266_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_102_assign_proc : process(ap_predicate_op102_load_state13)
    begin
                ap_enable_operation_102 <= (ap_predicate_op102_load_state13 = ap_const_boolean_1);
    end process;


    ap_enable_operation_107_assign_proc : process(ap_predicate_op107_load_state13)
    begin
                ap_enable_operation_107 <= (ap_predicate_op107_load_state13 = ap_const_boolean_1);
    end process;


    ap_enable_operation_115_assign_proc : process(ap_predicate_op115_load_state14)
    begin
                ap_enable_operation_115 <= (ap_predicate_op115_load_state14 = ap_const_boolean_1);
    end process;


    ap_enable_operation_117_assign_proc : process(ap_predicate_op117_load_state14)
    begin
                ap_enable_operation_117 <= (ap_predicate_op117_load_state14 = ap_const_boolean_1);
    end process;


    ap_enable_operation_153_assign_proc : process(icmp_ln409_reg_563_pp0_iter2_reg)
    begin
                ap_enable_operation_153 <= (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_154_assign_proc : process(icmp_ln409_reg_563_pp0_iter2_reg)
    begin
                ap_enable_operation_154 <= (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_157_assign_proc : process(icmp_ln409_reg_563_pp0_iter2_reg)
    begin
                ap_enable_operation_157 <= (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_158_assign_proc : process(icmp_ln409_reg_563_pp0_iter2_reg)
    begin
                ap_enable_operation_158 <= (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_160_assign_proc : process(icmp_ln409_reg_563_pp0_iter2_reg)
    begin
                ap_enable_operation_160 <= (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_161_assign_proc : process(icmp_ln409_reg_563_pp0_iter2_reg)
    begin
                ap_enable_operation_161 <= (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_164_assign_proc : process(icmp_ln409_reg_563_pp0_iter2_reg)
    begin
                ap_enable_operation_164 <= (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_46_assign_proc : process(ap_predicate_op46_load_state2)
    begin
                ap_enable_operation_46 <= (ap_predicate_op46_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_56_assign_proc : process(ap_predicate_op56_load_state3)
    begin
                ap_enable_operation_56 <= (ap_predicate_op56_load_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_64_assign_proc : process(icmp_ln409_reg_563)
    begin
                ap_enable_operation_64 <= (icmp_ln409_reg_563 = ap_const_lv1_0);
    end process;


    ap_enable_operation_69_assign_proc : process(ap_predicate_op69_load_state10)
    begin
                ap_enable_operation_69 <= (ap_predicate_op69_load_state10 = ap_const_boolean_1);
    end process;


    ap_enable_operation_70_assign_proc : process(ap_predicate_op70_load_state11)
    begin
                ap_enable_operation_70 <= (ap_predicate_op70_load_state11 = ap_const_boolean_1);
    end process;


    ap_enable_operation_75_assign_proc : process(ap_predicate_op75_load_state11)
    begin
                ap_enable_operation_75 <= (ap_predicate_op75_load_state11 = ap_const_boolean_1);
    end process;


    ap_enable_operation_80_assign_proc : process(ap_predicate_op80_load_state11)
    begin
                ap_enable_operation_80 <= (ap_predicate_op80_load_state11 = ap_const_boolean_1);
    end process;


    ap_enable_operation_81_assign_proc : process(ap_predicate_op81_load_state12)
    begin
                ap_enable_operation_81 <= (ap_predicate_op81_load_state12 = ap_const_boolean_1);
    end process;


    ap_enable_operation_82_assign_proc : process(ap_predicate_op82_load_state12)
    begin
                ap_enable_operation_82 <= (ap_predicate_op82_load_state12 = ap_const_boolean_1);
    end process;


    ap_enable_operation_87_assign_proc : process(ap_predicate_op87_load_state12)
    begin
                ap_enable_operation_87 <= (ap_predicate_op87_load_state12 = ap_const_boolean_1);
    end process;


    ap_enable_operation_92_assign_proc : process(ap_predicate_op92_load_state12)
    begin
                ap_enable_operation_92 <= (ap_predicate_op92_load_state12 = ap_const_boolean_1);
    end process;


    ap_enable_operation_96_assign_proc : process(ap_predicate_op96_load_state13)
    begin
                ap_enable_operation_96 <= (ap_predicate_op96_load_state13 = ap_const_boolean_1);
    end process;


    ap_enable_operation_97_assign_proc : process(ap_predicate_op97_load_state13)
    begin
                ap_enable_operation_97 <= (ap_predicate_op97_load_state13 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state10_pp0_iter1_stage0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0)
    begin
                ap_enable_state10_pp0_iter1_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_enable_state11_pp0_iter1_stage1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state11_pp0_iter1_stage1 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_enable_state12_pp0_iter1_stage2_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state12_pp0_iter1_stage2 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_enable_state13_pp0_iter1_stage3_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3)
    begin
                ap_enable_state13_pp0_iter1_stage3 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_enable_state14_pp0_iter1_stage4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4)
    begin
                ap_enable_state14_pp0_iter1_stage4 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_enable_state22_pp0_iter2_stage4_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state22_pp0_iter2_stage4 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_enable_state23_pp0_iter2_stage5_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage5)
    begin
                ap_enable_state23_pp0_iter2_stage5 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_enable_state24_pp0_iter2_stage6_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state24_pp0_iter2_stage6 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_enable_state25_pp0_iter2_stage7_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state25_pp0_iter2_stage7 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_enable_state2_pp0_iter0_stage0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0)
    begin
                ap_enable_state2_pp0_iter0_stage0 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state3_pp0_iter0_stage1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0)
    begin
                ap_enable_state3_pp0_iter0_stage1 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_enable_state9_pp0_iter0_stage7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7)
    begin
                ap_enable_state9_pp0_iter0_stage7 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_209_p4_assign_proc : process(icmp_ln409_reg_563, i_reg_205, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, add_ln409_reg_567, ap_block_pp0_stage0)
    begin
        if (((icmp_ln409_reg_563 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_i_phi_fu_209_p4 <= add_ln409_reg_567;
        else 
            ap_phi_mux_i_phi_fu_209_p4 <= i_reg_205;
        end if; 
    end process;


    ap_predicate_op102_load_state13_assign_proc : process(p_initZero_read_reg_548, icmp_ln409_reg_563_pp0_iter1_reg)
    begin
                ap_predicate_op102_load_state13 <= ((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op107_load_state13_assign_proc : process(p_initZero_read_reg_548, icmp_ln409_reg_563_pp0_iter1_reg)
    begin
                ap_predicate_op107_load_state13 <= ((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op115_load_state14_assign_proc : process(p_initZero_read_reg_548, icmp_ln409_reg_563_pp0_iter1_reg)
    begin
                ap_predicate_op115_load_state14 <= ((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op117_load_state14_assign_proc : process(p_initZero_read_reg_548, icmp_ln409_reg_563_pp0_iter1_reg)
    begin
                ap_predicate_op117_load_state14 <= ((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op46_load_state2_assign_proc : process(p_initZero_read_reg_548, icmp_ln409_fu_266_p2)
    begin
                ap_predicate_op46_load_state2 <= ((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_fu_266_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op56_load_state3_assign_proc : process(icmp_ln409_reg_563, p_initZero_read_reg_548)
    begin
                ap_predicate_op56_load_state3 <= ((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_reg_563 = ap_const_lv1_0));
    end process;


    ap_predicate_op69_load_state10_assign_proc : process(icmp_ln409_reg_563, p_initZero_read_reg_548)
    begin
                ap_predicate_op69_load_state10 <= ((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_reg_563 = ap_const_lv1_0));
    end process;


    ap_predicate_op70_load_state11_assign_proc : process(p_initZero_read_reg_548, icmp_ln409_reg_563_pp0_iter1_reg)
    begin
                ap_predicate_op70_load_state11 <= ((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op75_load_state11_assign_proc : process(p_initZero_read_reg_548, icmp_ln409_reg_563_pp0_iter1_reg)
    begin
                ap_predicate_op75_load_state11 <= ((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op80_load_state11_assign_proc : process(p_initZero_read_reg_548, icmp_ln409_reg_563_pp0_iter1_reg)
    begin
                ap_predicate_op80_load_state11 <= ((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op81_load_state12_assign_proc : process(p_initZero_read_reg_548, icmp_ln409_reg_563_pp0_iter1_reg)
    begin
                ap_predicate_op81_load_state12 <= ((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op82_load_state12_assign_proc : process(p_initZero_read_reg_548, icmp_ln409_reg_563_pp0_iter1_reg)
    begin
                ap_predicate_op82_load_state12 <= ((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op87_load_state12_assign_proc : process(p_initZero_read_reg_548, icmp_ln409_reg_563_pp0_iter1_reg)
    begin
                ap_predicate_op87_load_state12 <= ((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op92_load_state12_assign_proc : process(p_initZero_read_reg_548, icmp_ln409_reg_563_pp0_iter1_reg)
    begin
                ap_predicate_op92_load_state12 <= ((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op96_load_state13_assign_proc : process(p_initZero_read_reg_548, icmp_ln409_reg_563_pp0_iter1_reg)
    begin
                ap_predicate_op96_load_state13 <= ((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op97_load_state13_assign_proc : process(p_initZero_read_reg_548, icmp_ln409_reg_563_pp0_iter1_reg)
    begin
                ap_predicate_op97_load_state13 <= ((p_initZero_read_reg_548 = ap_const_lv1_0) and (icmp_ln409_reg_563_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln101_58_fu_452_p1 <= p_Result_i_i_reg_593_pp0_iter1_reg;
    bitcast_ln101_59_fu_486_p1 <= p_Result_60_i_i_reg_598_pp0_iter1_reg;
    bitcast_ln101_60_fu_516_p1 <= p_Result_61_i_i_reg_603_pp0_iter1_reg;
    bitcast_ln101_61_fu_520_p1 <= p_Result_62_i_i_reg_608_pp0_iter1_reg;
    bitcast_ln101_62_fu_524_p1 <= p_Result_63_i_i_reg_613_pp0_iter1_reg;
    bitcast_ln101_63_fu_528_p1 <= p_Result_64_i_i_reg_618_pp0_iter1_reg;
    bitcast_ln101_64_fu_532_p1 <= p_Result_65_i_i_reg_623_pp0_iter1_reg;
    bitcast_ln101_fu_373_p1 <= trunc_ln674_reg_588;
    empty_fu_277_p1 <= ap_phi_mux_i_phi_fu_209_p4(13 - 1 downto 0);

    grp_fu_216_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_216_ce <= ap_const_logic_1;
        else 
            grp_fu_216_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_216_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage5, grp_fu_240_p3, grp_fu_248_p3, select_ln403_10_reg_709, select_ln403_11_reg_714, select_ln403_12_reg_719, select_ln403_13_reg_724, select_ln403_14_reg_729, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_216_p0 <= select_ln403_14_reg_729;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_216_p0 <= select_ln403_13_reg_724;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_216_p0 <= select_ln403_12_reg_719;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_216_p0 <= select_ln403_11_reg_714;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_216_p0 <= select_ln403_10_reg_709;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_216_p0 <= grp_fu_248_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_216_p0 <= grp_fu_240_p3;
        else 
            grp_fu_216_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_216_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage5, bitcast_ln101_fu_373_p1, bitcast_ln101_58_fu_452_p1, bitcast_ln101_59_fu_486_p1, bitcast_ln101_60_fu_516_p1, bitcast_ln101_61_fu_520_p1, bitcast_ln101_62_fu_524_p1, bitcast_ln101_63_fu_528_p1, bitcast_ln101_64_fu_532_p1, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_216_p1 <= bitcast_ln101_64_fu_532_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_216_p1 <= bitcast_ln101_63_fu_528_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_216_p1 <= bitcast_ln101_62_fu_524_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_216_p1 <= bitcast_ln101_61_fu_520_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_216_p1 <= bitcast_ln101_60_fu_516_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_216_p1 <= bitcast_ln101_59_fu_486_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_216_p1 <= bitcast_ln101_58_fu_452_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_216_p1 <= bitcast_ln101_fu_373_p1;
        else 
            grp_fu_216_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_240_p3 <= 
        ap_const_lv32_0 when (p_initZero_read_reg_548(0) = '1') else 
        reg_220;
    grp_fu_248_p3 <= 
        ap_const_lv32_0 when (p_initZero_read_reg_548(0) = '1') else 
        reg_230;
    icmp_ln409_fu_266_p2 <= "1" when (ap_phi_mux_i_phi_fu_209_p4 = trunc_ln_reg_558) else "0";

    mul_ln559_loc_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, mul_ln559_loc_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            mul_ln559_loc_blk_n <= mul_ln559_loc_empty_n;
        else 
            mul_ln559_loc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    mul_ln559_loc_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_weightGradientAvg_offset_empty_n, mul_ln559_loc_empty_n, p_initZero_empty_n)
    begin
        if ((not(((p_initZero_empty_n = ap_const_logic_0) or (mul_ln559_loc_empty_n = ap_const_logic_0) or (p_weightGradientAvg_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            mul_ln559_loc_read <= ap_const_logic_1;
        else 
            mul_ln559_loc_read <= ap_const_logic_0;
        end if; 
    end process;

    or_ln416_13_fu_392_p2 <= (tmp_s_reg_572_pp0_iter1_reg or ap_const_lv16_2);
    or_ln416_14_fu_407_p2 <= (tmp_s_reg_572_pp0_iter1_reg or ap_const_lv16_3);
    or_ln416_15_fu_422_p2 <= (tmp_s_reg_572_pp0_iter1_reg or ap_const_lv16_4);
    or_ln416_16_fu_437_p2 <= (tmp_s_reg_572_pp0_iter1_reg or ap_const_lv16_5);
    or_ln416_17_fu_456_p2 <= (tmp_s_reg_572_pp0_iter1_reg or ap_const_lv16_6);
    or_ln416_18_fu_471_p2 <= (tmp_s_reg_572_pp0_iter1_reg or ap_const_lv16_7);
    or_ln416_fu_377_p2 <= (tmp_s_reg_572 or ap_const_lv16_1);

    p_accumulator_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage5, p_accumulator_addr_16_reg_644_pp0_iter2_reg, p_accumulator_addr_18_reg_661_pp0_iter2_reg, p_accumulator_addr_20_reg_688_pp0_iter2_reg, p_accumulator_addr_21_reg_694_pp0_iter2_reg, ap_block_pp0_stage0, zext_ln416_15_fu_387_p1, zext_ln416_17_fu_417_p1, ap_block_pp0_stage2, zext_ln416_19_fu_447_p1, ap_block_pp0_stage3, zext_ln416_21_fu_481_p1, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_accumulator_address0 <= p_accumulator_addr_21_reg_694_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_accumulator_address0 <= p_accumulator_addr_20_reg_688_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_accumulator_address0 <= p_accumulator_addr_18_reg_661_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_accumulator_address0 <= p_accumulator_addr_16_reg_644_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            p_accumulator_address0 <= zext_ln416_21_fu_481_p1(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            p_accumulator_address0 <= zext_ln416_19_fu_447_p1(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            p_accumulator_address0 <= zext_ln416_17_fu_417_p1(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            p_accumulator_address0 <= zext_ln416_15_fu_387_p1(16 - 1 downto 0);
        else 
            p_accumulator_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_accumulator_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage5, p_accumulator_addr_reg_583, p_accumulator_addr_15_reg_638_pp0_iter2_reg, p_accumulator_addr_17_reg_650_pp0_iter2_reg, p_accumulator_addr_19_reg_667_pp0_iter2_reg, ap_block_pp0_stage0, zext_ln416_fu_294_p1, zext_ln416_16_fu_402_p1, zext_ln416_18_fu_432_p1, ap_block_pp0_stage2, zext_ln416_20_fu_466_p1, ap_block_pp0_stage3, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_accumulator_address1 <= p_accumulator_addr_19_reg_667_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_accumulator_address1 <= p_accumulator_addr_17_reg_650_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_accumulator_address1 <= p_accumulator_addr_15_reg_638_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            p_accumulator_address1 <= zext_ln416_20_fu_466_p1(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            p_accumulator_address1 <= zext_ln416_18_fu_432_p1(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            p_accumulator_address1 <= zext_ln416_16_fu_402_p1(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            p_accumulator_address1 <= p_accumulator_addr_reg_583;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_accumulator_address1 <= zext_ln416_fu_294_p1(16 - 1 downto 0);
        else 
            p_accumulator_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_accumulator_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter2, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            p_accumulator_ce0 <= ap_const_logic_1;
        else 
            p_accumulator_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_accumulator_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter2, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            p_accumulator_ce1 <= ap_const_logic_1;
        else 
            p_accumulator_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_accumulator_d0_assign_proc : process(reg_224, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter2, reg_235, ap_CS_fsm_pp0_stage5, add3_4_i_i_reg_764, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_accumulator_d0 <= reg_224;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_accumulator_d0 <= add3_4_i_i_reg_764;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_accumulator_d0 <= reg_235;
        else 
            p_accumulator_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_accumulator_d1_assign_proc : process(ap_enable_reg_pp0_iter0, reg_224, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage5, add3_3_i_i_reg_759, add3_5_i_i_reg_769, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_accumulator_d1 <= add3_5_i_i_reg_769;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_accumulator_d1 <= add3_3_i_i_reg_759;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            p_accumulator_d1 <= reg_224;
        else 
            p_accumulator_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_accumulator_we0_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter2, ap_block_pp0_stage4_11001, icmp_ln409_reg_563_pp0_iter2_reg, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_accumulator_we0 <= ap_const_logic_1;
        else 
            p_accumulator_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_accumulator_we1_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln409_reg_563, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter2, ap_block_pp0_stage4_11001, icmp_ln409_reg_563_pp0_iter2_reg, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if ((((icmp_ln409_reg_563 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln409_reg_563_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_accumulator_we1 <= ap_const_logic_1;
        else 
            p_accumulator_we1 <= ap_const_logic_0;
        end if; 
    end process;


    p_initZero_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_initZero_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_initZero_blk_n <= p_initZero_empty_n;
        else 
            p_initZero_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_initZero_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_weightGradientAvg_offset_empty_n, mul_ln559_loc_empty_n, p_initZero_empty_n)
    begin
        if ((not(((p_initZero_empty_n = ap_const_logic_0) or (mul_ln559_loc_empty_n = ap_const_logic_0) or (p_weightGradientAvg_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_initZero_read <= ap_const_logic_1;
        else 
            p_initZero_read <= ap_const_logic_0;
        end if; 
    end process;


    p_values_blk_n_assign_proc : process(p_values_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln409_reg_563)
    begin
        if (((icmp_ln409_reg_563 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            p_values_blk_n <= p_values_empty_n;
        else 
            p_values_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_values_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln409_reg_563, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln409_reg_563 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            p_values_read <= ap_const_logic_1;
        else 
            p_values_read <= ap_const_logic_0;
        end if; 
    end process;


    p_weightGradientAvg_offset_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_weightGradientAvg_offset_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_weightGradientAvg_offset_blk_n <= p_weightGradientAvg_offset_empty_n;
        else 
            p_weightGradientAvg_offset_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_weightGradientAvg_offset_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_weightGradientAvg_offset_empty_n, mul_ln559_loc_empty_n, p_initZero_empty_n)
    begin
        if ((not(((p_initZero_empty_n = ap_const_logic_0) or (mul_ln559_loc_empty_n = ap_const_logic_0) or (p_weightGradientAvg_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_weightGradientAvg_offset_read <= ap_const_logic_1;
        else 
            p_weightGradientAvg_offset_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln403_10_fu_490_p3 <= 
        ap_const_lv32_0 when (p_initZero_read_reg_548(0) = '1') else 
        p_accumulator_load_17_reg_656;
    select_ln403_12_fu_496_p3 <= 
        ap_const_lv32_0 when (p_initZero_read_reg_548(0) = '1') else 
        p_accumulator_load_19_reg_683;
    select_ln403_13_fu_502_p3 <= 
        ap_const_lv32_0 when (p_initZero_read_reg_548(0) = '1') else 
        p_accumulator_q1;
    select_ln403_14_fu_509_p3 <= 
        ap_const_lv32_0 when (p_initZero_read_reg_548(0) = '1') else 
        p_accumulator_q0;
    tmp_s_fu_281_p3 <= (empty_fu_277_p1 & ap_const_lv3_0);
    trunc_ln674_fu_299_p1 <= p_values_dout(32 - 1 downto 0);
    zext_ln416_15_fu_387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln416_8_fu_382_p2),64));
    zext_ln416_16_fu_402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln416_9_fu_397_p2),64));
    zext_ln416_17_fu_417_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln416_10_fu_412_p2),64));
    zext_ln416_18_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln416_11_fu_427_p2),64));
    zext_ln416_19_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln416_12_fu_442_p2),64));
    zext_ln416_20_fu_466_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln416_13_fu_461_p2),64));
    zext_ln416_21_fu_481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln416_14_fu_476_p2),64));
    zext_ln416_fu_294_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln416_fu_289_p2),64));
end behav;
