#*****************************************************************************************
# Vivado (TM) v2020.2 (64-bit)
#
# _build.tcl: Tcl script for re-creating project 'ultrazohm'
#
# Generated by Vivado on Wed Mar 16 10:58:07 +0100 2022
# IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (_build.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#
# 3. The following remote source files that were added to the original project:-
#
#    "${origin_dir}/src/hdl/iobufds_inst.vhd"
#    "${origin_dir}/../ip_cores/Interlock_Module_3L/npc_phase_state_machine.vhd"
#    "${origin_dir}/../ip_cores/Interlock_Module_3L/top_npc_state_machine.vhd"
#    "${origin_dir}/../ip_cores/Delay_signal/delay_trigger.vhd"
#    "${origin_dir}/bd/zusys_wrapper.vhd"
#    "${origin_dir}/../ip_cores/ADC_Module_LVDS_LTC2311_V2_ip/Analog_hub/Analog_Out_Hub.vhd"
#    "${origin_dir}/../ip_cores/ADC_Module_LVDS_LTC2311_V2_ip/Analog_hub/Analog_In_Hub.vhd"
#    "${origin_dir}/../ip_cores/Extend_Interrupt/extend_interrupt.vhd"
#    "${origin_dir}/constraints/Analog_AdapterBoard.xdc"
#    "${origin_dir}/constraints/Analog_AdapterBoard_A1.xdc"
#    "${origin_dir}/constraints/Analog_AdapterBoard_A1_2v00.xdc"
#    "${origin_dir}/constraints/Analog_AdapterBoard_A2.xdc"
#    "${origin_dir}/constraints/Analog_AdapterBoard_A2_2v00.xdc"
#    "${origin_dir}/constraints/Analog_AdapterBoard_A3.xdc"
#    "${origin_dir}/constraints/Analog_AdapterBoard_A3_2v00.xdc"
#    "${origin_dir}/constraints/Digital_AdapterBoard_D1.xdc"
#    "${origin_dir}/constraints/Digital_AdapterBoard_D1_2v00.xdc"
#    "${origin_dir}/constraints/Digital_AdapterBoard_D2.xdc"
#    "${origin_dir}/constraints/Digital_AdapterBoard_D3.xdc"
#    "${origin_dir}/constraints/Digital_AdapterBoard_D4.xdc"
#    "${origin_dir}/constraints/Digital_AdapterBoard_D5.xdc"
#    "${origin_dir}/constraints/_i_io.xdc"
#    "${origin_dir}/constraints/_i_bitgen.xdc"
#    "${origin_dir}/constraints/TE0808.xdc"
#    "${origin_dir}/constraints/Digital_D1_packed.xdc"
#    "${origin_dir}/constraints/Digital_D2_packed.xdc"
#    "${origin_dir}/constraints/Digital_D3_packed.xdc"
#    "${origin_dir}/constraints/Digital_D4_packed.xdc"
#    "${origin_dir}/constraints/Analog_A1_packed.xdc"
#    "${origin_dir}/constraints/Analog_A2_packed.xdc"
#    "${origin_dir}/constraints/Analog_A3_packed.xdc"
#    "${origin_dir}/constraints/adc_ltc2311_debug.xdc"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  set files [list \
   "${origin_dir}/src/hdl/iobufds_inst.vhd" \
   "${origin_dir}/../ip_cores/Interlock_Module_3L/npc_phase_state_machine.vhd" \
   "${origin_dir}/../ip_cores/Interlock_Module_3L/top_npc_state_machine.vhd" \
   "${origin_dir}/../ip_cores/Delay_signal/delay_trigger.vhd" \
   "${origin_dir}/bd/zusys_wrapper.vhd" \
   "${origin_dir}/../ip_cores/ADC_Module_LVDS_LTC2311_V2_ip/Analog_hub/Analog_Out_Hub.vhd" \
   "${origin_dir}/../ip_cores/ADC_Module_LVDS_LTC2311_V2_ip/Analog_hub/Analog_In_Hub.vhd" \
   "${origin_dir}/../ip_cores/Extend_Interrupt/extend_interrupt.vhd" \
   "${origin_dir}/constraints/Analog_AdapterBoard.xdc" \
   "${origin_dir}/constraints/Analog_AdapterBoard_A1.xdc" \
   "${origin_dir}/constraints/Analog_AdapterBoard_A1_2v00.xdc" \
   "${origin_dir}/constraints/Analog_AdapterBoard_A2.xdc" \
   "${origin_dir}/constraints/Analog_AdapterBoard_A2_2v00.xdc" \
   "${origin_dir}/constraints/Analog_AdapterBoard_A3.xdc" \
   "${origin_dir}/constraints/Analog_AdapterBoard_A3_2v00.xdc" \
   "${origin_dir}/constraints/Digital_AdapterBoard_D1.xdc" \
   "${origin_dir}/constraints/Digital_AdapterBoard_D1_2v00.xdc" \
   "${origin_dir}/constraints/Digital_AdapterBoard_D2.xdc" \
   "${origin_dir}/constraints/Digital_AdapterBoard_D3.xdc" \
   "${origin_dir}/constraints/Digital_AdapterBoard_D4.xdc" \
   "${origin_dir}/constraints/Digital_AdapterBoard_D5.xdc" \
   "${origin_dir}/constraints/_i_io.xdc" \
   "${origin_dir}/constraints/_i_bitgen.xdc" \
   "${origin_dir}/constraints/TE0808.xdc" \
   "${origin_dir}/constraints/Digital_D1_packed.xdc" \
   "${origin_dir}/constraints/Digital_D2_packed.xdc" \
   "${origin_dir}/constraints/Digital_D3_packed.xdc" \
   "${origin_dir}/constraints/Digital_D4_packed.xdc" \
   "${origin_dir}/constraints/Analog_A1_packed.xdc" \
   "${origin_dir}/constraints/Analog_A2_packed.xdc" \
   "${origin_dir}/constraints/Analog_A3_packed.xdc" \
   "${origin_dir}/constraints/adc_ltc2311_debug.xdc" \
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  set paths [list \
   [file normalize "$origin_dir/../ip_cores"] \
  ]
  foreach ipath $paths {
    if { ![file isdirectory $ipath] } {
      puts " Could not access $ipath "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "ultrazohm"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "_build.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/project"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./project -part xczu9eg-ffvc900-1-e

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part_repo_paths" -value "[file normalize "$origin_dir/board_files"]" -objects $obj
set_property -name "board_part" -value "trenz.biz:te0808_9eg_1e:part0:3.0" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "te0808_9eg_1e_tebf0808" -objects $obj
set_property -name "platform.num_compute_units" -value "16" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "VHDL" -objects $obj
set_property -name "target_language" -value "VHDL" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "10" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "10" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "10" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "10" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "10" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "10" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "10" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
if { $obj != {} } {
   set_property "ip_repo_paths" "[file normalize "$origin_dir/../ip_cores"]" $obj

   # Rebuild user ip_repo's index before adding any source files
   update_ip_catalog -rebuild
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/src/hdl/iobufds_inst.vhd"] \
 [file normalize "${origin_dir}/../ip_cores/Interlock_Module_3L/npc_phase_state_machine.vhd"] \
 [file normalize "${origin_dir}/../ip_cores/Interlock_Module_3L/top_npc_state_machine.vhd"] \
 [file normalize "${origin_dir}/../ip_cores/Delay_signal/delay_trigger.vhd"] \
 [file normalize "${origin_dir}/bd/zusys_wrapper.vhd"] \
 [file normalize "${origin_dir}/../ip_cores/ADC_Module_LVDS_LTC2311_V2_ip/Analog_hub/Analog_Out_Hub.vhd"] \
 [file normalize "${origin_dir}/../ip_cores/ADC_Module_LVDS_LTC2311_V2_ip/Analog_hub/Analog_In_Hub.vhd"] \
 [file normalize "${origin_dir}/../ip_cores/Extend_Interrupt/extend_interrupt.vhd"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/src/hdl/iobufds_inst.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../ip_cores/Interlock_Module_3L/npc_phase_state_machine.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../ip_cores/Interlock_Module_3L/top_npc_state_machine.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../ip_cores/Delay_signal/delay_trigger.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/bd/zusys_wrapper.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../ip_cores/ADC_Module_LVDS_LTC2311_V2_ip/Analog_hub/Analog_Out_Hub.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../ip_cores/ADC_Module_LVDS_LTC2311_V2_ip/Analog_hub/Analog_In_Hub.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../ip_cores/Extend_Interrupt/extend_interrupt.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "zusys_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Analog_AdapterBoard.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Analog_AdapterBoard.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Analog_AdapterBoard_A1.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Analog_AdapterBoard_A1.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Analog_AdapterBoard_A1_2v00.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Analog_AdapterBoard_A1_2v00.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Analog_AdapterBoard_A2.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Analog_AdapterBoard_A2.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Analog_AdapterBoard_A2_2v00.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Analog_AdapterBoard_A2_2v00.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Analog_AdapterBoard_A3.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Analog_AdapterBoard_A3.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Analog_AdapterBoard_A3_2v00.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Analog_AdapterBoard_A3_2v00.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Digital_AdapterBoard_D1.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Digital_AdapterBoard_D1.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Digital_AdapterBoard_D1_2v00.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Digital_AdapterBoard_D1_2v00.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Digital_AdapterBoard_D2.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Digital_AdapterBoard_D2.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Digital_AdapterBoard_D3.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Digital_AdapterBoard_D3.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Digital_AdapterBoard_D4.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Digital_AdapterBoard_D4.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Digital_AdapterBoard_D5.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Digital_AdapterBoard_D5.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/_i_io.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/_i_io.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/_i_bitgen.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/_i_bitgen.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/TE0808.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/TE0808.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Digital_D1_packed.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Digital_D1_packed.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Digital_D2_packed.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Digital_D2_packed.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Digital_D3_packed.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Digital_D3_packed.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Digital_D4_packed.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Digital_D4_packed.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Analog_A1_packed.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Analog_A1_packed.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Analog_A2_packed.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Analog_A2_packed.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/Analog_A3_packed.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/Analog_A3_packed.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/adc_ltc2311_debug.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/adc_ltc2311_debug.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/constraints/adc_ltc2311_debug.xdc"]" -objects $obj
set_property -name "target_ucf" -value "[file normalize "$origin_dir/constraints/adc_ltc2311_debug.xdc"]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "zusys_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]

# Create block design
source $origin_dir/bd/zusys.tcl
regenerate_bd_layout
