-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\mux_axi\mux_axi_ip_src_mux_axi.vhd
-- Created: 2021-10-21 11:05:09
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-08
-- Target subsystem base rate: 1e-08
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- interrupt_out_adc             ce_out        1e-08
-- interrupt_out_isr             ce_out        1e-08
-- select_out                    ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: mux_axi_ip_src_mux_axi
-- Source Path: mux_axi/mux_axi
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY mux_axi_ip_src_mux_axi IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        select_AXI                        :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        select_n_th_adc_interrupt         :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        interrupts_in                     :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        ce_out                            :   OUT   std_logic;
        interrupt_out_adc                 :   OUT   std_logic;
        interrupt_out_isr                 :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
        select_out                        :   OUT   std_logic_vector(3 DOWNTO 0)  -- ufix4
        );
END mux_axi_ip_src_mux_axi;


ARCHITECTURE rtl OF mux_axi_ip_src_mux_axi IS

  -- Component Declarations
  COMPONENT mux_axi_ip_src_Subsystem1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          interrupt_in                    :   IN    std_logic;
          n_th_adc_interrupt              :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          interrupt_out_isr               :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : mux_axi_ip_src_Subsystem1
    USE ENTITY work.mux_axi_ip_src_Subsystem1(rtl);

  -- Signals
  SIGNAL select_AXI_unsigned              : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL interrupts_in_unsigned           : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice5_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice7_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1                   : std_logic;  -- ufix1
  SIGNAL Constant_out1                    : std_logic;
  SIGNAL Multiport_Switch_out1            : std_logic;
  SIGNAL Compare_To_Constant7_out1        : std_logic;
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL Constant1_out1                   : std_logic;  -- ufix1
  SIGNAL Subsystem1_out1                  : std_logic;
  SIGNAL Switch7_out1                     : std_logic;  -- ufix1
  SIGNAL Compare_To_Constant6_out1        : std_logic;
  SIGNAL switch_compare_1_1               : std_logic;
  SIGNAL Switch8_out1                     : std_logic;  -- ufix1
  SIGNAL Compare_To_Constant5_out1        : std_logic;
  SIGNAL switch_compare_1_2               : std_logic;
  SIGNAL Switch5_out1                     : std_logic;  -- ufix1
  SIGNAL Compare_To_Constant4_out1        : std_logic;
  SIGNAL switch_compare_1_3               : std_logic;
  SIGNAL Switch6_out1                     : std_logic;  -- ufix1
  SIGNAL Compare_To_Constant3_out1        : std_logic;
  SIGNAL switch_compare_1_4               : std_logic;
  SIGNAL Switch3_out1                     : std_logic;  -- ufix1
  SIGNAL Compare_To_Constant2_out1        : std_logic;
  SIGNAL switch_compare_1_5               : std_logic;
  SIGNAL Switch4_out1                     : std_logic;  -- ufix1
  SIGNAL Compare_To_Constant1_out1        : std_logic;
  SIGNAL switch_compare_1_6               : std_logic;
  SIGNAL Switch1_out1                     : std_logic;  -- ufix1
  SIGNAL Compare_To_Constant_out1         : std_logic;
  SIGNAL switch_compare_1_7               : std_logic;
  SIGNAL Switch2_out1                     : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Data_Type_Conversion3_out1       : unsigned(3 DOWNTO 0);  -- ufix4

BEGIN
  u_Subsystem1 : mux_axi_ip_src_Subsystem1
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              interrupt_in => Multiport_Switch_out1,
              n_th_adc_interrupt => select_n_th_adc_interrupt,  -- uint32
              interrupt_out_isr => Subsystem1_out1
              );

  select_AXI_unsigned <= unsigned(select_AXI);

  interrupts_in_unsigned <= unsigned(interrupts_in);

  Bit_Slice5_out1 <= interrupts_in_unsigned(0);

  Bit_Slice6_out1 <= interrupts_in_unsigned(1);

  Bit_Slice7_out1 <= interrupts_in_unsigned(2);

  Bit_Slice4_out1 <= interrupts_in_unsigned(3);

  Bit_Slice3_out1 <= interrupts_in_unsigned(4);

  Bit_Slice2_out1 <= interrupts_in_unsigned(5);

  Bit_Slice1_out1 <= interrupts_in_unsigned(6);

  Bit_Slice_out1 <= interrupts_in_unsigned(7);

  Constant_out1 <= '0';

  
  Multiport_Switch_out1 <= Bit_Slice5_out1 WHEN select_AXI_unsigned = to_unsigned(0, 32) ELSE
      Bit_Slice6_out1 WHEN select_AXI_unsigned = to_unsigned(1, 32) ELSE
      Bit_Slice7_out1 WHEN select_AXI_unsigned = to_unsigned(2, 32) ELSE
      Bit_Slice4_out1 WHEN select_AXI_unsigned = to_unsigned(3, 32) ELSE
      Bit_Slice3_out1 WHEN select_AXI_unsigned = to_unsigned(4, 32) ELSE
      Bit_Slice2_out1 WHEN select_AXI_unsigned = to_unsigned(5, 32) ELSE
      Bit_Slice1_out1 WHEN select_AXI_unsigned = to_unsigned(6, 32) ELSE
      Bit_Slice_out1 WHEN select_AXI_unsigned = to_unsigned(7, 32) ELSE
      Constant_out1;

  
  Compare_To_Constant7_out1 <= '1' WHEN select_AXI_unsigned = to_unsigned(7, 32) ELSE
      '0';

  
  switch_compare_1 <= '1' WHEN Compare_To_Constant7_out1 > '0' ELSE
      '0';

  Constant1_out1 <= '0';

  
  Switch7_out1 <= Constant1_out1 WHEN switch_compare_1 = '0' ELSE
      Subsystem1_out1;

  
  Compare_To_Constant6_out1 <= '1' WHEN select_AXI_unsigned = to_unsigned(6, 32) ELSE
      '0';

  
  switch_compare_1_1 <= '1' WHEN Compare_To_Constant6_out1 > '0' ELSE
      '0';

  
  Switch8_out1 <= Constant1_out1 WHEN switch_compare_1_1 = '0' ELSE
      Subsystem1_out1;

  
  Compare_To_Constant5_out1 <= '1' WHEN select_AXI_unsigned = to_unsigned(5, 32) ELSE
      '0';

  
  switch_compare_1_2 <= '1' WHEN Compare_To_Constant5_out1 > '0' ELSE
      '0';

  
  Switch5_out1 <= Constant1_out1 WHEN switch_compare_1_2 = '0' ELSE
      Subsystem1_out1;

  
  Compare_To_Constant4_out1 <= '1' WHEN select_AXI_unsigned = to_unsigned(4, 32) ELSE
      '0';

  
  switch_compare_1_3 <= '1' WHEN Compare_To_Constant4_out1 > '0' ELSE
      '0';

  
  Switch6_out1 <= Constant1_out1 WHEN switch_compare_1_3 = '0' ELSE
      Subsystem1_out1;

  
  Compare_To_Constant3_out1 <= '1' WHEN select_AXI_unsigned = to_unsigned(3, 32) ELSE
      '0';

  
  switch_compare_1_4 <= '1' WHEN Compare_To_Constant3_out1 > '0' ELSE
      '0';

  
  Switch3_out1 <= Constant1_out1 WHEN switch_compare_1_4 = '0' ELSE
      Subsystem1_out1;

  
  Compare_To_Constant2_out1 <= '1' WHEN select_AXI_unsigned = to_unsigned(2, 32) ELSE
      '0';

  
  switch_compare_1_5 <= '1' WHEN Compare_To_Constant2_out1 > '0' ELSE
      '0';

  
  Switch4_out1 <= Constant1_out1 WHEN switch_compare_1_5 = '0' ELSE
      Subsystem1_out1;

  
  Compare_To_Constant1_out1 <= '1' WHEN select_AXI_unsigned = to_unsigned(1, 32) ELSE
      '0';

  
  switch_compare_1_6 <= '1' WHEN Compare_To_Constant1_out1 > '0' ELSE
      '0';

  
  Switch1_out1 <= Constant1_out1 WHEN switch_compare_1_6 = '0' ELSE
      Subsystem1_out1;

  
  Compare_To_Constant_out1 <= '1' WHEN select_AXI_unsigned = to_unsigned(0, 32) ELSE
      '0';

  
  switch_compare_1_7 <= '1' WHEN Compare_To_Constant_out1 > '0' ELSE
      '0';

  
  Switch2_out1 <= Constant1_out1 WHEN switch_compare_1_7 = '0' ELSE
      Subsystem1_out1;

  Bit_Concat_out1 <= unsigned'(Switch7_out1 & Switch8_out1 & Switch5_out1 & Switch6_out1 & Switch3_out1 & Switch4_out1 & Switch1_out1 & Switch2_out1);

  interrupt_out_isr <= std_logic_vector(Bit_Concat_out1);

  Data_Type_Conversion3_out1 <= select_AXI_unsigned(3 DOWNTO 0);

  select_out <= std_logic_vector(Data_Type_Conversion3_out1);

  ce_out <= clk_enable;

  interrupt_out_adc <= Multiport_Switch_out1;

END rtl;

