-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\uz_6ph_pu_vsd_voltages\uz_6ph_pu_ip_src_finite_control_set.vhd
-- Created: 2022-08-23 11:32:44
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_6ph_pu_ip_src_finite_control_set
-- Source Path: uz_6ph_pu_vsd_voltages/uz_6ph_pu_voltages_vsd/finite_control_set
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.uz_6ph_pu_ip_src_uz_6ph_pu_voltages_vsd_pkg.ALL;

ENTITY uz_6ph_pu_ip_src_finite_control_set IS
  PORT( v_DC_pu                           :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
        sin_angle                         :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En16
        cos_angle                         :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En16
        index                             :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        pu_ud                             :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En24
        pu_uq                             :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En24
        pu_ux                             :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En24
        pu_uy                             :   OUT   std_logic_vector(26 DOWNTO 0)  -- sfix27_En24
        );
END uz_6ph_pu_ip_src_finite_control_set;


ARCHITECTURE rtl OF uz_6ph_pu_ip_src_finite_control_set IS

  -- Constants
  CONSTANT vd_pu                          : matrix_of_signed18(0 TO 63, 0 TO 1) := 
    (( to_signed(16#00000#, 18), to_signed(16#00000#, 18) ), ( to_signed(16#02AAB#, 18),
     to_signed(16#00000#, 18) ), ( to_signed(-16#01555#, 18), to_signed(16#024F3#, 18) ),
     ( to_signed(16#01555#, 18), to_signed(16#024F3#, 18) ), ( to_signed(-16#01555#, 18),
     to_signed(-16#024F3#, 18) ), ( to_signed(16#01555#, 18), to_signed(-16#024F3#, 18) ),
     ( to_signed(-16#02AAB#, 18), to_signed(16#00000#, 18) ), ( to_signed(16#00000#, 18),
     to_signed(16#00000#, 18) ), ( to_signed(16#024F3#, 18), to_signed(16#01555#, 18) ),
     ( to_signed(16#04F9E#, 18), to_signed(16#01555#, 18) ), ( to_signed(16#00F9E#, 18),
     to_signed(16#03A49#, 18) ), ( to_signed(16#03A49#, 18), to_signed(16#03A49#, 18) ),
     ( to_signed(16#00F9E#, 18), to_signed(-16#00F9E#, 18) ), ( to_signed(16#03A49#, 18),
     to_signed(-16#00F9E#, 18) ), ( to_signed(-16#005B7#, 18), to_signed(16#01555#, 18) ),
     ( to_signed(16#024F3#, 18), to_signed(16#01555#, 18) ), ( to_signed(-16#024F3#, 18),
     to_signed(16#01555#, 18) ), ( to_signed(16#005B7#, 18), to_signed(16#01555#, 18) ),
     ( to_signed(-16#03A49#, 18), to_signed(16#03A49#, 18) ), ( to_signed(-16#00F9E#, 18),
     to_signed(16#03A49#, 18) ), ( to_signed(-16#03A49#, 18), to_signed(-16#00F9E#, 18) ),
     ( to_signed(-16#00F9E#, 18), to_signed(-16#00F9E#, 18) ), ( to_signed(-16#04F9E#, 18),
     to_signed(16#01555#, 18) ), ( to_signed(-16#024F3#, 18), to_signed(16#01555#, 18) ),
     ( to_signed(16#00000#, 18), to_signed(16#02AAB#, 18) ), ( to_signed(16#02AAB#, 18),
     to_signed(16#02AAB#, 18) ), ( to_signed(-16#01555#, 18), to_signed(16#04F9E#, 18) ),
     ( to_signed(16#01555#, 18), to_signed(16#04F9E#, 18) ), ( to_signed(-16#01555#, 18),
     to_signed(16#005B7#, 18) ), ( to_signed(16#01555#, 18), to_signed(16#005B7#, 18) ),
     ( to_signed(-16#02AAB#, 18), to_signed(16#02AAB#, 18) ), ( to_signed(16#00000#, 18),
     to_signed(16#02AAB#, 18) ), ( to_signed(16#00000#, 18), to_signed(-16#02AAB#, 18) ),
     ( to_signed(16#02AAB#, 18), to_signed(-16#02AAB#, 18) ), ( to_signed(-16#01555#, 18),
     to_signed(-16#005B7#, 18) ), ( to_signed(16#01555#, 18), to_signed(-16#005B7#, 18) ),
     ( to_signed(-16#01555#, 18), to_signed(-16#04F9E#, 18) ), ( to_signed(16#01555#, 18),
     to_signed(-16#04F9E#, 18) ), ( to_signed(-16#02AAB#, 18), to_signed(-16#02AAB#, 18) ),
     ( to_signed(16#00000#, 18), to_signed(-16#02AAB#, 18) ), ( to_signed(16#024F3#, 18),
     to_signed(-16#01555#, 18) ), ( to_signed(16#04F9E#, 18), to_signed(-16#01555#, 18) ),
     ( to_signed(16#00F9E#, 18), to_signed(16#00F9E#, 18) ), ( to_signed(16#03A49#, 18),
     to_signed(16#00F9E#, 18) ), ( to_signed(16#00F9E#, 18), to_signed(-16#03A49#, 18) ),
     ( to_signed(16#03A49#, 18), to_signed(-16#03A49#, 18) ), ( to_signed(-16#005B7#, 18),
     to_signed(-16#01555#, 18) ), ( to_signed(16#024F3#, 18), to_signed(-16#01555#, 18) ),
     ( to_signed(-16#024F3#, 18), to_signed(-16#01555#, 18) ), ( to_signed(16#005B7#, 18),
     to_signed(-16#01555#, 18) ), ( to_signed(-16#03A49#, 18), to_signed(16#00F9E#, 18) ),
     ( to_signed(-16#00F9E#, 18), to_signed(16#00F9E#, 18) ), ( to_signed(-16#03A49#, 18),
     to_signed(-16#03A49#, 18) ), ( to_signed(-16#00F9E#, 18), to_signed(-16#03A49#, 18) ),
     ( to_signed(-16#04F9E#, 18), to_signed(-16#01555#, 18) ), ( to_signed(-16#024F3#, 18),
     to_signed(-16#01555#, 18) ), ( to_signed(16#00000#, 18), to_signed(16#00000#, 18) ),
     ( to_signed(16#02AAB#, 18), to_signed(16#00000#, 18) ), ( to_signed(-16#01555#, 18),
     to_signed(16#024F3#, 18) ), ( to_signed(16#01555#, 18), to_signed(16#024F3#, 18) ),
     ( to_signed(-16#01555#, 18), to_signed(-16#024F3#, 18) ), ( to_signed(16#01555#, 18),
     to_signed(-16#024F3#, 18) ), ( to_signed(-16#02AAB#, 18), to_signed(16#00000#, 18) ),
     ( to_signed(16#00000#, 18), to_signed(16#00000#, 18) ));  -- sfix18 [64x2]
  CONSTANT vx_pu                          : vector_of_signed18(0 TO 63) := 
    (to_signed(16#00000#, 18), to_signed(16#02AAB#, 18), to_signed(-16#01555#, 18), to_signed(16#01555#, 18),
     to_signed(-16#01555#, 18), to_signed(16#01555#, 18), to_signed(-16#02AAB#, 18), to_signed(16#00000#, 18),
     to_signed(-16#024F3#, 18), to_signed(16#005B7#, 18), to_signed(-16#03A49#, 18), to_signed(-16#00F9E#, 18),
     to_signed(-16#03A49#, 18), to_signed(-16#00F9E#, 18), to_signed(-16#04F9E#, 18), to_signed(-16#024F3#, 18),
     to_signed(16#024F3#, 18), to_signed(16#04F9E#, 18), to_signed(16#00F9E#, 18), to_signed(16#03A49#, 18),
     to_signed(16#00F9E#, 18), to_signed(16#03A49#, 18), to_signed(-16#005B7#, 18), to_signed(16#024F3#, 18),
     to_signed(16#00000#, 18), to_signed(16#02AAB#, 18), to_signed(-16#01555#, 18), to_signed(16#01555#, 18),
     to_signed(-16#01555#, 18), to_signed(16#01555#, 18), to_signed(-16#02AAB#, 18), to_signed(16#00000#, 18),
     to_signed(16#00000#, 18), to_signed(16#02AAB#, 18), to_signed(-16#01555#, 18), to_signed(16#01555#, 18),
     to_signed(-16#01555#, 18), to_signed(16#01555#, 18), to_signed(-16#02AAB#, 18), to_signed(16#00000#, 18),
     to_signed(-16#024F3#, 18), to_signed(16#005B7#, 18), to_signed(-16#03A49#, 18), to_signed(-16#00F9E#, 18),
     to_signed(-16#03A49#, 18), to_signed(-16#00F9E#, 18), to_signed(-16#04F9E#, 18), to_signed(-16#024F3#, 18),
     to_signed(16#024F3#, 18), to_signed(16#04F9E#, 18), to_signed(16#00F9E#, 18), to_signed(16#03A49#, 18),
     to_signed(16#00F9E#, 18), to_signed(16#03A49#, 18), to_signed(-16#005B7#, 18), to_signed(16#024F3#, 18),
     to_signed(16#00000#, 18), to_signed(16#02AAB#, 18), to_signed(-16#01555#, 18), to_signed(16#01555#, 18),
     to_signed(-16#01555#, 18), to_signed(16#01555#, 18), to_signed(-16#02AAB#, 18), to_signed(16#00000#, 18));  -- sfix18 [64]
  CONSTANT vy_pu                          : vector_of_signed18(0 TO 63) := 
    (to_signed(16#00000#, 18), to_signed(16#00000#, 18), to_signed(-16#024F3#, 18), to_signed(-16#024F3#, 18),
     to_signed(16#024F3#, 18), to_signed(16#024F3#, 18), to_signed(16#00000#, 18), to_signed(16#00000#, 18),
     to_signed(16#01555#, 18), to_signed(16#01555#, 18), to_signed(-16#00F9E#, 18), to_signed(-16#00F9E#, 18),
     to_signed(16#03A49#, 18), to_signed(16#03A49#, 18), to_signed(16#01555#, 18), to_signed(16#01555#, 18),
     to_signed(16#01555#, 18), to_signed(16#01555#, 18), to_signed(-16#00F9E#, 18), to_signed(-16#00F9E#, 18),
     to_signed(16#03A49#, 18), to_signed(16#03A49#, 18), to_signed(16#01555#, 18), to_signed(16#01555#, 18),
     to_signed(16#02AAB#, 18), to_signed(16#02AAB#, 18), to_signed(16#005B7#, 18), to_signed(16#005B7#, 18),
     to_signed(16#04F9E#, 18), to_signed(16#04F9E#, 18), to_signed(16#02AAB#, 18), to_signed(16#02AAB#, 18),
     to_signed(-16#02AAB#, 18), to_signed(-16#02AAB#, 18), to_signed(-16#04F9E#, 18), to_signed(-16#04F9E#, 18),
     to_signed(-16#005B7#, 18), to_signed(-16#005B7#, 18), to_signed(-16#02AAB#, 18), to_signed(-16#02AAB#, 18),
     to_signed(-16#01555#, 18), to_signed(-16#01555#, 18), to_signed(-16#03A49#, 18), to_signed(-16#03A49#, 18),
     to_signed(16#00F9E#, 18), to_signed(16#00F9E#, 18), to_signed(-16#01555#, 18), to_signed(-16#01555#, 18),
     to_signed(-16#01555#, 18), to_signed(-16#01555#, 18), to_signed(-16#03A49#, 18), to_signed(-16#03A49#, 18),
     to_signed(16#00F9E#, 18), to_signed(16#00F9E#, 18), to_signed(-16#01555#, 18), to_signed(-16#01555#, 18),
     to_signed(16#00000#, 18), to_signed(16#00000#, 18), to_signed(-16#024F3#, 18), to_signed(-16#024F3#, 18),
     to_signed(16#024F3#, 18), to_signed(16#024F3#, 18), to_signed(16#00000#, 18), to_signed(16#00000#, 18));  -- sfix18 [64]

  -- Signals
  SIGNAL v_DC_pu_signed                   : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL sin_angle_signed                 : signed(17 DOWNTO 0);  -- sfix18_En16
  SIGNAL cos_angle_signed                 : signed(17 DOWNTO 0);  -- sfix18_En16
  SIGNAL index_unsigned                   : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL pu_ud_tmp                        : signed(26 DOWNTO 0);  -- sfix27_En24
  SIGNAL pu_uq_tmp                        : signed(26 DOWNTO 0);  -- sfix27_En24
  SIGNAL pu_ux_tmp                        : signed(26 DOWNTO 0);  -- sfix27_En24
  SIGNAL pu_uy_tmp                        : signed(26 DOWNTO 0);  -- sfix27_En24

BEGIN
  v_DC_pu_signed <= signed(v_DC_pu);

  sin_angle_signed <= signed(sin_angle);

  cos_angle_signed <= signed(cos_angle);

  index_unsigned <= unsigned(index);

  finite_control_set_output : PROCESS (cos_angle_signed, index_unsigned, sin_angle_signed, v_DC_pu_signed)
    VARIABLE sub_cast : signed(31 DOWNTO 0);
    VARIABLE mul_temp : signed(35 DOWNTO 0);
    VARIABLE add_cast : signed(36 DOWNTO 0);
    VARIABLE sub_cast_0 : signed(31 DOWNTO 0);
    VARIABLE mul_temp_0 : signed(35 DOWNTO 0);
    VARIABLE add_cast_0 : signed(36 DOWNTO 0);
    VARIABLE add_temp : signed(36 DOWNTO 0);
    VARIABLE mul_temp_1 : signed(54 DOWNTO 0);
    VARIABLE sub_cast_1 : signed(31 DOWNTO 0);
    VARIABLE cast : signed(18 DOWNTO 0);
    VARIABLE cast_0 : signed(18 DOWNTO 0);
    VARIABLE cast_1 : signed(17 DOWNTO 0);
    VARIABLE mul_temp_2 : signed(35 DOWNTO 0);
    VARIABLE add_cast_1 : signed(36 DOWNTO 0);
    VARIABLE sub_cast_2 : signed(31 DOWNTO 0);
    VARIABLE mul_temp_3 : signed(35 DOWNTO 0);
    VARIABLE add_cast_2 : signed(36 DOWNTO 0);
    VARIABLE add_temp_0 : signed(36 DOWNTO 0);
    VARIABLE mul_temp_4 : signed(54 DOWNTO 0);
    VARIABLE sub_cast_3 : signed(31 DOWNTO 0);
    VARIABLE mul_temp_5 : signed(35 DOWNTO 0);
    VARIABLE sub_cast_4 : signed(31 DOWNTO 0);
    VARIABLE mul_temp_6 : signed(35 DOWNTO 0);
  BEGIN
    --MATLAB Function 'uz_6ph_pu_voltages_vsd/finite_control_set'
    -- u_d-voltages lookup factors alpha/beta
    -- u_q-voltages lookup factors alpha/beta
    -- u_x-voltages
    -- u_y-voltages
    sub_cast := signed(index_unsigned);
    mul_temp := vd_pu(to_integer(sub_cast - 1), 0) * cos_angle_signed;
    add_cast := resize(mul_temp, 37);
    sub_cast_0 := signed(index_unsigned);
    mul_temp_0 := vd_pu(to_integer(sub_cast_0 - 1), 1) * sin_angle_signed;
    add_cast_0 := resize(mul_temp_0, 37);
    add_temp := add_cast + add_cast_0;
    mul_temp_1 := v_DC_pu_signed * add_temp;
    pu_ud_tmp <= mul_temp_1(48 DOWNTO 22);
    sub_cast_1 := signed(index_unsigned);
    cast := resize(sin_angle_signed, 19);
    cast_0 :=  - (cast);
    cast_1 := cast_0(17 DOWNTO 0);
    mul_temp_2 := vd_pu(to_integer(sub_cast_1 - 1), 0) * cast_1;
    add_cast_1 := resize(mul_temp_2, 37);
    sub_cast_2 := signed(index_unsigned);
    mul_temp_3 := vd_pu(to_integer(sub_cast_2 - 1), 1) * cos_angle_signed;
    add_cast_2 := resize(mul_temp_3, 37);
    add_temp_0 := add_cast_1 + add_cast_2;
    mul_temp_4 := v_DC_pu_signed * add_temp_0;
    pu_uq_tmp <= mul_temp_4(48 DOWNTO 22);
    sub_cast_3 := signed(index_unsigned);
    mul_temp_5 := v_DC_pu_signed * vx_pu(to_integer(sub_cast_3 - 1));
    pu_ux_tmp <= mul_temp_5(32 DOWNTO 6);
    sub_cast_4 := signed(index_unsigned);
    mul_temp_6 := v_DC_pu_signed * vy_pu(to_integer(sub_cast_4 - 1));
    pu_uy_tmp <= mul_temp_6(32 DOWNTO 6);
  END PROCESS finite_control_set_output;


  pu_ud <= std_logic_vector(pu_ud_tmp);

  pu_uq <= std_logic_vector(pu_uq_tmp);

  pu_ux <= std_logic_vector(pu_ux_tmp);

  pu_uy <= std_logic_vector(pu_uy_tmp);

END rtl;

