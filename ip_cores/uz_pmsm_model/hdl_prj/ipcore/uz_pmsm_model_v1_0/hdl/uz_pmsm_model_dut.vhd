-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\uz_pmsm_model\uz_pmsm_model_dut.vhd
-- Created: 2024-05-23 13:51:11
-- 
-- Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_pmsm_model_dut
-- Source Path: uz_pmsm_model/uz_pmsm_model_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY uz_pmsm_model_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        reset_integrators                 :   IN    std_logic;  -- ufix1
        simulate_mechanical               :   IN    std_logic;  -- ufix1
        simulate_nonlinear                :   IN    std_logic;  -- ufix1
        reciprocal_J                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        mu                                :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        M_n0                              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        L_d                               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        L_q                               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        R1                                :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        polepairs                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        psi_pm                            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_0               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_1               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_2               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_3               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_4               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_5               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_6               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_7               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_8               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_9               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_10              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_11              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_12              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_13              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_14              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_15              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_16              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_17              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_18              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_19              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_20              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_21              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        fitting_parameter_22              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        inputs_0                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        inputs_1                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        inputs_2                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        inputs_3                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        ce_out                            :   OUT   std_logic;  -- ufix1
        outputs_0                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        outputs_1                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        outputs_2                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        outputs_3                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
        );
END uz_pmsm_model_dut;


ARCHITECTURE rtl OF uz_pmsm_model_dut IS

  -- Component Declarations
  COMPONENT uz_pmsm_model_src_uz_pmsm_model
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          reset_integrators               :   IN    std_logic;  -- ufix1
          simulate_mechanical             :   IN    std_logic;  -- ufix1
          simulate_nonlinear              :   IN    std_logic;  -- ufix1
          reciprocal_J                    :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          mu                              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          M_n0                            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          L_d                             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          L_q                             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          R1                              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          polepairs                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          psi_pm                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_0             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_1             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_2             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_3             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_4             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_5             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_6             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_7             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_8             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_9             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_10            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_11            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_12            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_13            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_14            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_15            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_16            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_17            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_18            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_19            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_20            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_21            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          fitting_parameter_22            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          inputs_0                        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          inputs_1                        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          inputs_2                        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          inputs_3                        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          ce_out                          :   OUT   std_logic;  -- ufix1
          outputs_0                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          outputs_1                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          outputs_2                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          outputs_3                       :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : uz_pmsm_model_src_uz_pmsm_model
    USE ENTITY work.uz_pmsm_model_src_uz_pmsm_model(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL outputs_0_sig                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL outputs_1_sig                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL outputs_2_sig                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL outputs_3_sig                    : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  u_uz_pmsm_model_src_uz_pmsm_model : uz_pmsm_model_src_uz_pmsm_model
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              reset_integrators => reset_integrators,  -- ufix1
              simulate_mechanical => simulate_mechanical,  -- ufix1
              simulate_nonlinear => simulate_nonlinear,  -- ufix1
              reciprocal_J => reciprocal_J,  -- ufix32
              mu => mu,  -- ufix32
              M_n0 => M_n0,  -- ufix32
              L_d => L_d,  -- ufix32
              L_q => L_q,  -- ufix32
              R1 => R1,  -- ufix32
              polepairs => polepairs,  -- ufix32
              psi_pm => psi_pm,  -- ufix32
              fitting_parameter_0 => fitting_parameter_0,  -- ufix32
              fitting_parameter_1 => fitting_parameter_1,  -- ufix32
              fitting_parameter_2 => fitting_parameter_2,  -- ufix32
              fitting_parameter_3 => fitting_parameter_3,  -- ufix32
              fitting_parameter_4 => fitting_parameter_4,  -- ufix32
              fitting_parameter_5 => fitting_parameter_5,  -- ufix32
              fitting_parameter_6 => fitting_parameter_6,  -- ufix32
              fitting_parameter_7 => fitting_parameter_7,  -- ufix32
              fitting_parameter_8 => fitting_parameter_8,  -- ufix32
              fitting_parameter_9 => fitting_parameter_9,  -- ufix32
              fitting_parameter_10 => fitting_parameter_10,  -- ufix32
              fitting_parameter_11 => fitting_parameter_11,  -- ufix32
              fitting_parameter_12 => fitting_parameter_12,  -- ufix32
              fitting_parameter_13 => fitting_parameter_13,  -- ufix32
              fitting_parameter_14 => fitting_parameter_14,  -- ufix32
              fitting_parameter_15 => fitting_parameter_15,  -- ufix32
              fitting_parameter_16 => fitting_parameter_16,  -- ufix32
              fitting_parameter_17 => fitting_parameter_17,  -- ufix32
              fitting_parameter_18 => fitting_parameter_18,  -- ufix32
              fitting_parameter_19 => fitting_parameter_19,  -- ufix32
              fitting_parameter_20 => fitting_parameter_20,  -- ufix32
              fitting_parameter_21 => fitting_parameter_21,  -- ufix32
              fitting_parameter_22 => fitting_parameter_22,  -- ufix32
              inputs_0 => inputs_0,  -- ufix32
              inputs_1 => inputs_1,  -- ufix32
              inputs_2 => inputs_2,  -- ufix32
              inputs_3 => inputs_3,  -- ufix32
              ce_out => ce_out_sig,  -- ufix1
              outputs_0 => outputs_0_sig,  -- ufix32
              outputs_1 => outputs_1_sig,  -- ufix32
              outputs_2 => outputs_2_sig,  -- ufix32
              outputs_3 => outputs_3_sig  -- ufix32
              );

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  outputs_0 <= outputs_0_sig;

  outputs_1 <= outputs_1_sig;

  outputs_2 <= outputs_2_sig;

  outputs_3 <= outputs_3_sig;

END rtl;

