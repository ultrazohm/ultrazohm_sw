-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\valen\Documents\repos\UZ\ultrazohm_sw_working\ip_cores\uz_rs_flip_flop\hdl_prj\hdlsrc\uz_rs_flip_flop\uz_rs_flip_flop.vhd
-- Created: 2022-09-27 19:50:05
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_rs_flip_flop
-- Source Path: uz_rs_flip_flop
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY uz_rs_flip_flop IS
  PORT( IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESETN                     :   IN    std_logic;  -- ufix1
        ff_reset                          :   IN    std_logic;  -- ufix1
        ff_set                            :   IN    std_logic;  -- ufix1
        ff_out                            :   OUT   std_logic  -- ufix1
        );
END uz_rs_flip_flop;


ARCHITECTURE rtl OF uz_rs_flip_flop IS

  -- Component Declarations
  COMPONENT uz_rs_flip_flop_reset_sync
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset_in                        :   IN    std_logic;  -- ufix1
          reset_out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT uz_rs_flip_flop_dut
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          dut_enable                      :   IN    std_logic;  -- ufix1
          ff_reset                        :   IN    std_logic;  -- ufix1
          ff_set                          :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          ff_out                          :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : uz_rs_flip_flop_reset_sync
    USE ENTITY work.uz_rs_flip_flop_reset_sync(rtl);

  FOR ALL : uz_rs_flip_flop_dut
    USE ENTITY work.uz_rs_flip_flop_dut(rtl);

  -- Signals
  SIGNAL reset                            : std_logic;
  SIGNAL dut_enable                       : std_logic;  -- ufix1
  SIGNAL reset_cm                         : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL ff_out_sig                       : std_logic;  -- ufix1

BEGIN
  u_uz_rs_flip_flop_reset_sync_inst : uz_rs_flip_flop_reset_sync
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset_in => reset_cm,  -- ufix1
              reset_out => reset
              );

  u_uz_rs_flip_flop_dut_inst : uz_rs_flip_flop_dut
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset => reset,
              dut_enable => dut_enable,  -- ufix1
              ff_reset => ff_reset,  -- ufix1
              ff_set => ff_set,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              ff_out => ff_out_sig  -- ufix1
              );

  dut_enable <= '1';

  reset_cm <=  NOT IPCORE_RESETN;

  ff_out <= ff_out_sig;

END rtl;

