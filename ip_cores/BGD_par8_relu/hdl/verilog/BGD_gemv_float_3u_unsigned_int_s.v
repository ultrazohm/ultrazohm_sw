// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module BGD_gemv_float_3u_unsigned_int_s (
        ap_start,
        start_full_n,
        start_out,
        start_write,
        l_strWeights6_dout,
        l_strWeights6_empty_n,
        l_strWeights6_read,
        l_strLatterError7_dout,
        l_strLatterError7_empty_n,
        l_strLatterError7_read,
        l_strZero8_dout,
        l_strZero8_empty_n,
        l_strZero8_read,
        l_strMv9_din,
        l_strMv9_full_n,
        l_strMv9_write,
        p_m_dout,
        p_m_empty_n,
        p_m_read,
        p_n_dout,
        p_n_empty_n,
        p_n_read,
        p_m_out_din,
        p_m_out_full_n,
        p_m_out_write,
        ap_clk,
        ap_rst,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_start;
input   start_full_n;
output   start_out;
output   start_write;
input  [255:0] l_strWeights6_dout;
input   l_strWeights6_empty_n;
output   l_strWeights6_read;
input  [255:0] l_strLatterError7_dout;
input   l_strLatterError7_empty_n;
output   l_strLatterError7_read;
input  [31:0] l_strZero8_dout;
input   l_strZero8_empty_n;
output   l_strZero8_read;
output  [31:0] l_strMv9_din;
input   l_strMv9_full_n;
output   l_strMv9_write;
input  [31:0] p_m_dout;
input   p_m_empty_n;
output   p_m_read;
input  [31:0] p_n_dout;
input   p_n_empty_n;
output   p_n_read;
output  [31:0] p_m_out_din;
input   p_m_out_full_n;
output   p_m_out_write;
input   ap_clk;
input   ap_rst;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

reg start_write;

reg    real_start;
reg    start_once_reg;
wire    internal_ap_ready;
wire    gemv_float_3u_unsigned_int_entry5691_U0_ap_start;
wire    gemv_float_3u_unsigned_int_entry5691_U0_ap_done;
wire    gemv_float_3u_unsigned_int_entry5691_U0_ap_continue;
wire    gemv_float_3u_unsigned_int_entry5691_U0_ap_idle;
wire    gemv_float_3u_unsigned_int_entry5691_U0_ap_ready;
wire    gemv_float_3u_unsigned_int_entry5691_U0_p_m_read;
wire   [31:0] gemv_float_3u_unsigned_int_entry5691_U0_p_m_out_din;
wire    gemv_float_3u_unsigned_int_entry5691_U0_p_m_out_write;
wire    gemv_float_3u_unsigned_int_entry5691_U0_p_n_read;
wire   [31:0] gemv_float_3u_unsigned_int_entry5691_U0_p_m_c_i_din;
wire    gemv_float_3u_unsigned_int_entry5691_U0_p_m_c_i_write;
wire   [31:0] gemv_float_3u_unsigned_int_entry5691_U0_p_m_c9_i_din;
wire    gemv_float_3u_unsigned_int_entry5691_U0_p_m_c9_i_write;
wire   [31:0] gemv_float_3u_unsigned_int_entry5691_U0_p_n_c_i_din;
wire    gemv_float_3u_unsigned_int_entry5691_U0_p_n_c_i_write;
wire    ap_sync_continue;
wire    gemv_float_3u_unsigned_int_float_U0_ap_start;
wire    gemv_float_3u_unsigned_int_float_U0_start_out;
wire    gemv_float_3u_unsigned_int_float_U0_start_write;
wire    gemv_float_3u_unsigned_int_float_U0_p_M_read;
wire    gemv_float_3u_unsigned_int_float_U0_p_x_read;
wire   [31:0] gemv_float_3u_unsigned_int_float_U0_p_y_din;
wire    gemv_float_3u_unsigned_int_float_U0_p_y_write;
wire    gemv_float_3u_unsigned_int_float_U0_p_m_r_read;
wire    gemv_float_3u_unsigned_int_float_U0_p_n_read;
wire   [31:0] gemv_float_3u_unsigned_int_float_U0_p_m_out_din;
wire    gemv_float_3u_unsigned_int_float_U0_p_m_out_write;
wire    gemv_float_3u_unsigned_int_float_U0_ap_done;
wire    gemv_float_3u_unsigned_int_float_U0_ap_ready;
wire    gemv_float_3u_unsigned_int_float_U0_ap_idle;
wire    gemv_float_3u_unsigned_int_float_U0_ap_continue;
wire    scal_float_1u_unsigned_int_U0_ap_start;
wire    scal_float_1u_unsigned_int_U0_ap_done;
wire    scal_float_1u_unsigned_int_U0_ap_continue;
wire    scal_float_1u_unsigned_int_U0_ap_idle;
wire    scal_float_1u_unsigned_int_U0_ap_ready;
wire    scal_float_1u_unsigned_int_U0_l_strZero8_read;
wire   [31:0] scal_float_1u_unsigned_int_U0_l_y3_din;
wire    scal_float_1u_unsigned_int_U0_l_y3_write;
wire    scal_float_1u_unsigned_int_U0_p_n_read;
wire    axpy_float_1u_unsigned_int_U0_ap_start;
wire    axpy_float_1u_unsigned_int_U0_ap_done;
wire    axpy_float_1u_unsigned_int_U0_ap_continue;
wire    axpy_float_1u_unsigned_int_U0_ap_idle;
wire    axpy_float_1u_unsigned_int_U0_ap_ready;
wire    axpy_float_1u_unsigned_int_U0_l_x2_read;
wire    axpy_float_1u_unsigned_int_U0_l_y3_read;
wire   [31:0] axpy_float_1u_unsigned_int_U0_l_strMv9_din;
wire    axpy_float_1u_unsigned_int_U0_l_strMv9_write;
wire    axpy_float_1u_unsigned_int_U0_p_n_read;
wire    p_m_c_i_full_n;
wire   [31:0] p_m_c_i_dout;
wire    p_m_c_i_empty_n;
wire    p_m_c9_i_full_n;
wire   [31:0] p_m_c9_i_dout;
wire    p_m_c9_i_empty_n;
wire    p_n_c_i_full_n;
wire   [31:0] p_n_c_i_dout;
wire    p_n_c_i_empty_n;
wire    l_x_full_n;
wire   [31:0] l_x_dout;
wire    l_x_empty_n;
wire    p_m_c10_i_full_n;
wire   [31:0] p_m_c10_i_dout;
wire    p_m_c10_i_empty_n;
wire    l_y_full_n;
wire   [31:0] l_y_dout;
wire    l_y_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_gemv_float_3u_unsigned_int_entry5691_U0_ap_ready;
wire    ap_sync_gemv_float_3u_unsigned_int_entry5691_U0_ap_ready;
reg   [1:0] gemv_float_3u_unsigned_int_entry5691_U0_ap_ready_count;
reg    ap_sync_reg_gemv_float_3u_unsigned_int_float_U0_ap_ready;
wire    ap_sync_gemv_float_3u_unsigned_int_float_U0_ap_ready;
reg   [1:0] gemv_float_3u_unsigned_int_float_U0_ap_ready_count;
reg    ap_sync_reg_scal_float_1u_unsigned_int_U0_ap_ready;
wire    ap_sync_scal_float_1u_unsigned_int_U0_ap_ready;
reg   [1:0] scal_float_1u_unsigned_int_U0_ap_ready_count;
wire    gemv_float_3u_unsigned_int_entry5691_U0_start_full_n;
wire    gemv_float_3u_unsigned_int_entry5691_U0_start_write;
wire   [0:0] start_for_axpy_float_1u_unsigned_int_U0_din;
wire    start_for_axpy_float_1u_unsigned_int_U0_full_n;
wire   [0:0] start_for_axpy_float_1u_unsigned_int_U0_dout;
wire    start_for_axpy_float_1u_unsigned_int_U0_empty_n;
wire    scal_float_1u_unsigned_int_U0_start_full_n;
wire    scal_float_1u_unsigned_int_U0_start_write;
wire    axpy_float_1u_unsigned_int_U0_start_full_n;
wire    axpy_float_1u_unsigned_int_U0_start_write;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_sync_reg_gemv_float_3u_unsigned_int_entry5691_U0_ap_ready = 1'b0;
#0 gemv_float_3u_unsigned_int_entry5691_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_gemv_float_3u_unsigned_int_float_U0_ap_ready = 1'b0;
#0 gemv_float_3u_unsigned_int_float_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_scal_float_1u_unsigned_int_U0_ap_ready = 1'b0;
#0 scal_float_1u_unsigned_int_U0_ap_ready_count = 2'd0;
end

BGD_gemv_float_3u_unsigned_int_entry5691 gemv_float_3u_unsigned_int_entry5691_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(gemv_float_3u_unsigned_int_entry5691_U0_ap_start),
    .ap_done(gemv_float_3u_unsigned_int_entry5691_U0_ap_done),
    .ap_continue(gemv_float_3u_unsigned_int_entry5691_U0_ap_continue),
    .ap_idle(gemv_float_3u_unsigned_int_entry5691_U0_ap_idle),
    .ap_ready(gemv_float_3u_unsigned_int_entry5691_U0_ap_ready),
    .p_m_dout(p_m_dout),
    .p_m_empty_n(p_m_empty_n),
    .p_m_read(gemv_float_3u_unsigned_int_entry5691_U0_p_m_read),
    .p_m_out_din(gemv_float_3u_unsigned_int_entry5691_U0_p_m_out_din),
    .p_m_out_full_n(p_m_out_full_n),
    .p_m_out_write(gemv_float_3u_unsigned_int_entry5691_U0_p_m_out_write),
    .p_n_dout(p_n_dout),
    .p_n_empty_n(p_n_empty_n),
    .p_n_read(gemv_float_3u_unsigned_int_entry5691_U0_p_n_read),
    .p_m_c_i_din(gemv_float_3u_unsigned_int_entry5691_U0_p_m_c_i_din),
    .p_m_c_i_full_n(p_m_c_i_full_n),
    .p_m_c_i_write(gemv_float_3u_unsigned_int_entry5691_U0_p_m_c_i_write),
    .p_m_c9_i_din(gemv_float_3u_unsigned_int_entry5691_U0_p_m_c9_i_din),
    .p_m_c9_i_full_n(p_m_c9_i_full_n),
    .p_m_c9_i_write(gemv_float_3u_unsigned_int_entry5691_U0_p_m_c9_i_write),
    .p_n_c_i_din(gemv_float_3u_unsigned_int_entry5691_U0_p_n_c_i_din),
    .p_n_c_i_full_n(p_n_c_i_full_n),
    .p_n_c_i_write(gemv_float_3u_unsigned_int_entry5691_U0_p_n_c_i_write)
);

BGD_gemv_float_3u_unsigned_int_float_s gemv_float_3u_unsigned_int_float_U0(
    .ap_start(gemv_float_3u_unsigned_int_float_U0_ap_start),
    .start_full_n(start_for_axpy_float_1u_unsigned_int_U0_full_n),
    .start_out(gemv_float_3u_unsigned_int_float_U0_start_out),
    .start_write(gemv_float_3u_unsigned_int_float_U0_start_write),
    .p_M_dout(l_strWeights6_dout),
    .p_M_empty_n(l_strWeights6_empty_n),
    .p_M_read(gemv_float_3u_unsigned_int_float_U0_p_M_read),
    .p_x_dout(l_strLatterError7_dout),
    .p_x_empty_n(l_strLatterError7_empty_n),
    .p_x_read(gemv_float_3u_unsigned_int_float_U0_p_x_read),
    .p_y_din(gemv_float_3u_unsigned_int_float_U0_p_y_din),
    .p_y_full_n(l_x_full_n),
    .p_y_write(gemv_float_3u_unsigned_int_float_U0_p_y_write),
    .p_m_r_dout(p_m_c_i_dout),
    .p_m_r_empty_n(p_m_c_i_empty_n),
    .p_m_r_read(gemv_float_3u_unsigned_int_float_U0_p_m_r_read),
    .p_n_dout(p_n_c_i_dout),
    .p_n_empty_n(p_n_c_i_empty_n),
    .p_n_read(gemv_float_3u_unsigned_int_float_U0_p_n_read),
    .p_m_out_din(gemv_float_3u_unsigned_int_float_U0_p_m_out_din),
    .p_m_out_full_n(p_m_c10_i_full_n),
    .p_m_out_write(gemv_float_3u_unsigned_int_float_U0_p_m_out_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_done(gemv_float_3u_unsigned_int_float_U0_ap_done),
    .ap_ready(gemv_float_3u_unsigned_int_float_U0_ap_ready),
    .ap_idle(gemv_float_3u_unsigned_int_float_U0_ap_idle),
    .ap_continue(gemv_float_3u_unsigned_int_float_U0_ap_continue)
);

BGD_scal_float_1u_unsigned_int_s scal_float_1u_unsigned_int_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(scal_float_1u_unsigned_int_U0_ap_start),
    .ap_done(scal_float_1u_unsigned_int_U0_ap_done),
    .ap_continue(scal_float_1u_unsigned_int_U0_ap_continue),
    .ap_idle(scal_float_1u_unsigned_int_U0_ap_idle),
    .ap_ready(scal_float_1u_unsigned_int_U0_ap_ready),
    .l_strZero8_dout(l_strZero8_dout),
    .l_strZero8_empty_n(l_strZero8_empty_n),
    .l_strZero8_read(scal_float_1u_unsigned_int_U0_l_strZero8_read),
    .l_y3_din(scal_float_1u_unsigned_int_U0_l_y3_din),
    .l_y3_full_n(l_y_full_n),
    .l_y3_write(scal_float_1u_unsigned_int_U0_l_y3_write),
    .p_n_dout(p_m_c9_i_dout),
    .p_n_empty_n(p_m_c9_i_empty_n),
    .p_n_read(scal_float_1u_unsigned_int_U0_p_n_read)
);

BGD_axpy_float_1u_unsigned_int_s axpy_float_1u_unsigned_int_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(axpy_float_1u_unsigned_int_U0_ap_start),
    .ap_done(axpy_float_1u_unsigned_int_U0_ap_done),
    .ap_continue(axpy_float_1u_unsigned_int_U0_ap_continue),
    .ap_idle(axpy_float_1u_unsigned_int_U0_ap_idle),
    .ap_ready(axpy_float_1u_unsigned_int_U0_ap_ready),
    .l_x2_dout(l_x_dout),
    .l_x2_empty_n(l_x_empty_n),
    .l_x2_read(axpy_float_1u_unsigned_int_U0_l_x2_read),
    .l_y3_dout(l_y_dout),
    .l_y3_empty_n(l_y_empty_n),
    .l_y3_read(axpy_float_1u_unsigned_int_U0_l_y3_read),
    .l_strMv9_din(axpy_float_1u_unsigned_int_U0_l_strMv9_din),
    .l_strMv9_full_n(l_strMv9_full_n),
    .l_strMv9_write(axpy_float_1u_unsigned_int_U0_l_strMv9_write),
    .p_n_dout(p_m_c10_i_dout),
    .p_n_empty_n(p_m_c10_i_empty_n),
    .p_n_read(axpy_float_1u_unsigned_int_U0_p_n_read)
);

BGD_fifo_w32_d2_S_x1 p_m_c_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gemv_float_3u_unsigned_int_entry5691_U0_p_m_c_i_din),
    .if_full_n(p_m_c_i_full_n),
    .if_write(gemv_float_3u_unsigned_int_entry5691_U0_p_m_c_i_write),
    .if_dout(p_m_c_i_dout),
    .if_empty_n(p_m_c_i_empty_n),
    .if_read(gemv_float_3u_unsigned_int_float_U0_p_m_r_read)
);

BGD_fifo_w32_d2_S_x1 p_m_c9_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gemv_float_3u_unsigned_int_entry5691_U0_p_m_c9_i_din),
    .if_full_n(p_m_c9_i_full_n),
    .if_write(gemv_float_3u_unsigned_int_entry5691_U0_p_m_c9_i_write),
    .if_dout(p_m_c9_i_dout),
    .if_empty_n(p_m_c9_i_empty_n),
    .if_read(scal_float_1u_unsigned_int_U0_p_n_read)
);

BGD_fifo_w32_d2_S_x1 p_n_c_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gemv_float_3u_unsigned_int_entry5691_U0_p_n_c_i_din),
    .if_full_n(p_n_c_i_full_n),
    .if_write(gemv_float_3u_unsigned_int_entry5691_U0_p_n_c_i_write),
    .if_dout(p_n_c_i_dout),
    .if_empty_n(p_n_c_i_empty_n),
    .if_read(gemv_float_3u_unsigned_int_float_U0_p_n_read)
);

BGD_fifo_w32_d2_S_x1 l_x_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gemv_float_3u_unsigned_int_float_U0_p_y_din),
    .if_full_n(l_x_full_n),
    .if_write(gemv_float_3u_unsigned_int_float_U0_p_y_write),
    .if_dout(l_x_dout),
    .if_empty_n(l_x_empty_n),
    .if_read(axpy_float_1u_unsigned_int_U0_l_x2_read)
);

BGD_fifo_w32_d2_S_x1 p_m_c10_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gemv_float_3u_unsigned_int_float_U0_p_m_out_din),
    .if_full_n(p_m_c10_i_full_n),
    .if_write(gemv_float_3u_unsigned_int_float_U0_p_m_out_write),
    .if_dout(p_m_c10_i_dout),
    .if_empty_n(p_m_c10_i_empty_n),
    .if_read(axpy_float_1u_unsigned_int_U0_p_n_read)
);

BGD_fifo_w32_d2_S_x1 l_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(scal_float_1u_unsigned_int_U0_l_y3_din),
    .if_full_n(l_y_full_n),
    .if_write(scal_float_1u_unsigned_int_U0_l_y3_write),
    .if_dout(l_y_dout),
    .if_empty_n(l_y_empty_n),
    .if_read(axpy_float_1u_unsigned_int_U0_l_y3_read)
);

BGD_start_for_axpy_float_1u_unsigned_int_U0 start_for_axpy_float_1u_unsigned_int_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_axpy_float_1u_unsigned_int_U0_din),
    .if_full_n(start_for_axpy_float_1u_unsigned_int_U0_full_n),
    .if_write(gemv_float_3u_unsigned_int_float_U0_start_write),
    .if_dout(start_for_axpy_float_1u_unsigned_int_U0_dout),
    .if_empty_n(start_for_axpy_float_1u_unsigned_int_U0_empty_n),
    .if_read(axpy_float_1u_unsigned_int_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_gemv_float_3u_unsigned_int_entry5691_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_gemv_float_3u_unsigned_int_entry5691_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_gemv_float_3u_unsigned_int_entry5691_U0_ap_ready <= ap_sync_gemv_float_3u_unsigned_int_entry5691_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_gemv_float_3u_unsigned_int_float_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_gemv_float_3u_unsigned_int_float_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_gemv_float_3u_unsigned_int_float_U0_ap_ready <= ap_sync_gemv_float_3u_unsigned_int_float_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_scal_float_1u_unsigned_int_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_scal_float_1u_unsigned_int_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_scal_float_1u_unsigned_int_U0_ap_ready <= ap_sync_scal_float_1u_unsigned_int_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((gemv_float_3u_unsigned_int_entry5691_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        gemv_float_3u_unsigned_int_entry5691_U0_ap_ready_count <= (gemv_float_3u_unsigned_int_entry5691_U0_ap_ready_count - 2'd1);
    end else if (((gemv_float_3u_unsigned_int_entry5691_U0_ap_ready == 1'b1) & (ap_sync_ready == 1'b0))) begin
        gemv_float_3u_unsigned_int_entry5691_U0_ap_ready_count <= (gemv_float_3u_unsigned_int_entry5691_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((gemv_float_3u_unsigned_int_float_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        gemv_float_3u_unsigned_int_float_U0_ap_ready_count <= (gemv_float_3u_unsigned_int_float_U0_ap_ready_count - 2'd1);
    end else if (((gemv_float_3u_unsigned_int_float_U0_ap_ready == 1'b1) & (ap_sync_ready == 1'b0))) begin
        gemv_float_3u_unsigned_int_float_U0_ap_ready_count <= (gemv_float_3u_unsigned_int_float_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (scal_float_1u_unsigned_int_U0_ap_ready == 1'b0))) begin
        scal_float_1u_unsigned_int_U0_ap_ready_count <= (scal_float_1u_unsigned_int_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (scal_float_1u_unsigned_int_U0_ap_ready == 1'b1))) begin
        scal_float_1u_unsigned_int_U0_ap_ready_count <= (scal_float_1u_unsigned_int_U0_ap_ready_count + 2'd1);
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

assign ap_done = ap_sync_done;

assign ap_idle = (scal_float_1u_unsigned_int_U0_ap_idle & gemv_float_3u_unsigned_int_float_U0_ap_idle & gemv_float_3u_unsigned_int_entry5691_U0_ap_idle & axpy_float_1u_unsigned_int_U0_ap_idle);

assign ap_ready = internal_ap_ready;

assign ap_sync_continue = (ap_sync_done & ap_continue);

assign ap_sync_done = (gemv_float_3u_unsigned_int_entry5691_U0_ap_done & axpy_float_1u_unsigned_int_U0_ap_done);

assign ap_sync_gemv_float_3u_unsigned_int_entry5691_U0_ap_ready = (gemv_float_3u_unsigned_int_entry5691_U0_ap_ready | ap_sync_reg_gemv_float_3u_unsigned_int_entry5691_U0_ap_ready);

assign ap_sync_gemv_float_3u_unsigned_int_float_U0_ap_ready = (gemv_float_3u_unsigned_int_float_U0_ap_ready | ap_sync_reg_gemv_float_3u_unsigned_int_float_U0_ap_ready);

assign ap_sync_ready = (ap_sync_scal_float_1u_unsigned_int_U0_ap_ready & ap_sync_gemv_float_3u_unsigned_int_float_U0_ap_ready & ap_sync_gemv_float_3u_unsigned_int_entry5691_U0_ap_ready);

assign ap_sync_scal_float_1u_unsigned_int_U0_ap_ready = (scal_float_1u_unsigned_int_U0_ap_ready | ap_sync_reg_scal_float_1u_unsigned_int_U0_ap_ready);

assign axpy_float_1u_unsigned_int_U0_ap_continue = ap_sync_continue;

assign axpy_float_1u_unsigned_int_U0_ap_start = start_for_axpy_float_1u_unsigned_int_U0_empty_n;

assign axpy_float_1u_unsigned_int_U0_start_full_n = 1'b1;

assign axpy_float_1u_unsigned_int_U0_start_write = 1'b0;

assign gemv_float_3u_unsigned_int_entry5691_U0_ap_continue = ap_sync_continue;

assign gemv_float_3u_unsigned_int_entry5691_U0_ap_start = (real_start & (ap_sync_reg_gemv_float_3u_unsigned_int_entry5691_U0_ap_ready ^ 1'b1));

assign gemv_float_3u_unsigned_int_entry5691_U0_start_full_n = 1'b1;

assign gemv_float_3u_unsigned_int_entry5691_U0_start_write = 1'b0;

assign gemv_float_3u_unsigned_int_float_U0_ap_continue = 1'b1;

assign gemv_float_3u_unsigned_int_float_U0_ap_start = (real_start & (ap_sync_reg_gemv_float_3u_unsigned_int_float_U0_ap_ready ^ 1'b1));

assign internal_ap_ready = ap_sync_ready;

assign l_strLatterError7_read = gemv_float_3u_unsigned_int_float_U0_p_x_read;

assign l_strMv9_din = axpy_float_1u_unsigned_int_U0_l_strMv9_din;

assign l_strMv9_write = axpy_float_1u_unsigned_int_U0_l_strMv9_write;

assign l_strWeights6_read = gemv_float_3u_unsigned_int_float_U0_p_M_read;

assign l_strZero8_read = scal_float_1u_unsigned_int_U0_l_strZero8_read;

assign p_m_out_din = gemv_float_3u_unsigned_int_entry5691_U0_p_m_out_din;

assign p_m_out_write = gemv_float_3u_unsigned_int_entry5691_U0_p_m_out_write;

assign p_m_read = gemv_float_3u_unsigned_int_entry5691_U0_p_m_read;

assign p_n_read = gemv_float_3u_unsigned_int_entry5691_U0_p_n_read;

assign scal_float_1u_unsigned_int_U0_ap_continue = 1'b1;

assign scal_float_1u_unsigned_int_U0_ap_start = (real_start & (ap_sync_reg_scal_float_1u_unsigned_int_U0_ap_ready ^ 1'b1));

assign scal_float_1u_unsigned_int_U0_start_full_n = 1'b1;

assign scal_float_1u_unsigned_int_U0_start_write = 1'b0;

assign start_for_axpy_float_1u_unsigned_int_U0_din = 1'b1;

assign start_out = real_start;

endmodule //BGD_gemv_float_3u_unsigned_int_s
