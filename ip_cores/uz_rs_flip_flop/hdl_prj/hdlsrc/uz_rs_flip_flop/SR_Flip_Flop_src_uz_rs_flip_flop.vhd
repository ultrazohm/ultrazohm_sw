-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\valen\Documents\repos\UZ\ultrazohm_sw_working\ip_cores\uz_rs_flip_flop\hdl_prj\hdlsrc\uz_rs_flip_flop\SR_Flip_Flop_src_uz_rs_flip_flop.vhd
-- Created: 2022-09-27 19:38:19
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-08
-- Target subsystem base rate: 1e-08
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ff_out                        ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: SR_Flip_Flop_src_uz_rs_flip_flop
-- Source Path: uz_rs_flip_flop/uz_rs_flip_flop
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY SR_Flip_Flop_src_uz_rs_flip_flop IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        ff_reset                          :   IN    std_logic;
        ff_set                            :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        ff_out                            :   OUT   std_logic
        );
END SR_Flip_Flop_src_uz_rs_flip_flop;


ARCHITECTURE rtl OF SR_Flip_Flop_src_uz_rs_flip_flop IS

  -- Component Declarations
  COMPONENT SR_Flip_Flop_src_S_R_Flip_Flop
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          in1                             :   IN    std_logic;
          in2                             :   IN    std_logic;
          out1                            :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : SR_Flip_Flop_src_S_R_Flip_Flop
    USE ENTITY work.SR_Flip_Flop_src_S_R_Flip_Flop(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL Unit_Delay1_out1                 : std_logic;
  SIGNAL Unit_Delay_out1                  : std_logic;
  SIGNAL S_R_Flip_Flop_out1               : std_logic;

BEGIN
  u_S_R_Flip_Flop_inst : SR_Flip_Flop_src_S_R_Flip_Flop
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              in1 => Unit_Delay1_out1,
              in2 => Unit_Delay_out1,
              out1 => S_R_Flip_Flop_out1
              );

  enb <= clk_enable;

  Unit_Delay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Unit_Delay1_out1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Unit_Delay1_out1 <= ff_set;
      END IF;
    END IF;
  END PROCESS Unit_Delay1_process;


  Unit_Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Unit_Delay_out1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Unit_Delay_out1 <= ff_reset;
      END IF;
    END IF;
  END PROCESS Unit_Delay_process;


  ce_out <= clk_enable;

  ff_out <= S_R_Flip_Flop_out1;

END rtl;

