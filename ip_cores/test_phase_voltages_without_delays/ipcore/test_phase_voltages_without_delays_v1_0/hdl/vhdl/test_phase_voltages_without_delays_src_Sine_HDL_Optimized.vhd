-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\test_phase_voltages_without_delays\hdlsrc\test_phase_voltages_without_delays\test_phase_voltages_without_delays_src_Sine_HDL_Optimized.vhd
-- Created: 2022-10-14 14:00:46
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: test_phase_voltages_without_delays_src_Sine_HDL_Optimized
-- Source Path: test_phase_voltages_without_delays/Phase_voltages_per_switching_state1/Sine HDL Optimized
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.test_phase_voltages_without_delays_src_Phase_voltages_per_switching_state1_pkg.ALL;

ENTITY test_phase_voltages_without_delays_src_Sine_HDL_Optimized IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        u                                 :   IN    std_logic_vector(47 DOWNTO 0);  -- sfix48_En45
        x                                 :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En20
        y                                 :   OUT   std_logic_vector(24 DOWNTO 0)  -- sfix25_En20
        );
END test_phase_voltages_without_delays_src_Sine_HDL_Optimized;


ARCHITECTURE rtl OF test_phase_voltages_without_delays_src_Sine_HDL_Optimized IS

  -- Constants
  CONSTANT Look_Up_Table1_data            : vector_of_signed25(0 TO 63) := 
    (to_signed(16#0000000#, 25), to_signed(16#0006485#, 25), to_signed(16#000C8FB#, 25),
     to_signed(16#0012D52#, 25), to_signed(16#001917A#, 25), to_signed(16#001F565#, 25),
     to_signed(16#0025902#, 25), to_signed(16#002BC43#, 25), to_signed(16#0031F17#, 25),
     to_signed(16#0038170#, 25), to_signed(16#003E33F#, 25), to_signed(16#0044475#, 25),
     to_signed(16#004A502#, 25), to_signed(16#00504D7#, 25), to_signed(16#00563E7#, 25),
     to_signed(16#005C221#, 25), to_signed(16#0061F79#, 25), to_signed(16#0067BDE#, 25),
     to_signed(16#006D744#, 25), to_signed(16#007319C#, 25), to_signed(16#0078AD7#, 25),
     to_signed(16#007E2E9#, 25), to_signed(16#00839C4#, 25), to_signed(16#0088F5A#, 25),
     to_signed(16#008E39E#, 25), to_signed(16#0093683#, 25), to_signed(16#00987FC#, 25),
     to_signed(16#009D7FD#, 25), to_signed(16#00A267A#, 25), to_signed(16#00A7365#, 25),
     to_signed(16#00ABEB5#, 25), to_signed(16#00B085C#, 25), to_signed(16#00B504F#, 25),
     to_signed(16#00B9684#, 25), to_signed(16#00BDAF0#, 25), to_signed(16#00C1D87#, 25),
     to_signed(16#00C5E40#, 25), to_signed(16#00C9D11#, 25), to_signed(16#00CD9F0#, 25),
     to_signed(16#00D14D4#, 25), to_signed(16#00D4DB3#, 25), to_signed(16#00D8485#, 25),
     to_signed(16#00DB942#, 25), to_signed(16#00DEBE0#, 25), to_signed(16#00E1C59#, 25),
     to_signed(16#00E4AA6#, 25), to_signed(16#00E76BD#, 25), to_signed(16#00EA09A#, 25),
     to_signed(16#00EC836#, 25), to_signed(16#00EED8A#, 25), to_signed(16#00F1091#, 25),
     to_signed(16#00F3144#, 25), to_signed(16#00F4FA1#, 25), to_signed(16#00F6BA0#, 25),
     to_signed(16#00F853F#, 25), to_signed(16#00F9C7A#, 25), to_signed(16#00FB14C#, 25),
     to_signed(16#00FC3B2#, 25), to_signed(16#00FD3AB#, 25), to_signed(16#00FE132#, 25),
     to_signed(16#00FEC47#, 25), to_signed(16#00FF4E7#, 25), to_signed(16#00FFB11#, 25),
     to_signed(16#00FFEC4#, 25));  -- sfix25 [64]
  CONSTANT Look_Up_Table_data             : vector_of_signed25(0 TO 63) := 
    (to_signed(16#0000000#, 25), to_signed(16#0006485#, 25), to_signed(16#000C8FB#, 25),
     to_signed(16#0012D52#, 25), to_signed(16#001917A#, 25), to_signed(16#001F565#, 25),
     to_signed(16#0025902#, 25), to_signed(16#002BC43#, 25), to_signed(16#0031F17#, 25),
     to_signed(16#0038170#, 25), to_signed(16#003E33F#, 25), to_signed(16#0044475#, 25),
     to_signed(16#004A502#, 25), to_signed(16#00504D7#, 25), to_signed(16#00563E7#, 25),
     to_signed(16#005C221#, 25), to_signed(16#0061F79#, 25), to_signed(16#0067BDE#, 25),
     to_signed(16#006D744#, 25), to_signed(16#007319C#, 25), to_signed(16#0078AD7#, 25),
     to_signed(16#007E2E9#, 25), to_signed(16#00839C4#, 25), to_signed(16#0088F5A#, 25),
     to_signed(16#008E39E#, 25), to_signed(16#0093683#, 25), to_signed(16#00987FC#, 25),
     to_signed(16#009D7FD#, 25), to_signed(16#00A267A#, 25), to_signed(16#00A7365#, 25),
     to_signed(16#00ABEB5#, 25), to_signed(16#00B085C#, 25), to_signed(16#00B504F#, 25),
     to_signed(16#00B9684#, 25), to_signed(16#00BDAF0#, 25), to_signed(16#00C1D87#, 25),
     to_signed(16#00C5E40#, 25), to_signed(16#00C9D11#, 25), to_signed(16#00CD9F0#, 25),
     to_signed(16#00D14D4#, 25), to_signed(16#00D4DB3#, 25), to_signed(16#00D8485#, 25),
     to_signed(16#00DB942#, 25), to_signed(16#00DEBE0#, 25), to_signed(16#00E1C59#, 25),
     to_signed(16#00E4AA6#, 25), to_signed(16#00E76BD#, 25), to_signed(16#00EA09A#, 25),
     to_signed(16#00EC836#, 25), to_signed(16#00EED8A#, 25), to_signed(16#00F1091#, 25),
     to_signed(16#00F3144#, 25), to_signed(16#00F4FA1#, 25), to_signed(16#00F6BA0#, 25),
     to_signed(16#00F853F#, 25), to_signed(16#00F9C7A#, 25), to_signed(16#00FB14C#, 25),
     to_signed(16#00FC3B2#, 25), to_signed(16#00FD3AB#, 25), to_signed(16#00FE132#, 25),
     to_signed(16#00FEC47#, 25), to_signed(16#00FF4E7#, 25), to_signed(16#00FFB11#, 25),
     to_signed(16#00FFEC4#, 25));  -- sfix25 [64]

  -- Signals
  SIGNAL u_signed                         : signed(47 DOWNTO 0);  -- sfix48_En45
  SIGNAL insig_out1                       : unsigned(7 DOWNTO 0);  -- ufix8_En8
  SIGNAL Point50_out1                     : unsigned(24 DOWNTO 0);  -- ufix25_En25
  SIGNAL LTEp501_1_cast                   : unsigned(24 DOWNTO 0);  -- ufix25_En25
  SIGNAL LTEp501_relop1                   : std_logic;
  SIGNAL RAMDelayBalance_out1             : std_logic;
  SIGNAL pow2switch_out1                  : std_logic;
  SIGNAL Amp50_sub_cast                   : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL Amp50_sub_cast_1                 : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL Amp50_out1                       : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL insig_out1_dtc                   : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL QuadHandle1_out1                 : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL Point25_out1                     : unsigned(24 DOWNTO 0);  -- ufix25_En25
  SIGNAL LTEp251_1_cast                   : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL LTEp251_relop1                   : std_logic;
  SIGNAL p50mA_sub_cast                   : signed(26 DOWNTO 0);  -- sfix27_En25
  SIGNAL p50mA_sub_cast_1                 : signed(26 DOWNTO 0);  -- sfix27_En25
  SIGNAL p50mA_out1                       : signed(26 DOWNTO 0);  -- sfix27_En25
  SIGNAL p50mA_out1_dtc                   : unsigned(7 DOWNTO 0);  -- ufix8_En8
  SIGNAL QuadHandle1_out1_dtc             : unsigned(7 DOWNTO 0);  -- ufix8_En8
  SIGNAL QuadHandle2_out1                 : unsigned(7 DOWNTO 0);  -- ufix8_En8
  SIGNAL CastU16En2_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL CastU16En4_out1                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL CastU16En3_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Saturation_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch_out1                      : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Look_Up_Table1_k                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Look_Up_Table_out1               : signed(24 DOWNTO 0);  -- sfix25_En20
  SIGNAL Look_Up_Table_out1_1             : signed(24 DOWNTO 0) := to_signed(16#0000000#, 25);  -- sfix25_En20
  SIGNAL Negate1_cast                     : signed(25 DOWNTO 0);  -- sfix26_En20
  SIGNAL Negate1_cast_1                   : signed(25 DOWNTO 0);  -- sfix26_En20
  SIGNAL Negate_out1                      : signed(24 DOWNTO 0);  -- sfix25_En20
  SIGNAL Sine                             : signed(24 DOWNTO 0);  -- sfix25_En20
  SIGNAL Sine_1                           : signed(24 DOWNTO 0);  -- sfix25_En20
  SIGNAL Sine_2                           : signed(24 DOWNTO 0);  -- sfix25_En20
  SIGNAL insig_out1_1                     : unsigned(7 DOWNTO 0);  -- ufix8_En8
  SIGNAL Point25_out1_1                   : unsigned(24 DOWNTO 0);  -- ufix25_En25
  SIGNAL LTEp25_1_cast                    : unsigned(24 DOWNTO 0);  -- ufix25_En25
  SIGNAL LTEp25_relop1                    : std_logic;
  SIGNAL Point75_out1                     : unsigned(24 DOWNTO 0);  -- ufix25_En25
  SIGNAL GTEp75_1_cast                    : unsigned(24 DOWNTO 0);  -- ufix25_En25
  SIGNAL GTEp75_relop1                    : std_logic;
  SIGNAL alpha1st_or_4th_Quad_bool        : std_logic;
  SIGNAL alpha1st_or_4th_Quad_out1        : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL RAMDelayBalance_out1_1           : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL pow2switch_out1_1                : std_logic;
  SIGNAL Point50_out1_1                   : unsigned(24 DOWNTO 0);  -- ufix25_En25
  SIGNAL p75mA_sub_cast                   : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL p75mA_sub_cast_1                 : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL p75mA_out1                       : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL Amp75_sub_cast                   : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL Amp75_sub_cast_1                 : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL Amp75_out1                       : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL Amp25_sub_cast                   : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL Amp25_sub_cast_1                 : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL Amp25_out1                       : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL p25mA_sub_cast                   : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL p25mA_sub_cast_1                 : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL p25mA_out1                       : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL LTEp50_1_cast                    : unsigned(24 DOWNTO 0);  -- ufix25_En25
  SIGNAL LTEp50_relop1                    : std_logic;
  SIGNAL QuadHandle1b_out1                : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL QuadHandle1b_out1_dtc            : unsigned(7 DOWNTO 0);  -- ufix8_En8
  SIGNAL QuadHandle1a_out1                : signed(25 DOWNTO 0);  -- sfix26_En25
  SIGNAL QuadHandle1a_out1_dtc            : unsigned(7 DOWNTO 0);  -- ufix8_En8
  SIGNAL QuadHandle2_out1_1               : unsigned(7 DOWNTO 0);  -- ufix8_En8
  SIGNAL CastU16En1_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL CastU16En3_out1_1                : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL CastU16En2_out1_1                : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Saturation_out1_1                : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch_out1_1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Look_Up_Table_k                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Look_Up_Table_out1_2             : signed(24 DOWNTO 0);  -- sfix25_En20
  SIGNAL Look_Up_Table_out1_3             : signed(24 DOWNTO 0) := to_signed(16#0000000#, 25);  -- sfix25_En20
  SIGNAL Negate_cast                      : signed(25 DOWNTO 0);  -- sfix26_En20
  SIGNAL Negate_cast_1                    : signed(25 DOWNTO 0);  -- sfix26_En20
  SIGNAL Negate_out1_1                    : signed(24 DOWNTO 0);  -- sfix25_En20
  SIGNAL Cosine                           : signed(24 DOWNTO 0);  -- sfix25_En20
  SIGNAL Cosine_1                         : signed(24 DOWNTO 0);  -- sfix25_En20
  SIGNAL Cosine_2                         : signed(24 DOWNTO 0);  -- sfix25_En20

BEGIN
  -- (C) 2016 Mathworks, Inc
  -- 
  -- (C) 2016 Mathworks, Inc

  u_signed <= signed(u);

  insig_out1 <= unsigned(u_signed(44 DOWNTO 37));

  Point50_out1 <= to_unsigned(16#1000000#, 25);

  LTEp501_1_cast <= insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  LTEp501_relop1 <= '1' WHEN LTEp501_1_cast <= Point50_out1 ELSE
      '0';

  delayMatch_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        RAMDelayBalance_out1 <= '0';
      ELSIF enb = '1' THEN
        RAMDelayBalance_out1 <= LTEp501_relop1;
      END IF;
    END IF;
  END PROCESS delayMatch_process;


  pow2switch_out1 <= '1';

  Amp50_sub_cast <= signed(resize(insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 26));
  Amp50_sub_cast_1 <= signed(resize(Point50_out1, 26));
  Amp50_out1 <= Amp50_sub_cast - Amp50_sub_cast_1;

  insig_out1_dtc <= signed(resize(insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 26));

  
  QuadHandle1_out1 <= Amp50_out1 WHEN LTEp501_relop1 = '0' ELSE
      insig_out1_dtc;

  Point25_out1 <= to_unsigned(16#0800000#, 25);

  LTEp251_1_cast <= signed(resize(Point25_out1, 26));
  
  LTEp251_relop1 <= '1' WHEN QuadHandle1_out1 <= LTEp251_1_cast ELSE
      '0';

  p50mA_sub_cast <= signed(resize(Point50_out1, 27));
  p50mA_sub_cast_1 <= resize(QuadHandle1_out1, 27);
  p50mA_out1 <= p50mA_sub_cast - p50mA_sub_cast_1;

  p50mA_out1_dtc <= unsigned(p50mA_out1(24 DOWNTO 17));

  QuadHandle1_out1_dtc <= unsigned(QuadHandle1_out1(24 DOWNTO 17));

  
  QuadHandle2_out1 <= p50mA_out1_dtc WHEN LTEp251_relop1 = '0' ELSE
      QuadHandle1_out1_dtc;

  CastU16En2_out1 <= QuadHandle2_out1;

  CastU16En4_out1 <= resize(CastU16En2_out1, 9);

  
  CastU16En3_out1 <= "11111111" WHEN CastU16En4_out1(8) /= '0' ELSE
      CastU16En4_out1(7 DOWNTO 0);

  -- saturation block maybe optimized away
  -- if the NumDataPoints is a power of 2
  
  Saturation_out1 <= to_unsigned(16#3F#, 8) WHEN CastU16En3_out1 > to_unsigned(16#3F#, 8) ELSE
      CastU16En3_out1;

  
  Switch_out1 <= CastU16En3_out1 WHEN pow2switch_out1 = '0' ELSE
      Saturation_out1;

  
  Look_Up_Table1_k <= to_unsigned(16#00#, 6) WHEN Switch_out1 = to_unsigned(16#00#, 8) ELSE
      to_unsigned(16#3F#, 6) WHEN Switch_out1 >= to_unsigned(16#3F#, 8) ELSE
      Switch_out1(5 DOWNTO 0);
  Look_Up_Table_out1 <= Look_Up_Table1_data(to_integer(Look_Up_Table1_k));

  PipelineRegister1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Look_Up_Table_out1_1 <= Look_Up_Table_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister1_process;


  Negate1_cast <= resize(Look_Up_Table_out1_1, 26);
  Negate1_cast_1 <=  - (Negate1_cast);
  Negate_out1 <= Negate1_cast_1(24 DOWNTO 0);

  
  Sine <= Negate_out1 WHEN RAMDelayBalance_out1 = '0' ELSE
      Look_Up_Table_out1_1;

  Sine_1 <= Sine;

  Sine_2 <= Sine_1;

  x <= std_logic_vector(Sine_2);

  insig_out1_1 <= unsigned(u_signed(44 DOWNTO 37));

  Point25_out1_1 <= to_unsigned(16#0800000#, 25);

  LTEp25_1_cast <= insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  LTEp25_relop1 <= '1' WHEN LTEp25_1_cast <= Point25_out1_1 ELSE
      '0';

  Point75_out1 <= to_unsigned(16#1800000#, 25);

  GTEp75_1_cast <= insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  GTEp75_relop1 <= '1' WHEN GTEp75_1_cast >= Point75_out1 ELSE
      '0';

  alpha1st_or_4th_Quad_bool <= LTEp25_relop1 OR GTEp75_relop1;

  alpha1st_or_4th_Quad_out1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & alpha1st_or_4th_Quad_bool;

  delayMatch1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        RAMDelayBalance_out1_1 <= to_unsigned(16#00#, 8);
      ELSIF enb = '1' THEN
        RAMDelayBalance_out1_1 <= alpha1st_or_4th_Quad_out1;
      END IF;
    END IF;
  END PROCESS delayMatch1_process;


  pow2switch_out1_1 <= '1';

  Point50_out1_1 <= to_unsigned(16#1000000#, 25);

  p75mA_sub_cast <= signed(resize(Point75_out1, 26));
  p75mA_sub_cast_1 <= signed(resize(insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 26));
  p75mA_out1 <= p75mA_sub_cast - p75mA_sub_cast_1;

  Amp75_sub_cast <= signed(resize(insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 26));
  Amp75_sub_cast_1 <= signed(resize(Point75_out1, 26));
  Amp75_out1 <= Amp75_sub_cast - Amp75_sub_cast_1;

  Amp25_sub_cast <= signed(resize(insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 26));
  Amp25_sub_cast_1 <= signed(resize(Point25_out1_1, 26));
  Amp25_out1 <= Amp25_sub_cast - Amp25_sub_cast_1;

  p25mA_sub_cast <= signed(resize(Point25_out1_1, 26));
  p25mA_sub_cast_1 <= signed(resize(insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 26));
  p25mA_out1 <= p25mA_sub_cast - p25mA_sub_cast_1;

  LTEp50_1_cast <= insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  LTEp50_relop1 <= '1' WHEN LTEp50_1_cast <= Point50_out1_1 ELSE
      '0';

  
  QuadHandle1b_out1 <= p75mA_out1 WHEN GTEp75_relop1 = '0' ELSE
      Amp75_out1;

  
  QuadHandle1b_out1_dtc <= "11111111" WHEN (QuadHandle1b_out1(25) = '0') AND (QuadHandle1b_out1(24 DOWNTO 17) = "11111111") ELSE
      "00000000" WHEN QuadHandle1b_out1(25) = '1' ELSE
      unsigned(QuadHandle1b_out1(24 DOWNTO 17));

  
  QuadHandle1a_out1 <= Amp25_out1 WHEN LTEp25_relop1 = '0' ELSE
      p25mA_out1;

  
  QuadHandle1a_out1_dtc <= "11111111" WHEN (QuadHandle1a_out1(25) = '0') AND (QuadHandle1a_out1(24 DOWNTO 17) = "11111111") ELSE
      "00000000" WHEN QuadHandle1a_out1(25) = '1' ELSE
      unsigned(QuadHandle1a_out1(24 DOWNTO 17));

  
  QuadHandle2_out1_1 <= QuadHandle1b_out1_dtc WHEN LTEp50_relop1 = '0' ELSE
      QuadHandle1a_out1_dtc;

  CastU16En1_out1 <= QuadHandle2_out1_1;

  CastU16En3_out1_1 <= resize(CastU16En1_out1, 9);

  
  CastU16En2_out1_1 <= "11111111" WHEN CastU16En3_out1_1(8) /= '0' ELSE
      CastU16En3_out1_1(7 DOWNTO 0);

  -- saturation block maybe optimized away
  -- if the NumDataPoints is a power of 2
  
  Saturation_out1_1 <= to_unsigned(16#3F#, 8) WHEN CastU16En2_out1_1 > to_unsigned(16#3F#, 8) ELSE
      CastU16En2_out1_1;

  
  Switch_out1_1 <= CastU16En2_out1_1 WHEN pow2switch_out1_1 = '0' ELSE
      Saturation_out1_1;

  
  Look_Up_Table_k <= to_unsigned(16#00#, 6) WHEN Switch_out1_1 = to_unsigned(16#00#, 8) ELSE
      to_unsigned(16#3F#, 6) WHEN Switch_out1_1 >= to_unsigned(16#3F#, 8) ELSE
      Switch_out1_1(5 DOWNTO 0);
  Look_Up_Table_out1_2 <= Look_Up_Table_data(to_integer(Look_Up_Table_k));

  PipelineRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Look_Up_Table_out1_3 <= Look_Up_Table_out1_2;
      END IF;
    END IF;
  END PROCESS PipelineRegister_process;


  Negate_cast <= resize(Look_Up_Table_out1_3, 26);
  Negate_cast_1 <=  - (Negate_cast);
  Negate_out1_1 <= Negate_cast_1(24 DOWNTO 0);

  
  Cosine <= Negate_out1_1 WHEN RAMDelayBalance_out1_1 = to_unsigned(16#00#, 8) ELSE
      Look_Up_Table_out1_3;

  Cosine_1 <= Cosine;

  Cosine_2 <= Cosine_1;

  y <= std_logic_vector(Cosine_2);

END rtl;

