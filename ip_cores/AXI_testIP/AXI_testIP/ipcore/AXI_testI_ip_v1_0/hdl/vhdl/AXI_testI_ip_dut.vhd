-- -------------------------------------------------------------
-- 
-- File Name: AXI_testIP/hdlsrc/AXI_testIP/AXI_testI_ip_dut.vhd
-- Created: 2021-03-21 19:14:31
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: AXI_testI_ip_dut
-- Source Path: AXI_testI_ip/AXI_testI_ip_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY AXI_testI_ip_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        A_float_0                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        A_float_1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        A_float_2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        A_float_3                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        B_float_0                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        B_float_1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        B_float_2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        B_float_3                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        A_uint32                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        B_uint32                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        A_int32                           :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32
        B_int32                           :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32
        A_fx_1_16_5                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En5
        B_fx_1_16_5                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En5
        ce_out                            :   OUT   std_logic;  -- ufix1
        C_float_0                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        C_float_1                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        C_float_2                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        C_float_3                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        C_uint32                          :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        C_int32                           :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32
        C_fx_1_16_5                       :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En5
        );
END AXI_testI_ip_dut;


ARCHITECTURE rtl OF AXI_testI_ip_dut IS

  -- Component Declarations
  COMPONENT AXI_testI_ip_src_AXI_testIP
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          A_float_0                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          A_float_1                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          A_float_2                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          A_float_3                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          B_float_0                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          B_float_1                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          B_float_2                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          B_float_3                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          A_uint32                        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          B_uint32                        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          A_int32                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32
          B_int32                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32
          A_fx_1_16_5                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En5
          B_fx_1_16_5                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En5
          ce_out                          :   OUT   std_logic;  -- ufix1
          C_float_0                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          C_float_1                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          C_float_2                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          C_float_3                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          C_uint32                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          C_int32                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32
          C_fx_1_16_5                     :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En5
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : AXI_testI_ip_src_AXI_testIP
    USE ENTITY work.AXI_testI_ip_src_AXI_testIP(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL C_float_0_sig                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL C_float_1_sig                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL C_float_2_sig                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL C_float_3_sig                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL C_uint32_sig                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL C_int32_sig                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL C_fx_1_16_5_sig                  : std_logic_vector(15 DOWNTO 0);  -- ufix16

BEGIN
  u_AXI_testI_ip_src_AXI_testIP : AXI_testI_ip_src_AXI_testIP
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              A_float_0 => A_float_0,  -- ufix32
              A_float_1 => A_float_1,  -- ufix32
              A_float_2 => A_float_2,  -- ufix32
              A_float_3 => A_float_3,  -- ufix32
              B_float_0 => B_float_0,  -- ufix32
              B_float_1 => B_float_1,  -- ufix32
              B_float_2 => B_float_2,  -- ufix32
              B_float_3 => B_float_3,  -- ufix32
              A_uint32 => A_uint32,  -- ufix32
              B_uint32 => B_uint32,  -- ufix32
              A_int32 => A_int32,  -- sfix32
              B_int32 => B_int32,  -- sfix32
              A_fx_1_16_5 => A_fx_1_16_5,  -- sfix16_En5
              B_fx_1_16_5 => B_fx_1_16_5,  -- sfix16_En5
              ce_out => ce_out_sig,  -- ufix1
              C_float_0 => C_float_0_sig,  -- ufix32
              C_float_1 => C_float_1_sig,  -- ufix32
              C_float_2 => C_float_2_sig,  -- ufix32
              C_float_3 => C_float_3_sig,  -- ufix32
              C_uint32 => C_uint32_sig,  -- ufix32
              C_int32 => C_int32_sig,  -- sfix32
              C_fx_1_16_5 => C_fx_1_16_5_sig  -- sfix16_En5
              );

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  C_float_0 <= C_float_0_sig;

  C_float_1 <= C_float_1_sig;

  C_float_2 <= C_float_2_sig;

  C_float_3 <= C_float_3_sig;

  C_uint32 <= C_uint32_sig;

  C_int32 <= C_int32_sig;

  C_fx_1_16_5 <= C_fx_1_16_5_sig;

END rtl;

