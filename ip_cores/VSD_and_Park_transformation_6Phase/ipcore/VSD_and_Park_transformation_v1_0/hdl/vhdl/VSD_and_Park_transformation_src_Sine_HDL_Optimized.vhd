-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\VSD_and_Park_transformation_6Phase\hdlsrc\VSD_and_Park_transformation_6Phase\VSD_and_Park_transformation_src_Sine_HDL_Optimized.vhd
-- Created: 2022-08-15 13:24:11
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: VSD_and_Park_transformation_src_Sine_HDL_Optimized
-- Source Path: VSD_and_Park_transformation_6Phase/vsd_and_park_tra/Sine HDL Optimized
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.VSD_and_Park_transformation_src_vsd_and_park_tra_pac.ALL;

ENTITY VSD_and_Park_transformation_src_Sine_HDL_Optimized IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb                               :   IN    std_logic;
        u                                 :   IN    std_logic_vector(47 DOWNTO 0);  -- sfix48_En45
        x                                 :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        y                                 :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En11
        );
END VSD_and_Park_transformation_src_Sine_HDL_Optimized;


ARCHITECTURE rtl OF VSD_and_Park_transformation_src_Sine_HDL_Optimized IS

  -- Constants
  CONSTANT Look_Up_Table_data             : vector_of_signed18(0 TO 511) := 
    (to_signed(16#00000#, 18), to_signed(16#00006#, 18), to_signed(16#0000D#, 18), to_signed(16#00013#, 18),
     to_signed(16#00019#, 18), to_signed(16#0001F#, 18), to_signed(16#00026#, 18), to_signed(16#0002C#, 18),
     to_signed(16#00032#, 18), to_signed(16#00039#, 18), to_signed(16#0003F#, 18), to_signed(16#00045#, 18),
     to_signed(16#0004C#, 18), to_signed(16#00052#, 18), to_signed(16#00058#, 18), to_signed(16#0005E#, 18),
     to_signed(16#00065#, 18), to_signed(16#0006B#, 18), to_signed(16#00071#, 18), to_signed(16#00078#, 18),
     to_signed(16#0007E#, 18), to_signed(16#00084#, 18), to_signed(16#0008A#, 18), to_signed(16#00091#, 18),
     to_signed(16#00097#, 18), to_signed(16#0009D#, 18), to_signed(16#000A4#, 18), to_signed(16#000AA#, 18),
     to_signed(16#000B0#, 18), to_signed(16#000B6#, 18), to_signed(16#000BD#, 18), to_signed(16#000C3#, 18),
     to_signed(16#000C9#, 18), to_signed(16#000CF#, 18), to_signed(16#000D6#, 18), to_signed(16#000DC#, 18),
     to_signed(16#000E2#, 18), to_signed(16#000E8#, 18), to_signed(16#000EF#, 18), to_signed(16#000F5#, 18),
     to_signed(16#000FB#, 18), to_signed(16#00101#, 18), to_signed(16#00108#, 18), to_signed(16#0010E#, 18),
     to_signed(16#00114#, 18), to_signed(16#0011A#, 18), to_signed(16#00121#, 18), to_signed(16#00127#, 18),
     to_signed(16#0012D#, 18), to_signed(16#00133#, 18), to_signed(16#0013A#, 18), to_signed(16#00140#, 18),
     to_signed(16#00146#, 18), to_signed(16#0014C#, 18), to_signed(16#00152#, 18), to_signed(16#00159#, 18),
     to_signed(16#0015F#, 18), to_signed(16#00165#, 18), to_signed(16#0016B#, 18), to_signed(16#00171#, 18),
     to_signed(16#00178#, 18), to_signed(16#0017E#, 18), to_signed(16#00184#, 18), to_signed(16#0018A#, 18),
     to_signed(16#00190#, 18), to_signed(16#00196#, 18), to_signed(16#0019D#, 18), to_signed(16#001A3#, 18),
     to_signed(16#001A9#, 18), to_signed(16#001AF#, 18), to_signed(16#001B5#, 18), to_signed(16#001BB#, 18),
     to_signed(16#001C2#, 18), to_signed(16#001C8#, 18), to_signed(16#001CE#, 18), to_signed(16#001D4#, 18),
     to_signed(16#001DA#, 18), to_signed(16#001E0#, 18), to_signed(16#001E6#, 18), to_signed(16#001EC#, 18),
     to_signed(16#001F3#, 18), to_signed(16#001F9#, 18), to_signed(16#001FF#, 18), to_signed(16#00205#, 18),
     to_signed(16#0020B#, 18), to_signed(16#00211#, 18), to_signed(16#00217#, 18), to_signed(16#0021D#, 18),
     to_signed(16#00223#, 18), to_signed(16#00229#, 18), to_signed(16#0022F#, 18), to_signed(16#00235#, 18),
     to_signed(16#0023B#, 18), to_signed(16#00242#, 18), to_signed(16#00248#, 18), to_signed(16#0024E#, 18),
     to_signed(16#00254#, 18), to_signed(16#0025A#, 18), to_signed(16#00260#, 18), to_signed(16#00266#, 18),
     to_signed(16#0026C#, 18), to_signed(16#00272#, 18), to_signed(16#00278#, 18), to_signed(16#0027E#, 18),
     to_signed(16#00284#, 18), to_signed(16#0028A#, 18), to_signed(16#00290#, 18), to_signed(16#00296#, 18),
     to_signed(16#0029B#, 18), to_signed(16#002A1#, 18), to_signed(16#002A7#, 18), to_signed(16#002AD#, 18),
     to_signed(16#002B3#, 18), to_signed(16#002B9#, 18), to_signed(16#002BF#, 18), to_signed(16#002C5#, 18),
     to_signed(16#002CB#, 18), to_signed(16#002D1#, 18), to_signed(16#002D7#, 18), to_signed(16#002DD#, 18),
     to_signed(16#002E2#, 18), to_signed(16#002E8#, 18), to_signed(16#002EE#, 18), to_signed(16#002F4#, 18),
     to_signed(16#002FA#, 18), to_signed(16#00300#, 18), to_signed(16#00306#, 18), to_signed(16#0030B#, 18),
     to_signed(16#00311#, 18), to_signed(16#00317#, 18), to_signed(16#0031D#, 18), to_signed(16#00323#, 18),
     to_signed(16#00328#, 18), to_signed(16#0032E#, 18), to_signed(16#00334#, 18), to_signed(16#0033A#, 18),
     to_signed(16#0033F#, 18), to_signed(16#00345#, 18), to_signed(16#0034B#, 18), to_signed(16#00351#, 18),
     to_signed(16#00356#, 18), to_signed(16#0035C#, 18), to_signed(16#00362#, 18), to_signed(16#00368#, 18),
     to_signed(16#0036D#, 18), to_signed(16#00373#, 18), to_signed(16#00379#, 18), to_signed(16#0037E#, 18),
     to_signed(16#00384#, 18), to_signed(16#0038A#, 18), to_signed(16#0038F#, 18), to_signed(16#00395#, 18),
     to_signed(16#0039A#, 18), to_signed(16#003A0#, 18), to_signed(16#003A6#, 18), to_signed(16#003AB#, 18),
     to_signed(16#003B1#, 18), to_signed(16#003B6#, 18), to_signed(16#003BC#, 18), to_signed(16#003C2#, 18),
     to_signed(16#003C7#, 18), to_signed(16#003CD#, 18), to_signed(16#003D2#, 18), to_signed(16#003D8#, 18),
     to_signed(16#003DD#, 18), to_signed(16#003E3#, 18), to_signed(16#003E8#, 18), to_signed(16#003EE#, 18),
     to_signed(16#003F3#, 18), to_signed(16#003F9#, 18), to_signed(16#003FE#, 18), to_signed(16#00404#, 18),
     to_signed(16#00409#, 18), to_signed(16#0040F#, 18), to_signed(16#00414#, 18), to_signed(16#00419#, 18),
     to_signed(16#0041F#, 18), to_signed(16#00424#, 18), to_signed(16#0042A#, 18), to_signed(16#0042F#, 18),
     to_signed(16#00434#, 18), to_signed(16#0043A#, 18), to_signed(16#0043F#, 18), to_signed(16#00444#, 18),
     to_signed(16#0044A#, 18), to_signed(16#0044F#, 18), to_signed(16#00454#, 18), to_signed(16#00459#, 18),
     to_signed(16#0045F#, 18), to_signed(16#00464#, 18), to_signed(16#00469#, 18), to_signed(16#0046F#, 18),
     to_signed(16#00474#, 18), to_signed(16#00479#, 18), to_signed(16#0047E#, 18), to_signed(16#00483#, 18),
     to_signed(16#00489#, 18), to_signed(16#0048E#, 18), to_signed(16#00493#, 18), to_signed(16#00498#, 18),
     to_signed(16#0049D#, 18), to_signed(16#004A2#, 18), to_signed(16#004A8#, 18), to_signed(16#004AD#, 18),
     to_signed(16#004B2#, 18), to_signed(16#004B7#, 18), to_signed(16#004BC#, 18), to_signed(16#004C1#, 18),
     to_signed(16#004C6#, 18), to_signed(16#004CB#, 18), to_signed(16#004D0#, 18), to_signed(16#004D5#, 18),
     to_signed(16#004DA#, 18), to_signed(16#004DF#, 18), to_signed(16#004E4#, 18), to_signed(16#004E9#, 18),
     to_signed(16#004EE#, 18), to_signed(16#004F3#, 18), to_signed(16#004F8#, 18), to_signed(16#004FD#, 18),
     to_signed(16#00502#, 18), to_signed(16#00507#, 18), to_signed(16#0050C#, 18), to_signed(16#00510#, 18),
     to_signed(16#00515#, 18), to_signed(16#0051A#, 18), to_signed(16#0051F#, 18), to_signed(16#00524#, 18),
     to_signed(16#00529#, 18), to_signed(16#0052E#, 18), to_signed(16#00532#, 18), to_signed(16#00537#, 18),
     to_signed(16#0053C#, 18), to_signed(16#00541#, 18), to_signed(16#00545#, 18), to_signed(16#0054A#, 18),
     to_signed(16#0054F#, 18), to_signed(16#00554#, 18), to_signed(16#00558#, 18), to_signed(16#0055D#, 18),
     to_signed(16#00562#, 18), to_signed(16#00566#, 18), to_signed(16#0056B#, 18), to_signed(16#0056F#, 18),
     to_signed(16#00574#, 18), to_signed(16#00579#, 18), to_signed(16#0057D#, 18), to_signed(16#00582#, 18),
     to_signed(16#00586#, 18), to_signed(16#0058B#, 18), to_signed(16#0058F#, 18), to_signed(16#00594#, 18),
     to_signed(16#00598#, 18), to_signed(16#0059D#, 18), to_signed(16#005A1#, 18), to_signed(16#005A6#, 18),
     to_signed(16#005AA#, 18), to_signed(16#005AF#, 18), to_signed(16#005B3#, 18), to_signed(16#005B8#, 18),
     to_signed(16#005BC#, 18), to_signed(16#005C0#, 18), to_signed(16#005C5#, 18), to_signed(16#005C9#, 18),
     to_signed(16#005CD#, 18), to_signed(16#005D2#, 18), to_signed(16#005D6#, 18), to_signed(16#005DA#, 18),
     to_signed(16#005DF#, 18), to_signed(16#005E3#, 18), to_signed(16#005E7#, 18), to_signed(16#005EB#, 18),
     to_signed(16#005F0#, 18), to_signed(16#005F4#, 18), to_signed(16#005F8#, 18), to_signed(16#005FC#, 18),
     to_signed(16#00600#, 18), to_signed(16#00605#, 18), to_signed(16#00609#, 18), to_signed(16#0060D#, 18),
     to_signed(16#00611#, 18), to_signed(16#00615#, 18), to_signed(16#00619#, 18), to_signed(16#0061D#, 18),
     to_signed(16#00621#, 18), to_signed(16#00625#, 18), to_signed(16#00629#, 18), to_signed(16#0062D#, 18),
     to_signed(16#00631#, 18), to_signed(16#00635#, 18), to_signed(16#00639#, 18), to_signed(16#0063D#, 18),
     to_signed(16#00641#, 18), to_signed(16#00645#, 18), to_signed(16#00649#, 18), to_signed(16#0064D#, 18),
     to_signed(16#00651#, 18), to_signed(16#00655#, 18), to_signed(16#00658#, 18), to_signed(16#0065C#, 18),
     to_signed(16#00660#, 18), to_signed(16#00664#, 18), to_signed(16#00668#, 18), to_signed(16#0066B#, 18),
     to_signed(16#0066F#, 18), to_signed(16#00673#, 18), to_signed(16#00677#, 18), to_signed(16#0067A#, 18),
     to_signed(16#0067E#, 18), to_signed(16#00682#, 18), to_signed(16#00685#, 18), to_signed(16#00689#, 18),
     to_signed(16#0068D#, 18), to_signed(16#00690#, 18), to_signed(16#00694#, 18), to_signed(16#00697#, 18),
     to_signed(16#0069B#, 18), to_signed(16#0069E#, 18), to_signed(16#006A2#, 18), to_signed(16#006A6#, 18),
     to_signed(16#006A9#, 18), to_signed(16#006AD#, 18), to_signed(16#006B0#, 18), to_signed(16#006B3#, 18),
     to_signed(16#006B7#, 18), to_signed(16#006BA#, 18), to_signed(16#006BE#, 18), to_signed(16#006C1#, 18),
     to_signed(16#006C4#, 18), to_signed(16#006C8#, 18), to_signed(16#006CB#, 18), to_signed(16#006CE#, 18),
     to_signed(16#006D2#, 18), to_signed(16#006D5#, 18), to_signed(16#006D8#, 18), to_signed(16#006DC#, 18),
     to_signed(16#006DF#, 18), to_signed(16#006E2#, 18), to_signed(16#006E5#, 18), to_signed(16#006E8#, 18),
     to_signed(16#006EC#, 18), to_signed(16#006EF#, 18), to_signed(16#006F2#, 18), to_signed(16#006F5#, 18),
     to_signed(16#006F8#, 18), to_signed(16#006FB#, 18), to_signed(16#006FE#, 18), to_signed(16#00701#, 18),
     to_signed(16#00704#, 18), to_signed(16#00707#, 18), to_signed(16#0070A#, 18), to_signed(16#0070D#, 18),
     to_signed(16#00710#, 18), to_signed(16#00713#, 18), to_signed(16#00716#, 18), to_signed(16#00719#, 18),
     to_signed(16#0071C#, 18), to_signed(16#0071F#, 18), to_signed(16#00722#, 18), to_signed(16#00724#, 18),
     to_signed(16#00727#, 18), to_signed(16#0072A#, 18), to_signed(16#0072D#, 18), to_signed(16#00730#, 18),
     to_signed(16#00732#, 18), to_signed(16#00735#, 18), to_signed(16#00738#, 18), to_signed(16#0073B#, 18),
     to_signed(16#0073D#, 18), to_signed(16#00740#, 18), to_signed(16#00743#, 18), to_signed(16#00745#, 18),
     to_signed(16#00748#, 18), to_signed(16#0074A#, 18), to_signed(16#0074D#, 18), to_signed(16#00750#, 18),
     to_signed(16#00752#, 18), to_signed(16#00755#, 18), to_signed(16#00757#, 18), to_signed(16#0075A#, 18),
     to_signed(16#0075C#, 18), to_signed(16#0075F#, 18), to_signed(16#00761#, 18), to_signed(16#00764#, 18),
     to_signed(16#00766#, 18), to_signed(16#00768#, 18), to_signed(16#0076B#, 18), to_signed(16#0076D#, 18),
     to_signed(16#0076F#, 18), to_signed(16#00772#, 18), to_signed(16#00774#, 18), to_signed(16#00776#, 18),
     to_signed(16#00778#, 18), to_signed(16#0077B#, 18), to_signed(16#0077D#, 18), to_signed(16#0077F#, 18),
     to_signed(16#00781#, 18), to_signed(16#00784#, 18), to_signed(16#00786#, 18), to_signed(16#00788#, 18),
     to_signed(16#0078A#, 18), to_signed(16#0078C#, 18), to_signed(16#0078E#, 18), to_signed(16#00790#, 18),
     to_signed(16#00792#, 18), to_signed(16#00794#, 18), to_signed(16#00796#, 18), to_signed(16#00798#, 18),
     to_signed(16#0079A#, 18), to_signed(16#0079C#, 18), to_signed(16#0079E#, 18), to_signed(16#007A0#, 18),
     to_signed(16#007A2#, 18), to_signed(16#007A4#, 18), to_signed(16#007A6#, 18), to_signed(16#007A7#, 18),
     to_signed(16#007A9#, 18), to_signed(16#007AB#, 18), to_signed(16#007AD#, 18), to_signed(16#007AF#, 18),
     to_signed(16#007B0#, 18), to_signed(16#007B2#, 18), to_signed(16#007B4#, 18), to_signed(16#007B6#, 18),
     to_signed(16#007B7#, 18), to_signed(16#007B9#, 18), to_signed(16#007BA#, 18), to_signed(16#007BC#, 18),
     to_signed(16#007BE#, 18), to_signed(16#007BF#, 18), to_signed(16#007C1#, 18), to_signed(16#007C2#, 18),
     to_signed(16#007C4#, 18), to_signed(16#007C5#, 18), to_signed(16#007C7#, 18), to_signed(16#007C8#, 18),
     to_signed(16#007CA#, 18), to_signed(16#007CB#, 18), to_signed(16#007CD#, 18), to_signed(16#007CE#, 18),
     to_signed(16#007CF#, 18), to_signed(16#007D1#, 18), to_signed(16#007D2#, 18), to_signed(16#007D3#, 18),
     to_signed(16#007D5#, 18), to_signed(16#007D6#, 18), to_signed(16#007D7#, 18), to_signed(16#007D8#, 18),
     to_signed(16#007DA#, 18), to_signed(16#007DB#, 18), to_signed(16#007DC#, 18), to_signed(16#007DD#, 18),
     to_signed(16#007DE#, 18), to_signed(16#007E0#, 18), to_signed(16#007E1#, 18), to_signed(16#007E2#, 18),
     to_signed(16#007E3#, 18), to_signed(16#007E4#, 18), to_signed(16#007E5#, 18), to_signed(16#007E6#, 18),
     to_signed(16#007E7#, 18), to_signed(16#007E8#, 18), to_signed(16#007E9#, 18), to_signed(16#007EA#, 18),
     to_signed(16#007EB#, 18), to_signed(16#007EC#, 18), to_signed(16#007EC#, 18), to_signed(16#007ED#, 18),
     to_signed(16#007EE#, 18), to_signed(16#007EF#, 18), to_signed(16#007F0#, 18), to_signed(16#007F1#, 18),
     to_signed(16#007F1#, 18), to_signed(16#007F2#, 18), to_signed(16#007F3#, 18), to_signed(16#007F3#, 18),
     to_signed(16#007F4#, 18), to_signed(16#007F5#, 18), to_signed(16#007F5#, 18), to_signed(16#007F6#, 18),
     to_signed(16#007F7#, 18), to_signed(16#007F7#, 18), to_signed(16#007F8#, 18), to_signed(16#007F8#, 18),
     to_signed(16#007F9#, 18), to_signed(16#007F9#, 18), to_signed(16#007FA#, 18), to_signed(16#007FA#, 18),
     to_signed(16#007FB#, 18), to_signed(16#007FB#, 18), to_signed(16#007FC#, 18), to_signed(16#007FC#, 18),
     to_signed(16#007FD#, 18), to_signed(16#007FD#, 18), to_signed(16#007FD#, 18), to_signed(16#007FE#, 18),
     to_signed(16#007FE#, 18), to_signed(16#007FE#, 18), to_signed(16#007FE#, 18), to_signed(16#007FF#, 18),
     to_signed(16#007FF#, 18), to_signed(16#007FF#, 18), to_signed(16#007FF#, 18), to_signed(16#007FF#, 18),
     to_signed(16#00800#, 18), to_signed(16#00800#, 18), to_signed(16#00800#, 18), to_signed(16#00800#, 18),
     to_signed(16#00800#, 18), to_signed(16#00800#, 18), to_signed(16#00800#, 18), to_signed(16#00800#, 18));  -- sfix18 [512]
  CONSTANT Look_Up_Table_data_2           : vector_of_signed18(0 TO 511) := 
    (to_signed(16#00000#, 18), to_signed(16#00006#, 18), to_signed(16#0000D#, 18), to_signed(16#00013#, 18),
     to_signed(16#00019#, 18), to_signed(16#0001F#, 18), to_signed(16#00026#, 18), to_signed(16#0002C#, 18),
     to_signed(16#00032#, 18), to_signed(16#00039#, 18), to_signed(16#0003F#, 18), to_signed(16#00045#, 18),
     to_signed(16#0004C#, 18), to_signed(16#00052#, 18), to_signed(16#00058#, 18), to_signed(16#0005E#, 18),
     to_signed(16#00065#, 18), to_signed(16#0006B#, 18), to_signed(16#00071#, 18), to_signed(16#00078#, 18),
     to_signed(16#0007E#, 18), to_signed(16#00084#, 18), to_signed(16#0008A#, 18), to_signed(16#00091#, 18),
     to_signed(16#00097#, 18), to_signed(16#0009D#, 18), to_signed(16#000A4#, 18), to_signed(16#000AA#, 18),
     to_signed(16#000B0#, 18), to_signed(16#000B6#, 18), to_signed(16#000BD#, 18), to_signed(16#000C3#, 18),
     to_signed(16#000C9#, 18), to_signed(16#000CF#, 18), to_signed(16#000D6#, 18), to_signed(16#000DC#, 18),
     to_signed(16#000E2#, 18), to_signed(16#000E8#, 18), to_signed(16#000EF#, 18), to_signed(16#000F5#, 18),
     to_signed(16#000FB#, 18), to_signed(16#00101#, 18), to_signed(16#00108#, 18), to_signed(16#0010E#, 18),
     to_signed(16#00114#, 18), to_signed(16#0011A#, 18), to_signed(16#00121#, 18), to_signed(16#00127#, 18),
     to_signed(16#0012D#, 18), to_signed(16#00133#, 18), to_signed(16#0013A#, 18), to_signed(16#00140#, 18),
     to_signed(16#00146#, 18), to_signed(16#0014C#, 18), to_signed(16#00152#, 18), to_signed(16#00159#, 18),
     to_signed(16#0015F#, 18), to_signed(16#00165#, 18), to_signed(16#0016B#, 18), to_signed(16#00171#, 18),
     to_signed(16#00178#, 18), to_signed(16#0017E#, 18), to_signed(16#00184#, 18), to_signed(16#0018A#, 18),
     to_signed(16#00190#, 18), to_signed(16#00196#, 18), to_signed(16#0019D#, 18), to_signed(16#001A3#, 18),
     to_signed(16#001A9#, 18), to_signed(16#001AF#, 18), to_signed(16#001B5#, 18), to_signed(16#001BB#, 18),
     to_signed(16#001C2#, 18), to_signed(16#001C8#, 18), to_signed(16#001CE#, 18), to_signed(16#001D4#, 18),
     to_signed(16#001DA#, 18), to_signed(16#001E0#, 18), to_signed(16#001E6#, 18), to_signed(16#001EC#, 18),
     to_signed(16#001F3#, 18), to_signed(16#001F9#, 18), to_signed(16#001FF#, 18), to_signed(16#00205#, 18),
     to_signed(16#0020B#, 18), to_signed(16#00211#, 18), to_signed(16#00217#, 18), to_signed(16#0021D#, 18),
     to_signed(16#00223#, 18), to_signed(16#00229#, 18), to_signed(16#0022F#, 18), to_signed(16#00235#, 18),
     to_signed(16#0023B#, 18), to_signed(16#00242#, 18), to_signed(16#00248#, 18), to_signed(16#0024E#, 18),
     to_signed(16#00254#, 18), to_signed(16#0025A#, 18), to_signed(16#00260#, 18), to_signed(16#00266#, 18),
     to_signed(16#0026C#, 18), to_signed(16#00272#, 18), to_signed(16#00278#, 18), to_signed(16#0027E#, 18),
     to_signed(16#00284#, 18), to_signed(16#0028A#, 18), to_signed(16#00290#, 18), to_signed(16#00296#, 18),
     to_signed(16#0029B#, 18), to_signed(16#002A1#, 18), to_signed(16#002A7#, 18), to_signed(16#002AD#, 18),
     to_signed(16#002B3#, 18), to_signed(16#002B9#, 18), to_signed(16#002BF#, 18), to_signed(16#002C5#, 18),
     to_signed(16#002CB#, 18), to_signed(16#002D1#, 18), to_signed(16#002D7#, 18), to_signed(16#002DD#, 18),
     to_signed(16#002E2#, 18), to_signed(16#002E8#, 18), to_signed(16#002EE#, 18), to_signed(16#002F4#, 18),
     to_signed(16#002FA#, 18), to_signed(16#00300#, 18), to_signed(16#00306#, 18), to_signed(16#0030B#, 18),
     to_signed(16#00311#, 18), to_signed(16#00317#, 18), to_signed(16#0031D#, 18), to_signed(16#00323#, 18),
     to_signed(16#00328#, 18), to_signed(16#0032E#, 18), to_signed(16#00334#, 18), to_signed(16#0033A#, 18),
     to_signed(16#0033F#, 18), to_signed(16#00345#, 18), to_signed(16#0034B#, 18), to_signed(16#00351#, 18),
     to_signed(16#00356#, 18), to_signed(16#0035C#, 18), to_signed(16#00362#, 18), to_signed(16#00368#, 18),
     to_signed(16#0036D#, 18), to_signed(16#00373#, 18), to_signed(16#00379#, 18), to_signed(16#0037E#, 18),
     to_signed(16#00384#, 18), to_signed(16#0038A#, 18), to_signed(16#0038F#, 18), to_signed(16#00395#, 18),
     to_signed(16#0039A#, 18), to_signed(16#003A0#, 18), to_signed(16#003A6#, 18), to_signed(16#003AB#, 18),
     to_signed(16#003B1#, 18), to_signed(16#003B6#, 18), to_signed(16#003BC#, 18), to_signed(16#003C2#, 18),
     to_signed(16#003C7#, 18), to_signed(16#003CD#, 18), to_signed(16#003D2#, 18), to_signed(16#003D8#, 18),
     to_signed(16#003DD#, 18), to_signed(16#003E3#, 18), to_signed(16#003E8#, 18), to_signed(16#003EE#, 18),
     to_signed(16#003F3#, 18), to_signed(16#003F9#, 18), to_signed(16#003FE#, 18), to_signed(16#00404#, 18),
     to_signed(16#00409#, 18), to_signed(16#0040F#, 18), to_signed(16#00414#, 18), to_signed(16#00419#, 18),
     to_signed(16#0041F#, 18), to_signed(16#00424#, 18), to_signed(16#0042A#, 18), to_signed(16#0042F#, 18),
     to_signed(16#00434#, 18), to_signed(16#0043A#, 18), to_signed(16#0043F#, 18), to_signed(16#00444#, 18),
     to_signed(16#0044A#, 18), to_signed(16#0044F#, 18), to_signed(16#00454#, 18), to_signed(16#00459#, 18),
     to_signed(16#0045F#, 18), to_signed(16#00464#, 18), to_signed(16#00469#, 18), to_signed(16#0046F#, 18),
     to_signed(16#00474#, 18), to_signed(16#00479#, 18), to_signed(16#0047E#, 18), to_signed(16#00483#, 18),
     to_signed(16#00489#, 18), to_signed(16#0048E#, 18), to_signed(16#00493#, 18), to_signed(16#00498#, 18),
     to_signed(16#0049D#, 18), to_signed(16#004A2#, 18), to_signed(16#004A8#, 18), to_signed(16#004AD#, 18),
     to_signed(16#004B2#, 18), to_signed(16#004B7#, 18), to_signed(16#004BC#, 18), to_signed(16#004C1#, 18),
     to_signed(16#004C6#, 18), to_signed(16#004CB#, 18), to_signed(16#004D0#, 18), to_signed(16#004D5#, 18),
     to_signed(16#004DA#, 18), to_signed(16#004DF#, 18), to_signed(16#004E4#, 18), to_signed(16#004E9#, 18),
     to_signed(16#004EE#, 18), to_signed(16#004F3#, 18), to_signed(16#004F8#, 18), to_signed(16#004FD#, 18),
     to_signed(16#00502#, 18), to_signed(16#00507#, 18), to_signed(16#0050C#, 18), to_signed(16#00510#, 18),
     to_signed(16#00515#, 18), to_signed(16#0051A#, 18), to_signed(16#0051F#, 18), to_signed(16#00524#, 18),
     to_signed(16#00529#, 18), to_signed(16#0052E#, 18), to_signed(16#00532#, 18), to_signed(16#00537#, 18),
     to_signed(16#0053C#, 18), to_signed(16#00541#, 18), to_signed(16#00545#, 18), to_signed(16#0054A#, 18),
     to_signed(16#0054F#, 18), to_signed(16#00554#, 18), to_signed(16#00558#, 18), to_signed(16#0055D#, 18),
     to_signed(16#00562#, 18), to_signed(16#00566#, 18), to_signed(16#0056B#, 18), to_signed(16#0056F#, 18),
     to_signed(16#00574#, 18), to_signed(16#00579#, 18), to_signed(16#0057D#, 18), to_signed(16#00582#, 18),
     to_signed(16#00586#, 18), to_signed(16#0058B#, 18), to_signed(16#0058F#, 18), to_signed(16#00594#, 18),
     to_signed(16#00598#, 18), to_signed(16#0059D#, 18), to_signed(16#005A1#, 18), to_signed(16#005A6#, 18),
     to_signed(16#005AA#, 18), to_signed(16#005AF#, 18), to_signed(16#005B3#, 18), to_signed(16#005B8#, 18),
     to_signed(16#005BC#, 18), to_signed(16#005C0#, 18), to_signed(16#005C5#, 18), to_signed(16#005C9#, 18),
     to_signed(16#005CD#, 18), to_signed(16#005D2#, 18), to_signed(16#005D6#, 18), to_signed(16#005DA#, 18),
     to_signed(16#005DF#, 18), to_signed(16#005E3#, 18), to_signed(16#005E7#, 18), to_signed(16#005EB#, 18),
     to_signed(16#005F0#, 18), to_signed(16#005F4#, 18), to_signed(16#005F8#, 18), to_signed(16#005FC#, 18),
     to_signed(16#00600#, 18), to_signed(16#00605#, 18), to_signed(16#00609#, 18), to_signed(16#0060D#, 18),
     to_signed(16#00611#, 18), to_signed(16#00615#, 18), to_signed(16#00619#, 18), to_signed(16#0061D#, 18),
     to_signed(16#00621#, 18), to_signed(16#00625#, 18), to_signed(16#00629#, 18), to_signed(16#0062D#, 18),
     to_signed(16#00631#, 18), to_signed(16#00635#, 18), to_signed(16#00639#, 18), to_signed(16#0063D#, 18),
     to_signed(16#00641#, 18), to_signed(16#00645#, 18), to_signed(16#00649#, 18), to_signed(16#0064D#, 18),
     to_signed(16#00651#, 18), to_signed(16#00655#, 18), to_signed(16#00658#, 18), to_signed(16#0065C#, 18),
     to_signed(16#00660#, 18), to_signed(16#00664#, 18), to_signed(16#00668#, 18), to_signed(16#0066B#, 18),
     to_signed(16#0066F#, 18), to_signed(16#00673#, 18), to_signed(16#00677#, 18), to_signed(16#0067A#, 18),
     to_signed(16#0067E#, 18), to_signed(16#00682#, 18), to_signed(16#00685#, 18), to_signed(16#00689#, 18),
     to_signed(16#0068D#, 18), to_signed(16#00690#, 18), to_signed(16#00694#, 18), to_signed(16#00697#, 18),
     to_signed(16#0069B#, 18), to_signed(16#0069E#, 18), to_signed(16#006A2#, 18), to_signed(16#006A6#, 18),
     to_signed(16#006A9#, 18), to_signed(16#006AD#, 18), to_signed(16#006B0#, 18), to_signed(16#006B3#, 18),
     to_signed(16#006B7#, 18), to_signed(16#006BA#, 18), to_signed(16#006BE#, 18), to_signed(16#006C1#, 18),
     to_signed(16#006C4#, 18), to_signed(16#006C8#, 18), to_signed(16#006CB#, 18), to_signed(16#006CE#, 18),
     to_signed(16#006D2#, 18), to_signed(16#006D5#, 18), to_signed(16#006D8#, 18), to_signed(16#006DC#, 18),
     to_signed(16#006DF#, 18), to_signed(16#006E2#, 18), to_signed(16#006E5#, 18), to_signed(16#006E8#, 18),
     to_signed(16#006EC#, 18), to_signed(16#006EF#, 18), to_signed(16#006F2#, 18), to_signed(16#006F5#, 18),
     to_signed(16#006F8#, 18), to_signed(16#006FB#, 18), to_signed(16#006FE#, 18), to_signed(16#00701#, 18),
     to_signed(16#00704#, 18), to_signed(16#00707#, 18), to_signed(16#0070A#, 18), to_signed(16#0070D#, 18),
     to_signed(16#00710#, 18), to_signed(16#00713#, 18), to_signed(16#00716#, 18), to_signed(16#00719#, 18),
     to_signed(16#0071C#, 18), to_signed(16#0071F#, 18), to_signed(16#00722#, 18), to_signed(16#00724#, 18),
     to_signed(16#00727#, 18), to_signed(16#0072A#, 18), to_signed(16#0072D#, 18), to_signed(16#00730#, 18),
     to_signed(16#00732#, 18), to_signed(16#00735#, 18), to_signed(16#00738#, 18), to_signed(16#0073B#, 18),
     to_signed(16#0073D#, 18), to_signed(16#00740#, 18), to_signed(16#00743#, 18), to_signed(16#00745#, 18),
     to_signed(16#00748#, 18), to_signed(16#0074A#, 18), to_signed(16#0074D#, 18), to_signed(16#00750#, 18),
     to_signed(16#00752#, 18), to_signed(16#00755#, 18), to_signed(16#00757#, 18), to_signed(16#0075A#, 18),
     to_signed(16#0075C#, 18), to_signed(16#0075F#, 18), to_signed(16#00761#, 18), to_signed(16#00764#, 18),
     to_signed(16#00766#, 18), to_signed(16#00768#, 18), to_signed(16#0076B#, 18), to_signed(16#0076D#, 18),
     to_signed(16#0076F#, 18), to_signed(16#00772#, 18), to_signed(16#00774#, 18), to_signed(16#00776#, 18),
     to_signed(16#00778#, 18), to_signed(16#0077B#, 18), to_signed(16#0077D#, 18), to_signed(16#0077F#, 18),
     to_signed(16#00781#, 18), to_signed(16#00784#, 18), to_signed(16#00786#, 18), to_signed(16#00788#, 18),
     to_signed(16#0078A#, 18), to_signed(16#0078C#, 18), to_signed(16#0078E#, 18), to_signed(16#00790#, 18),
     to_signed(16#00792#, 18), to_signed(16#00794#, 18), to_signed(16#00796#, 18), to_signed(16#00798#, 18),
     to_signed(16#0079A#, 18), to_signed(16#0079C#, 18), to_signed(16#0079E#, 18), to_signed(16#007A0#, 18),
     to_signed(16#007A2#, 18), to_signed(16#007A4#, 18), to_signed(16#007A6#, 18), to_signed(16#007A7#, 18),
     to_signed(16#007A9#, 18), to_signed(16#007AB#, 18), to_signed(16#007AD#, 18), to_signed(16#007AF#, 18),
     to_signed(16#007B0#, 18), to_signed(16#007B2#, 18), to_signed(16#007B4#, 18), to_signed(16#007B6#, 18),
     to_signed(16#007B7#, 18), to_signed(16#007B9#, 18), to_signed(16#007BA#, 18), to_signed(16#007BC#, 18),
     to_signed(16#007BE#, 18), to_signed(16#007BF#, 18), to_signed(16#007C1#, 18), to_signed(16#007C2#, 18),
     to_signed(16#007C4#, 18), to_signed(16#007C5#, 18), to_signed(16#007C7#, 18), to_signed(16#007C8#, 18),
     to_signed(16#007CA#, 18), to_signed(16#007CB#, 18), to_signed(16#007CD#, 18), to_signed(16#007CE#, 18),
     to_signed(16#007CF#, 18), to_signed(16#007D1#, 18), to_signed(16#007D2#, 18), to_signed(16#007D3#, 18),
     to_signed(16#007D5#, 18), to_signed(16#007D6#, 18), to_signed(16#007D7#, 18), to_signed(16#007D8#, 18),
     to_signed(16#007DA#, 18), to_signed(16#007DB#, 18), to_signed(16#007DC#, 18), to_signed(16#007DD#, 18),
     to_signed(16#007DE#, 18), to_signed(16#007E0#, 18), to_signed(16#007E1#, 18), to_signed(16#007E2#, 18),
     to_signed(16#007E3#, 18), to_signed(16#007E4#, 18), to_signed(16#007E5#, 18), to_signed(16#007E6#, 18),
     to_signed(16#007E7#, 18), to_signed(16#007E8#, 18), to_signed(16#007E9#, 18), to_signed(16#007EA#, 18),
     to_signed(16#007EB#, 18), to_signed(16#007EC#, 18), to_signed(16#007EC#, 18), to_signed(16#007ED#, 18),
     to_signed(16#007EE#, 18), to_signed(16#007EF#, 18), to_signed(16#007F0#, 18), to_signed(16#007F1#, 18),
     to_signed(16#007F1#, 18), to_signed(16#007F2#, 18), to_signed(16#007F3#, 18), to_signed(16#007F3#, 18),
     to_signed(16#007F4#, 18), to_signed(16#007F5#, 18), to_signed(16#007F5#, 18), to_signed(16#007F6#, 18),
     to_signed(16#007F7#, 18), to_signed(16#007F7#, 18), to_signed(16#007F8#, 18), to_signed(16#007F8#, 18),
     to_signed(16#007F9#, 18), to_signed(16#007F9#, 18), to_signed(16#007FA#, 18), to_signed(16#007FA#, 18),
     to_signed(16#007FB#, 18), to_signed(16#007FB#, 18), to_signed(16#007FC#, 18), to_signed(16#007FC#, 18),
     to_signed(16#007FD#, 18), to_signed(16#007FD#, 18), to_signed(16#007FD#, 18), to_signed(16#007FE#, 18),
     to_signed(16#007FE#, 18), to_signed(16#007FE#, 18), to_signed(16#007FE#, 18), to_signed(16#007FF#, 18),
     to_signed(16#007FF#, 18), to_signed(16#007FF#, 18), to_signed(16#007FF#, 18), to_signed(16#007FF#, 18),
     to_signed(16#00800#, 18), to_signed(16#00800#, 18), to_signed(16#00800#, 18), to_signed(16#00800#, 18),
     to_signed(16#00800#, 18), to_signed(16#00800#, 18), to_signed(16#00800#, 18), to_signed(16#00800#, 18));  -- sfix18 [512]

  -- Signals
  SIGNAL u_signed                         : signed(47 DOWNTO 0);  -- sfix48_En45
  SIGNAL insig_out1                       : unsigned(10 DOWNTO 0);  -- ufix11_En11
  SIGNAL Point50_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL LTEp50_1_cast                    : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL LTEp50_relop1                    : std_logic;
  SIGNAL RAMDelayBalance_out1             : std_logic;
  SIGNAL pow2switch_out1                  : std_logic;
  SIGNAL Amp50_sub_cast                   : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Amp50_sub_cast_1                 : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Amp50_out1                       : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL insig_out1_dtc                   : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL QuadHandle1_out1                 : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Point25_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL LTEp25_1_cast                    : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL LTEp25_relop1                    : std_logic;
  SIGNAL p50mA_sub_cast                   : signed(19 DOWNTO 0);  -- sfix20_En18
  SIGNAL p50mA_sub_cast_1                 : signed(19 DOWNTO 0);  -- sfix20_En18
  SIGNAL p50mA_out1                       : signed(19 DOWNTO 0);  -- sfix20_En18
  SIGNAL p50mA_out1_dtc                   : unsigned(10 DOWNTO 0);  -- ufix11_En11
  SIGNAL QuadHandle1_out1_dtc             : unsigned(10 DOWNTO 0);  -- ufix11_En11
  SIGNAL QuadHandle2_out1                 : unsigned(10 DOWNTO 0);  -- ufix11_En11
  SIGNAL CastU16En2_out1                  : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL CastU16En4_out1                  : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL CastU16En3_out1                  : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Saturation_out1                  : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Switch_out1                      : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Look_Up_Table_k                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Look_Up_Table_out1               : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Look_Up_Table_out1_1             : signed(17 DOWNTO 0) := to_signed(16#00000#, 18);  -- sfix18_En11
  SIGNAL Negate_cast                      : signed(18 DOWNTO 0);  -- sfix19_En11
  SIGNAL Negate_cast_1                    : signed(18 DOWNTO 0);  -- sfix19_En11
  SIGNAL Negate_out1                      : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Sine                             : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Sine_1                           : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Sine_2                           : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL insig_out1_1                     : unsigned(10 DOWNTO 0);  -- ufix11_En11
  SIGNAL Point25_out1_1                   : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL LTEp25_1_cast_1                  : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL LTEp25_relop1_1                  : std_logic;
  SIGNAL Point75_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL GTEp75_1_cast                    : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL GTEp75_relop1                    : std_logic;
  SIGNAL alpha1st_or_4th_Quad_bool        : std_logic;
  SIGNAL alpha1st_or_4th_Quad_out1        : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL RAMDelayBalance_out1_1           : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL pow2switch_out1_1                : std_logic;
  SIGNAL Point50_out1_1                   : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL p75mA_sub_cast                   : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL p75mA_sub_cast_1                 : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL p75mA_out1                       : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Amp75_sub_cast                   : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Amp75_sub_cast_1                 : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Amp75_out1                       : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Amp25_sub_cast                   : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Amp25_sub_cast_1                 : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Amp25_out1                       : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL p25mA_sub_cast                   : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL p25mA_sub_cast_1                 : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL p25mA_out1                       : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL LTEp50_1_cast_1                  : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL LTEp50_relop1_1                  : std_logic;
  SIGNAL QuadHandle1b_out1                : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL QuadHandle1b_out1_dtc            : unsigned(10 DOWNTO 0);  -- ufix11_En11
  SIGNAL QuadHandle1a_out1                : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL QuadHandle1a_out1_dtc            : unsigned(10 DOWNTO 0);  -- ufix11_En11
  SIGNAL QuadHandle2_out1_1               : unsigned(10 DOWNTO 0);  -- ufix11_En11
  SIGNAL CastU16En1_out1                  : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL CastU16En3_out1_1                : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL CastU16En2_out1_1                : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Saturation_out1_1                : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Switch_out1_1                    : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Look_Up_Table_k_1                : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Look_Up_Table_out1_2             : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Look_Up_Table_out1_3             : signed(17 DOWNTO 0) := to_signed(16#00000#, 18);  -- sfix18_En11
  SIGNAL Negate_cast_2                    : signed(18 DOWNTO 0);  -- sfix19_En11
  SIGNAL Negate_cast_3                    : signed(18 DOWNTO 0);  -- sfix19_En11
  SIGNAL Negate_out1_1                    : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Cosine                           : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Cosine_1                         : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL Cosine_2                         : signed(17 DOWNTO 0);  -- sfix18_En11

BEGIN
  -- (C) 2016 Mathworks, Inc
  -- 
  -- (C) 2016 Mathworks, Inc

  u_signed <= signed(u);

  insig_out1 <= unsigned(u_signed(44 DOWNTO 34));

  Point50_out1 <= to_unsigned(16#20000#, 18);

  LTEp50_1_cast <= insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  LTEp50_relop1 <= '1' WHEN LTEp50_1_cast <= Point50_out1 ELSE
      '0';

  delayMatch_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        RAMDelayBalance_out1 <= '0';
      ELSIF enb = '1' THEN
        RAMDelayBalance_out1 <= LTEp50_relop1;
      END IF;
    END IF;
  END PROCESS delayMatch_process;


  pow2switch_out1 <= '1';

  Amp50_sub_cast <= signed(resize(insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0', 19));
  Amp50_sub_cast_1 <= signed(resize(Point50_out1, 19));
  Amp50_out1 <= Amp50_sub_cast - Amp50_sub_cast_1;

  insig_out1_dtc <= signed(resize(insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0', 19));

  
  QuadHandle1_out1 <= Amp50_out1 WHEN LTEp50_relop1 = '0' ELSE
      insig_out1_dtc;

  Point25_out1 <= to_unsigned(16#10000#, 18);

  LTEp25_1_cast <= signed(resize(Point25_out1, 19));
  
  LTEp25_relop1 <= '1' WHEN QuadHandle1_out1 <= LTEp25_1_cast ELSE
      '0';

  p50mA_sub_cast <= signed(resize(Point50_out1, 20));
  p50mA_sub_cast_1 <= resize(QuadHandle1_out1, 20);
  p50mA_out1 <= p50mA_sub_cast - p50mA_sub_cast_1;

  p50mA_out1_dtc <= unsigned(p50mA_out1(17 DOWNTO 7));

  QuadHandle1_out1_dtc <= unsigned(QuadHandle1_out1(17 DOWNTO 7));

  
  QuadHandle2_out1 <= p50mA_out1_dtc WHEN LTEp25_relop1 = '0' ELSE
      QuadHandle1_out1_dtc;

  CastU16En2_out1 <= QuadHandle2_out1;

  CastU16En4_out1 <= resize(CastU16En2_out1, 12);

  
  CastU16En3_out1 <= "11111111111" WHEN CastU16En4_out1(11) /= '0' ELSE
      CastU16En4_out1(10 DOWNTO 0);

  -- saturation block maybe optimized away
  -- if the NumDataPoints is a power of 2
  
  Saturation_out1 <= to_unsigned(16#1FF#, 11) WHEN CastU16En3_out1 > to_unsigned(16#1FF#, 11) ELSE
      CastU16En3_out1;

  
  Switch_out1 <= CastU16En3_out1 WHEN pow2switch_out1 = '0' ELSE
      Saturation_out1;

  
  Look_Up_Table_k <= to_unsigned(16#000#, 9) WHEN Switch_out1 = to_unsigned(16#000#, 11) ELSE
      to_unsigned(16#1FF#, 9) WHEN Switch_out1 >= to_unsigned(16#1FF#, 11) ELSE
      Switch_out1(8 DOWNTO 0);
  Look_Up_Table_out1 <= Look_Up_Table_data(to_integer(Look_Up_Table_k));

  PipelineRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Look_Up_Table_out1_1 <= Look_Up_Table_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister_process;


  Negate_cast <= resize(Look_Up_Table_out1_1, 19);
  Negate_cast_1 <=  - (Negate_cast);
  Negate_out1 <= Negate_cast_1(17 DOWNTO 0);

  
  Sine <= Negate_out1 WHEN RAMDelayBalance_out1 = '0' ELSE
      Look_Up_Table_out1_1;

  Sine_1 <= Sine;

  Sine_2 <= Sine_1;

  x <= std_logic_vector(Sine_2);

  insig_out1_1 <= unsigned(u_signed(44 DOWNTO 34));

  Point25_out1_1 <= to_unsigned(16#10000#, 18);

  LTEp25_1_cast_1 <= insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  LTEp25_relop1_1 <= '1' WHEN LTEp25_1_cast_1 <= Point25_out1_1 ELSE
      '0';

  Point75_out1 <= to_unsigned(16#30000#, 18);

  GTEp75_1_cast <= insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  GTEp75_relop1 <= '1' WHEN GTEp75_1_cast >= Point75_out1 ELSE
      '0';

  alpha1st_or_4th_Quad_bool <= LTEp25_relop1_1 OR GTEp75_relop1;

  alpha1st_or_4th_Quad_out1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & alpha1st_or_4th_Quad_bool;

  delayMatch_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        RAMDelayBalance_out1_1 <= to_unsigned(16#00#, 8);
      ELSIF enb = '1' THEN
        RAMDelayBalance_out1_1 <= alpha1st_or_4th_Quad_out1;
      END IF;
    END IF;
  END PROCESS delayMatch_1_process;


  pow2switch_out1_1 <= '1';

  Point50_out1_1 <= to_unsigned(16#20000#, 18);

  p75mA_sub_cast <= signed(resize(Point75_out1, 19));
  p75mA_sub_cast_1 <= signed(resize(insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0', 19));
  p75mA_out1 <= p75mA_sub_cast - p75mA_sub_cast_1;

  Amp75_sub_cast <= signed(resize(insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0', 19));
  Amp75_sub_cast_1 <= signed(resize(Point75_out1, 19));
  Amp75_out1 <= Amp75_sub_cast - Amp75_sub_cast_1;

  Amp25_sub_cast <= signed(resize(insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0', 19));
  Amp25_sub_cast_1 <= signed(resize(Point25_out1_1, 19));
  Amp25_out1 <= Amp25_sub_cast - Amp25_sub_cast_1;

  p25mA_sub_cast <= signed(resize(Point25_out1_1, 19));
  p25mA_sub_cast_1 <= signed(resize(insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0', 19));
  p25mA_out1 <= p25mA_sub_cast - p25mA_sub_cast_1;

  LTEp50_1_cast_1 <= insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  LTEp50_relop1_1 <= '1' WHEN LTEp50_1_cast_1 <= Point50_out1_1 ELSE
      '0';

  
  QuadHandle1b_out1 <= p75mA_out1 WHEN GTEp75_relop1 = '0' ELSE
      Amp75_out1;

  
  QuadHandle1b_out1_dtc <= "11111111111" WHEN (QuadHandle1b_out1(18) = '0') AND (QuadHandle1b_out1(17 DOWNTO 7) = "11111111111") ELSE
      "00000000000" WHEN QuadHandle1b_out1(18) = '1' ELSE
      unsigned(QuadHandle1b_out1(17 DOWNTO 7));

  
  QuadHandle1a_out1 <= Amp25_out1 WHEN LTEp25_relop1_1 = '0' ELSE
      p25mA_out1;

  
  QuadHandle1a_out1_dtc <= "11111111111" WHEN (QuadHandle1a_out1(18) = '0') AND (QuadHandle1a_out1(17 DOWNTO 7) = "11111111111") ELSE
      "00000000000" WHEN QuadHandle1a_out1(18) = '1' ELSE
      unsigned(QuadHandle1a_out1(17 DOWNTO 7));

  
  QuadHandle2_out1_1 <= QuadHandle1b_out1_dtc WHEN LTEp50_relop1_1 = '0' ELSE
      QuadHandle1a_out1_dtc;

  CastU16En1_out1 <= QuadHandle2_out1_1;

  CastU16En3_out1_1 <= resize(CastU16En1_out1, 12);

  
  CastU16En2_out1_1 <= "11111111111" WHEN CastU16En3_out1_1(11) /= '0' ELSE
      CastU16En3_out1_1(10 DOWNTO 0);

  -- saturation block maybe optimized away
  -- if the NumDataPoints is a power of 2
  
  Saturation_out1_1 <= to_unsigned(16#1FF#, 11) WHEN CastU16En2_out1_1 > to_unsigned(16#1FF#, 11) ELSE
      CastU16En2_out1_1;

  
  Switch_out1_1 <= CastU16En2_out1_1 WHEN pow2switch_out1_1 = '0' ELSE
      Saturation_out1_1;

  
  Look_Up_Table_k_1 <= to_unsigned(16#000#, 9) WHEN Switch_out1_1 = to_unsigned(16#000#, 11) ELSE
      to_unsigned(16#1FF#, 9) WHEN Switch_out1_1 >= to_unsigned(16#1FF#, 11) ELSE
      Switch_out1_1(8 DOWNTO 0);
  Look_Up_Table_out1_2 <= Look_Up_Table_data_2(to_integer(Look_Up_Table_k_1));

  PipelineRegister_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Look_Up_Table_out1_3 <= Look_Up_Table_out1_2;
      END IF;
    END IF;
  END PROCESS PipelineRegister_1_process;


  Negate_cast_2 <= resize(Look_Up_Table_out1_3, 19);
  Negate_cast_3 <=  - (Negate_cast_2);
  Negate_out1_1 <= Negate_cast_3(17 DOWNTO 0);

  
  Cosine <= Negate_out1_1 WHEN RAMDelayBalance_out1_1 = to_unsigned(16#00#, 8) ELSE
      Look_Up_Table_out1_3;

  Cosine_1 <= Cosine;

  Cosine_2 <= Cosine_1;

  y <= std_logic_vector(Cosine_2);

END rtl;

