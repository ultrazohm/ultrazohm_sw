// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="BGD_BGD,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvc900-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=12.561000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=184,HLS_SYN_DSP=0,HLS_SYN_FF=35346,HLS_SYN_LUT=34057,HLS_VERSION=2020_1}" *)

module BGD (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_read_r_AWVALID,
        m_axi_read_r_AWREADY,
        m_axi_read_r_AWADDR,
        m_axi_read_r_AWID,
        m_axi_read_r_AWLEN,
        m_axi_read_r_AWSIZE,
        m_axi_read_r_AWBURST,
        m_axi_read_r_AWLOCK,
        m_axi_read_r_AWCACHE,
        m_axi_read_r_AWPROT,
        m_axi_read_r_AWQOS,
        m_axi_read_r_AWREGION,
        m_axi_read_r_AWUSER,
        m_axi_read_r_WVALID,
        m_axi_read_r_WREADY,
        m_axi_read_r_WDATA,
        m_axi_read_r_WSTRB,
        m_axi_read_r_WLAST,
        m_axi_read_r_WID,
        m_axi_read_r_WUSER,
        m_axi_read_r_ARVALID,
        m_axi_read_r_ARREADY,
        m_axi_read_r_ARADDR,
        m_axi_read_r_ARID,
        m_axi_read_r_ARLEN,
        m_axi_read_r_ARSIZE,
        m_axi_read_r_ARBURST,
        m_axi_read_r_ARLOCK,
        m_axi_read_r_ARCACHE,
        m_axi_read_r_ARPROT,
        m_axi_read_r_ARQOS,
        m_axi_read_r_ARREGION,
        m_axi_read_r_ARUSER,
        m_axi_read_r_RVALID,
        m_axi_read_r_RREADY,
        m_axi_read_r_RDATA,
        m_axi_read_r_RLAST,
        m_axi_read_r_RID,
        m_axi_read_r_RUSER,
        m_axi_read_r_RRESP,
        m_axi_read_r_BVALID,
        m_axi_read_r_BREADY,
        m_axi_read_r_BRESP,
        m_axi_read_r_BID,
        m_axi_read_r_BUSER,
        m_axi_write_r_AWVALID,
        m_axi_write_r_AWREADY,
        m_axi_write_r_AWADDR,
        m_axi_write_r_AWID,
        m_axi_write_r_AWLEN,
        m_axi_write_r_AWSIZE,
        m_axi_write_r_AWBURST,
        m_axi_write_r_AWLOCK,
        m_axi_write_r_AWCACHE,
        m_axi_write_r_AWPROT,
        m_axi_write_r_AWQOS,
        m_axi_write_r_AWREGION,
        m_axi_write_r_AWUSER,
        m_axi_write_r_WVALID,
        m_axi_write_r_WREADY,
        m_axi_write_r_WDATA,
        m_axi_write_r_WSTRB,
        m_axi_write_r_WLAST,
        m_axi_write_r_WID,
        m_axi_write_r_WUSER,
        m_axi_write_r_ARVALID,
        m_axi_write_r_ARREADY,
        m_axi_write_r_ARADDR,
        m_axi_write_r_ARID,
        m_axi_write_r_ARLEN,
        m_axi_write_r_ARSIZE,
        m_axi_write_r_ARBURST,
        m_axi_write_r_ARLOCK,
        m_axi_write_r_ARCACHE,
        m_axi_write_r_ARPROT,
        m_axi_write_r_ARQOS,
        m_axi_write_r_ARREGION,
        m_axi_write_r_ARUSER,
        m_axi_write_r_RVALID,
        m_axi_write_r_RREADY,
        m_axi_write_r_RDATA,
        m_axi_write_r_RLAST,
        m_axi_write_r_RID,
        m_axi_write_r_RUSER,
        m_axi_write_r_RRESP,
        m_axi_write_r_BVALID,
        m_axi_write_r_BREADY,
        m_axi_write_r_BRESP,
        m_axi_write_r_BID,
        m_axi_write_r_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP
);

parameter    ap_ST_fsm_state1 = 78'd1;
parameter    ap_ST_fsm_state2 = 78'd2;
parameter    ap_ST_fsm_state3 = 78'd4;
parameter    ap_ST_fsm_state4 = 78'd8;
parameter    ap_ST_fsm_state5 = 78'd16;
parameter    ap_ST_fsm_state6 = 78'd32;
parameter    ap_ST_fsm_state7 = 78'd64;
parameter    ap_ST_fsm_state8 = 78'd128;
parameter    ap_ST_fsm_state9 = 78'd256;
parameter    ap_ST_fsm_pp0_stage0 = 78'd512;
parameter    ap_ST_fsm_state13 = 78'd1024;
parameter    ap_ST_fsm_state14 = 78'd2048;
parameter    ap_ST_fsm_state15 = 78'd4096;
parameter    ap_ST_fsm_state16 = 78'd8192;
parameter    ap_ST_fsm_state17 = 78'd16384;
parameter    ap_ST_fsm_state18 = 78'd32768;
parameter    ap_ST_fsm_state19 = 78'd65536;
parameter    ap_ST_fsm_state20 = 78'd131072;
parameter    ap_ST_fsm_pp1_stage0 = 78'd262144;
parameter    ap_ST_fsm_state24 = 78'd524288;
parameter    ap_ST_fsm_state25 = 78'd1048576;
parameter    ap_ST_fsm_state26 = 78'd2097152;
parameter    ap_ST_fsm_state27 = 78'd4194304;
parameter    ap_ST_fsm_state28 = 78'd8388608;
parameter    ap_ST_fsm_state29 = 78'd16777216;
parameter    ap_ST_fsm_state30 = 78'd33554432;
parameter    ap_ST_fsm_state31 = 78'd67108864;
parameter    ap_ST_fsm_pp2_stage0 = 78'd134217728;
parameter    ap_ST_fsm_state35 = 78'd268435456;
parameter    ap_ST_fsm_state36 = 78'd536870912;
parameter    ap_ST_fsm_state37 = 78'd1073741824;
parameter    ap_ST_fsm_state38 = 78'd2147483648;
parameter    ap_ST_fsm_state39 = 78'd4294967296;
parameter    ap_ST_fsm_state40 = 78'd8589934592;
parameter    ap_ST_fsm_state41 = 78'd17179869184;
parameter    ap_ST_fsm_state42 = 78'd34359738368;
parameter    ap_ST_fsm_state43 = 78'd68719476736;
parameter    ap_ST_fsm_pp3_stage0 = 78'd137438953472;
parameter    ap_ST_fsm_state47 = 78'd274877906944;
parameter    ap_ST_fsm_state48 = 78'd549755813888;
parameter    ap_ST_fsm_state49 = 78'd1099511627776;
parameter    ap_ST_fsm_state50 = 78'd2199023255552;
parameter    ap_ST_fsm_state51 = 78'd4398046511104;
parameter    ap_ST_fsm_state52 = 78'd8796093022208;
parameter    ap_ST_fsm_state53 = 78'd17592186044416;
parameter    ap_ST_fsm_pp4_stage0 = 78'd35184372088832;
parameter    ap_ST_fsm_pp4_stage1 = 78'd70368744177664;
parameter    ap_ST_fsm_pp4_stage2 = 78'd140737488355328;
parameter    ap_ST_fsm_pp4_stage3 = 78'd281474976710656;
parameter    ap_ST_fsm_state59 = 78'd562949953421312;
parameter    ap_ST_fsm_state60 = 78'd1125899906842624;
parameter    ap_ST_fsm_state61 = 78'd2251799813685248;
parameter    ap_ST_fsm_state62 = 78'd4503599627370496;
parameter    ap_ST_fsm_state63 = 78'd9007199254740992;
parameter    ap_ST_fsm_state64 = 78'd18014398509481984;
parameter    ap_ST_fsm_pp5_stage0 = 78'd36028797018963968;
parameter    ap_ST_fsm_pp5_stage1 = 78'd72057594037927936;
parameter    ap_ST_fsm_pp5_stage2 = 78'd144115188075855872;
parameter    ap_ST_fsm_pp5_stage3 = 78'd288230376151711744;
parameter    ap_ST_fsm_state70 = 78'd576460752303423488;
parameter    ap_ST_fsm_state71 = 78'd1152921504606846976;
parameter    ap_ST_fsm_state72 = 78'd2305843009213693952;
parameter    ap_ST_fsm_state73 = 78'd4611686018427387904;
parameter    ap_ST_fsm_state74 = 78'd9223372036854775808;
parameter    ap_ST_fsm_state75 = 78'd18446744073709551616;
parameter    ap_ST_fsm_pp6_stage0 = 78'd36893488147419103232;
parameter    ap_ST_fsm_state79 = 78'd73786976294838206464;
parameter    ap_ST_fsm_state80 = 78'd147573952589676412928;
parameter    ap_ST_fsm_state81 = 78'd295147905179352825856;
parameter    ap_ST_fsm_state82 = 78'd590295810358705651712;
parameter    ap_ST_fsm_state83 = 78'd1180591620717411303424;
parameter    ap_ST_fsm_state84 = 78'd2361183241434822606848;
parameter    ap_ST_fsm_pp7_stage0 = 78'd4722366482869645213696;
parameter    ap_ST_fsm_state88 = 78'd9444732965739290427392;
parameter    ap_ST_fsm_state89 = 78'd18889465931478580854784;
parameter    ap_ST_fsm_state90 = 78'd37778931862957161709568;
parameter    ap_ST_fsm_state91 = 78'd75557863725914323419136;
parameter    ap_ST_fsm_state92 = 78'd151115727451828646838272;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_READ_R_ID_WIDTH = 1;
parameter    C_M_AXI_READ_R_ADDR_WIDTH = 32;
parameter    C_M_AXI_READ_R_DATA_WIDTH = 32;
parameter    C_M_AXI_READ_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_READ_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_READ_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_READ_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_READ_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_READ_R_USER_VALUE = 0;
parameter    C_M_AXI_READ_R_PROT_VALUE = 0;
parameter    C_M_AXI_READ_R_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_WRITE_R_ID_WIDTH = 1;
parameter    C_M_AXI_WRITE_R_ADDR_WIDTH = 32;
parameter    C_M_AXI_WRITE_R_DATA_WIDTH = 32;
parameter    C_M_AXI_WRITE_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_WRITE_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WRITE_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_WRITE_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_WRITE_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_WRITE_R_USER_VALUE = 0;
parameter    C_M_AXI_WRITE_R_PROT_VALUE = 0;
parameter    C_M_AXI_WRITE_R_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_READ_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WRITE_R_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_read_r_AWVALID;
input   m_axi_read_r_AWREADY;
output  [C_M_AXI_READ_R_ADDR_WIDTH - 1:0] m_axi_read_r_AWADDR;
output  [C_M_AXI_READ_R_ID_WIDTH - 1:0] m_axi_read_r_AWID;
output  [7:0] m_axi_read_r_AWLEN;
output  [2:0] m_axi_read_r_AWSIZE;
output  [1:0] m_axi_read_r_AWBURST;
output  [1:0] m_axi_read_r_AWLOCK;
output  [3:0] m_axi_read_r_AWCACHE;
output  [2:0] m_axi_read_r_AWPROT;
output  [3:0] m_axi_read_r_AWQOS;
output  [3:0] m_axi_read_r_AWREGION;
output  [C_M_AXI_READ_R_AWUSER_WIDTH - 1:0] m_axi_read_r_AWUSER;
output   m_axi_read_r_WVALID;
input   m_axi_read_r_WREADY;
output  [C_M_AXI_READ_R_DATA_WIDTH - 1:0] m_axi_read_r_WDATA;
output  [C_M_AXI_READ_R_WSTRB_WIDTH - 1:0] m_axi_read_r_WSTRB;
output   m_axi_read_r_WLAST;
output  [C_M_AXI_READ_R_ID_WIDTH - 1:0] m_axi_read_r_WID;
output  [C_M_AXI_READ_R_WUSER_WIDTH - 1:0] m_axi_read_r_WUSER;
output   m_axi_read_r_ARVALID;
input   m_axi_read_r_ARREADY;
output  [C_M_AXI_READ_R_ADDR_WIDTH - 1:0] m_axi_read_r_ARADDR;
output  [C_M_AXI_READ_R_ID_WIDTH - 1:0] m_axi_read_r_ARID;
output  [7:0] m_axi_read_r_ARLEN;
output  [2:0] m_axi_read_r_ARSIZE;
output  [1:0] m_axi_read_r_ARBURST;
output  [1:0] m_axi_read_r_ARLOCK;
output  [3:0] m_axi_read_r_ARCACHE;
output  [2:0] m_axi_read_r_ARPROT;
output  [3:0] m_axi_read_r_ARQOS;
output  [3:0] m_axi_read_r_ARREGION;
output  [C_M_AXI_READ_R_ARUSER_WIDTH - 1:0] m_axi_read_r_ARUSER;
input   m_axi_read_r_RVALID;
output   m_axi_read_r_RREADY;
input  [C_M_AXI_READ_R_DATA_WIDTH - 1:0] m_axi_read_r_RDATA;
input   m_axi_read_r_RLAST;
input  [C_M_AXI_READ_R_ID_WIDTH - 1:0] m_axi_read_r_RID;
input  [C_M_AXI_READ_R_RUSER_WIDTH - 1:0] m_axi_read_r_RUSER;
input  [1:0] m_axi_read_r_RRESP;
input   m_axi_read_r_BVALID;
output   m_axi_read_r_BREADY;
input  [1:0] m_axi_read_r_BRESP;
input  [C_M_AXI_READ_R_ID_WIDTH - 1:0] m_axi_read_r_BID;
input  [C_M_AXI_READ_R_BUSER_WIDTH - 1:0] m_axi_read_r_BUSER;
output   m_axi_write_r_AWVALID;
input   m_axi_write_r_AWREADY;
output  [C_M_AXI_WRITE_R_ADDR_WIDTH - 1:0] m_axi_write_r_AWADDR;
output  [C_M_AXI_WRITE_R_ID_WIDTH - 1:0] m_axi_write_r_AWID;
output  [7:0] m_axi_write_r_AWLEN;
output  [2:0] m_axi_write_r_AWSIZE;
output  [1:0] m_axi_write_r_AWBURST;
output  [1:0] m_axi_write_r_AWLOCK;
output  [3:0] m_axi_write_r_AWCACHE;
output  [2:0] m_axi_write_r_AWPROT;
output  [3:0] m_axi_write_r_AWQOS;
output  [3:0] m_axi_write_r_AWREGION;
output  [C_M_AXI_WRITE_R_AWUSER_WIDTH - 1:0] m_axi_write_r_AWUSER;
output   m_axi_write_r_WVALID;
input   m_axi_write_r_WREADY;
output  [C_M_AXI_WRITE_R_DATA_WIDTH - 1:0] m_axi_write_r_WDATA;
output  [C_M_AXI_WRITE_R_WSTRB_WIDTH - 1:0] m_axi_write_r_WSTRB;
output   m_axi_write_r_WLAST;
output  [C_M_AXI_WRITE_R_ID_WIDTH - 1:0] m_axi_write_r_WID;
output  [C_M_AXI_WRITE_R_WUSER_WIDTH - 1:0] m_axi_write_r_WUSER;
output   m_axi_write_r_ARVALID;
input   m_axi_write_r_ARREADY;
output  [C_M_AXI_WRITE_R_ADDR_WIDTH - 1:0] m_axi_write_r_ARADDR;
output  [C_M_AXI_WRITE_R_ID_WIDTH - 1:0] m_axi_write_r_ARID;
output  [7:0] m_axi_write_r_ARLEN;
output  [2:0] m_axi_write_r_ARSIZE;
output  [1:0] m_axi_write_r_ARBURST;
output  [1:0] m_axi_write_r_ARLOCK;
output  [3:0] m_axi_write_r_ARCACHE;
output  [2:0] m_axi_write_r_ARPROT;
output  [3:0] m_axi_write_r_ARQOS;
output  [3:0] m_axi_write_r_ARREGION;
output  [C_M_AXI_WRITE_R_ARUSER_WIDTH - 1:0] m_axi_write_r_ARUSER;
input   m_axi_write_r_RVALID;
output   m_axi_write_r_RREADY;
input  [C_M_AXI_WRITE_R_DATA_WIDTH - 1:0] m_axi_write_r_RDATA;
input   m_axi_write_r_RLAST;
input  [C_M_AXI_WRITE_R_ID_WIDTH - 1:0] m_axi_write_r_RID;
input  [C_M_AXI_WRITE_R_RUSER_WIDTH - 1:0] m_axi_write_r_RUSER;
input  [1:0] m_axi_write_r_RRESP;
input   m_axi_write_r_BVALID;
output   m_axi_write_r_BREADY;
input  [1:0] m_axi_write_r_BRESP;
input  [C_M_AXI_WRITE_R_ID_WIDTH - 1:0] m_axi_write_r_BID;
input  [C_M_AXI_WRITE_R_BUSER_WIDTH - 1:0] m_axi_write_r_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [77:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] axiMlpResultsInput;
wire   [63:0] axiClassesInput;
wire   [63:0] axiWeightInput;
wire   [63:0] axiBiasInput;
wire   [63:0] axiWeightOutput;
wire   [63:0] axiBiasOutput;
wire   [31:0] numberInputs;
wire   [31:0] numberOutputs;
wire   [31:0] numberLayers;
wire  signed [31:0] numberNeurons;
wire   [31:0] loadParameters;
wire  signed [31:0] batchSize;
wire   [31:0] learningRate;
reg   [15:0] bramWeight_address0;
reg    bramWeight_ce0;
reg    bramWeight_we0;
reg   [31:0] bramWeight_d0;
wire   [31:0] bramWeight_q0;
reg   [15:0] bramWeight_address1;
reg    bramWeight_ce1;
reg    bramWeight_we1;
wire   [31:0] bramWeight_q1;
reg   [8:0] bramBias_address0;
reg    bramBias_ce0;
reg    bramBias_we0;
reg   [31:0] bramBias_d0;
wire   [31:0] bramBias_q0;
reg    bramBias_ce1;
reg    bramBias_we1;
wire   [31:0] bramBias_q1;
reg   [15:0] bramWeightGradientAvg_address0;
reg    bramWeightGradientAvg_ce0;
reg    bramWeightGradientAvg_we0;
reg   [31:0] bramWeightGradientAvg_d0;
wire   [31:0] bramWeightGradientAvg_q0;
reg   [15:0] bramWeightGradientAvg_address1;
reg    bramWeightGradientAvg_ce1;
reg    bramWeightGradientAvg_we1;
reg   [31:0] bramWeightGradientAvg_d1;
wire   [31:0] bramWeightGradientAvg_q1;
reg   [8:0] bramBiasGradientAvg_address0;
reg    bramBiasGradientAvg_ce0;
reg    bramBiasGradientAvg_we0;
reg   [31:0] bramBiasGradientAvg_d0;
wire   [31:0] bramBiasGradientAvg_q0;
reg   [8:0] bramBiasGradientAvg_address1;
reg    bramBiasGradientAvg_ce1;
wire   [31:0] bramBiasGradientAvg_q1;
reg    read_r_blk_n_AR;
wire    ap_CS_fsm_state3;
reg    read_r_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond14911_reg_1808;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] exitcond1479_reg_1875;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] exitcond1468_reg_1928;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond14810_reg_1838;
wire    ap_CS_fsm_state14;
reg    write_r_blk_n_AW;
wire    ap_CS_fsm_state75;
reg   [0:0] icmp_ln153_reg_2361;
reg    write_r_blk_n_W;
reg    ap_enable_reg_pp6_iter2;
wire    ap_block_pp6_stage0;
reg   [0:0] exitcond1212_reg_2371;
reg   [0:0] exitcond1212_reg_2371_pp6_iter1_reg;
reg    write_r_blk_n_B;
wire    ap_CS_fsm_state83;
reg    ap_enable_reg_pp7_iter2;
wire    ap_block_pp7_stage0;
reg   [0:0] exitcond1_reg_2400;
reg   [0:0] exitcond1_reg_2400_pp7_iter1_reg;
wire    ap_CS_fsm_state92;
reg   [0:0] icmp_ln158_reg_2390;
wire    ap_CS_fsm_state84;
wire    read_r_AWREADY;
wire    read_r_WREADY;
reg    read_r_ARVALID;
wire    read_r_ARREADY;
reg   [31:0] read_r_ARADDR;
reg   [31:0] read_r_ARLEN;
wire    read_r_RVALID;
reg    read_r_RREADY;
wire   [31:0] read_r_RDATA;
wire    read_r_RLAST;
wire   [0:0] read_r_RID;
wire   [0:0] read_r_RUSER;
wire   [1:0] read_r_RRESP;
wire    read_r_BVALID;
wire   [1:0] read_r_BRESP;
wire   [0:0] read_r_BID;
wire   [0:0] read_r_BUSER;
reg    write_r_AWVALID;
wire    write_r_AWREADY;
reg   [31:0] write_r_AWADDR;
reg   [31:0] write_r_AWLEN;
reg    write_r_WVALID;
wire    write_r_WREADY;
reg   [31:0] write_r_WDATA;
wire    write_r_ARREADY;
wire    write_r_RVALID;
wire   [31:0] write_r_RDATA;
wire    write_r_RLAST;
wire   [0:0] write_r_RID;
wire   [0:0] write_r_RUSER;
wire   [1:0] write_r_RRESP;
wire    write_r_BVALID;
reg    write_r_BREADY;
wire   [1:0] write_r_BRESP;
wire   [0:0] write_r_BID;
wire   [0:0] write_r_BUSER;
reg   [31:0] loop_index117_reg_660;
reg   [31:0] loop_index117_reg_660_pp0_iter1_reg;
wire    ap_block_state10_pp0_stage0_iter0;
reg    ap_block_state11_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] loop_index111_reg_672;
reg   [31:0] loop_index111_reg_672_pp1_iter1_reg;
wire    ap_block_state21_pp1_stage0_iter0;
reg    ap_block_state22_pp1_stage0_iter1;
wire    ap_block_state23_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
reg   [31:0] loop_index105_reg_684;
reg   [31:0] loop_index105_reg_684_pp2_iter1_reg;
wire    ap_block_state32_pp2_stage0_iter0;
reg    ap_block_state33_pp2_stage0_iter1;
wire    ap_block_state34_pp2_stage0_iter2;
reg    ap_block_pp2_stage0_11001;
reg   [31:0] loop_index99_reg_696;
reg   [31:0] loop_index99_reg_696_pp3_iter1_reg;
wire    ap_block_state44_pp3_stage0_iter0;
reg    ap_block_state45_pp3_stage0_iter1;
wire    ap_block_state46_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
reg   [28:0] i_8_reg_729;
reg   [28:0] i_10_reg_759;
reg   [31:0] loop_index93_reg_770;
reg   [31:0] loop_index_reg_781;
reg   [63:0] axiBiasOutput_read_reg_1698;
reg   [63:0] axiWeightOutput_read_reg_1703;
reg   [63:0] axiBiasInput_read_reg_1708;
reg   [63:0] axiWeightInput_read_reg_1713;
reg   [63:0] axiClassesInput_read_reg_1718;
reg   [63:0] axiMlpResultsInput_read_reg_1723;
wire   [0:0] icmp_ln51_fu_856_p2;
reg  signed [31:0] numberOutputs_read_reg_1732;
reg  signed [31:0] numberInputs_read_reg_1746;
reg   [31:0] numberNeurons_read_reg_1758;
reg  signed [31:0] numberLayers_read_reg_1779;
wire   [31:0] mul_ln56_fu_868_p2;
reg   [31:0] mul_ln56_reg_1787;
wire   [31:0] valuesToLoad_fu_883_p2;
reg   [31:0] valuesToLoad_reg_1792;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln59_fu_888_p2;
reg   [31:0] read_addr_reg_1802;
wire   [0:0] exitcond14911_fu_913_p2;
reg   [0:0] exitcond14911_reg_1808_pp0_iter1_reg;
wire   [31:0] empty_187_fu_918_p2;
reg   [31:0] empty_187_reg_1812;
reg    ap_enable_reg_pp0_iter0;
reg   [31:0] read_addr_read_reg_1817;
wire   [31:0] valuesToLoad_2_fu_937_p2;
reg   [31:0] valuesToLoad_2_reg_1822;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln64_fu_942_p2;
reg   [31:0] read_addr_1_reg_1832;
wire   [0:0] exitcond14810_fu_967_p2;
reg   [0:0] exitcond14810_reg_1838_pp1_iter1_reg;
wire   [31:0] empty_189_fu_972_p2;
reg   [31:0] empty_189_reg_1842;
reg    ap_enable_reg_pp1_iter0;
reg   [31:0] read_addr_1_read_reg_1847;
reg  signed [31:0] batchSize_read_reg_1852;
wire    ap_CS_fsm_state24;
wire   [31:0] mul_ln68_fu_987_p2;
reg   [31:0] mul_ln68_reg_1859;
wire   [0:0] icmp_ln68_fu_992_p2;
reg   [31:0] read_addr_2_reg_1869;
wire   [0:0] exitcond1479_fu_1017_p2;
reg   [0:0] exitcond1479_reg_1875_pp2_iter1_reg;
wire   [31:0] empty_192_fu_1022_p2;
reg   [31:0] empty_192_reg_1879;
reg    ap_enable_reg_pp2_iter0;
reg   [31:0] read_addr_2_read_reg_1884;
wire   [31:0] valuesToStore_2_fu_1037_p2;
reg   [31:0] valuesToStore_2_reg_1889;
wire    ap_CS_fsm_state35;
wire   [31:0] add_ln72_fu_1041_p2;
reg   [31:0] add_ln72_reg_1895;
wire   [13:0] trunc_ln72_1_fu_1046_p1;
reg   [13:0] trunc_ln72_1_reg_1900;
wire   [15:0] trunc_ln72_fu_1050_p1;
reg   [15:0] trunc_ln72_reg_1906;
wire    ap_CS_fsm_state36;
wire   [31:0] mul_ln72_1_fu_1057_p2;
reg   [31:0] mul_ln72_1_reg_1912;
wire   [0:0] icmp_ln69_fu_1062_p2;
reg   [31:0] read_addr_3_reg_1922;
wire   [0:0] exitcond1468_fu_1087_p2;
reg   [0:0] exitcond1468_reg_1928_pp3_iter1_reg;
wire   [31:0] empty_194_fu_1092_p2;
reg   [31:0] empty_194_reg_1932;
reg    ap_enable_reg_pp3_iter0;
reg   [31:0] read_addr_3_read_reg_1937;
wire  signed [31:0] layer_fu_1107_p2;
reg  signed [31:0] layer_reg_1942;
wire    ap_CS_fsm_state47;
wire   [31:0] mul34_fu_1112_p2;
reg   [31:0] mul34_reg_1948;
wire   [0:0] icmp_fu_1126_p2;
reg   [0:0] icmp_reg_1954;
wire  signed [31:0] add35_fu_1132_p2;
reg  signed [31:0] add35_reg_1960;
wire    ap_CS_fsm_state48;
wire   [13:0] empty_206_fu_1136_p1;
reg   [13:0] empty_206_reg_1965;
wire   [15:0] empty_207_fu_1145_p1;
reg   [15:0] empty_207_reg_1970;
wire   [8:0] empty_208_fu_1149_p1;
reg   [8:0] empty_208_reg_1975;
wire   [31:0] l_n_fu_1152_p3;
reg   [31:0] l_n_reg_1980;
wire   [15:0] empty_209_fu_1161_p1;
reg   [15:0] empty_209_reg_1985;
wire   [13:0] trunc_ln76_fu_1165_p1;
reg   [13:0] trunc_ln76_reg_1990;
wire   [63:0] zext_ln76_fu_1168_p1;
reg   [63:0] zext_ln76_reg_1997;
reg   [28:0] trunc_ln76_1_reg_2003;
wire  signed [15:0] trunc_ln107_fu_1180_p1;
reg  signed [15:0] trunc_ln107_reg_2008;
wire   [31:0] i_9_fu_1188_p2;
reg   [31:0] i_9_reg_2017;
wire    ap_CS_fsm_state49;
wire  signed [9:0] trunc_ln76_2_fu_1194_p1;
reg  signed [9:0] trunc_ln76_2_reg_2022;
wire   [0:0] icmp_ln76_fu_1183_p2;
wire   [0:0] initZero_fu_1211_p2;
reg   [0:0] initZero_reg_2037;
wire  signed [13:0] grp_fu_1678_p2;
reg  signed [13:0] mul_ln79_reg_2043;
wire    ap_CS_fsm_state52;
wire   [9:0] mul_ln80_fu_1221_p2;
reg   [9:0] mul_ln80_reg_2051;
(* use_dsp48 = "no" *) wire   [13:0] add_ln86_fu_1227_p2;
reg   [13:0] add_ln86_reg_2056;
(* use_dsp48 = "no" *) wire   [13:0] add_ln88_fu_1232_p2;
reg   [13:0] add_ln88_reg_2061;
reg   [28:0] trunc_ln3_reg_2066;
wire    ap_CS_fsm_state53;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_ready;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_done;
wire    ap_sync_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_ready;
wire    ap_sync_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_done;
reg    ap_block_state53_on_subcall_done;
wire   [0:0] icmp_ln137_fu_1247_p2;
reg   [0:0] icmp_ln137_reg_2071;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state54_pp4_stage0_iter0;
wire    ap_block_state58_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [28:0] add_ln137_fu_1252_p2;
reg   [28:0] add_ln137_reg_2075;
reg    ap_enable_reg_pp4_iter0;
wire   [6:0] tmp_s_fu_1262_p3;
reg   [6:0] tmp_s_reg_2080;
wire   [63:0] zext_ln143_fu_1270_p1;
reg   [63:0] zext_ln143_reg_2090;
wire   [63:0] zext_ln143_1_fu_1281_p1;
reg   [63:0] zext_ln143_1_reg_2100;
wire   [63:0] zext_ln143_2_fu_1291_p1;
reg   [63:0] zext_ln143_2_reg_2110;
wire    ap_CS_fsm_pp4_stage1;
wire    ap_block_state55_pp4_stage1_iter0;
wire    ap_block_pp4_stage1_11001;
wire   [63:0] zext_ln143_3_fu_1301_p1;
reg   [63:0] zext_ln143_3_reg_2120;
wire   [63:0] zext_ln143_4_fu_1311_p1;
reg   [63:0] zext_ln143_4_reg_2130;
wire    ap_CS_fsm_pp4_stage2;
wire    ap_block_state56_pp4_stage2_iter0;
wire    ap_block_pp4_stage2_11001;
wire   [63:0] zext_ln143_5_fu_1321_p1;
reg   [63:0] zext_ln143_5_reg_2140;
wire   [63:0] zext_ln143_6_fu_1331_p1;
reg   [63:0] zext_ln143_6_reg_2150;
wire    ap_CS_fsm_pp4_stage3;
wire    ap_block_state57_pp4_stage3_iter0;
wire    ap_block_pp4_stage3_11001;
wire   [63:0] zext_ln143_7_fu_1341_p1;
reg   [63:0] zext_ln143_7_reg_2160;
wire   [31:0] p_n_fu_1357_p3;
reg   [31:0] p_n_reg_2173;
wire    ap_CS_fsm_state60;
wire   [0:0] icmp_ln99_fu_1346_p2;
wire   [13:0] add_ln109_fu_1395_p2;
reg   [13:0] add_ln109_reg_2183;
wire  signed [31:0] layer_2_fu_1400_p2;
reg  signed [31:0] layer_2_reg_2188;
wire   [13:0] add_ln110_2_fu_1429_p2;
reg   [13:0] add_ln110_2_reg_2198;
wire   [8:0] trunc_ln103_fu_1434_p1;
reg   [8:0] trunc_ln103_reg_2203;
wire   [31:0] select_ln122_fu_1438_p3;
reg   [31:0] select_ln122_reg_2208;
(* use_dsp48 = "no" *) wire   [13:0] add_ln129_fu_1444_p2;
reg   [13:0] add_ln129_reg_2213;
wire  signed [15:0] grp_fu_1686_p2;
reg  signed [15:0] mul_ln109_reg_2218;
wire    ap_CS_fsm_state63;
wire  signed [15:0] grp_fu_1692_p2;
reg  signed [15:0] mul_ln112_reg_2223;
wire   [0:0] icmp_ln137_1_fu_1449_p2;
reg   [0:0] icmp_ln137_1_reg_2228;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state65_pp5_stage0_iter0;
wire    ap_block_state69_pp5_stage0_iter1;
wire    ap_block_pp5_stage0_11001;
wire   [28:0] add_ln137_1_fu_1454_p2;
reg   [28:0] add_ln137_1_reg_2232;
reg    ap_enable_reg_pp5_iter0;
wire   [6:0] tmp_1_fu_1464_p3;
reg   [6:0] tmp_1_reg_2237;
wire   [63:0] zext_ln143_8_fu_1472_p1;
reg   [63:0] zext_ln143_8_reg_2247;
wire   [63:0] zext_ln143_9_fu_1483_p1;
reg   [63:0] zext_ln143_9_reg_2257;
wire   [63:0] zext_ln143_10_fu_1493_p1;
reg   [63:0] zext_ln143_10_reg_2267;
wire    ap_CS_fsm_pp5_stage1;
wire    ap_block_state66_pp5_stage1_iter0;
wire    ap_block_pp5_stage1_11001;
wire   [63:0] zext_ln143_11_fu_1503_p1;
reg   [63:0] zext_ln143_11_reg_2277;
wire   [63:0] zext_ln143_12_fu_1513_p1;
reg   [63:0] zext_ln143_12_reg_2287;
wire    ap_CS_fsm_pp5_stage2;
wire    ap_block_state67_pp5_stage2_iter0;
wire    ap_block_pp5_stage2_11001;
wire   [63:0] zext_ln143_13_fu_1523_p1;
reg   [63:0] zext_ln143_13_reg_2297;
wire   [63:0] zext_ln143_14_fu_1533_p1;
reg   [63:0] zext_ln143_14_reg_2307;
wire    ap_CS_fsm_pp5_stage3;
wire    ap_block_state68_pp5_stage3_iter0;
wire    ap_block_pp5_stage3_11001;
wire   [63:0] zext_ln143_15_fu_1543_p1;
reg   [63:0] zext_ln143_15_reg_2317;
wire   [63:0] add_ln99_fu_1548_p2;
wire    ap_CS_fsm_state70;
wire   [31:0] bitcast_ln142_fu_1554_p1;
reg   [31:0] bitcast_ln142_reg_2332;
wire    ap_CS_fsm_state74;
wire   [31:0] grp_fu_852_p1;
reg   [31:0] conv_reg_2337;
wire   [31:0] mul_ln144_fu_1563_p2;
reg   [31:0] mul_ln144_reg_2342;
wire   [31:0] valuesToStore_3_fu_1569_p2;
reg   [31:0] valuesToStore_3_reg_2347;
wire   [31:0] valuesToStore_1_fu_1583_p2;
reg   [31:0] valuesToStore_1_reg_2355;
wire   [0:0] icmp_ln153_fu_1588_p2;
reg    ap_block_state75_io;
wire    grp_updateParameter_float_8u_s_fu_816_ap_ready;
wire    grp_updateParameter_float_8u_s_fu_816_ap_done;
wire    ap_sync_grp_updateParameter_float_8u_s_fu_816_ap_ready;
wire    ap_sync_grp_updateParameter_float_8u_s_fu_816_ap_done;
reg    ap_block_state75_on_subcall_done;
wire   [0:0] exitcond1212_fu_1614_p2;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state76_pp6_stage0_iter0;
wire    ap_block_state77_pp6_stage0_iter1;
wire    ap_block_state78_pp6_stage0_iter2;
reg    ap_block_state78_io;
reg    ap_block_pp6_stage0_11001;
wire   [31:0] empty_199_fu_1619_p2;
reg    ap_enable_reg_pp6_iter0;
reg   [31:0] bramWeight_load_reg_2385;
reg    ap_enable_reg_pp6_iter1;
wire   [0:0] icmp_ln158_fu_1634_p2;
reg    ap_block_state83;
reg   [31:0] write_addr_1_reg_2394;
wire   [0:0] exitcond1_fu_1658_p2;
wire    ap_CS_fsm_pp7_stage0;
wire    ap_block_state85_pp7_stage0_iter0;
wire    ap_block_state86_pp7_stage0_iter1;
wire    ap_block_state87_pp7_stage0_iter2;
reg    ap_block_state87_io;
reg    ap_block_pp7_stage0_11001;
wire   [31:0] empty_201_fu_1663_p2;
reg    ap_enable_reg_pp7_iter0;
reg   [31:0] bramBias_load_reg_2414;
reg    ap_enable_reg_pp7_iter1;
wire    ap_CS_fsm_state9;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state10;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state20;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state21;
reg    ap_enable_reg_pp1_iter2;
wire    ap_CS_fsm_state31;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state32;
reg    ap_enable_reg_pp2_iter2;
wire    ap_CS_fsm_state43;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state44;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state54;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage3_subdone;
wire    ap_CS_fsm_state64;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_ready;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_done;
wire    ap_sync_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_ready;
wire    ap_sync_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_done;
reg    ap_block_state64_on_subcall_done;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state65;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp5_stage3_subdone;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state76;
reg    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state85;
reg   [9:0] bramClasses_address0;
reg    bramClasses_ce0;
reg    bramClasses_we0;
wire   [31:0] bramClasses_d0;
wire   [31:0] bramClasses_q0;
reg   [13:0] bramMlpResults_address0;
reg    bramMlpResults_ce0;
reg    bramMlpResults_we0;
wire   [31:0] bramMlpResults_d0;
wire   [31:0] bramMlpResults_q0;
reg   [13:0] bramMlpResults_address1;
reg    bramMlpResults_ce1;
wire   [31:0] bramMlpResults_q1;
reg   [6:0] bramError0_address0;
reg    bramError0_ce0;
reg    bramError0_we0;
reg   [31:0] bramError0_d0;
wire   [31:0] bramError0_q0;
reg   [6:0] bramError0_address1;
reg    bramError0_ce1;
wire   [31:0] bramError0_q1;
reg   [6:0] bramError1_address0;
reg    bramError1_ce0;
reg    bramError1_we0;
wire   [31:0] bramError1_q0;
reg   [6:0] bramError1_address1;
reg    bramError1_ce1;
reg    bramError1_we1;
wire   [31:0] bramError1_q1;
reg   [31:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_n;
reg   [31:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_numberOutputsPrev;
wire   [15:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_address0;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_ce0;
wire   [31:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_d0;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_we0;
wire   [15:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_address1;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_ce1;
wire   [31:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_d1;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_we1;
reg   [15:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_offset;
wire   [6:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_address0;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_ce0;
wire   [31:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_d0;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_we0;
wire   [6:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_address1;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_ce1;
wire   [31:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_d1;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_we1;
wire   [13:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_address0;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_ce0;
wire   [31:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_d0;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_we0;
wire   [13:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_address1;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_ce1;
wire   [31:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_d1;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_we1;
reg   [13:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_offset;
reg   [13:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputPrevLayer_offset;
wire   [15:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_address0;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_ce0;
wire   [31:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_d0;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_we0;
wire   [15:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_address1;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_ce1;
wire   [31:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_d1;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_we1;
reg   [15:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_offset;
wire   [8:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_address0;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_ce0;
wire   [31:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_d0;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_we0;
wire   [8:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_address1;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_ce1;
wire   [31:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_d1;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_we1;
reg   [8:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_offset;
wire   [6:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_address0;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_ce0;
wire   [31:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_d0;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_we0;
wire   [6:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_address1;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_ce1;
wire   [31:0] grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_d1;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_we1;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_initZero;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_start;
wire    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_idle;
reg    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_continue;
wire   [15:0] grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_address0;
wire    grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_ce0;
wire   [31:0] grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_d0;
wire    grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_we0;
wire   [15:0] grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_address1;
wire    grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_ce1;
wire   [31:0] grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_d1;
wire    grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_we1;
wire   [8:0] grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_address0;
wire    grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_ce0;
wire   [31:0] grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_d0;
wire    grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_we0;
wire   [8:0] grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_address1;
wire    grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_ce1;
wire   [31:0] grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_d1;
wire    grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_we1;
wire   [15:0] grp_updateParameter_float_8u_s_fu_816_bramWeight_address0;
wire    grp_updateParameter_float_8u_s_fu_816_bramWeight_ce0;
wire   [31:0] grp_updateParameter_float_8u_s_fu_816_bramWeight_d0;
wire    grp_updateParameter_float_8u_s_fu_816_bramWeight_we0;
wire   [15:0] grp_updateParameter_float_8u_s_fu_816_bramWeight_address1;
wire    grp_updateParameter_float_8u_s_fu_816_bramWeight_ce1;
wire   [31:0] grp_updateParameter_float_8u_s_fu_816_bramWeight_d1;
wire    grp_updateParameter_float_8u_s_fu_816_bramWeight_we1;
wire   [8:0] grp_updateParameter_float_8u_s_fu_816_bramBias_address0;
wire    grp_updateParameter_float_8u_s_fu_816_bramBias_ce0;
wire   [31:0] grp_updateParameter_float_8u_s_fu_816_bramBias_d0;
wire    grp_updateParameter_float_8u_s_fu_816_bramBias_we0;
wire   [8:0] grp_updateParameter_float_8u_s_fu_816_bramBias_address1;
wire    grp_updateParameter_float_8u_s_fu_816_bramBias_ce1;
wire   [31:0] grp_updateParameter_float_8u_s_fu_816_bramBias_d1;
wire    grp_updateParameter_float_8u_s_fu_816_bramBias_we1;
wire    grp_updateParameter_float_8u_s_fu_816_ap_start;
wire    grp_updateParameter_float_8u_s_fu_816_ap_idle;
reg    grp_updateParameter_float_8u_s_fu_816_ap_continue;
wire   [13:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_address0;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_ce0;
wire   [31:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_d0;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_we0;
wire   [13:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_address1;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_ce1;
wire   [31:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_d1;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_we1;
wire   [9:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_address0;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_ce0;
wire   [31:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_d0;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_we0;
wire   [9:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_address1;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_ce1;
wire   [31:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_d1;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_we1;
wire   [15:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_address0;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_ce0;
wire   [31:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_d0;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_we0;
wire   [15:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_address1;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_ce1;
wire   [31:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_d1;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_we1;
wire   [8:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_address0;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_ce0;
wire   [31:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_d0;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_we0;
wire   [8:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_address1;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_ce1;
wire   [31:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_d1;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_we1;
wire   [6:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_address0;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_ce0;
wire   [31:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_d0;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_we0;
wire   [6:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_address1;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_ce1;
wire   [31:0] grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_d1;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_we1;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_p_initZero;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_start;
wire    grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_idle;
reg    grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_continue;
reg   [31:0] ap_phi_mux_loop_index117_phi_fu_664_p4;
reg   [31:0] ap_phi_mux_loop_index111_phi_fu_676_p4;
reg   [31:0] ap_phi_mux_loop_index105_phi_fu_688_p4;
reg   [31:0] ap_phi_mux_loop_index99_phi_fu_700_p4;
reg   [31:0] size_assign_reg_708;
wire    ap_CS_fsm_state71;
reg    ap_block_state71_on_subcall_done;
reg   [31:0] i_reg_718;
reg   [28:0] ap_phi_mux_i_8_phi_fu_733_p4;
wire    ap_block_pp4_stage0;
reg   [63:0] layer_1_reg_740;
wire    ap_CS_fsm_state59;
reg   [31:0] layer_011_reg_750;
reg   [28:0] ap_phi_mux_i_10_phi_fu_763_p4;
wire    ap_block_pp5_stage0;
reg    grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_start_reg;
reg    ap_sync_reg_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_ready;
reg    ap_sync_reg_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_done;
reg    grp_updateParameter_float_8u_s_fu_816_ap_start_reg;
reg    ap_sync_reg_grp_updateParameter_float_8u_s_fu_816_ap_ready;
reg    ap_sync_reg_grp_updateParameter_float_8u_s_fu_816_ap_done;
reg    grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_start_reg;
reg    ap_sync_reg_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_ready;
reg    ap_sync_reg_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_done;
wire   [63:0] loop_index117_cast_fu_924_p1;
wire   [63:0] loop_index111_cast_fu_978_p1;
wire   [63:0] loop_index105_cast_fu_1028_p1;
wire   [63:0] loop_index99_cast_fu_1098_p1;
wire    ap_block_pp4_stage1;
wire    ap_block_pp4_stage2;
wire    ap_block_pp4_stage3;
wire    ap_block_pp5_stage1;
wire    ap_block_pp5_stage2;
wire    ap_block_pp5_stage3;
wire   [63:0] loop_index93_cast_fu_1625_p1;
wire   [63:0] loop_index_cast_fu_1669_p1;
wire  signed [63:0] p_cast1_cast_fu_903_p1;
wire  signed [63:0] p_cast3_cast_fu_957_p1;
wire  signed [63:0] p_cast_cast_fu_1007_p1;
wire  signed [63:0] p_cast2_cast_fu_1077_p1;
wire  signed [63:0] p_cast7_cast_fu_1603_p1;
wire  signed [63:0] p_cast8_cast_fu_1648_p1;
wire   [31:0] empty_200_fu_1630_p1;
wire    ap_block_pp6_stage0_01001;
reg    ap_block_state92;
wire   [31:0] empty_202_fu_1674_p1;
wire    ap_block_pp7_stage0_01001;
wire   [31:0] empty_188_fu_929_p1;
wire   [31:0] empty_190_fu_983_p1;
wire  signed [31:0] add_ln56_fu_862_p0;
wire  signed [31:0] mul_ln56_fu_868_p1;
wire   [31:0] add_ln57_1_fu_874_p2;
wire  signed [31:0] valuesToLoad_fu_883_p1;
wire   [61:0] p_cast1_fu_894_p4;
wire   [31:0] valuesToLoad_1_fu_933_p2;
wire   [61:0] p_cast3_fu_948_p4;
wire   [61:0] p_cast_fu_998_p4;
wire  signed [31:0] mul_ln72_1_fu_1057_p1;
wire   [61:0] p_cast2_fu_1068_p4;
wire  signed [31:0] mul34_fu_1112_p0;
wire   [30:0] tmp_fu_1117_p4;
wire   [31:0] mul41_fu_1140_p2;
wire   [31:0] valuesToStore_fu_1157_p2;
wire   [13:0] trunc_ln76_5_fu_1202_p1;
wire  signed [9:0] mul_ln80_fu_1221_p0;
wire   [3:0] empty_196_fu_1258_p1;
wire   [6:0] or_ln143_fu_1275_p2;
wire   [6:0] or_ln143_1_fu_1286_p2;
wire   [6:0] or_ln143_2_fu_1296_p2;
wire   [6:0] or_ln143_3_fu_1306_p2;
wire   [6:0] or_ln143_4_fu_1316_p2;
wire   [6:0] or_ln143_5_fu_1326_p2;
wire   [6:0] or_ln143_6_fu_1336_p2;
wire   [0:0] icmp_ln101_fu_1352_p2;
wire   [15:0] trunc_ln107_1_fu_1364_p1;
wire   [15:0] mul_ln107_fu_1372_p1;
wire   [31:0] mul_ln107_fu_1372_p2;
wire   [15:0] trunc_ln107_2_fu_1377_p1;
wire   [13:0] trunc_ln107_3_fu_1381_p1;
(* use_dsp48 = "no" *) wire   [13:0] add_ln109_1_fu_1390_p2;
wire  signed [31:0] mul_ln110_fu_1406_p1;
wire   [31:0] mul_ln110_fu_1406_p2;
wire   [15:0] trunc_ln110_fu_1411_p1;
wire   [13:0] trunc_ln110_1_fu_1415_p1;
(* use_dsp48 = "no" *) wire   [13:0] add_ln110_3_fu_1424_p2;
wire   [3:0] empty_197_fu_1460_p1;
wire   [6:0] or_ln143_7_fu_1477_p2;
wire   [6:0] or_ln143_8_fu_1488_p2;
wire   [6:0] or_ln143_9_fu_1498_p2;
wire   [6:0] or_ln143_10_fu_1508_p2;
wire   [6:0] or_ln143_11_fu_1518_p2;
wire   [6:0] or_ln143_12_fu_1528_p2;
wire   [6:0] or_ln143_13_fu_1538_p2;
wire  signed [31:0] mul_ln144_fu_1563_p1;
wire   [31:0] add_ln151_1_fu_1574_p2;
wire  signed [31:0] valuesToStore_1_fu_1583_p1;
wire   [61:0] p_cast7_fu_1594_p4;
wire   [61:0] p_cast8_fu_1639_p4;
wire  signed [13:0] grp_fu_1678_p0;
wire  signed [13:0] grp_fu_1678_p1;
wire  signed [15:0] grp_fu_1686_p0;
wire  signed [15:0] grp_fu_1692_p0;
reg   [77:0] ap_NS_fsm;
wire    ap_block_pp4_stage1_subdone;
wire    ap_block_pp4_stage2_subdone;
wire    ap_block_pp5_stage1_subdone;
wire    ap_block_pp5_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
wire   [31:0] mul_ln107_fu_1372_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 78'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_ready = 1'b0;
#0 ap_sync_reg_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_done = 1'b0;
#0 grp_updateParameter_float_8u_s_fu_816_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_updateParameter_float_8u_s_fu_816_ap_ready = 1'b0;
#0 ap_sync_reg_grp_updateParameter_float_8u_s_fu_816_ap_done = 1'b0;
#0 grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_ready = 1'b0;
#0 ap_sync_reg_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_done = 1'b0;
end

BGD_bramWeight #(
    .DataWidth( 32 ),
    .AddressRange( 40960 ),
    .AddressWidth( 16 ))
bramWeight_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bramWeight_address0),
    .ce0(bramWeight_ce0),
    .we0(bramWeight_we0),
    .d0(bramWeight_d0),
    .q0(bramWeight_q0),
    .address1(bramWeight_address1),
    .ce1(bramWeight_ce1),
    .we1(bramWeight_we1),
    .d1(grp_updateParameter_float_8u_s_fu_816_bramWeight_d1),
    .q1(bramWeight_q1)
);

BGD_bramBias #(
    .DataWidth( 32 ),
    .AddressRange( 416 ),
    .AddressWidth( 9 ))
bramBias_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bramBias_address0),
    .ce0(bramBias_ce0),
    .we0(bramBias_we0),
    .d0(bramBias_d0),
    .q0(bramBias_q0),
    .address1(grp_updateParameter_float_8u_s_fu_816_bramBias_address1),
    .ce1(bramBias_ce1),
    .we1(bramBias_we1),
    .d1(grp_updateParameter_float_8u_s_fu_816_bramBias_d1),
    .q1(bramBias_q1)
);

BGD_bramWeight #(
    .DataWidth( 32 ),
    .AddressRange( 40960 ),
    .AddressWidth( 16 ))
bramWeightGradientAvg_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bramWeightGradientAvg_address0),
    .ce0(bramWeightGradientAvg_ce0),
    .we0(bramWeightGradientAvg_we0),
    .d0(bramWeightGradientAvg_d0),
    .q0(bramWeightGradientAvg_q0),
    .address1(bramWeightGradientAvg_address1),
    .ce1(bramWeightGradientAvg_ce1),
    .we1(bramWeightGradientAvg_we1),
    .d1(bramWeightGradientAvg_d1),
    .q1(bramWeightGradientAvg_q1)
);

BGD_bramBiasGradientAvg #(
    .DataWidth( 32 ),
    .AddressRange( 416 ),
    .AddressWidth( 9 ))
bramBiasGradientAvg_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bramBiasGradientAvg_address0),
    .ce0(bramBiasGradientAvg_ce0),
    .we0(bramBiasGradientAvg_we0),
    .d0(bramBiasGradientAvg_d0),
    .q0(bramBiasGradientAvg_q0),
    .address1(bramBiasGradientAvg_address1),
    .ce1(bramBiasGradientAvg_ce1),
    .q1(bramBiasGradientAvg_q1)
);

BGD_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .axiMlpResultsInput(axiMlpResultsInput),
    .axiClassesInput(axiClassesInput),
    .axiWeightInput(axiWeightInput),
    .axiBiasInput(axiBiasInput),
    .axiWeightOutput(axiWeightOutput),
    .axiBiasOutput(axiBiasOutput),
    .numberInputs(numberInputs),
    .numberOutputs(numberOutputs),
    .numberLayers(numberLayers),
    .numberNeurons(numberNeurons),
    .loadParameters(loadParameters),
    .batchSize(batchSize),
    .learningRate(learningRate)
);

BGD_read_r_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 128 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_READ_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_READ_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_READ_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_READ_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_READ_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_READ_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_READ_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_READ_R_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_READ_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_READ_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_READ_R_CACHE_VALUE ))
read_r_m_axi_U(
    .AWVALID(m_axi_read_r_AWVALID),
    .AWREADY(m_axi_read_r_AWREADY),
    .AWADDR(m_axi_read_r_AWADDR),
    .AWID(m_axi_read_r_AWID),
    .AWLEN(m_axi_read_r_AWLEN),
    .AWSIZE(m_axi_read_r_AWSIZE),
    .AWBURST(m_axi_read_r_AWBURST),
    .AWLOCK(m_axi_read_r_AWLOCK),
    .AWCACHE(m_axi_read_r_AWCACHE),
    .AWPROT(m_axi_read_r_AWPROT),
    .AWQOS(m_axi_read_r_AWQOS),
    .AWREGION(m_axi_read_r_AWREGION),
    .AWUSER(m_axi_read_r_AWUSER),
    .WVALID(m_axi_read_r_WVALID),
    .WREADY(m_axi_read_r_WREADY),
    .WDATA(m_axi_read_r_WDATA),
    .WSTRB(m_axi_read_r_WSTRB),
    .WLAST(m_axi_read_r_WLAST),
    .WID(m_axi_read_r_WID),
    .WUSER(m_axi_read_r_WUSER),
    .ARVALID(m_axi_read_r_ARVALID),
    .ARREADY(m_axi_read_r_ARREADY),
    .ARADDR(m_axi_read_r_ARADDR),
    .ARID(m_axi_read_r_ARID),
    .ARLEN(m_axi_read_r_ARLEN),
    .ARSIZE(m_axi_read_r_ARSIZE),
    .ARBURST(m_axi_read_r_ARBURST),
    .ARLOCK(m_axi_read_r_ARLOCK),
    .ARCACHE(m_axi_read_r_ARCACHE),
    .ARPROT(m_axi_read_r_ARPROT),
    .ARQOS(m_axi_read_r_ARQOS),
    .ARREGION(m_axi_read_r_ARREGION),
    .ARUSER(m_axi_read_r_ARUSER),
    .RVALID(m_axi_read_r_RVALID),
    .RREADY(m_axi_read_r_RREADY),
    .RDATA(m_axi_read_r_RDATA),
    .RLAST(m_axi_read_r_RLAST),
    .RID(m_axi_read_r_RID),
    .RUSER(m_axi_read_r_RUSER),
    .RRESP(m_axi_read_r_RRESP),
    .BVALID(m_axi_read_r_BVALID),
    .BREADY(m_axi_read_r_BREADY),
    .BRESP(m_axi_read_r_BRESP),
    .BID(m_axi_read_r_BID),
    .BUSER(m_axi_read_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(read_r_ARVALID),
    .I_ARREADY(read_r_ARREADY),
    .I_ARADDR(read_r_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(read_r_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(read_r_RVALID),
    .I_RREADY(read_r_RREADY),
    .I_RDATA(read_r_RDATA),
    .I_RID(read_r_RID),
    .I_RUSER(read_r_RUSER),
    .I_RRESP(read_r_RRESP),
    .I_RLAST(read_r_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(read_r_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(read_r_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(read_r_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(read_r_BRESP),
    .I_BID(read_r_BID),
    .I_BUSER(read_r_BUSER)
);

BGD_write_r_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 128 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_WRITE_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_WRITE_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_WRITE_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_WRITE_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_WRITE_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_WRITE_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_WRITE_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_WRITE_R_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_WRITE_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_WRITE_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_WRITE_R_CACHE_VALUE ))
write_r_m_axi_U(
    .AWVALID(m_axi_write_r_AWVALID),
    .AWREADY(m_axi_write_r_AWREADY),
    .AWADDR(m_axi_write_r_AWADDR),
    .AWID(m_axi_write_r_AWID),
    .AWLEN(m_axi_write_r_AWLEN),
    .AWSIZE(m_axi_write_r_AWSIZE),
    .AWBURST(m_axi_write_r_AWBURST),
    .AWLOCK(m_axi_write_r_AWLOCK),
    .AWCACHE(m_axi_write_r_AWCACHE),
    .AWPROT(m_axi_write_r_AWPROT),
    .AWQOS(m_axi_write_r_AWQOS),
    .AWREGION(m_axi_write_r_AWREGION),
    .AWUSER(m_axi_write_r_AWUSER),
    .WVALID(m_axi_write_r_WVALID),
    .WREADY(m_axi_write_r_WREADY),
    .WDATA(m_axi_write_r_WDATA),
    .WSTRB(m_axi_write_r_WSTRB),
    .WLAST(m_axi_write_r_WLAST),
    .WID(m_axi_write_r_WID),
    .WUSER(m_axi_write_r_WUSER),
    .ARVALID(m_axi_write_r_ARVALID),
    .ARREADY(m_axi_write_r_ARREADY),
    .ARADDR(m_axi_write_r_ARADDR),
    .ARID(m_axi_write_r_ARID),
    .ARLEN(m_axi_write_r_ARLEN),
    .ARSIZE(m_axi_write_r_ARSIZE),
    .ARBURST(m_axi_write_r_ARBURST),
    .ARLOCK(m_axi_write_r_ARLOCK),
    .ARCACHE(m_axi_write_r_ARCACHE),
    .ARPROT(m_axi_write_r_ARPROT),
    .ARQOS(m_axi_write_r_ARQOS),
    .ARREGION(m_axi_write_r_ARREGION),
    .ARUSER(m_axi_write_r_ARUSER),
    .RVALID(m_axi_write_r_RVALID),
    .RREADY(m_axi_write_r_RREADY),
    .RDATA(m_axi_write_r_RDATA),
    .RLAST(m_axi_write_r_RLAST),
    .RID(m_axi_write_r_RID),
    .RUSER(m_axi_write_r_RUSER),
    .RRESP(m_axi_write_r_RRESP),
    .BVALID(m_axi_write_r_BVALID),
    .BREADY(m_axi_write_r_BREADY),
    .BRESP(m_axi_write_r_BRESP),
    .BID(m_axi_write_r_BID),
    .BUSER(m_axi_write_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(write_r_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(write_r_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(write_r_RDATA),
    .I_RID(write_r_RID),
    .I_RUSER(write_r_RUSER),
    .I_RRESP(write_r_RRESP),
    .I_RLAST(write_r_RLAST),
    .I_AWVALID(write_r_AWVALID),
    .I_AWREADY(write_r_AWREADY),
    .I_AWADDR(write_r_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(write_r_AWLEN),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(write_r_WVALID),
    .I_WREADY(write_r_WREADY),
    .I_WDATA(write_r_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(write_r_BVALID),
    .I_BREADY(write_r_BREADY),
    .I_BRESP(write_r_BRESP),
    .I_BID(write_r_BID),
    .I_BUSER(write_r_BUSER)
);

BGD_bramClasses #(
    .DataWidth( 32 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
bramClasses_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bramClasses_address0),
    .ce0(bramClasses_ce0),
    .we0(bramClasses_we0),
    .d0(bramClasses_d0),
    .q0(bramClasses_q0)
);

BGD_bramMlpResults #(
    .DataWidth( 32 ),
    .AddressRange( 8960 ),
    .AddressWidth( 14 ))
bramMlpResults_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bramMlpResults_address0),
    .ce0(bramMlpResults_ce0),
    .we0(bramMlpResults_we0),
    .d0(bramMlpResults_d0),
    .q0(bramMlpResults_q0),
    .address1(bramMlpResults_address1),
    .ce1(bramMlpResults_ce1),
    .q1(bramMlpResults_q1)
);

BGD_bramError0 #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
bramError0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bramError0_address0),
    .ce0(bramError0_ce0),
    .we0(bramError0_we0),
    .d0(bramError0_d0),
    .q0(bramError0_q0),
    .address1(bramError0_address1),
    .ce1(bramError0_ce1),
    .q1(bramError0_q1)
);

BGD_bramError1 #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
bramError1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bramError1_address0),
    .ce0(bramError1_ce0),
    .we0(bramError1_we0),
    .d0(bramError0_q0),
    .q0(bramError1_q0),
    .address1(bramError1_address1),
    .ce1(bramError1_ce1),
    .we1(bramError1_we1),
    .d1(bramError0_q1),
    .q1(bramError1_q1)
);

BGD_computeHiddenGradient_float_8u_3u_2u_s grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792(
    .p_n(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_n),
    .p_k(numberNeurons_read_reg_1758),
    .p_numberOutputsPrev(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_numberOutputsPrev),
    .p_weights_address0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_address0),
    .p_weights_ce0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_ce0),
    .p_weights_d0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_d0),
    .p_weights_q0(bramWeight_q0),
    .p_weights_we0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_we0),
    .p_weights_address1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_address1),
    .p_weights_ce1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_ce1),
    .p_weights_d1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_d1),
    .p_weights_q1(bramWeight_q1),
    .p_weights_we1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_we1),
    .p_weights_offset(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_offset),
    .p_latterError_address0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_address0),
    .p_latterError_ce0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_ce0),
    .p_latterError_d0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_d0),
    .p_latterError_q0(bramError1_q0),
    .p_latterError_we0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_we0),
    .p_latterError_address1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_address1),
    .p_latterError_ce1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_ce1),
    .p_latterError_d1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_d1),
    .p_latterError_q1(bramError1_q1),
    .p_latterError_we1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_we1),
    .p_outputCurrentLayer_address0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_address0),
    .p_outputCurrentLayer_ce0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_ce0),
    .p_outputCurrentLayer_d0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_d0),
    .p_outputCurrentLayer_q0(bramMlpResults_q0),
    .p_outputCurrentLayer_we0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_we0),
    .p_outputCurrentLayer_address1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_address1),
    .p_outputCurrentLayer_ce1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_ce1),
    .p_outputCurrentLayer_d1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_d1),
    .p_outputCurrentLayer_q1(bramMlpResults_q1),
    .p_outputCurrentLayer_we1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_we1),
    .p_outputCurrentLayer_offset(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_offset),
    .p_outputPrevLayer_offset(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputPrevLayer_offset),
    .p_weightGradientAvg_address0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_address0),
    .p_weightGradientAvg_ce0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_ce0),
    .p_weightGradientAvg_d0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_d0),
    .p_weightGradientAvg_q0(bramWeightGradientAvg_q0),
    .p_weightGradientAvg_we0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_we0),
    .p_weightGradientAvg_address1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_address1),
    .p_weightGradientAvg_ce1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_ce1),
    .p_weightGradientAvg_d1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_d1),
    .p_weightGradientAvg_q1(bramWeightGradientAvg_q1),
    .p_weightGradientAvg_we1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_we1),
    .p_weightGradientAvg_offset(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_offset),
    .p_biasGradientAvg_address0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_address0),
    .p_biasGradientAvg_ce0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_ce0),
    .p_biasGradientAvg_d0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_d0),
    .p_biasGradientAvg_q0(32'd0),
    .p_biasGradientAvg_we0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_we0),
    .p_biasGradientAvg_address1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_address1),
    .p_biasGradientAvg_ce1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_ce1),
    .p_biasGradientAvg_d1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_d1),
    .p_biasGradientAvg_q1(bramBiasGradientAvg_q1),
    .p_biasGradientAvg_we1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_we1),
    .p_biasGradientAvg_offset(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_offset),
    .p_error_address0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_address0),
    .p_error_ce0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_ce0),
    .p_error_d0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_d0),
    .p_error_q0(32'd0),
    .p_error_we0(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_we0),
    .p_error_address1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_address1),
    .p_error_ce1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_ce1),
    .p_error_d1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_d1),
    .p_error_q1(32'd0),
    .p_error_we1(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_we1),
    .p_initZero(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_initZero),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .p_n_ap_vld(1'b1),
    .p_k_ap_vld(1'b1),
    .p_numberOutputsPrev_ap_vld(1'b1),
    .p_weights_offset_ap_vld(1'b1),
    .p_outputCurrentLayer_offset_ap_vld(1'b1),
    .p_outputPrevLayer_offset_ap_vld(1'b1),
    .p_weightGradientAvg_offset_ap_vld(1'b1),
    .p_biasGradientAvg_offset_ap_vld(1'b1),
    .p_initZero_ap_vld(1'b1),
    .ap_start(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_start),
    .ap_done(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_done),
    .ap_ready(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_ready),
    .ap_idle(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_idle),
    .ap_continue(grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_continue)
);

BGD_updateParameter_float_8u_s grp_updateParameter_float_8u_s_fu_816(
    .p_learningRate(bitcast_ln142_reg_2332),
    .p_batchSize(conv_reg_2337),
    .p_weightSize(mul_ln144_reg_2342),
    .p_biasSize(valuesToStore_3_reg_2347),
    .bramWeightGradientAvg_address0(grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_address0),
    .bramWeightGradientAvg_ce0(grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_ce0),
    .bramWeightGradientAvg_d0(grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_d0),
    .bramWeightGradientAvg_q0(bramWeightGradientAvg_q0),
    .bramWeightGradientAvg_we0(grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_we0),
    .bramWeightGradientAvg_address1(grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_address1),
    .bramWeightGradientAvg_ce1(grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_ce1),
    .bramWeightGradientAvg_d1(grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_d1),
    .bramWeightGradientAvg_q1(bramWeightGradientAvg_q1),
    .bramWeightGradientAvg_we1(grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_we1),
    .bramBiasGradientAvg_address0(grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_address0),
    .bramBiasGradientAvg_ce0(grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_ce0),
    .bramBiasGradientAvg_d0(grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_d0),
    .bramBiasGradientAvg_q0(bramBiasGradientAvg_q0),
    .bramBiasGradientAvg_we0(grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_we0),
    .bramBiasGradientAvg_address1(grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_address1),
    .bramBiasGradientAvg_ce1(grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_ce1),
    .bramBiasGradientAvg_d1(grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_d1),
    .bramBiasGradientAvg_q1(bramBiasGradientAvg_q1),
    .bramBiasGradientAvg_we1(grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_we1),
    .bramWeight_address0(grp_updateParameter_float_8u_s_fu_816_bramWeight_address0),
    .bramWeight_ce0(grp_updateParameter_float_8u_s_fu_816_bramWeight_ce0),
    .bramWeight_d0(grp_updateParameter_float_8u_s_fu_816_bramWeight_d0),
    .bramWeight_q0(bramWeight_q0),
    .bramWeight_we0(grp_updateParameter_float_8u_s_fu_816_bramWeight_we0),
    .bramWeight_address1(grp_updateParameter_float_8u_s_fu_816_bramWeight_address1),
    .bramWeight_ce1(grp_updateParameter_float_8u_s_fu_816_bramWeight_ce1),
    .bramWeight_d1(grp_updateParameter_float_8u_s_fu_816_bramWeight_d1),
    .bramWeight_q1(bramWeight_q1),
    .bramWeight_we1(grp_updateParameter_float_8u_s_fu_816_bramWeight_we1),
    .bramBias_address0(grp_updateParameter_float_8u_s_fu_816_bramBias_address0),
    .bramBias_ce0(grp_updateParameter_float_8u_s_fu_816_bramBias_ce0),
    .bramBias_d0(grp_updateParameter_float_8u_s_fu_816_bramBias_d0),
    .bramBias_q0(bramBias_q0),
    .bramBias_we0(grp_updateParameter_float_8u_s_fu_816_bramBias_we0),
    .bramBias_address1(grp_updateParameter_float_8u_s_fu_816_bramBias_address1),
    .bramBias_ce1(grp_updateParameter_float_8u_s_fu_816_bramBias_ce1),
    .bramBias_d1(grp_updateParameter_float_8u_s_fu_816_bramBias_d1),
    .bramBias_q1(bramBias_q1),
    .bramBias_we1(grp_updateParameter_float_8u_s_fu_816_bramBias_we1),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .p_learningRate_ap_vld(1'b1),
    .p_batchSize_ap_vld(1'b1),
    .p_weightSize_ap_vld(1'b1),
    .p_biasSize_ap_vld(1'b1),
    .ap_start(grp_updateParameter_float_8u_s_fu_816_ap_start),
    .ap_done(grp_updateParameter_float_8u_s_fu_816_ap_done),
    .ap_ready(grp_updateParameter_float_8u_s_fu_816_ap_ready),
    .ap_idle(grp_updateParameter_float_8u_s_fu_816_ap_idle),
    .ap_continue(grp_updateParameter_float_8u_s_fu_816_ap_continue)
);

BGD_computeOutputGradient_float_8u_2u_s grp_computeOutputGradient_float_8u_2u_s_fu_832(
    .p_n(size_assign_reg_708),
    .p_k(numberNeurons_read_reg_1758),
    .p_results_address0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_address0),
    .p_results_ce0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_ce0),
    .p_results_d0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_d0),
    .p_results_q0(bramMlpResults_q0),
    .p_results_we0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_we0),
    .p_results_address1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_address1),
    .p_results_ce1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_ce1),
    .p_results_d1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_d1),
    .p_results_q1(bramMlpResults_q1),
    .p_results_we1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_we1),
    .p_results_offset(add_ln86_reg_2056),
    .p_classes_address0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_address0),
    .p_classes_ce0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_ce0),
    .p_classes_d0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_d0),
    .p_classes_q0(bramClasses_q0),
    .p_classes_we0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_we0),
    .p_classes_address1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_address1),
    .p_classes_ce1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_ce1),
    .p_classes_d1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_d1),
    .p_classes_q1(32'd0),
    .p_classes_we1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_we1),
    .p_classes_offset(mul_ln80_reg_2051),
    .p_outputPrevLayer_offset(add_ln88_reg_2061),
    .p_weightGradientAvg_address0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_address0),
    .p_weightGradientAvg_ce0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_ce0),
    .p_weightGradientAvg_d0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_d0),
    .p_weightGradientAvg_q0(bramWeightGradientAvg_q0),
    .p_weightGradientAvg_we0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_we0),
    .p_weightGradientAvg_address1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_address1),
    .p_weightGradientAvg_ce1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_ce1),
    .p_weightGradientAvg_d1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_d1),
    .p_weightGradientAvg_q1(bramWeightGradientAvg_q1),
    .p_weightGradientAvg_we1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_we1),
    .p_weightGradientAvg_offset(empty_207_reg_1970),
    .p_biasGradientAvg_address0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_address0),
    .p_biasGradientAvg_ce0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_ce0),
    .p_biasGradientAvg_d0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_d0),
    .p_biasGradientAvg_q0(32'd0),
    .p_biasGradientAvg_we0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_we0),
    .p_biasGradientAvg_address1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_address1),
    .p_biasGradientAvg_ce1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_ce1),
    .p_biasGradientAvg_d1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_d1),
    .p_biasGradientAvg_q1(bramBiasGradientAvg_q1),
    .p_biasGradientAvg_we1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_we1),
    .p_biasGradientAvg_offset(empty_208_reg_1975),
    .p_error_address0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_address0),
    .p_error_ce0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_ce0),
    .p_error_d0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_d0),
    .p_error_q0(32'd0),
    .p_error_we0(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_we0),
    .p_error_address1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_address1),
    .p_error_ce1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_ce1),
    .p_error_d1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_d1),
    .p_error_q1(32'd0),
    .p_error_we1(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_we1),
    .p_initZero(grp_computeOutputGradient_float_8u_2u_s_fu_832_p_initZero),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .p_n_ap_vld(1'b1),
    .p_k_ap_vld(1'b1),
    .p_results_offset_ap_vld(1'b1),
    .p_classes_offset_ap_vld(1'b1),
    .p_outputPrevLayer_offset_ap_vld(1'b1),
    .p_weightGradientAvg_offset_ap_vld(1'b1),
    .p_biasGradientAvg_offset_ap_vld(1'b1),
    .p_initZero_ap_vld(1'b1),
    .ap_start(grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_start),
    .ap_done(grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_done),
    .ap_ready(grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_ready),
    .ap_idle(grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_idle),
    .ap_continue(grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_continue)
);

BGD_uitofp_32s_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32s_32_4_no_dsp_1_U492(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(batchSize_read_reg_1852),
    .ce(1'b1),
    .dout(grp_fu_852_p1)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U493(
    .din0(numberNeurons),
    .din1(mul_ln56_fu_868_p1),
    .dout(mul_ln56_fu_868_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U494(
    .din0(numberNeurons_read_reg_1758),
    .din1(valuesToLoad_fu_883_p1),
    .dout(valuesToLoad_fu_883_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U495(
    .din0(numberLayers_read_reg_1779),
    .din1(numberNeurons_read_reg_1758),
    .dout(valuesToLoad_1_fu_933_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U496(
    .din0(batchSize),
    .din1(numberOutputs_read_reg_1732),
    .dout(mul_ln68_fu_987_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U497(
    .din0(numberNeurons_read_reg_1758),
    .din1(numberLayers_read_reg_1779),
    .dout(valuesToStore_2_fu_1037_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U498(
    .din0(batchSize_read_reg_1852),
    .din1(mul_ln72_1_fu_1057_p1),
    .dout(mul_ln72_1_fu_1057_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U499(
    .din0(mul34_fu_1112_p0),
    .din1(numberNeurons_read_reg_1758),
    .dout(mul34_fu_1112_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U500(
    .din0(add35_fu_1132_p2),
    .din1(numberNeurons_read_reg_1758),
    .dout(mul41_fu_1140_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U501(
    .din0(numberInputs_read_reg_1746),
    .din1(numberNeurons_read_reg_1758),
    .dout(valuesToStore_fu_1157_p2)
);

BGD_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U502(
    .din0(mul_ln80_fu_1221_p0),
    .din1(trunc_ln76_2_reg_2022),
    .dout(mul_ln80_fu_1221_p2)
);

BGD_mul_32s_16ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_32s_16ns_32_1_1_U503(
    .din0(numberNeurons_read_reg_1758),
    .din1(mul_ln107_fu_1372_p1),
    .dout(mul_ln107_fu_1372_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U504(
    .din0(numberNeurons_read_reg_1758),
    .din1(mul_ln110_fu_1406_p1),
    .dout(mul_ln110_fu_1406_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U505(
    .din0(numberNeurons_read_reg_1758),
    .din1(mul_ln144_fu_1563_p1),
    .dout(mul_ln144_fu_1563_p2)
);

BGD_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U506(
    .din0(numberNeurons_read_reg_1758),
    .din1(valuesToStore_1_fu_1583_p1),
    .dout(valuesToStore_1_fu_1583_p2)
);

BGD_mul_mul_14s_14s_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mul_mul_14s_14s_14_4_1_U507(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1678_p0),
    .din1(grp_fu_1678_p1),
    .ce(1'b1),
    .dout(grp_fu_1678_p2)
);

BGD_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U508(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1686_p0),
    .din1(trunc_ln107_reg_2008),
    .ce(1'b1),
    .dout(grp_fu_1686_p2)
);

BGD_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U509(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1692_p0),
    .din1(trunc_ln107_reg_2008),
    .ce(1'b1),
    .dout(grp_fu_1692_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state10))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state10)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state21))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state21)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state21);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state32))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state32)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state32);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state44))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state43)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state44)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state44);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state43)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state54))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((1'b0 == ap_block_state53_on_subcall_done) & (1'b1 == ap_CS_fsm_state53))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp4_iter0 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage3_subdone) & (1'b1 == ap_CS_fsm_pp4_stage3)))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if (((1'b0 == ap_block_state53_on_subcall_done) & (1'b1 == ap_CS_fsm_state53))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state65) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp5_stage3_subdone) & (1'b1 == ap_CS_fsm_pp5_stage3)) | ((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b0)))) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end else if (((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64))) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state76) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((~((1'b1 == ap_block_state75_on_subcall_done) | (1'b1 == ap_block_state75_io)) & (icmp_ln153_reg_2361 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state76)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state76);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end else if ((~((1'b1 == ap_block_state75_on_subcall_done) | (1'b1 == ap_block_state75_io)) & (icmp_ln153_reg_2361 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
            ap_enable_reg_pp6_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_condition_pp7_exit_iter0_state85) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if (((write_r_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state84))) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state85)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state85);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end else if (((write_r_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state84))) begin
            ap_enable_reg_pp7_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_done <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_state71_on_subcall_done) & (1'b1 == ap_CS_fsm_state71)) | ((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64)))) begin
            ap_sync_reg_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_done <= 1'b0;
        end else if ((grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_done == 1'b1)) begin
            ap_sync_reg_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_ready <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_state71_on_subcall_done) & (1'b1 == ap_CS_fsm_state71)) | ((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64)))) begin
            ap_sync_reg_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_ready <= 1'b0;
        end else if ((grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state53_on_subcall_done) & (1'b1 == ap_CS_fsm_state53))) begin
            ap_sync_reg_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_done <= 1'b0;
        end else if ((grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_done == 1'b1)) begin
            ap_sync_reg_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state53_on_subcall_done) & (1'b1 == ap_CS_fsm_state53))) begin
            ap_sync_reg_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_ready <= 1'b0;
        end else if ((grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_updateParameter_float_8u_s_fu_816_ap_done <= 1'b0;
    end else begin
        if ((~((1'b1 == ap_block_state75_on_subcall_done) | (1'b1 == ap_block_state75_io)) & (1'b1 == ap_CS_fsm_state75))) begin
            ap_sync_reg_grp_updateParameter_float_8u_s_fu_816_ap_done <= 1'b0;
        end else if ((grp_updateParameter_float_8u_s_fu_816_ap_done == 1'b1)) begin
            ap_sync_reg_grp_updateParameter_float_8u_s_fu_816_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_updateParameter_float_8u_s_fu_816_ap_ready <= 1'b0;
    end else begin
        if ((~((1'b1 == ap_block_state75_on_subcall_done) | (1'b1 == ap_block_state75_io)) & (1'b1 == ap_CS_fsm_state75))) begin
            ap_sync_reg_grp_updateParameter_float_8u_s_fu_816_ap_ready <= 1'b0;
        end else if ((grp_updateParameter_float_8u_s_fu_816_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_updateParameter_float_8u_s_fu_816_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state63) | ((icmp_ln99_fu_1346_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state60)) | ((1'b1 == ap_CS_fsm_state71) & (ap_sync_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_ready == 1'b0)) | ((1'b1 == ap_CS_fsm_state64) & (ap_sync_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_ready == 1'b0)))) begin
            grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_start_reg <= 1'b1;
        end else if ((grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_ready == 1'b1)) begin
            grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state52) | ((ap_sync_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state53)))) begin
            grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_start_reg <= 1'b1;
        end else if ((grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_ready == 1'b1)) begin
            grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_updateParameter_float_8u_s_fu_816_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state74) | ((1'b1 == ap_CS_fsm_state75) & (ap_sync_grp_updateParameter_float_8u_s_fu_816_ap_ready == 1'b0)))) begin
            grp_updateParameter_float_8u_s_fu_816_ap_start_reg <= 1'b1;
        end else if ((grp_updateParameter_float_8u_s_fu_816_ap_ready == 1'b1)) begin
            grp_updateParameter_float_8u_s_fu_816_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64))) begin
        i_10_reg_759 <= 29'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln137_1_reg_2228 == 1'd0))) begin
        i_10_reg_759 <= add_ln137_1_reg_2232;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state53_on_subcall_done) & (1'b1 == ap_CS_fsm_state53))) begin
        i_8_reg_729 <= 29'd0;
    end else if (((icmp_ln137_reg_2071 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        i_8_reg_729 <= add_ln137_reg_2075;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state71_on_subcall_done) & (1'b1 == ap_CS_fsm_state71))) begin
        i_reg_718 <= i_9_reg_2017;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        i_reg_718 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        layer_011_reg_750 <= layer_reg_1942;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        layer_011_reg_750 <= layer_2_reg_2188;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        layer_1_reg_740 <= zext_ln76_reg_1997;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        layer_1_reg_740 <= add_ln99_fu_1548_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        loop_index105_reg_684 <= 32'd0;
    end else if (((exitcond1479_reg_1875 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        loop_index105_reg_684 <= empty_192_reg_1879;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        loop_index111_reg_672 <= 32'd0;
    end else if (((exitcond14810_reg_1838 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        loop_index111_reg_672 <= empty_189_reg_1842;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        loop_index117_reg_660 <= 32'd0;
    end else if (((exitcond14911_reg_1808 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        loop_index117_reg_660 <= empty_187_reg_1812;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state75_on_subcall_done) | (1'b1 == ap_block_state75_io)) & (icmp_ln153_reg_2361 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
        loop_index93_reg_770 <= 32'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (exitcond1212_fu_1614_p2 == 1'd0))) begin
        loop_index93_reg_770 <= empty_199_fu_1619_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        loop_index99_reg_696 <= 32'd0;
    end else if (((exitcond1468_reg_1928 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        loop_index99_reg_696 <= empty_194_reg_1932;
    end
end

always @ (posedge ap_clk) begin
    if (((write_r_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state84))) begin
        loop_index_reg_781 <= 32'd0;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (exitcond1_fu_1658_p2 == 1'd0))) begin
        loop_index_reg_781 <= empty_201_fu_1663_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state71_on_subcall_done) & (1'b1 == ap_CS_fsm_state71))) begin
        size_assign_reg_708 <= select_ln122_reg_2208;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        size_assign_reg_708 <= numberOutputs_read_reg_1732;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        add35_reg_1960 <= add35_fu_1132_p2;
        empty_206_reg_1965 <= empty_206_fu_1136_p1;
        empty_207_reg_1970 <= empty_207_fu_1145_p1;
        empty_208_reg_1975 <= empty_208_fu_1149_p1;
        empty_209_reg_1985 <= empty_209_fu_1161_p1;
        l_n_reg_1980 <= l_n_fu_1152_p3;
        trunc_ln107_reg_2008 <= trunc_ln107_fu_1180_p1;
        trunc_ln76_1_reg_2003 <= {{numberNeurons_read_reg_1758[31:3]}};
        trunc_ln76_reg_1990 <= trunc_ln76_fu_1165_p1;
        zext_ln76_reg_1997[31 : 0] <= zext_ln76_fu_1168_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln99_fu_1346_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state60))) begin
        add_ln109_reg_2183 <= add_ln109_fu_1395_p2;
        add_ln110_2_reg_2198 <= add_ln110_2_fu_1429_p2;
        layer_2_reg_2188 <= layer_2_fu_1400_p2;
        p_n_reg_2173 <= p_n_fu_1357_p3;
        trunc_ln103_reg_2203 <= trunc_ln103_fu_1434_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln99_fu_1346_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state60))) begin
        add_ln129_reg_2213 <= add_ln129_fu_1444_p2;
        select_ln122_reg_2208 <= select_ln122_fu_1438_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        add_ln137_1_reg_2232 <= add_ln137_1_fu_1454_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        add_ln137_reg_2075 <= add_ln137_fu_1252_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        add_ln72_reg_1895 <= add_ln72_fu_1041_p2;
        trunc_ln72_1_reg_1900 <= trunc_ln72_1_fu_1046_p1;
        valuesToStore_2_reg_1889 <= valuesToStore_2_fu_1037_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        add_ln86_reg_2056 <= add_ln86_fu_1227_p2;
        add_ln88_reg_2061 <= add_ln88_fu_1232_p2;
        mul_ln79_reg_2043 <= grp_fu_1678_p2;
        mul_ln80_reg_2051 <= mul_ln80_fu_1221_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        axiBiasInput_read_reg_1708 <= axiBiasInput;
        axiBiasOutput_read_reg_1698 <= axiBiasOutput;
        axiClassesInput_read_reg_1718 <= axiClassesInput;
        axiMlpResultsInput_read_reg_1723 <= axiMlpResultsInput;
        axiWeightInput_read_reg_1713 <= axiWeightInput;
        axiWeightOutput_read_reg_1703 <= axiWeightOutput;
        numberInputs_read_reg_1746 <= numberInputs;
        numberLayers_read_reg_1779 <= numberLayers;
        numberNeurons_read_reg_1758 <= numberNeurons;
        numberOutputs_read_reg_1732 <= numberOutputs;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        batchSize_read_reg_1852 <= batchSize;
        mul_ln68_reg_1859 <= mul_ln68_fu_987_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        bitcast_ln142_reg_2332 <= bitcast_ln142_fu_1554_p1;
        conv_reg_2337 <= grp_fu_852_p1;
        icmp_ln153_reg_2361 <= icmp_ln153_fu_1588_p2;
        mul_ln144_reg_2342 <= mul_ln144_fu_1563_p2;
        valuesToStore_1_reg_2355 <= valuesToStore_1_fu_1583_p2;
        valuesToStore_3_reg_2347 <= valuesToStore_3_fu_1569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_2400 == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1))) begin
        bramBias_load_reg_2414 <= bramBias_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1212_reg_2371 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        bramWeight_load_reg_2385 <= bramWeight_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_187_reg_1812 <= empty_187_fu_918_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        empty_189_reg_1842 <= empty_189_fu_972_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        empty_192_reg_1879 <= empty_192_fu_1022_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        empty_194_reg_1932 <= empty_194_fu_1092_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        exitcond1212_reg_2371 <= exitcond1212_fu_1614_p2;
        exitcond1212_reg_2371_pp6_iter1_reg <= exitcond1212_reg_2371;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond1468_reg_1928 <= exitcond1468_fu_1087_p2;
        exitcond1468_reg_1928_pp3_iter1_reg <= exitcond1468_reg_1928;
        loop_index99_reg_696_pp3_iter1_reg <= loop_index99_reg_696;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond1479_reg_1875 <= exitcond1479_fu_1017_p2;
        exitcond1479_reg_1875_pp2_iter1_reg <= exitcond1479_reg_1875;
        loop_index105_reg_684_pp2_iter1_reg <= loop_index105_reg_684;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond14810_reg_1838 <= exitcond14810_fu_967_p2;
        exitcond14810_reg_1838_pp1_iter1_reg <= exitcond14810_reg_1838;
        loop_index111_reg_672_pp1_iter1_reg <= loop_index111_reg_672;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond14911_reg_1808 <= exitcond14911_fu_913_p2;
        exitcond14911_reg_1808_pp0_iter1_reg <= exitcond14911_reg_1808;
        loop_index117_reg_660_pp0_iter1_reg <= loop_index117_reg_660;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        exitcond1_reg_2400 <= exitcond1_fu_1658_p2;
        exitcond1_reg_2400_pp7_iter1_reg <= exitcond1_reg_2400;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        i_9_reg_2017 <= i_9_fu_1188_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln137_1_reg_2228 <= icmp_ln137_1_fu_1449_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln137_reg_2071 <= icmp_ln137_fu_1247_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((write_r_BVALID == 1'b0) & (icmp_ln153_reg_2361 == 1'd0)) & (1'b1 == ap_CS_fsm_state83))) begin
        icmp_ln158_reg_2390 <= icmp_ln158_fu_1634_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        icmp_reg_1954 <= icmp_fu_1126_p2;
        layer_reg_1942 <= layer_fu_1107_p2;
        mul34_reg_1948 <= mul34_fu_1112_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln76_fu_1183_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        initZero_reg_2037 <= initZero_fu_1211_p2;
        trunc_ln76_2_reg_2022 <= trunc_ln76_2_fu_1194_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        mul_ln109_reg_2218 <= grp_fu_1686_p2;
        mul_ln112_reg_2223 <= grp_fu_1692_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (icmp_ln51_fu_856_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        mul_ln56_reg_1787 <= mul_ln56_fu_868_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        mul_ln72_1_reg_1912 <= mul_ln72_1_fu_1057_p2;
        trunc_ln72_reg_1906 <= trunc_ln72_fu_1050_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond14810_reg_1838 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        read_addr_1_read_reg_1847 <= read_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_fu_942_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        read_addr_1_reg_1832 <= p_cast3_cast_fu_957_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1479_reg_1875 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        read_addr_2_read_reg_1884 <= read_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_fu_992_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        read_addr_2_reg_1869 <= p_cast_cast_fu_1007_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1468_reg_1928 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        read_addr_3_read_reg_1937 <= read_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln69_fu_1062_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        read_addr_3_reg_1922 <= p_cast2_cast_fu_1077_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond14911_reg_1808 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        read_addr_read_reg_1817 <= read_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln59_fu_888_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        read_addr_reg_1802 <= p_cast1_cast_fu_903_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln137_1_fu_1449_p2 == 1'd0))) begin
        tmp_1_reg_2237[6 : 3] <= tmp_1_fu_1464_p3[6 : 3];
        zext_ln143_8_reg_2247[6 : 3] <= zext_ln143_8_fu_1472_p1[6 : 3];
        zext_ln143_9_reg_2257[6 : 3] <= zext_ln143_9_fu_1483_p1[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln137_fu_1247_p2 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        tmp_s_reg_2080[6 : 3] <= tmp_s_fu_1262_p3[6 : 3];
        zext_ln143_1_reg_2100[6 : 3] <= zext_ln143_1_fu_1281_p1[6 : 3];
        zext_ln143_reg_2090[6 : 3] <= zext_ln143_fu_1270_p1[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state53_on_subcall_done) & (1'b1 == ap_CS_fsm_state53))) begin
        trunc_ln3_reg_2066 <= {{size_assign_reg_708[31:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        valuesToLoad_2_reg_1822 <= valuesToLoad_2_fu_937_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        valuesToLoad_reg_1792 <= valuesToLoad_fu_883_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((write_r_BVALID == 1'b0) & (icmp_ln153_reg_2361 == 1'd0)) & (1'b1 == ap_CS_fsm_state83) & (icmp_ln158_fu_1634_p2 == 1'd0))) begin
        write_addr_1_reg_2394 <= p_cast8_cast_fu_1648_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (icmp_ln137_1_reg_2228 == 1'd0))) begin
        zext_ln143_10_reg_2267[6 : 3] <= zext_ln143_10_fu_1493_p1[6 : 3];
        zext_ln143_11_reg_2277[6 : 3] <= zext_ln143_11_fu_1503_p1[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage2_11001) & (1'b1 == ap_CS_fsm_pp5_stage2) & (icmp_ln137_1_reg_2228 == 1'd0))) begin
        zext_ln143_12_reg_2287[6 : 3] <= zext_ln143_12_fu_1513_p1[6 : 3];
        zext_ln143_13_reg_2297[6 : 3] <= zext_ln143_13_fu_1523_p1[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage3_11001) & (1'b1 == ap_CS_fsm_pp5_stage3) & (icmp_ln137_1_reg_2228 == 1'd0))) begin
        zext_ln143_14_reg_2307[6 : 3] <= zext_ln143_14_fu_1533_p1[6 : 3];
        zext_ln143_15_reg_2317[6 : 3] <= zext_ln143_15_fu_1543_p1[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln137_reg_2071 == 1'd0) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        zext_ln143_2_reg_2110[6 : 3] <= zext_ln143_2_fu_1291_p1[6 : 3];
        zext_ln143_3_reg_2120[6 : 3] <= zext_ln143_3_fu_1301_p1[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln137_reg_2071 == 1'd0) & (1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        zext_ln143_4_reg_2130[6 : 3] <= zext_ln143_4_fu_1311_p1[6 : 3];
        zext_ln143_5_reg_2140[6 : 3] <= zext_ln143_5_fu_1321_p1[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln137_reg_2071 == 1'd0) & (1'b0 == ap_block_pp4_stage3_11001) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        zext_ln143_6_reg_2150[6 : 3] <= zext_ln143_6_fu_1331_p1[6 : 3];
        zext_ln143_7_reg_2160[6 : 3] <= zext_ln143_7_fu_1341_p1[6 : 3];
    end
end

always @ (*) begin
    if ((exitcond14911_fu_913_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond14810_fu_967_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1479_fu_1017_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state32 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state32 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1468_fu_1087_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state44 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state44 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln137_fu_1247_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state54 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state54 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln137_1_fu_1449_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state65 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state65 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1212_fu_1614_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state76 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state76 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1_fu_1658_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state85 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state85 = 1'b0;
    end
end

always @ (*) begin
    if ((~((write_r_BVALID == 1'b0) & (icmp_ln158_reg_2390 == 1'd0)) & (1'b1 == ap_CS_fsm_state92))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln137_1_reg_2228 == 1'd0))) begin
        ap_phi_mux_i_10_phi_fu_763_p4 = add_ln137_1_reg_2232;
    end else begin
        ap_phi_mux_i_10_phi_fu_763_p4 = i_10_reg_759;
    end
end

always @ (*) begin
    if (((icmp_ln137_reg_2071 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        ap_phi_mux_i_8_phi_fu_733_p4 = add_ln137_reg_2075;
    end else begin
        ap_phi_mux_i_8_phi_fu_733_p4 = i_8_reg_729;
    end
end

always @ (*) begin
    if (((exitcond1479_reg_1875 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_loop_index105_phi_fu_688_p4 = empty_192_reg_1879;
    end else begin
        ap_phi_mux_loop_index105_phi_fu_688_p4 = loop_index105_reg_684;
    end
end

always @ (*) begin
    if (((exitcond14810_reg_1838 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_loop_index111_phi_fu_676_p4 = empty_189_reg_1842;
    end else begin
        ap_phi_mux_loop_index111_phi_fu_676_p4 = loop_index111_reg_672;
    end
end

always @ (*) begin
    if (((exitcond14911_reg_1808 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_loop_index117_phi_fu_664_p4 = empty_187_reg_1812;
    end else begin
        ap_phi_mux_loop_index117_phi_fu_664_p4 = loop_index117_reg_660;
    end
end

always @ (*) begin
    if (((exitcond1468_reg_1928 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_loop_index99_phi_fu_700_p4 = empty_194_reg_1932;
    end else begin
        ap_phi_mux_loop_index99_phi_fu_700_p4 = loop_index99_reg_696;
    end
end

always @ (*) begin
    if ((~((write_r_BVALID == 1'b0) & (icmp_ln158_reg_2390 == 1'd0)) & (1'b1 == ap_CS_fsm_state92))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramBiasGradientAvg_address0 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_address0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bramBiasGradientAvg_address0 = grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_address0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramBiasGradientAvg_address0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_address0;
    end else begin
        bramBiasGradientAvg_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramBiasGradientAvg_address1 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_address1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bramBiasGradientAvg_address1 = grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_address1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramBiasGradientAvg_address1 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_address1;
    end else begin
        bramBiasGradientAvg_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramBiasGradientAvg_ce0 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_ce0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bramBiasGradientAvg_ce0 = grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_ce0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramBiasGradientAvg_ce0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_ce0;
    end else begin
        bramBiasGradientAvg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramBiasGradientAvg_ce1 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_ce1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bramBiasGradientAvg_ce1 = grp_updateParameter_float_8u_s_fu_816_bramBiasGradientAvg_ce1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramBiasGradientAvg_ce1 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_ce1;
    end else begin
        bramBiasGradientAvg_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramBiasGradientAvg_d0 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_d0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramBiasGradientAvg_d0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_d0;
    end else begin
        bramBiasGradientAvg_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramBiasGradientAvg_we0 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_biasGradientAvg_we0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramBiasGradientAvg_we0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_we0;
    end else begin
        bramBiasGradientAvg_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        bramBias_address0 = loop_index_cast_fu_1669_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        bramBias_address0 = loop_index111_cast_fu_978_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bramBias_address0 = grp_updateParameter_float_8u_s_fu_816_bramBias_address0;
    end else begin
        bramBias_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1)))) begin
        bramBias_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bramBias_ce0 = grp_updateParameter_float_8u_s_fu_816_bramBias_ce0;
    end else begin
        bramBias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        bramBias_ce1 = grp_updateParameter_float_8u_s_fu_816_bramBias_ce1;
    end else begin
        bramBias_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        bramBias_d0 = empty_190_fu_983_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bramBias_d0 = grp_updateParameter_float_8u_s_fu_816_bramBias_d0;
    end else begin
        bramBias_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond14810_reg_1838_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        bramBias_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bramBias_we0 = grp_updateParameter_float_8u_s_fu_816_bramBias_we0;
    end else begin
        bramBias_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        bramBias_we1 = grp_updateParameter_float_8u_s_fu_816_bramBias_we1;
    end else begin
        bramBias_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        bramClasses_address0 = loop_index105_cast_fu_1028_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        bramClasses_address0 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_address0;
    end else begin
        bramClasses_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        bramClasses_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        bramClasses_ce0 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_classes_ce0;
    end else begin
        bramClasses_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1479_reg_1875_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        bramClasses_we0 = 1'b1;
    end else begin
        bramClasses_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage3) & (1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        bramError0_address0 = zext_ln143_15_fu_1543_p1;
    end else if (((1'b0 == ap_block_pp5_stage2) & (1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        bramError0_address0 = zext_ln143_13_fu_1523_p1;
    end else if (((1'b0 == ap_block_pp5_stage1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        bramError0_address0 = zext_ln143_11_fu_1503_p1;
    end else if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        bramError0_address0 = zext_ln143_9_fu_1483_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        bramError0_address0 = zext_ln143_7_fu_1341_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage2) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        bramError0_address0 = zext_ln143_5_fu_1321_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        bramError0_address0 = zext_ln143_3_fu_1301_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        bramError0_address0 = zext_ln143_1_fu_1281_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        bramError0_address0 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_address0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramError0_address0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_address0;
    end else begin
        bramError0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage3) & (1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        bramError0_address1 = zext_ln143_14_fu_1533_p1;
    end else if (((1'b0 == ap_block_pp5_stage2) & (1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        bramError0_address1 = zext_ln143_12_fu_1513_p1;
    end else if (((1'b0 == ap_block_pp5_stage1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        bramError0_address1 = zext_ln143_10_fu_1493_p1;
    end else if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        bramError0_address1 = zext_ln143_8_fu_1472_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        bramError0_address1 = zext_ln143_6_fu_1331_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage2) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        bramError0_address1 = zext_ln143_4_fu_1311_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        bramError0_address1 = zext_ln143_2_fu_1291_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        bramError0_address1 = zext_ln143_fu_1270_p1;
    end else begin
        bramError0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage3_11001) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp5_stage3_11001) & (1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp5_stage2_11001) & (1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
        bramError0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        bramError0_ce0 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_ce0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramError0_ce0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_ce0;
    end else begin
        bramError0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage3_11001) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp5_stage3_11001) & (1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp5_stage2_11001) & (1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
        bramError0_ce1 = 1'b1;
    end else begin
        bramError0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramError0_d0 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_d0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramError0_d0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_d0;
    end else begin
        bramError0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramError0_we0 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_error_we0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramError0_we0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_error_we0;
    end else begin
        bramError0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        bramError1_address0 = zext_ln143_15_reg_2317;
    end else if (((1'b0 == ap_block_pp5_stage3) & (1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        bramError1_address0 = zext_ln143_13_reg_2297;
    end else if (((1'b0 == ap_block_pp5_stage2) & (1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        bramError1_address0 = zext_ln143_11_reg_2277;
    end else if (((1'b0 == ap_block_pp5_stage1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        bramError1_address0 = zext_ln143_9_reg_2257;
    end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        bramError1_address0 = zext_ln143_7_reg_2160;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        bramError1_address0 = zext_ln143_5_reg_2140;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage2) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        bramError1_address0 = zext_ln143_3_reg_2120;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        bramError1_address0 = zext_ln143_1_reg_2100;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramError1_address0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_address0;
    end else begin
        bramError1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        bramError1_address1 = zext_ln143_14_reg_2307;
    end else if (((1'b0 == ap_block_pp5_stage3) & (1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        bramError1_address1 = zext_ln143_12_reg_2287;
    end else if (((1'b0 == ap_block_pp5_stage2) & (1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        bramError1_address1 = zext_ln143_10_reg_2267;
    end else if (((1'b0 == ap_block_pp5_stage1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        bramError1_address1 = zext_ln143_8_reg_2247;
    end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        bramError1_address1 = zext_ln143_6_reg_2150;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        bramError1_address1 = zext_ln143_4_reg_2130;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage2) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        bramError1_address1 = zext_ln143_2_reg_2110;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        bramError1_address1 = zext_ln143_reg_2090;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramError1_address1 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_address1;
    end else begin
        bramError1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage3_11001) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage3_11001) & (1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp5_stage2_11001) & (1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)))) begin
        bramError1_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramError1_ce0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_ce0;
    end else begin
        bramError1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage3_11001) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage3_11001) & (1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp5_stage2_11001) & (1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)))) begin
        bramError1_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramError1_ce1 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_latterError_ce1;
    end else begin
        bramError1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln137_reg_2071 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln137_reg_2071 == 1'd0) & (1'b0 == ap_block_pp4_stage3_11001) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln137_reg_2071 == 1'd0) & (1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln137_reg_2071 == 1'd0) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp5_stage3_11001) & (1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln137_1_reg_2228 == 1'd0)) | ((1'b0 == ap_block_pp5_stage2_11001) & (1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln137_1_reg_2228 == 1'd0)) | ((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln137_1_reg_2228 == 1'd0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln137_1_reg_2228 == 1'd0)))) begin
        bramError1_we0 = 1'b1;
    end else begin
        bramError1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln137_reg_2071 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln137_reg_2071 == 1'd0) & (1'b0 == ap_block_pp4_stage3_11001) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln137_reg_2071 == 1'd0) & (1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln137_reg_2071 == 1'd0) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp5_stage3_11001) & (1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln137_1_reg_2228 == 1'd0)) | ((1'b0 == ap_block_pp5_stage2_11001) & (1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln137_1_reg_2228 == 1'd0)) | ((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln137_1_reg_2228 == 1'd0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln137_1_reg_2228 == 1'd0)))) begin
        bramError1_we1 = 1'b1;
    end else begin
        bramError1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        bramMlpResults_address0 = loop_index99_cast_fu_1098_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        bramMlpResults_address0 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_address0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramMlpResults_address0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_address0;
    end else begin
        bramMlpResults_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramMlpResults_address1 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_address1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramMlpResults_address1 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_address1;
    end else begin
        bramMlpResults_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        bramMlpResults_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        bramMlpResults_ce0 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_ce0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramMlpResults_ce0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_ce0;
    end else begin
        bramMlpResults_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramMlpResults_ce1 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_results_ce1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramMlpResults_ce1 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_ce1;
    end else begin
        bramMlpResults_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1468_reg_1928_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        bramMlpResults_we0 = 1'b1;
    end else begin
        bramMlpResults_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramWeightGradientAvg_address0 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_address0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bramWeightGradientAvg_address0 = grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_address0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramWeightGradientAvg_address0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_address0;
    end else begin
        bramWeightGradientAvg_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramWeightGradientAvg_address1 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_address1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bramWeightGradientAvg_address1 = grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_address1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramWeightGradientAvg_address1 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_address1;
    end else begin
        bramWeightGradientAvg_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramWeightGradientAvg_ce0 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_ce0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bramWeightGradientAvg_ce0 = grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_ce0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramWeightGradientAvg_ce0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_ce0;
    end else begin
        bramWeightGradientAvg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramWeightGradientAvg_ce1 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_ce1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bramWeightGradientAvg_ce1 = grp_updateParameter_float_8u_s_fu_816_bramWeightGradientAvg_ce1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramWeightGradientAvg_ce1 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_ce1;
    end else begin
        bramWeightGradientAvg_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramWeightGradientAvg_d0 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_d0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramWeightGradientAvg_d0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_d0;
    end else begin
        bramWeightGradientAvg_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramWeightGradientAvg_d1 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_d1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramWeightGradientAvg_d1 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_d1;
    end else begin
        bramWeightGradientAvg_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramWeightGradientAvg_we0 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_we0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramWeightGradientAvg_we0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_we0;
    end else begin
        bramWeightGradientAvg_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bramWeightGradientAvg_we1 = grp_computeOutputGradient_float_8u_2u_s_fu_832_p_weightGradientAvg_we1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramWeightGradientAvg_we1 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_we1;
    end else begin
        bramWeightGradientAvg_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        bramWeight_address0 = loop_index93_cast_fu_1625_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        bramWeight_address0 = loop_index117_cast_fu_924_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bramWeight_address0 = grp_updateParameter_float_8u_s_fu_816_bramWeight_address0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramWeight_address0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_address0;
    end else begin
        bramWeight_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        bramWeight_address1 = grp_updateParameter_float_8u_s_fu_816_bramWeight_address1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramWeight_address1 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_address1;
    end else begin
        bramWeight_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1)))) begin
        bramWeight_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bramWeight_ce0 = grp_updateParameter_float_8u_s_fu_816_bramWeight_ce0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramWeight_ce0 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_ce0;
    end else begin
        bramWeight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        bramWeight_ce1 = grp_updateParameter_float_8u_s_fu_816_bramWeight_ce1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64))) begin
        bramWeight_ce1 = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_ce1;
    end else begin
        bramWeight_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        bramWeight_d0 = empty_188_fu_929_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bramWeight_d0 = grp_updateParameter_float_8u_s_fu_816_bramWeight_d0;
    end else begin
        bramWeight_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond14911_reg_1808_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        bramWeight_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bramWeight_we0 = grp_updateParameter_float_8u_s_fu_816_bramWeight_we0;
    end else begin
        bramWeight_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        bramWeight_we1 = grp_updateParameter_float_8u_s_fu_816_bramWeight_we1;
    end else begin
        bramWeight_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state71_on_subcall_done) & (1'b1 == ap_CS_fsm_state71)) | ((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64)))) begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_continue = 1'b1;
    end else begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_offset = trunc_ln103_reg_2203;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_offset = 9'd0;
    end else begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_biasGradientAvg_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_n = p_n_reg_2173;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_n = l_n_reg_1980;
    end else begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_n = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_numberOutputsPrev = numberNeurons_read_reg_1758;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_numberOutputsPrev = numberInputs_read_reg_1746;
    end else begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_numberOutputsPrev = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_offset = add_ln109_reg_2183;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_offset = add_ln129_reg_2213;
    end else begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputCurrentLayer_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputPrevLayer_offset = add_ln110_2_reg_2198;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputPrevLayer_offset = mul_ln79_reg_2043;
    end else begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_outputPrevLayer_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_offset = mul_ln112_reg_2223;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_offset = 16'd0;
    end else begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weightGradientAvg_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_offset = mul_ln109_reg_2218;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_offset = empty_209_reg_1985;
    end else begin
        grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_weights_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state53_on_subcall_done) & (1'b1 == ap_CS_fsm_state53))) begin
        grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_continue = 1'b1;
    end else begin
        grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state75_on_subcall_done) | (1'b1 == ap_block_state75_io)) & (1'b1 == ap_CS_fsm_state75))) begin
        grp_updateParameter_float_8u_s_fu_816_ap_continue = 1'b1;
    end else begin
        grp_updateParameter_float_8u_s_fu_816_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((read_r_ARREADY == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state37)) begin
            read_r_ARADDR = read_addr_3_reg_1922;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            read_r_ARADDR = read_addr_2_reg_1869;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            read_r_ARADDR = read_addr_1_reg_1832;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            read_r_ARADDR = read_addr_reg_1802;
        end else begin
            read_r_ARADDR = 'bx;
        end
    end else begin
        read_r_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((read_r_ARREADY == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state37)) begin
            read_r_ARLEN = mul_ln72_1_reg_1912;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            read_r_ARLEN = mul_ln68_reg_1859;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            read_r_ARLEN = valuesToLoad_2_reg_1822;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            read_r_ARLEN = valuesToLoad_reg_1792;
        end else begin
            read_r_ARLEN = 'bx;
        end
    end else begin
        read_r_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((read_r_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((read_r_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state37)) | ((read_r_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((read_r_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        read_r_ARVALID = 1'b1;
    end else begin
        read_r_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond14810_reg_1838 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond1468_reg_1928 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((exitcond1479_reg_1875 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((exitcond14911_reg_1808 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        read_r_RREADY = 1'b1;
    end else begin
        read_r_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state3))) begin
        read_r_blk_n_AR = m_axi_read_r_ARREADY;
    end else begin
        read_r_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((exitcond14810_reg_1838 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond1468_reg_1928 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((exitcond1479_reg_1875 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((exitcond14911_reg_1808 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        read_r_blk_n_R = m_axi_read_r_RVALID;
    end else begin
        read_r_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((write_r_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state84))) begin
        write_r_AWADDR = write_addr_1_reg_2394;
    end else if ((~((1'b1 == ap_block_state75_on_subcall_done) | (1'b1 == ap_block_state75_io)) & (icmp_ln153_reg_2361 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
        write_r_AWADDR = p_cast7_cast_fu_1603_p1;
    end else begin
        write_r_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((write_r_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state84))) begin
        write_r_AWLEN = valuesToStore_3_reg_2347;
    end else if ((~((1'b1 == ap_block_state75_on_subcall_done) | (1'b1 == ap_block_state75_io)) & (icmp_ln153_reg_2361 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
        write_r_AWLEN = valuesToStore_1_reg_2355;
    end else begin
        write_r_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((write_r_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state84)) | (~((1'b1 == ap_block_state75_on_subcall_done) | (1'b1 == ap_block_state75_io)) & (icmp_ln153_reg_2361 == 1'd0) & (1'b1 == ap_CS_fsm_state75)))) begin
        write_r_AWVALID = 1'b1;
    end else begin
        write_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((write_r_BVALID == 1'b0) & (icmp_ln158_reg_2390 == 1'd0)) & (icmp_ln158_reg_2390 == 1'd0) & (1'b1 == ap_CS_fsm_state92)) | (~((write_r_BVALID == 1'b0) & (icmp_ln153_reg_2361 == 1'd0)) & (icmp_ln153_reg_2361 == 1'd0) & (1'b1 == ap_CS_fsm_state83)))) begin
        write_r_BREADY = 1'b1;
    end else begin
        write_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_reg_2400_pp7_iter1_reg == 1'd0) & (ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0_01001))) begin
        write_r_WDATA = empty_202_fu_1674_p1;
    end else if (((exitcond1212_reg_2371_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_01001))) begin
        write_r_WDATA = empty_200_fu_1630_p1;
    end else begin
        write_r_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond1_reg_2400_pp7_iter1_reg == 1'd0) & (ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)) | ((exitcond1212_reg_2371_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        write_r_WVALID = 1'b1;
    end else begin
        write_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | ((icmp_ln153_reg_2361 == 1'd0) & (1'b1 == ap_CS_fsm_state75)))) begin
        write_r_blk_n_AW = m_axi_write_r_AWREADY;
    end else begin
        write_r_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln158_reg_2390 == 1'd0) & (1'b1 == ap_CS_fsm_state92)) | ((icmp_ln153_reg_2361 == 1'd0) & (1'b1 == ap_CS_fsm_state83)))) begin
        write_r_blk_n_B = m_axi_write_r_BVALID;
    end else begin
        write_r_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((exitcond1_reg_2400_pp7_iter1_reg == 1'd0) & (ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0)) | ((exitcond1212_reg_2371_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0)))) begin
        write_r_blk_n_W = m_axi_write_r_WREADY;
    end else begin
        write_r_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (icmp_ln51_fu_856_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else if (((ap_start == 1'b1) & (icmp_ln51_fu_856_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln59_fu_888_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((read_r_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond14911_fu_913_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond14911_fu_913_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln64_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((read_r_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond14810_fu_967_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond14810_fu_967_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((icmp_ln68_fu_992_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((read_r_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond1479_fu_1017_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond1479_fu_1017_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln69_fu_1062_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((read_r_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond1468_fu_1087_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond1468_fu_1087_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if (((icmp_ln76_fu_1183_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((1'b0 == ap_block_state53_on_subcall_done) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln137_fu_1247_p2 == 1'd1) & (1'b0 == ap_block_pp4_stage0_subdone)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln137_fu_1247_p2 == 1'd1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((1'b0 == ap_block_pp4_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_pp4_stage2 : begin
            if ((1'b0 == ap_block_pp4_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end
        end
        ap_ST_fsm_pp4_stage3 : begin
            if ((1'b0 == ap_block_pp4_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            if (((icmp_ln99_fu_1346_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            if (((1'b0 == ap_block_state64_on_subcall_done) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln137_1_fu_1449_p2 == 1'd1)) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end else if (((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln137_1_fu_1449_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_pp5_stage1 : begin
            if ((1'b0 == ap_block_pp5_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end
        end
        ap_ST_fsm_pp5_stage2 : begin
            if ((1'b0 == ap_block_pp5_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage2;
            end
        end
        ap_ST_fsm_pp5_stage3 : begin
            if ((1'b0 == ap_block_pp5_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage3;
            end
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state71 : begin
            if (((1'b0 == ap_block_state71_on_subcall_done) & (1'b1 == ap_CS_fsm_state71))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            if ((~((1'b1 == ap_block_state75_on_subcall_done) | (1'b1 == ap_block_state75_io)) & (icmp_ln153_reg_2361 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((~((1'b1 == ap_block_state75_on_subcall_done) | (1'b1 == ap_block_state75_io)) & (icmp_ln153_reg_2361 == 1'd1) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (exitcond1212_fu_1614_p2 == 1'd1)) & ~((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0)) | ((1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (exitcond1212_fu_1614_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            if ((~((write_r_BVALID == 1'b0) & (icmp_ln153_reg_2361 == 1'd0)) & (1'b1 == ap_CS_fsm_state83) & (icmp_ln158_fu_1634_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end else if ((~((write_r_BVALID == 1'b0) & (icmp_ln153_reg_2361 == 1'd0)) & (1'b1 == ap_CS_fsm_state83) & (icmp_ln158_fu_1634_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state84 : begin
            if (((write_r_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state84))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (exitcond1_fu_1658_p2 == 1'd1)) & ~((ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0)) | ((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (exitcond1_fu_1658_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            if ((~((write_r_BVALID == 1'b0) & (icmp_ln158_reg_2390 == 1'd0)) & (1'b1 == ap_CS_fsm_state92))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add35_fu_1132_p2 = ($signed(mul34_reg_1948) + $signed(numberInputs_read_reg_1746));

assign add_ln109_1_fu_1390_p2 = ($signed(trunc_ln107_3_fu_1381_p1) + $signed(mul_ln79_reg_2043));

assign add_ln109_fu_1395_p2 = (add_ln109_1_fu_1390_p2 + trunc_ln76_reg_1990);

assign add_ln110_2_fu_1429_p2 = (add_ln110_3_fu_1424_p2 + trunc_ln76_reg_1990);

assign add_ln110_3_fu_1424_p2 = ($signed(trunc_ln110_1_fu_1415_p1) + $signed(mul_ln79_reg_2043));

assign add_ln129_fu_1444_p2 = ($signed(mul_ln79_reg_2043) + $signed(trunc_ln76_reg_1990));

assign add_ln137_1_fu_1454_p2 = (ap_phi_mux_i_10_phi_fu_763_p4 + 29'd1);

assign add_ln137_fu_1252_p2 = (ap_phi_mux_i_8_phi_fu_733_p4 + 29'd1);

assign add_ln151_1_fu_1574_p2 = ($signed(numberOutputs_read_reg_1732) + $signed(mul34_reg_1948));

assign add_ln56_fu_862_p0 = numberLayers;

assign add_ln57_1_fu_874_p2 = ($signed(numberOutputs_read_reg_1732) + $signed(mul_ln56_reg_1787));

assign add_ln72_fu_1041_p2 = ($signed(numberInputs_read_reg_1746) + $signed(valuesToStore_2_fu_1037_p2));

assign add_ln86_fu_1227_p2 = ($signed(trunc_ln72_1_reg_1900) + $signed(grp_fu_1678_p2));

assign add_ln88_fu_1232_p2 = ($signed(empty_206_reg_1965) + $signed(grp_fu_1678_p2));

assign add_ln99_fu_1548_p2 = ($signed(layer_1_reg_740) + $signed(64'd18446744073709551615));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_pp5_stage1 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_pp5_stage2 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_pp5_stage3 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd77];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((read_r_RVALID == 1'b0) & (exitcond14911_reg_1808 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((read_r_RVALID == 1'b0) & (exitcond14911_reg_1808 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((read_r_RVALID == 1'b0) & (exitcond14810_reg_1838 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((read_r_RVALID == 1'b0) & (exitcond14810_reg_1838 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((read_r_RVALID == 1'b0) & (exitcond1479_reg_1875 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((read_r_RVALID == 1'b0) & (exitcond1479_reg_1875 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((read_r_RVALID == 1'b0) & (exitcond1468_reg_1928 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((read_r_RVALID == 1'b0) & (exitcond1468_reg_1928 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((1'b1 == ap_block_state78_io) & (ap_enable_reg_pp6_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((1'b1 == ap_block_state78_io) & (ap_enable_reg_pp6_iter2 == 1'b1));
end

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp7_stage0_11001 = ((1'b1 == ap_block_state87_io) & (ap_enable_reg_pp7_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp7_stage0_subdone = ((1'b1 == ap_block_state87_io) & (ap_enable_reg_pp7_iter2 == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage0_iter1 = ((read_r_RVALID == 1'b0) & (exitcond14911_reg_1808 == 1'd0));
end

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_pp1_stage0_iter1 = ((read_r_RVALID == 1'b0) & (exitcond14810_reg_1838 == 1'd0));
end

assign ap_block_state23_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state33_pp2_stage0_iter1 = ((read_r_RVALID == 1'b0) & (exitcond1479_reg_1875 == 1'd0));
end

assign ap_block_state34_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state45_pp3_stage0_iter1 = ((read_r_RVALID == 1'b0) & (exitcond1468_reg_1928 == 1'd0));
end

assign ap_block_state46_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state53_on_subcall_done = ((ap_sync_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_ready & ap_sync_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_done) == 1'b0);
end

assign ap_block_state54_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp4_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp4_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state64_on_subcall_done = ((ap_sync_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_ready & ap_sync_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_done) == 1'b0);
end

assign ap_block_state65_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp5_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp5_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp5_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state71_on_subcall_done = ((ap_sync_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_ready & ap_sync_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_done) == 1'b0);
end

always @ (*) begin
    ap_block_state75_io = ((write_r_AWREADY == 1'b0) & (icmp_ln153_reg_2361 == 1'd0));
end

always @ (*) begin
    ap_block_state75_on_subcall_done = ((ap_sync_grp_updateParameter_float_8u_s_fu_816_ap_ready & ap_sync_grp_updateParameter_float_8u_s_fu_816_ap_done) == 1'b0);
end

assign ap_block_state76_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state78_io = ((write_r_WREADY == 1'b0) & (exitcond1212_reg_2371_pp6_iter1_reg == 1'd0));
end

assign ap_block_state78_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state83 = ((write_r_BVALID == 1'b0) & (icmp_ln153_reg_2361 == 1'd0));
end

assign ap_block_state85_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state87_io = ((write_r_WREADY == 1'b0) & (exitcond1_reg_2400_pp7_iter1_reg == 1'd0));
end

assign ap_block_state87_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state92 = ((write_r_BVALID == 1'b0) & (icmp_ln158_reg_2390 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_done = (grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_done | ap_sync_reg_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_done);

assign ap_sync_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_ready = (grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_ready | ap_sync_reg_grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_ready);

assign ap_sync_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_done = (grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_done | ap_sync_reg_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_done);

assign ap_sync_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_ready = (grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_ready | ap_sync_reg_grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_ready);

assign ap_sync_grp_updateParameter_float_8u_s_fu_816_ap_done = (grp_updateParameter_float_8u_s_fu_816_ap_done | ap_sync_reg_grp_updateParameter_float_8u_s_fu_816_ap_done);

assign ap_sync_grp_updateParameter_float_8u_s_fu_816_ap_ready = (grp_updateParameter_float_8u_s_fu_816_ap_ready | ap_sync_reg_grp_updateParameter_float_8u_s_fu_816_ap_ready);

assign bitcast_ln142_fu_1554_p1 = learningRate;

assign bramClasses_d0 = read_addr_2_read_reg_1884;

assign bramMlpResults_d0 = read_addr_3_read_reg_1937;

assign empty_187_fu_918_p2 = (ap_phi_mux_loop_index117_phi_fu_664_p4 + 32'd1);

assign empty_188_fu_929_p1 = read_addr_read_reg_1817;

assign empty_189_fu_972_p2 = (ap_phi_mux_loop_index111_phi_fu_676_p4 + 32'd1);

assign empty_190_fu_983_p1 = read_addr_1_read_reg_1847;

assign empty_192_fu_1022_p2 = (ap_phi_mux_loop_index105_phi_fu_688_p4 + 32'd1);

assign empty_194_fu_1092_p2 = (ap_phi_mux_loop_index99_phi_fu_700_p4 + 32'd1);

assign empty_196_fu_1258_p1 = ap_phi_mux_i_8_phi_fu_733_p4[3:0];

assign empty_197_fu_1460_p1 = ap_phi_mux_i_10_phi_fu_763_p4[3:0];

assign empty_199_fu_1619_p2 = (loop_index93_reg_770 + 32'd1);

assign empty_200_fu_1630_p1 = bramWeight_load_reg_2385;

assign empty_201_fu_1663_p2 = (loop_index_reg_781 + 32'd1);

assign empty_202_fu_1674_p1 = bramBias_load_reg_2414;

assign empty_206_fu_1136_p1 = add35_fu_1132_p2[13:0];

assign empty_207_fu_1145_p1 = mul41_fu_1140_p2[15:0];

assign empty_208_fu_1149_p1 = valuesToStore_2_reg_1889[8:0];

assign empty_209_fu_1161_p1 = valuesToStore_fu_1157_p2[15:0];

assign exitcond1212_fu_1614_p2 = ((loop_index93_reg_770 == valuesToStore_1_reg_2355) ? 1'b1 : 1'b0);

assign exitcond1468_fu_1087_p2 = ((ap_phi_mux_loop_index99_phi_fu_700_p4 == mul_ln72_1_reg_1912) ? 1'b1 : 1'b0);

assign exitcond1479_fu_1017_p2 = ((ap_phi_mux_loop_index105_phi_fu_688_p4 == mul_ln68_reg_1859) ? 1'b1 : 1'b0);

assign exitcond14810_fu_967_p2 = ((ap_phi_mux_loop_index111_phi_fu_676_p4 == valuesToLoad_2_reg_1822) ? 1'b1 : 1'b0);

assign exitcond14911_fu_913_p2 = ((ap_phi_mux_loop_index117_phi_fu_664_p4 == valuesToLoad_reg_1792) ? 1'b1 : 1'b0);

assign exitcond1_fu_1658_p2 = ((loop_index_reg_781 == valuesToStore_3_reg_2347) ? 1'b1 : 1'b0);

assign grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_start = grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_ap_start_reg;

assign grp_computeHiddenGradient_float_8u_3u_2u_s_fu_792_p_initZero = initZero_reg_2037;

assign grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_start = grp_computeOutputGradient_float_8u_2u_s_fu_832_ap_start_reg;

assign grp_computeOutputGradient_float_8u_2u_s_fu_832_p_initZero = initZero_reg_2037;

assign grp_fu_1678_p0 = (trunc_ln72_1_reg_1900 + trunc_ln76_5_fu_1202_p1);

assign grp_fu_1678_p1 = i_reg_718[13:0];

assign grp_fu_1686_p0 = (trunc_ln107_2_fu_1377_p1 + trunc_ln72_reg_1906);

assign grp_fu_1692_p0 = (trunc_ln110_fu_1411_p1 + trunc_ln72_reg_1906);

assign grp_updateParameter_float_8u_s_fu_816_ap_start = grp_updateParameter_float_8u_s_fu_816_ap_start_reg;

assign i_9_fu_1188_p2 = (i_reg_718 + 32'd1);

assign icmp_fu_1126_p2 = ((tmp_fu_1117_p4 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln101_fu_1352_p2 = ((layer_1_reg_740 < zext_ln76_reg_1997) ? 1'b1 : 1'b0);

assign icmp_ln137_1_fu_1449_p2 = ((ap_phi_mux_i_10_phi_fu_763_p4 == trunc_ln76_1_reg_2003) ? 1'b1 : 1'b0);

assign icmp_ln137_fu_1247_p2 = ((ap_phi_mux_i_8_phi_fu_733_p4 == trunc_ln3_reg_2066) ? 1'b1 : 1'b0);

assign icmp_ln153_fu_1588_p2 = ((valuesToStore_1_fu_1583_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln158_fu_1634_p2 = ((valuesToStore_3_reg_2347 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_856_p2 = ((loadParameters == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_888_p2 = ((valuesToLoad_fu_883_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_942_p2 = ((valuesToLoad_2_fu_937_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_992_p2 = ((mul_ln68_fu_987_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_1062_p2 = ((mul_ln72_1_fu_1057_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_1183_p2 = ((i_reg_718 == batchSize_read_reg_1852) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_1346_p2 = (($signed(layer_011_reg_750) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign initZero_fu_1211_p2 = ((i_reg_718 == 32'd0) ? 1'b1 : 1'b0);

assign l_n_fu_1152_p3 = ((icmp_reg_1954[0:0] === 1'b1) ? numberNeurons_read_reg_1758 : numberOutputs_read_reg_1732);

assign layer_2_fu_1400_p2 = ($signed(32'd4294967295) + $signed(layer_011_reg_750));

assign layer_fu_1107_p2 = ($signed(32'd4294967295) + $signed(numberLayers_read_reg_1779));

assign loop_index105_cast_fu_1028_p1 = loop_index105_reg_684_pp2_iter1_reg;

assign loop_index111_cast_fu_978_p1 = loop_index111_reg_672_pp1_iter1_reg;

assign loop_index117_cast_fu_924_p1 = loop_index117_reg_660_pp0_iter1_reg;

assign loop_index93_cast_fu_1625_p1 = loop_index93_reg_770;

assign loop_index99_cast_fu_1098_p1 = loop_index99_reg_696_pp3_iter1_reg;

assign loop_index_cast_fu_1669_p1 = loop_index_reg_781;

assign mul34_fu_1112_p0 = ($signed(32'd4294967295) + $signed(numberLayers_read_reg_1779));

assign mul_ln107_fu_1372_p1 = mul_ln107_fu_1372_p10;

assign mul_ln107_fu_1372_p10 = trunc_ln107_1_fu_1364_p1;

assign mul_ln110_fu_1406_p1 = ($signed(32'd4294967295) + $signed(layer_011_reg_750));

assign mul_ln144_fu_1563_p1 = ($signed(numberOutputs_read_reg_1732) + $signed(add35_reg_1960));

assign mul_ln56_fu_868_p1 = ($signed(add_ln56_fu_862_p0) + $signed(32'd4294967295));

assign mul_ln72_1_fu_1057_p1 = ($signed(numberOutputs_read_reg_1732) + $signed(add_ln72_reg_1895));

assign mul_ln80_fu_1221_p0 = size_assign_reg_708[9:0];

assign or_ln143_10_fu_1508_p2 = (tmp_1_reg_2237 | 7'd4);

assign or_ln143_11_fu_1518_p2 = (tmp_1_reg_2237 | 7'd5);

assign or_ln143_12_fu_1528_p2 = (tmp_1_reg_2237 | 7'd6);

assign or_ln143_13_fu_1538_p2 = (tmp_1_reg_2237 | 7'd7);

assign or_ln143_1_fu_1286_p2 = (tmp_s_reg_2080 | 7'd2);

assign or_ln143_2_fu_1296_p2 = (tmp_s_reg_2080 | 7'd3);

assign or_ln143_3_fu_1306_p2 = (tmp_s_reg_2080 | 7'd4);

assign or_ln143_4_fu_1316_p2 = (tmp_s_reg_2080 | 7'd5);

assign or_ln143_5_fu_1326_p2 = (tmp_s_reg_2080 | 7'd6);

assign or_ln143_6_fu_1336_p2 = (tmp_s_reg_2080 | 7'd7);

assign or_ln143_7_fu_1477_p2 = (tmp_1_fu_1464_p3 | 7'd1);

assign or_ln143_8_fu_1488_p2 = (tmp_1_reg_2237 | 7'd2);

assign or_ln143_9_fu_1498_p2 = (tmp_1_reg_2237 | 7'd3);

assign or_ln143_fu_1275_p2 = (tmp_s_fu_1262_p3 | 7'd1);

assign p_cast1_cast_fu_903_p1 = $signed(p_cast1_fu_894_p4);

assign p_cast1_fu_894_p4 = {{axiWeightInput_read_reg_1713[63:2]}};

assign p_cast2_cast_fu_1077_p1 = $signed(p_cast2_fu_1068_p4);

assign p_cast2_fu_1068_p4 = {{axiMlpResultsInput_read_reg_1723[63:2]}};

assign p_cast3_cast_fu_957_p1 = $signed(p_cast3_fu_948_p4);

assign p_cast3_fu_948_p4 = {{axiBiasInput_read_reg_1708[63:2]}};

assign p_cast7_cast_fu_1603_p1 = $signed(p_cast7_fu_1594_p4);

assign p_cast7_fu_1594_p4 = {{axiWeightOutput_read_reg_1703[63:2]}};

assign p_cast8_cast_fu_1648_p1 = $signed(p_cast8_fu_1639_p4);

assign p_cast8_fu_1639_p4 = {{axiBiasOutput_read_reg_1698[63:2]}};

assign p_cast_cast_fu_1007_p1 = $signed(p_cast_fu_998_p4);

assign p_cast_fu_998_p4 = {{axiClassesInput_read_reg_1718[63:2]}};

assign p_n_fu_1357_p3 = ((icmp_ln101_fu_1352_p2[0:0] === 1'b1) ? numberNeurons_read_reg_1758 : size_assign_reg_708);

assign select_ln122_fu_1438_p3 = ((icmp_reg_1954[0:0] === 1'b1) ? size_assign_reg_708 : numberOutputs_read_reg_1732);

assign tmp_1_fu_1464_p3 = {{empty_197_fu_1460_p1}, {3'd0}};

assign tmp_fu_1117_p4 = {{numberLayers_read_reg_1779[31:1]}};

assign tmp_s_fu_1262_p3 = {{empty_196_fu_1258_p1}, {3'd0}};

assign trunc_ln103_fu_1434_p1 = mul_ln107_fu_1372_p2[8:0];

assign trunc_ln107_1_fu_1364_p1 = layer_1_reg_740[15:0];

assign trunc_ln107_2_fu_1377_p1 = mul_ln107_fu_1372_p2[15:0];

assign trunc_ln107_3_fu_1381_p1 = mul_ln107_fu_1372_p2[13:0];

assign trunc_ln107_fu_1180_p1 = numberNeurons_read_reg_1758[15:0];

assign trunc_ln110_1_fu_1415_p1 = mul_ln110_fu_1406_p2[13:0];

assign trunc_ln110_fu_1411_p1 = mul_ln110_fu_1406_p2[15:0];

assign trunc_ln72_1_fu_1046_p1 = add_ln72_fu_1041_p2[13:0];

assign trunc_ln72_fu_1050_p1 = numberInputs_read_reg_1746[15:0];

assign trunc_ln76_2_fu_1194_p1 = i_reg_718[9:0];

assign trunc_ln76_5_fu_1202_p1 = size_assign_reg_708[13:0];

assign trunc_ln76_fu_1165_p1 = numberInputs_read_reg_1746[13:0];

assign valuesToLoad_2_fu_937_p2 = ($signed(numberOutputs_read_reg_1732) + $signed(valuesToLoad_1_fu_933_p2));

assign valuesToLoad_fu_883_p1 = ($signed(add_ln57_1_fu_874_p2) + $signed(numberInputs_read_reg_1746));

assign valuesToStore_1_fu_1583_p1 = ($signed(add_ln151_1_fu_1574_p2) + $signed(numberInputs_read_reg_1746));

assign valuesToStore_3_fu_1569_p2 = ($signed(numberOutputs_read_reg_1732) + $signed(valuesToStore_2_reg_1889));

assign zext_ln143_10_fu_1493_p1 = or_ln143_8_fu_1488_p2;

assign zext_ln143_11_fu_1503_p1 = or_ln143_9_fu_1498_p2;

assign zext_ln143_12_fu_1513_p1 = or_ln143_10_fu_1508_p2;

assign zext_ln143_13_fu_1523_p1 = or_ln143_11_fu_1518_p2;

assign zext_ln143_14_fu_1533_p1 = or_ln143_12_fu_1528_p2;

assign zext_ln143_15_fu_1543_p1 = or_ln143_13_fu_1538_p2;

assign zext_ln143_1_fu_1281_p1 = or_ln143_fu_1275_p2;

assign zext_ln143_2_fu_1291_p1 = or_ln143_1_fu_1286_p2;

assign zext_ln143_3_fu_1301_p1 = or_ln143_2_fu_1296_p2;

assign zext_ln143_4_fu_1311_p1 = or_ln143_3_fu_1306_p2;

assign zext_ln143_5_fu_1321_p1 = or_ln143_4_fu_1316_p2;

assign zext_ln143_6_fu_1331_p1 = or_ln143_5_fu_1326_p2;

assign zext_ln143_7_fu_1341_p1 = or_ln143_6_fu_1336_p2;

assign zext_ln143_8_fu_1472_p1 = tmp_1_fu_1464_p3;

assign zext_ln143_9_fu_1483_p1 = or_ln143_7_fu_1477_p2;

assign zext_ln143_fu_1270_p1 = tmp_s_fu_1262_p3;

assign zext_ln76_fu_1168_p1 = $unsigned(layer_reg_1942);

always @ (posedge ap_clk) begin
    zext_ln76_reg_1997[63:32] <= 32'b00000000000000000000000000000000;
    tmp_s_reg_2080[2:0] <= 3'b000;
    zext_ln143_reg_2090[2:0] <= 3'b000;
    zext_ln143_reg_2090[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln143_1_reg_2100[2:0] <= 3'b001;
    zext_ln143_1_reg_2100[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln143_2_reg_2110[2:0] <= 3'b010;
    zext_ln143_2_reg_2110[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln143_3_reg_2120[2:0] <= 3'b011;
    zext_ln143_3_reg_2120[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln143_4_reg_2130[2:0] <= 3'b100;
    zext_ln143_4_reg_2130[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln143_5_reg_2140[2:0] <= 3'b101;
    zext_ln143_5_reg_2140[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln143_6_reg_2150[2:0] <= 3'b110;
    zext_ln143_6_reg_2150[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln143_7_reg_2160[2:0] <= 3'b111;
    zext_ln143_7_reg_2160[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_1_reg_2237[2:0] <= 3'b000;
    zext_ln143_8_reg_2247[2:0] <= 3'b000;
    zext_ln143_8_reg_2247[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln143_9_reg_2257[2:0] <= 3'b001;
    zext_ln143_9_reg_2257[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln143_10_reg_2267[2:0] <= 3'b010;
    zext_ln143_10_reg_2267[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln143_11_reg_2277[2:0] <= 3'b011;
    zext_ln143_11_reg_2277[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln143_12_reg_2287[2:0] <= 3'b100;
    zext_ln143_12_reg_2287[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln143_13_reg_2297[2:0] <= 3'b101;
    zext_ln143_13_reg_2297[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln143_14_reg_2307[2:0] <= 3'b110;
    zext_ln143_14_reg_2307[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln143_15_reg_2317[2:0] <= 3'b111;
    zext_ln143_15_reg_2317[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //BGD
