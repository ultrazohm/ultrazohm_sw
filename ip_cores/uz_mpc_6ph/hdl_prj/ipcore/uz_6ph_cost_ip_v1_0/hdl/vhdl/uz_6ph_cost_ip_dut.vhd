-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\uz_mpc_cost_and_optim_state_machine\uz_6ph_cost_ip_dut.vhd
-- Created: 2022-09-23 18:23:43
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_6ph_cost_ip_dut
-- Source Path: uz_6ph_cost_ip/uz_6ph_cost_ip_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY uz_6ph_cost_ip_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        id_ref_pu_AXI                     :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        iq_ref_pu_AXI                     :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        ix_ref_pu_AXI                     :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        iy_ref_pu_AXI                     :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        id_pred_pu                        :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En16
        iq_pred_pu                        :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En16
        ix_pred_pu                        :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        iy_pred_pu                        :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        max_current_pu_AXI                :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En15
        index                             :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        last_optim_index                  :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        lambda_d_AXI                      :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
        lambda_q_AXI                      :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
        lambda_x_AXI                      :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
        lambda_y_AXI                      :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
        lambda_u_AXI                      :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
        trigger                           :   IN    std_logic;  -- ufix1
        ce_out                            :   OUT   std_logic;  -- ufix1
        opt_index                         :   OUT   std_logic_vector(7 DOWNTO 0);  -- ufix8
        G0                                :   OUT   std_logic;  -- ufix1
        G1                                :   OUT   std_logic;  -- ufix1
        G2                                :   OUT   std_logic;  -- ufix1
        G3                                :   OUT   std_logic;  -- ufix1
        G4                                :   OUT   std_logic;  -- ufix1
        G5                                :   OUT   std_logic;  -- ufix1
        G6                                :   OUT   std_logic;  -- ufix1
        G7                                :   OUT   std_logic;  -- ufix1
        G8                                :   OUT   std_logic;  -- ufix1
        G9                                :   OUT   std_logic;  -- ufix1
        G10                               :   OUT   std_logic;  -- ufix1
        G11                               :   OUT   std_logic;  -- ufix1
        opt_done                          :   OUT   std_logic;  -- ufix1
        costs                             :   OUT   std_logic_vector(26 DOWNTO 0)  -- ufix27_En24
        );
END uz_6ph_cost_ip_dut;


ARCHITECTURE rtl OF uz_6ph_cost_ip_dut IS

  -- Component Declarations
  COMPONENT uz_6ph_cost_ip_src_uz_6ph_mpc_costs_and_optimization
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          id_ref_pu_AXI                   :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          iq_ref_pu_AXI                   :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          ix_ref_pu_AXI                   :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          iy_ref_pu_AXI                   :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          id_pred_pu                      :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En16
          iq_pred_pu                      :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En16
          ix_pred_pu                      :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          iy_pred_pu                      :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          max_current_pu_AXI              :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En15
          index                           :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          last_optim_index                :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          lambda_d_AXI                    :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
          lambda_q_AXI                    :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
          lambda_x_AXI                    :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
          lambda_y_AXI                    :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
          lambda_u_AXI                    :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
          trigger                         :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          opt_index                       :   OUT   std_logic_vector(7 DOWNTO 0);  -- ufix8
          G0                              :   OUT   std_logic;  -- ufix1
          G1                              :   OUT   std_logic;  -- ufix1
          G2                              :   OUT   std_logic;  -- ufix1
          G3                              :   OUT   std_logic;  -- ufix1
          G4                              :   OUT   std_logic;  -- ufix1
          G5                              :   OUT   std_logic;  -- ufix1
          G6                              :   OUT   std_logic;  -- ufix1
          G7                              :   OUT   std_logic;  -- ufix1
          G8                              :   OUT   std_logic;  -- ufix1
          G9                              :   OUT   std_logic;  -- ufix1
          G10                             :   OUT   std_logic;  -- ufix1
          G11                             :   OUT   std_logic;  -- ufix1
          opt_done                        :   OUT   std_logic;  -- ufix1
          costs                           :   OUT   std_logic_vector(26 DOWNTO 0)  -- ufix27_En24
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : uz_6ph_cost_ip_src_uz_6ph_mpc_costs_and_optimization
    USE ENTITY work.uz_6ph_cost_ip_src_uz_6ph_mpc_costs_and_optimization(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL trigger_sig                      : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL opt_index_sig                    : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL G0_sig                           : std_logic;  -- ufix1
  SIGNAL G1_sig                           : std_logic;  -- ufix1
  SIGNAL G2_sig                           : std_logic;  -- ufix1
  SIGNAL G3_sig                           : std_logic;  -- ufix1
  SIGNAL G4_sig                           : std_logic;  -- ufix1
  SIGNAL G5_sig                           : std_logic;  -- ufix1
  SIGNAL G6_sig                           : std_logic;  -- ufix1
  SIGNAL G7_sig                           : std_logic;  -- ufix1
  SIGNAL G8_sig                           : std_logic;  -- ufix1
  SIGNAL G9_sig                           : std_logic;  -- ufix1
  SIGNAL G10_sig                          : std_logic;  -- ufix1
  SIGNAL G11_sig                          : std_logic;  -- ufix1
  SIGNAL opt_done_sig                     : std_logic;  -- ufix1
  SIGNAL costs_sig                        : std_logic_vector(26 DOWNTO 0);  -- ufix27

BEGIN
  u_uz_6ph_cost_ip_src_uz_6ph_mpc_costs_and_optimization : uz_6ph_cost_ip_src_uz_6ph_mpc_costs_and_optimization
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              id_ref_pu_AXI => id_ref_pu_AXI,  -- sfix18_En11
              iq_ref_pu_AXI => iq_ref_pu_AXI,  -- sfix18_En11
              ix_ref_pu_AXI => ix_ref_pu_AXI,  -- sfix18_En11
              iy_ref_pu_AXI => iy_ref_pu_AXI,  -- sfix18_En11
              id_pred_pu => id_pred_pu,  -- sfix27_En16
              iq_pred_pu => iq_pred_pu,  -- sfix27_En16
              ix_pred_pu => ix_pred_pu,  -- sfix18_En11
              iy_pred_pu => iy_pred_pu,  -- sfix18_En11
              max_current_pu_AXI => max_current_pu_AXI,  -- ufix18_En15
              index => index,  -- ufix8
              last_optim_index => last_optim_index,  -- ufix32
              lambda_d_AXI => lambda_d_AXI,  -- ufix18_En17
              lambda_q_AXI => lambda_q_AXI,  -- ufix18_En17
              lambda_x_AXI => lambda_x_AXI,  -- ufix18_En17
              lambda_y_AXI => lambda_y_AXI,  -- ufix18_En17
              lambda_u_AXI => lambda_u_AXI,  -- ufix18_En17
              trigger => trigger_sig,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              opt_index => opt_index_sig,  -- ufix8
              G0 => G0_sig,  -- ufix1
              G1 => G1_sig,  -- ufix1
              G2 => G2_sig,  -- ufix1
              G3 => G3_sig,  -- ufix1
              G4 => G4_sig,  -- ufix1
              G5 => G5_sig,  -- ufix1
              G6 => G6_sig,  -- ufix1
              G7 => G7_sig,  -- ufix1
              G8 => G8_sig,  -- ufix1
              G9 => G9_sig,  -- ufix1
              G10 => G10_sig,  -- ufix1
              G11 => G11_sig,  -- ufix1
              opt_done => opt_done_sig,  -- ufix1
              costs => costs_sig  -- ufix27_En24
              );

  trigger_sig <= trigger;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  opt_index <= opt_index_sig;

  G0 <= G0_sig;

  G1 <= G1_sig;

  G2 <= G2_sig;

  G3 <= G3_sig;

  G4 <= G4_sig;

  G5 <= G5_sig;

  G6 <= G6_sig;

  G7 <= G7_sig;

  G8 <= G8_sig;

  G9 <= G9_sig;

  G10 <= G10_sig;

  G11 <= G11_sig;

  opt_done <= opt_done_sig;

  costs <= costs_sig;

END rtl;

