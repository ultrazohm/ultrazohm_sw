-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\FCS_MPC_switching_states_2_level_inverter\hdlsrc\FCS_MPC_switching_states_2_level_inverter\FCS_MPC_switching_states_2_level_inverter_src_Subsystem.vhd
-- Created: 2022-07-12 15:04:06
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-08
-- Target subsystem base rate: 1e-08
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- HB1T                          ce_out        1e-08
-- HB1B                          ce_out        1e-08
-- HB2T                          ce_out        1e-08
-- HB2B                          ce_out        1e-08
-- HB3T                          ce_out        1e-08
-- HB3B                          ce_out        1e-08
-- done                          ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: FCS_MPC_switching_states_2_level_inverter_src_Subsystem
-- Source Path: FCS_MPC_switching_states_2_level_inverter/Microcontroller Software/Subsystem
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY FCS_MPC_switching_states_2_level_inverter_src_Subsystem IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        I                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        done_min_J                        :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        HB1T                              :   OUT   std_logic;
        HB1B                              :   OUT   std_logic;
        HB2T                              :   OUT   std_logic;
        HB2B                              :   OUT   std_logic;
        HB3T                              :   OUT   std_logic;
        HB3B                              :   OUT   std_logic;
        done                              :   OUT   std_logic
        );
END FCS_MPC_switching_states_2_level_inverter_src_Subsystem;


ARCHITECTURE rtl OF FCS_MPC_switching_states_2_level_inverter_src_Subsystem IS

  -- Component Declarations
  COMPONENT FCS_MPC_switching_states_2_level_inverter_src_Detect_Rise_Positive
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          U                               :   IN    std_logic;
          Y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT FCS_MPC_switching_states_2_level_inverter_src_MATLAB_Function1
    PORT( I                               :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          next_switching_state            :   OUT   std_logic_vector(0 TO 5)  -- boolean [6]
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : FCS_MPC_switching_states_2_level_inverter_src_Detect_Rise_Positive
    USE ENTITY work.FCS_MPC_switching_states_2_level_inverter_src_Detect_Rise_Positive(rtl);

  FOR ALL : FCS_MPC_switching_states_2_level_inverter_src_MATLAB_Function1
    USE ENTITY work.FCS_MPC_switching_states_2_level_inverter_src_MATLAB_Function1(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL Detect_Rise_Positive_out1        : std_logic;
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL I_signed                         : signed(31 DOWNTO 0);  -- int32
  SIGNAL Switch_on2_out1                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL Delay2_out1                      : signed(31 DOWNTO 0);  -- int32
  SIGNAL next_switching_state             : std_logic_vector(0 TO 5);  -- boolean [6]

BEGIN
  u_Detect_Rise_Positive : FCS_MPC_switching_states_2_level_inverter_src_Detect_Rise_Positive
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              U => done_min_J,
              Y => Detect_Rise_Positive_out1
              );

  u_MATLAB_Function1 : FCS_MPC_switching_states_2_level_inverter_src_MATLAB_Function1
    PORT MAP( I => std_logic_vector(Switch_on2_out1),  -- int32
              next_switching_state => next_switching_state  -- boolean [6]
              );

  
  switch_compare_1 <= '1' WHEN Detect_Rise_Positive_out1 = '1' ELSE
      '0';

  enb <= clk_enable;

  I_signed <= signed(I);

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_out1 <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        Delay2_out1 <= Switch_on2_out1;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  
  Switch_on2_out1 <= Delay2_out1 WHEN switch_compare_1 = '0' ELSE
      I_signed;

  ce_out <= clk_enable;

  HB1T <= next_switching_state(0);

  HB1B <= next_switching_state(1);

  HB2T <= next_switching_state(2);

  HB2B <= next_switching_state(3);

  HB3T <= next_switching_state(4);

  HB3B <= next_switching_state(5);

  done <= Detect_Rise_Positive_out1;

END rtl;

