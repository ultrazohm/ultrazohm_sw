-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity BGD_accumulate_float_16u_39 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_values_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    p_values_empty_n : IN STD_LOGIC;
    p_values_read : OUT STD_LOGIC;
    p_accumulator_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_accumulator_ce0 : OUT STD_LOGIC;
    p_accumulator_we0 : OUT STD_LOGIC;
    p_accumulator_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_accumulator_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_accumulator_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_accumulator_ce1 : OUT STD_LOGIC;
    p_accumulator_we1 : OUT STD_LOGIC;
    p_accumulator_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_accumulator_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_size_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_size_empty_n : IN STD_LOGIC;
    p_size_read : OUT STD_LOGIC );
end;


architecture behav of BGD_accumulate_float_16u_39 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv28_1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv7_9 : STD_LOGIC_VECTOR (6 downto 0) := "0001001";
    constant ap_const_lv7_A : STD_LOGIC_VECTOR (6 downto 0) := "0001010";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv7_C : STD_LOGIC_VECTOR (6 downto 0) := "0001100";
    constant ap_const_lv7_D : STD_LOGIC_VECTOR (6 downto 0) := "0001101";
    constant ap_const_lv7_E : STD_LOGIC_VECTOR (6 downto 0) := "0001110";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_values_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln397_reg_732 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_size_blk_n : STD_LOGIC;
    signal i_reg_295 : STD_LOGIC_VECTOR (27 downto 0);
    signal reg_310 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state19_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state24_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal grp_fu_306_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_315 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state10_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state26_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state11_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_state27_pp0_stage9_iter1 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_state12_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_state28_pp0_stage10_iter1 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_state13_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_state29_pp0_stage11_iter1 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_state14_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_state30_pp0_stage12_iter1 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_state15_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_state31_pp0_stage13_iter1 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_state16_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_state32_pp0_stage14_iter1 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal trunc_ln_reg_727 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal icmp_ln397_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln397_reg_732_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln397_fu_335_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln397_reg_736 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_s_fu_345_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_reg_741 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_accumulator_addr_reg_759 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_accumulator_addr_1_reg_764 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln674_fu_369_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_reg_769 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_i_reg_774 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_71_i_reg_779 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_72_i_reg_784 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_73_i_reg_789 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_74_i_reg_794 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_75_i_reg_799 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_76_i_reg_804 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_77_i_reg_809 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_78_i_reg_814 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_79_i_reg_819 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_80_i_reg_824 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_81_i_reg_829 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_82_i_reg_834 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_83_i_reg_839 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_84_i_reg_844 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_load_1_reg_849 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_addr_2_reg_854 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_accumulator_addr_3_reg_859 : STD_LOGIC_VECTOR (6 downto 0);
    signal bitcast_ln101_fu_543_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state20_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal p_accumulator_load_2_reg_870 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_load_3_reg_875 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_addr_4_reg_880 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_accumulator_addr_5_reg_885 : STD_LOGIC_VECTOR (6 downto 0);
    signal bitcast_ln101_91_fu_567_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state21_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal p_accumulator_load_4_reg_896 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_load_5_reg_901 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_addr_6_reg_906 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_accumulator_addr_7_reg_911 : STD_LOGIC_VECTOR (6 downto 0);
    signal bitcast_ln101_92_fu_591_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state22_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal p_accumulator_load_6_reg_922 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_load_7_reg_927 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_addr_8_reg_932 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_accumulator_addr_9_reg_937 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_accumulator_addr_9_reg_937_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal bitcast_ln101_93_fu_615_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state23_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal p_accumulator_load_8_reg_947 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_load_9_reg_952 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_addr_10_reg_957 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_accumulator_addr_10_reg_957_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal p_accumulator_addr_11_reg_963 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_accumulator_addr_11_reg_963_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal bitcast_ln101_94_fu_639_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_load_11_reg_973 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_addr_12_reg_978 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_accumulator_addr_12_reg_978_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal p_accumulator_addr_13_reg_984 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_accumulator_addr_13_reg_984_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal bitcast_ln101_95_fu_663_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state25_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal add3_1_i_reg_994 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_load_12_reg_999 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_load_13_reg_1004 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_addr_14_reg_1009 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_accumulator_addr_14_reg_1009_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal p_accumulator_addr_15_reg_1015 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_accumulator_addr_15_reg_1015_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal bitcast_ln101_96_fu_687_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_load_14_reg_1025 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_accumulator_load_15_reg_1030 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln101_97_fu_691_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln101_98_fu_695_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln101_99_fu_699_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln101_100_fu_703_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln101_101_fu_707_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln101_102_fu_711_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln101_103_fu_715_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_state17_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_state33_pp0_stage15_iter1 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal add3_9_i_reg_1070 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln101_104_fu_719_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_i_140_reg_1080 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal bitcast_ln101_105_fu_723_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_10_i_reg_1090 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_11_i_reg_1095 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_12_i_reg_1100 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_13_i_reg_1105 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_14_i_reg_1110 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_phi_mux_i_phi_fu_299_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln404_fu_353_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln404_1_fu_364_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln404_2_fu_528_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln404_3_fu_538_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln404_4_fu_552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln404_5_fu_562_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln404_6_fu_576_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln404_7_fu_586_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln404_8_fu_600_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln404_9_fu_610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln404_10_fu_624_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln404_11_fu_634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln404_12_fu_648_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln404_13_fu_658_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln404_14_fu_672_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln404_15_fu_682_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal grp_fu_306_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_306_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_341_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln404_fu_358_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln404_1_fu_523_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln404_2_fu_533_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln404_3_fu_547_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln404_4_fu_557_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln404_5_fu_571_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln404_6_fu_581_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln404_7_fu_595_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln404_8_fu_605_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln404_9_fu_619_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln404_10_fu_629_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln404_11_fu_643_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln404_12_fu_653_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln404_13_fu_667_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln404_14_fu_677_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_306_ce : STD_LOGIC;
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component BGD_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    fadd_32ns_32ns_32_5_full_dsp_1_U524 : component BGD_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_306_p0,
        din1 => grp_fu_306_p1,
        ce => grp_fu_306_ce,
        dout => grp_fu_306_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((p_size_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage15_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((p_size_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_295_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_size_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_295 <= ap_const_lv28_0;
            elsif (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_295 <= add_ln397_reg_736;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln397_reg_732_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add3_10_i_reg_1090 <= grp_fu_306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln397_reg_732_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                add3_11_i_reg_1095 <= grp_fu_306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln397_reg_732_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                add3_12_i_reg_1100 <= grp_fu_306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln397_reg_732_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                add3_13_i_reg_1105 <= grp_fu_306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln397_reg_732_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                add3_14_i_reg_1110 <= grp_fu_306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                add3_1_i_reg_994 <= grp_fu_306_p2;
                p_accumulator_load_12_reg_999 <= p_accumulator_q1;
                p_accumulator_load_13_reg_1004 <= p_accumulator_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then
                add3_9_i_reg_1070 <= grp_fu_306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add3_i_140_reg_1080 <= grp_fu_306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln397_reg_736 <= add_ln397_fu_335_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln397_reg_732 <= icmp_ln397_fu_330_p2;
                icmp_ln397_reg_732_pp0_iter1_reg <= icmp_ln397_reg_732;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_Result_71_i_reg_779 <= p_values_dout(95 downto 64);
                p_Result_72_i_reg_784 <= p_values_dout(127 downto 96);
                p_Result_73_i_reg_789 <= p_values_dout(159 downto 128);
                p_Result_74_i_reg_794 <= p_values_dout(191 downto 160);
                p_Result_75_i_reg_799 <= p_values_dout(223 downto 192);
                p_Result_76_i_reg_804 <= p_values_dout(255 downto 224);
                p_Result_77_i_reg_809 <= p_values_dout(287 downto 256);
                p_Result_78_i_reg_814 <= p_values_dout(319 downto 288);
                p_Result_79_i_reg_819 <= p_values_dout(351 downto 320);
                p_Result_80_i_reg_824 <= p_values_dout(383 downto 352);
                p_Result_81_i_reg_829 <= p_values_dout(415 downto 384);
                p_Result_82_i_reg_834 <= p_values_dout(447 downto 416);
                p_Result_83_i_reg_839 <= p_values_dout(479 downto 448);
                p_Result_84_i_reg_844 <= p_values_dout(511 downto 480);
                p_Result_i_reg_774 <= p_values_dout(63 downto 32);
                    p_accumulator_addr_2_reg_854(6 downto 4) <= zext_ln404_2_fu_528_p1(7 - 1 downto 0)(6 downto 4);
                    p_accumulator_addr_3_reg_859(6 downto 4) <= zext_ln404_3_fu_538_p1(7 - 1 downto 0)(6 downto 4);
                trunc_ln674_reg_769 <= trunc_ln674_fu_369_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                    p_accumulator_addr_10_reg_957(6 downto 4) <= zext_ln404_10_fu_624_p1(7 - 1 downto 0)(6 downto 4);
                    p_accumulator_addr_11_reg_963(6 downto 4) <= zext_ln404_11_fu_634_p1(7 - 1 downto 0)(6 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                    p_accumulator_addr_10_reg_957_pp0_iter1_reg(6 downto 4) <= p_accumulator_addr_10_reg_957(6 downto 4);
                    p_accumulator_addr_11_reg_963_pp0_iter1_reg(6 downto 4) <= p_accumulator_addr_11_reg_963(6 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                    p_accumulator_addr_12_reg_978(6 downto 4) <= zext_ln404_12_fu_648_p1(7 - 1 downto 0)(6 downto 4);
                    p_accumulator_addr_13_reg_984(6 downto 4) <= zext_ln404_13_fu_658_p1(7 - 1 downto 0)(6 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                    p_accumulator_addr_12_reg_978_pp0_iter1_reg(6 downto 4) <= p_accumulator_addr_12_reg_978(6 downto 4);
                    p_accumulator_addr_13_reg_984_pp0_iter1_reg(6 downto 4) <= p_accumulator_addr_13_reg_984(6 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                    p_accumulator_addr_14_reg_1009(6 downto 4) <= zext_ln404_14_fu_672_p1(7 - 1 downto 0)(6 downto 4);
                    p_accumulator_addr_15_reg_1015(6 downto 4) <= zext_ln404_15_fu_682_p1(7 - 1 downto 0)(6 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                    p_accumulator_addr_14_reg_1009_pp0_iter1_reg(6 downto 4) <= p_accumulator_addr_14_reg_1009(6 downto 4);
                    p_accumulator_addr_15_reg_1015_pp0_iter1_reg(6 downto 4) <= p_accumulator_addr_15_reg_1015(6 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln397_fu_330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    p_accumulator_addr_1_reg_764(6 downto 4) <= zext_ln404_1_fu_364_p1(7 - 1 downto 0)(6 downto 4);
                    p_accumulator_addr_reg_759(6 downto 4) <= zext_ln404_fu_353_p1(7 - 1 downto 0)(6 downto 4);
                    tmp_s_reg_741(6 downto 4) <= tmp_s_fu_345_p3(6 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                    p_accumulator_addr_4_reg_880(6 downto 4) <= zext_ln404_4_fu_552_p1(7 - 1 downto 0)(6 downto 4);
                    p_accumulator_addr_5_reg_885(6 downto 4) <= zext_ln404_5_fu_562_p1(7 - 1 downto 0)(6 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                    p_accumulator_addr_6_reg_906(6 downto 4) <= zext_ln404_6_fu_576_p1(7 - 1 downto 0)(6 downto 4);
                    p_accumulator_addr_7_reg_911(6 downto 4) <= zext_ln404_7_fu_586_p1(7 - 1 downto 0)(6 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                    p_accumulator_addr_8_reg_932(6 downto 4) <= zext_ln404_8_fu_600_p1(7 - 1 downto 0)(6 downto 4);
                    p_accumulator_addr_9_reg_937(6 downto 4) <= zext_ln404_9_fu_610_p1(7 - 1 downto 0)(6 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                    p_accumulator_addr_9_reg_937_pp0_iter1_reg(6 downto 4) <= p_accumulator_addr_9_reg_937(6 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                p_accumulator_load_11_reg_973 <= p_accumulator_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                p_accumulator_load_14_reg_1025 <= p_accumulator_q1;
                p_accumulator_load_15_reg_1030 <= p_accumulator_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_accumulator_load_1_reg_849 <= p_accumulator_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                p_accumulator_load_2_reg_870 <= p_accumulator_q1;
                p_accumulator_load_3_reg_875 <= p_accumulator_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                p_accumulator_load_4_reg_896 <= p_accumulator_q1;
                p_accumulator_load_5_reg_901 <= p_accumulator_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                p_accumulator_load_6_reg_922 <= p_accumulator_q1;
                p_accumulator_load_7_reg_927 <= p_accumulator_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                p_accumulator_load_8_reg_947 <= p_accumulator_q1;
                p_accumulator_load_9_reg_952 <= p_accumulator_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_310 <= p_accumulator_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_315 <= grp_fu_306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_size_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                trunc_ln_reg_727 <= p_size_dout(31 downto 4);
            end if;
        end if;
    end process;
    tmp_s_reg_741(3 downto 0) <= "0000";
    p_accumulator_addr_reg_759(3 downto 0) <= "0000";
    p_accumulator_addr_1_reg_764(3 downto 0) <= "0001";
    p_accumulator_addr_2_reg_854(3 downto 0) <= "0010";
    p_accumulator_addr_3_reg_859(3 downto 0) <= "0011";
    p_accumulator_addr_4_reg_880(3 downto 0) <= "0100";
    p_accumulator_addr_5_reg_885(3 downto 0) <= "0101";
    p_accumulator_addr_6_reg_906(3 downto 0) <= "0110";
    p_accumulator_addr_7_reg_911(3 downto 0) <= "0111";
    p_accumulator_addr_8_reg_932(3 downto 0) <= "1000";
    p_accumulator_addr_9_reg_937(3 downto 0) <= "1001";
    p_accumulator_addr_9_reg_937_pp0_iter1_reg(3 downto 0) <= "1001";
    p_accumulator_addr_10_reg_957(3 downto 0) <= "1010";
    p_accumulator_addr_10_reg_957_pp0_iter1_reg(3 downto 0) <= "1010";
    p_accumulator_addr_11_reg_963(3 downto 0) <= "1011";
    p_accumulator_addr_11_reg_963_pp0_iter1_reg(3 downto 0) <= "1011";
    p_accumulator_addr_12_reg_978(3 downto 0) <= "1100";
    p_accumulator_addr_12_reg_978_pp0_iter1_reg(3 downto 0) <= "1100";
    p_accumulator_addr_13_reg_984(3 downto 0) <= "1101";
    p_accumulator_addr_13_reg_984_pp0_iter1_reg(3 downto 0) <= "1101";
    p_accumulator_addr_14_reg_1009(3 downto 0) <= "1110";
    p_accumulator_addr_14_reg_1009_pp0_iter1_reg(3 downto 0) <= "1110";
    p_accumulator_addr_15_reg_1015(3 downto 0) <= "1111";
    p_accumulator_addr_15_reg_1015_pp0_iter1_reg(3 downto 0) <= "1111";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_size_empty_n, ap_enable_reg_pp0_iter0, icmp_ln397_fu_330_p2, ap_CS_fsm_pp0_stage15, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((p_size_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln397_fu_330_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln397_fu_330_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage15_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) and (ap_const_boolean_0 = ap_block_pp0_stage15_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage15_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln397_fu_335_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_phi_fu_299_p4) + unsigned(ap_const_lv28_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state34 <= ap_CS_fsm(17);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(p_values_empty_n, ap_enable_reg_pp0_iter0, icmp_ln397_reg_732)
    begin
                ap_block_pp0_stage1_11001 <= ((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (p_values_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(p_values_empty_n, ap_enable_reg_pp0_iter0, icmp_ln397_reg_732)
    begin
                ap_block_pp0_stage1_subdone <= ((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (p_values_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, p_size_empty_n)
    begin
                ap_block_state1 <= ((p_size_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage13_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage9_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage10_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage11_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage12_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage13_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage14_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage15_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage1_iter0_assign_proc : process(p_values_empty_n, icmp_ln397_reg_732)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((icmp_ln397_reg_732 = ap_const_lv1_0) and (p_values_empty_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln397_fu_330_p2)
    begin
        if ((icmp_ln397_fu_330_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_299_p4_assign_proc : process(icmp_ln397_reg_732, i_reg_295, ap_CS_fsm_pp0_stage0, add_ln397_reg_736, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_299_p4 <= add_ln397_reg_736;
        else 
            ap_phi_mux_i_phi_fu_299_p4 <= i_reg_295;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln101_100_fu_703_p1 <= p_Result_79_i_reg_819;
    bitcast_ln101_101_fu_707_p1 <= p_Result_80_i_reg_824;
    bitcast_ln101_102_fu_711_p1 <= p_Result_81_i_reg_829;
    bitcast_ln101_103_fu_715_p1 <= p_Result_82_i_reg_834;
    bitcast_ln101_104_fu_719_p1 <= p_Result_83_i_reg_839;
    bitcast_ln101_105_fu_723_p1 <= p_Result_84_i_reg_844;
    bitcast_ln101_91_fu_567_p1 <= p_Result_i_reg_774;
    bitcast_ln101_92_fu_591_p1 <= p_Result_71_i_reg_779;
    bitcast_ln101_93_fu_615_p1 <= p_Result_72_i_reg_784;
    bitcast_ln101_94_fu_639_p1 <= p_Result_73_i_reg_789;
    bitcast_ln101_95_fu_663_p1 <= p_Result_74_i_reg_794;
    bitcast_ln101_96_fu_687_p1 <= p_Result_75_i_reg_799;
    bitcast_ln101_97_fu_691_p1 <= p_Result_76_i_reg_804;
    bitcast_ln101_98_fu_695_p1 <= p_Result_77_i_reg_809;
    bitcast_ln101_99_fu_699_p1 <= p_Result_78_i_reg_814;
    bitcast_ln101_fu_543_p1 <= trunc_ln674_reg_769;
    empty_fu_341_p1 <= ap_phi_mux_i_phi_fu_299_p4(3 - 1 downto 0);

    grp_fu_306_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_306_ce <= ap_const_logic_1;
        else 
            grp_fu_306_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_306_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, reg_310, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0, p_accumulator_load_1_reg_849, ap_CS_fsm_pp0_stage2, p_accumulator_load_2_reg_870, p_accumulator_load_3_reg_875, ap_CS_fsm_pp0_stage3, p_accumulator_load_4_reg_896, p_accumulator_load_5_reg_901, ap_CS_fsm_pp0_stage4, p_accumulator_load_6_reg_922, p_accumulator_load_7_reg_927, ap_CS_fsm_pp0_stage5, p_accumulator_load_8_reg_947, p_accumulator_load_9_reg_952, p_accumulator_load_11_reg_973, ap_CS_fsm_pp0_stage7, p_accumulator_load_12_reg_999, p_accumulator_load_13_reg_1004, p_accumulator_load_14_reg_1025, p_accumulator_load_15_reg_1030, ap_CS_fsm_pp0_stage15, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, ap_block_pp0_stage13, ap_block_pp0_stage14, ap_block_pp0_stage15)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_306_p0 <= p_accumulator_load_15_reg_1030;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_306_p0 <= p_accumulator_load_14_reg_1025;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_306_p0 <= p_accumulator_load_13_reg_1004;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            grp_fu_306_p0 <= p_accumulator_load_12_reg_999;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            grp_fu_306_p0 <= p_accumulator_load_11_reg_973;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            grp_fu_306_p0 <= p_accumulator_load_9_reg_952;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_306_p0 <= p_accumulator_load_8_reg_947;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_306_p0 <= p_accumulator_load_7_reg_927;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_306_p0 <= p_accumulator_load_6_reg_922;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_306_p0 <= p_accumulator_load_5_reg_901;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_306_p0 <= p_accumulator_load_4_reg_896;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_306_p0 <= p_accumulator_load_3_reg_875;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_306_p0 <= p_accumulator_load_2_reg_870;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_306_p0 <= p_accumulator_load_1_reg_849;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_306_p0 <= reg_310;
        else 
            grp_fu_306_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_306_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0, bitcast_ln101_fu_543_p1, ap_CS_fsm_pp0_stage2, bitcast_ln101_91_fu_567_p1, ap_CS_fsm_pp0_stage3, bitcast_ln101_92_fu_591_p1, ap_CS_fsm_pp0_stage4, bitcast_ln101_93_fu_615_p1, ap_CS_fsm_pp0_stage5, bitcast_ln101_94_fu_639_p1, bitcast_ln101_95_fu_663_p1, ap_CS_fsm_pp0_stage7, bitcast_ln101_96_fu_687_p1, bitcast_ln101_97_fu_691_p1, bitcast_ln101_98_fu_695_p1, bitcast_ln101_99_fu_699_p1, bitcast_ln101_100_fu_703_p1, bitcast_ln101_101_fu_707_p1, bitcast_ln101_102_fu_711_p1, bitcast_ln101_103_fu_715_p1, ap_CS_fsm_pp0_stage15, bitcast_ln101_104_fu_719_p1, ap_enable_reg_pp0_iter1, bitcast_ln101_105_fu_723_p1, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, ap_block_pp0_stage13, ap_block_pp0_stage14, ap_block_pp0_stage15)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_306_p1 <= bitcast_ln101_105_fu_723_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_306_p1 <= bitcast_ln101_104_fu_719_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_306_p1 <= bitcast_ln101_103_fu_715_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            grp_fu_306_p1 <= bitcast_ln101_102_fu_711_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            grp_fu_306_p1 <= bitcast_ln101_101_fu_707_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            grp_fu_306_p1 <= bitcast_ln101_100_fu_703_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            grp_fu_306_p1 <= bitcast_ln101_99_fu_699_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_306_p1 <= bitcast_ln101_98_fu_695_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_306_p1 <= bitcast_ln101_97_fu_691_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_306_p1 <= bitcast_ln101_96_fu_687_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_306_p1 <= bitcast_ln101_95_fu_663_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_306_p1 <= bitcast_ln101_94_fu_639_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_306_p1 <= bitcast_ln101_93_fu_615_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_306_p1 <= bitcast_ln101_92_fu_591_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_306_p1 <= bitcast_ln101_91_fu_567_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_306_p1 <= bitcast_ln101_fu_543_p1;
        else 
            grp_fu_306_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln397_fu_330_p2 <= "1" when (ap_phi_mux_i_phi_fu_299_p4 = trunc_ln_reg_727) else "0";
    or_ln404_10_fu_629_p2 <= (tmp_s_reg_741 or ap_const_lv7_B);
    or_ln404_11_fu_643_p2 <= (tmp_s_reg_741 or ap_const_lv7_C);
    or_ln404_12_fu_653_p2 <= (tmp_s_reg_741 or ap_const_lv7_D);
    or_ln404_13_fu_667_p2 <= (tmp_s_reg_741 or ap_const_lv7_E);
    or_ln404_14_fu_677_p2 <= (tmp_s_reg_741 or ap_const_lv7_F);
    or_ln404_1_fu_523_p2 <= (tmp_s_reg_741 or ap_const_lv7_2);
    or_ln404_2_fu_533_p2 <= (tmp_s_reg_741 or ap_const_lv7_3);
    or_ln404_3_fu_547_p2 <= (tmp_s_reg_741 or ap_const_lv7_4);
    or_ln404_4_fu_557_p2 <= (tmp_s_reg_741 or ap_const_lv7_5);
    or_ln404_5_fu_571_p2 <= (tmp_s_reg_741 or ap_const_lv7_6);
    or_ln404_6_fu_581_p2 <= (tmp_s_reg_741 or ap_const_lv7_7);
    or_ln404_7_fu_595_p2 <= (tmp_s_reg_741 or ap_const_lv7_8);
    or_ln404_8_fu_605_p2 <= (tmp_s_reg_741 or ap_const_lv7_9);
    or_ln404_9_fu_619_p2 <= (tmp_s_reg_741 or ap_const_lv7_A);
    or_ln404_fu_358_p2 <= (tmp_s_fu_345_p3 or ap_const_lv7_1);

    p_accumulator_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0, p_accumulator_addr_1_reg_764, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, p_accumulator_addr_9_reg_937_pp0_iter1_reg, ap_CS_fsm_pp0_stage5, p_accumulator_addr_10_reg_957_pp0_iter1_reg, p_accumulator_addr_11_reg_963_pp0_iter1_reg, p_accumulator_addr_12_reg_978_pp0_iter1_reg, p_accumulator_addr_13_reg_984_pp0_iter1_reg, ap_CS_fsm_pp0_stage7, p_accumulator_addr_14_reg_1009_pp0_iter1_reg, p_accumulator_addr_15_reg_1015_pp0_iter1_reg, ap_CS_fsm_pp0_stage15, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln404_1_fu_364_p1, zext_ln404_3_fu_538_p1, ap_block_pp0_stage2, zext_ln404_5_fu_562_p1, ap_block_pp0_stage3, zext_ln404_7_fu_586_p1, ap_block_pp0_stage4, zext_ln404_9_fu_610_p1, ap_block_pp0_stage5, zext_ln404_11_fu_634_p1, ap_block_pp0_stage6, zext_ln404_13_fu_658_p1, ap_block_pp0_stage7, zext_ln404_15_fu_682_p1, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, ap_block_pp0_stage13, ap_block_pp0_stage14, ap_block_pp0_stage15)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            p_accumulator_address0 <= p_accumulator_addr_15_reg_1015_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            p_accumulator_address0 <= p_accumulator_addr_14_reg_1009_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            p_accumulator_address0 <= p_accumulator_addr_13_reg_984_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            p_accumulator_address0 <= p_accumulator_addr_12_reg_978_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            p_accumulator_address0 <= p_accumulator_addr_11_reg_963_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            p_accumulator_address0 <= p_accumulator_addr_10_reg_957_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            p_accumulator_address0 <= p_accumulator_addr_9_reg_937_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            p_accumulator_address0 <= p_accumulator_addr_1_reg_764;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            p_accumulator_address0 <= zext_ln404_15_fu_682_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            p_accumulator_address0 <= zext_ln404_13_fu_658_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            p_accumulator_address0 <= zext_ln404_11_fu_634_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            p_accumulator_address0 <= zext_ln404_9_fu_610_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            p_accumulator_address0 <= zext_ln404_7_fu_586_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            p_accumulator_address0 <= zext_ln404_5_fu_562_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            p_accumulator_address0 <= zext_ln404_3_fu_538_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_accumulator_address0 <= zext_ln404_1_fu_364_p1(7 - 1 downto 0);
        else 
            p_accumulator_address0 <= "XXXXXXX";
        end if; 
    end process;


    p_accumulator_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0, p_accumulator_addr_reg_759, p_accumulator_addr_2_reg_854, p_accumulator_addr_3_reg_859, ap_CS_fsm_pp0_stage2, p_accumulator_addr_4_reg_880, p_accumulator_addr_5_reg_885, ap_CS_fsm_pp0_stage3, p_accumulator_addr_6_reg_906, p_accumulator_addr_7_reg_911, ap_CS_fsm_pp0_stage4, p_accumulator_addr_8_reg_932, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage0, zext_ln404_fu_353_p1, zext_ln404_2_fu_528_p1, zext_ln404_4_fu_552_p1, ap_block_pp0_stage2, zext_ln404_6_fu_576_p1, ap_block_pp0_stage3, zext_ln404_8_fu_600_p1, ap_block_pp0_stage4, zext_ln404_10_fu_624_p1, ap_block_pp0_stage5, zext_ln404_12_fu_648_p1, ap_block_pp0_stage6, zext_ln404_14_fu_672_p1, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, ap_block_pp0_stage13, ap_block_pp0_stage14, ap_block_pp0_stage15)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
                p_accumulator_address1 <= p_accumulator_addr_8_reg_932;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
                p_accumulator_address1 <= p_accumulator_addr_7_reg_911;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
                p_accumulator_address1 <= p_accumulator_addr_6_reg_906;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
                p_accumulator_address1 <= p_accumulator_addr_5_reg_885;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                p_accumulator_address1 <= p_accumulator_addr_4_reg_880;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                p_accumulator_address1 <= p_accumulator_addr_3_reg_859;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                p_accumulator_address1 <= p_accumulator_addr_2_reg_854;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                p_accumulator_address1 <= p_accumulator_addr_reg_759;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                p_accumulator_address1 <= zext_ln404_14_fu_672_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                p_accumulator_address1 <= zext_ln404_12_fu_648_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                p_accumulator_address1 <= zext_ln404_10_fu_624_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                p_accumulator_address1 <= zext_ln404_8_fu_600_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                p_accumulator_address1 <= zext_ln404_6_fu_576_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                p_accumulator_address1 <= zext_ln404_4_fu_552_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                p_accumulator_address1 <= zext_ln404_2_fu_528_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                p_accumulator_address1 <= zext_ln404_fu_353_p1(7 - 1 downto 0);
            else 
                p_accumulator_address1 <= "XXXXXXX";
            end if;
        else 
            p_accumulator_address1 <= "XXXXXXX";
        end if; 
    end process;


    p_accumulator_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            p_accumulator_ce0 <= ap_const_logic_1;
        else 
            p_accumulator_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_accumulator_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            p_accumulator_ce1 <= ap_const_logic_1;
        else 
            p_accumulator_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_accumulator_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, add3_1_i_reg_994, ap_CS_fsm_pp0_stage15, add3_9_i_reg_1070, add3_i_140_reg_1080, ap_enable_reg_pp0_iter1, add3_10_i_reg_1090, add3_11_i_reg_1095, add3_12_i_reg_1100, add3_13_i_reg_1105, add3_14_i_reg_1110, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, ap_block_pp0_stage13, ap_block_pp0_stage14, ap_block_pp0_stage15)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            p_accumulator_d0 <= add3_14_i_reg_1110;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            p_accumulator_d0 <= add3_13_i_reg_1105;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            p_accumulator_d0 <= add3_12_i_reg_1100;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            p_accumulator_d0 <= add3_11_i_reg_1095;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            p_accumulator_d0 <= add3_10_i_reg_1090;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            p_accumulator_d0 <= add3_i_140_reg_1080;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            p_accumulator_d0 <= add3_9_i_reg_1070;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            p_accumulator_d0 <= add3_1_i_reg_994;
        else 
            p_accumulator_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    p_accumulator_d1 <= reg_315;

    p_accumulator_we0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln397_reg_732, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, icmp_ln397_reg_732_pp0_iter1_reg, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln397_reg_732_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln397_reg_732_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln397_reg_732_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln397_reg_732_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln397_reg_732_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln397_reg_732_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln397_reg_732_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)))) then 
            p_accumulator_we0 <= ap_const_logic_1;
        else 
            p_accumulator_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_accumulator_we1_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln397_reg_732, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
        if ((((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then 
            p_accumulator_we1 <= ap_const_logic_1;
        else 
            p_accumulator_we1 <= ap_const_logic_0;
        end if; 
    end process;


    p_size_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_size_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_size_blk_n <= p_size_empty_n;
        else 
            p_size_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_size_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_size_empty_n)
    begin
        if ((not(((p_size_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_size_read <= ap_const_logic_1;
        else 
            p_size_read <= ap_const_logic_0;
        end if; 
    end process;


    p_values_blk_n_assign_proc : process(p_values_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln397_reg_732)
    begin
        if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            p_values_blk_n <= p_values_empty_n;
        else 
            p_values_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_values_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln397_reg_732, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln397_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            p_values_read <= ap_const_logic_1;
        else 
            p_values_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_s_fu_345_p3 <= (empty_fu_341_p1 & ap_const_lv4_0);
    trunc_ln674_fu_369_p1 <= p_values_dout(32 - 1 downto 0);
    zext_ln404_10_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln404_9_fu_619_p2),64));
    zext_ln404_11_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln404_10_fu_629_p2),64));
    zext_ln404_12_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln404_11_fu_643_p2),64));
    zext_ln404_13_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln404_12_fu_653_p2),64));
    zext_ln404_14_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln404_13_fu_667_p2),64));
    zext_ln404_15_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln404_14_fu_677_p2),64));
    zext_ln404_1_fu_364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln404_fu_358_p2),64));
    zext_ln404_2_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln404_1_fu_523_p2),64));
    zext_ln404_3_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln404_2_fu_533_p2),64));
    zext_ln404_4_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln404_3_fu_547_p2),64));
    zext_ln404_5_fu_562_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln404_4_fu_557_p2),64));
    zext_ln404_6_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln404_5_fu_571_p2),64));
    zext_ln404_7_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln404_6_fu_581_p2),64));
    zext_ln404_8_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln404_7_fu_595_p2),64));
    zext_ln404_9_fu_610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln404_8_fu_605_p2),64));
    zext_ln404_fu_353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_345_p3),64));
end behav;
