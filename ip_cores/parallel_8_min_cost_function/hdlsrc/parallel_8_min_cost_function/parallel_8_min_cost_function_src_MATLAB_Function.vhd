-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\parallel_8_min_cost_function\hdlsrc\parallel_8_min_cost_function\parallel_8_min_cost_function_src_MATLAB_Function.vhd
-- Created: 2022-10-18 13:18:55
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: parallel_8_min_cost_function_src_MATLAB_Function
-- Source Path: parallel_8_min_cost_function/Min_cost_function_and_vopt2/MATLAB Function
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.parallel_8_min_cost_function_src_Min_cost_function_and_vopt2_pkg.ALL;

ENTITY parallel_8_min_cost_function_src_MATLAB_Function IS
  PORT( J_1                               :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        Index_1                           :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        voltages_1                        :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
        J_2                               :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        Index_2                           :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        voltages_2                        :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
        J_3                               :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        Index_3                           :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        voltages_3                        :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
        J_4                               :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        Index_4                           :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        voltages_4                        :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
        J_5                               :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        Index_5                           :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        voltages_5                        :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
        J_6                               :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        Index_6                           :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        voltages_6                        :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
        J_7                               :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        Index_7                           :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        voltages_7                        :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
        J_8                               :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        Index_8                           :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        voltages_8                        :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
        min                               :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        J_default                         :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        voltages_default                  :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
        J                                 :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        Index                             :   OUT   std_logic_vector(31 DOWNTO 0);  -- int32
        voltages                          :   OUT   vector_of_std_logic_vector24(0 TO 3)  -- sfix24_En11 [4]
        );
END parallel_8_min_cost_function_src_MATLAB_Function;


ARCHITECTURE rtl OF parallel_8_min_cost_function_src_MATLAB_Function IS

  -- Signals
  SIGNAL J_1_signed                       : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Index_1_signed                   : signed(31 DOWNTO 0);  -- int32
  SIGNAL voltages_1_signed                : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL J_2_signed                       : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Index_2_signed                   : signed(31 DOWNTO 0);  -- int32
  SIGNAL voltages_2_signed                : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL J_3_signed                       : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Index_3_signed                   : signed(31 DOWNTO 0);  -- int32
  SIGNAL voltages_3_signed                : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL J_4_signed                       : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Index_4_signed                   : signed(31 DOWNTO 0);  -- int32
  SIGNAL voltages_4_signed                : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL J_5_signed                       : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Index_5_signed                   : signed(31 DOWNTO 0);  -- int32
  SIGNAL voltages_5_signed                : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL J_6_signed                       : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Index_6_signed                   : signed(31 DOWNTO 0);  -- int32
  SIGNAL voltages_6_signed                : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL J_7_signed                       : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Index_7_signed                   : signed(31 DOWNTO 0);  -- int32
  SIGNAL voltages_7_signed                : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL J_8_signed                       : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Index_8_signed                   : signed(31 DOWNTO 0);  -- int32
  SIGNAL voltages_8_signed                : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL min_signed                       : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL J_default_signed                 : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL voltages_default_signed          : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL J_tmp                            : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Index_tmp                        : signed(31 DOWNTO 0);  -- int32
  SIGNAL voltages_tmp                     : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]

BEGIN
  J_1_signed <= signed(J_1);

  Index_1_signed <= signed(Index_1);

  outputgen9: FOR k IN 0 TO 3 GENERATE
    voltages_1_signed(k) <= signed(voltages_1(k));
  END GENERATE;

  J_2_signed <= signed(J_2);

  Index_2_signed <= signed(Index_2);

  outputgen8: FOR k IN 0 TO 3 GENERATE
    voltages_2_signed(k) <= signed(voltages_2(k));
  END GENERATE;

  J_3_signed <= signed(J_3);

  Index_3_signed <= signed(Index_3);

  outputgen7: FOR k IN 0 TO 3 GENERATE
    voltages_3_signed(k) <= signed(voltages_3(k));
  END GENERATE;

  J_4_signed <= signed(J_4);

  Index_4_signed <= signed(Index_4);

  outputgen6: FOR k IN 0 TO 3 GENERATE
    voltages_4_signed(k) <= signed(voltages_4(k));
  END GENERATE;

  J_5_signed <= signed(J_5);

  Index_5_signed <= signed(Index_5);

  outputgen5: FOR k IN 0 TO 3 GENERATE
    voltages_5_signed(k) <= signed(voltages_5(k));
  END GENERATE;

  J_6_signed <= signed(J_6);

  Index_6_signed <= signed(Index_6);

  outputgen4: FOR k IN 0 TO 3 GENERATE
    voltages_6_signed(k) <= signed(voltages_6(k));
  END GENERATE;

  J_7_signed <= signed(J_7);

  Index_7_signed <= signed(Index_7);

  outputgen3: FOR k IN 0 TO 3 GENERATE
    voltages_7_signed(k) <= signed(voltages_7(k));
  END GENERATE;

  J_8_signed <= signed(J_8);

  Index_8_signed <= signed(Index_8);

  outputgen2: FOR k IN 0 TO 3 GENERATE
    voltages_8_signed(k) <= signed(voltages_8(k));
  END GENERATE;

  min_signed <= signed(min);

  J_default_signed <= signed(J_default);

  outputgen1: FOR k IN 0 TO 3 GENERATE
    voltages_default_signed(k) <= signed(voltages_default(k));
  END GENERATE;

  MATLAB_Function_output : PROCESS (Index_1_signed, Index_2_signed, Index_3_signed, Index_4_signed, Index_5_signed,
       Index_6_signed, Index_7_signed, Index_8_signed, J_1_signed, J_2_signed,
       J_3_signed, J_4_signed, J_5_signed, J_6_signed, J_7_signed, J_8_signed,
       J_default_signed, min_signed, voltages_1_signed, voltages_2_signed,
       voltages_3_signed, voltages_4_signed, voltages_5_signed,
       voltages_6_signed, voltages_7_signed, voltages_8_signed,
       voltages_default_signed)
  BEGIN
    IF J_1_signed = min_signed THEN 
      Index_tmp <= Index_1_signed;
      voltages_tmp <= voltages_1_signed;
      J_tmp <= J_1_signed;
    ELSIF J_2_signed = min_signed THEN 
      Index_tmp <= Index_2_signed;
      voltages_tmp <= voltages_2_signed;
      J_tmp <= J_2_signed;
    ELSIF J_3_signed = min_signed THEN 
      Index_tmp <= Index_3_signed;
      voltages_tmp <= voltages_3_signed;
      J_tmp <= J_3_signed;
    ELSIF J_4_signed = min_signed THEN 
      Index_tmp <= Index_4_signed;
      voltages_tmp <= voltages_4_signed;
      J_tmp <= J_4_signed;
    ELSIF J_5_signed = min_signed THEN 
      Index_tmp <= Index_5_signed;
      voltages_tmp <= voltages_5_signed;
      J_tmp <= J_5_signed;
    ELSIF J_6_signed = min_signed THEN 
      Index_tmp <= Index_6_signed;
      voltages_tmp <= voltages_6_signed;
      J_tmp <= J_6_signed;
    ELSIF J_7_signed = min_signed THEN 
      Index_tmp <= Index_7_signed;
      voltages_tmp <= voltages_7_signed;
      J_tmp <= J_7_signed;
    ELSIF J_8_signed = min_signed THEN 
      Index_tmp <= Index_8_signed;
      voltages_tmp <= voltages_8_signed;
      J_tmp <= J_8_signed;
    ELSE 
      Index_tmp <= to_signed(16#00000000#, 32);
      J_tmp <= J_default_signed;
      voltages_tmp <= voltages_default_signed;
    END IF;
  END PROCESS MATLAB_Function_output;


  J <= std_logic_vector(J_tmp);

  Index <= std_logic_vector(Index_tmp);

  outputgen: FOR k IN 0 TO 3 GENERATE
    voltages(k) <= std_logic_vector(voltages_tmp(k));
  END GENERATE;

END rtl;

