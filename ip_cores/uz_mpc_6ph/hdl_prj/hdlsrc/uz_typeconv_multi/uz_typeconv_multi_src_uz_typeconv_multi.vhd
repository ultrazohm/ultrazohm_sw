-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\uz_typeconv_multi\uz_typeconv_multi_src_uz_typeconv_multi.vhd
-- Created: 2023-01-02 15:35:15
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-08
-- Target subsystem base rate: 1e-08
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- sfix18En15                    ce_out        1e-08
-- done                          ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_typeconv_multi_src_uz_typeconv_multi
-- Source Path: uz_typeconv_multi/uz_typeconv_multi
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY uz_typeconv_multi_src_uz_typeconv_multi IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        omega_m_sfix24En11                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        omega_B_inv_AXI_ufix18En18        :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        trigger                           :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        sfix18En15                        :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
        done                              :   OUT   std_logic
        );
END uz_typeconv_multi_src_uz_typeconv_multi;


ARCHITECTURE rtl OF uz_typeconv_multi_src_uz_typeconv_multi IS

  -- Component Declarations
  COMPONENT uz_typeconv_multi_src_Detect_Rise_Positive
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          U                               :   IN    std_logic;
          Y                               :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : uz_typeconv_multi_src_Detect_Rise_Positive
    USE ENTITY work.uz_typeconv_multi_src_Detect_Rise_Positive(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL Delay2_out1                      : std_logic;
  SIGNAL Detect_Rise_Positive_out1        : std_logic;
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL omega_m_sfix24En11_signed        : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay1_out1                      : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_out1                      : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay_out1                       : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_1               : std_logic;
  SIGNAL omega_B_inv_AXI_ufix18En18_unsigned : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL Delay5_out1                      : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL Switch1_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL Delay6_out1                      : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL Product_cast                     : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Product_mul_temp                 : signed(42 DOWNTO 0);  -- sfix43_En29
  SIGNAL Product_cast_1                   : signed(41 DOWNTO 0);  -- sfix42_En29
  SIGNAL Product_out1                     : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL Delay3_out1                      : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL Delay4_out1                      : std_logic;

BEGIN
  u_Detect_Rise_Positive : uz_typeconv_multi_src_Detect_Rise_Positive
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              U => Delay2_out1,
              Y => Detect_Rise_Positive_out1
              );

  enb <= clk_enable;

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay2_out1 <= trigger;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  
  switch_compare_1 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  omega_m_sfix24En11_signed <= signed(omega_m_sfix24En11);

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay1_out1 <= omega_m_sfix24En11_signed;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay_out1 <= Switch_out1;
      END IF;
    END IF;
  END PROCESS Delay_process;


  
  Switch_out1 <= Delay_out1 WHEN switch_compare_1 = '0' ELSE
      Delay1_out1;

  
  switch_compare_1_1 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  omega_B_inv_AXI_ufix18En18_unsigned <= unsigned(omega_B_inv_AXI_ufix18En18);

  Delay5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay5_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay5_out1 <= omega_B_inv_AXI_ufix18En18_unsigned;
      END IF;
    END IF;
  END PROCESS Delay5_process;


  Delay6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay6_out1 <= to_unsigned(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay6_out1 <= Switch1_out1;
      END IF;
    END IF;
  END PROCESS Delay6_process;


  
  Switch1_out1 <= Delay6_out1 WHEN switch_compare_1_1 = '0' ELSE
      Delay5_out1;

  Product_cast <= signed(resize(Switch1_out1, 19));
  Product_mul_temp <= Switch_out1 * Product_cast;
  Product_cast_1 <= Product_mul_temp(41 DOWNTO 0);
  Product_out1 <= Product_cast_1(31 DOWNTO 14);

  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_out1 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay3_out1 <= Product_out1;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  sfix18En15 <= std_logic_vector(Delay3_out1);

  Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay4_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay4_out1 <= Detect_Rise_Positive_out1;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  ce_out <= clk_enable;

  done <= Delay4_out1;

END rtl;

