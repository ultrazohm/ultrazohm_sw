-- -------------------------------------------------------------
-- 
-- File Name: /home/ts/Dokumente/ultrazohm_testbench/ultrazohm_test/ultrazohm_sw/ip_cores/simscapeHDL_example_v1_0/hdlsrc/gmStateSpaceHDL_HalfWaveRectifier_HDL/uz_simscapeExample_src_HDL_Subsystem_tc.vhd
-- Created: 2021-04-19 11:33:22
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_simscapeExample_src_HDL_Subsystem_tc
-- Source Path: HDL Subsystem_tc
-- Hierarchy Level: 1
-- 
-- Master clock enable input: clk_enable
-- 
-- enb         : identical to clk_enable
-- enb_1_60_0  : 60x slower than clk with last phase
-- enb_1_60_1  : 60x slower than clk with phase 1
-- enb_1_180_0 : 180x slower than clk with last phase
-- enb_1_180_1 : 180x slower than clk with phase 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY uz_simscapeExample_src_HDL_Subsystem_tc IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        enb                               :   OUT   std_logic;
        enb_1_60_0                        :   OUT   std_logic;
        enb_1_60_1                        :   OUT   std_logic;
        enb_1_180_0                       :   OUT   std_logic;
        enb_1_180_1                       :   OUT   std_logic
        );
END uz_simscapeExample_src_HDL_Subsystem_tc;


ARCHITECTURE rtl OF uz_simscapeExample_src_HDL_Subsystem_tc IS

  -- Signals
  SIGNAL count60                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL phase_0                          : std_logic;
  SIGNAL phase_0_tmp                      : std_logic;
  SIGNAL phase_1                          : std_logic;
  SIGNAL phase_1_tmp                      : std_logic;
  SIGNAL count180                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL phase_all                        : std_logic;
  SIGNAL phase_0_1                        : std_logic;
  SIGNAL phase_0_tmp_1                    : std_logic;
  SIGNAL phase_1_1                        : std_logic;
  SIGNAL phase_1_tmp_1                    : std_logic;

BEGIN
  Counter60 : PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF reset = '1' THEN
        count60 <= to_unsigned(1, 6);
      ELSIF clk_enable = '1' THEN
        IF count60 >= to_unsigned(59, 6) THEN
          count60 <= to_unsigned(0, 6);
        ELSE
          count60 <= count60 + to_unsigned(1, 6);
        END IF;
      END IF;
    END IF; 
  END PROCESS Counter60;

  temp_process1 : PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF reset = '1' THEN
        phase_0 <= '0';
      ELSIF clk_enable = '1' THEN
        phase_0 <= phase_0_tmp;
      END IF;
    END IF; 
  END PROCESS temp_process1;

  phase_0_tmp <= '1' WHEN count60 = to_unsigned(59, 6) AND clk_enable = '1' ELSE '0';

  temp_process2 : PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF reset = '1' THEN
        phase_1 <= '1';
      ELSIF clk_enable = '1' THEN
        phase_1 <= phase_1_tmp;
      END IF;
    END IF; 
  END PROCESS temp_process2;

  phase_1_tmp <= '1' WHEN count60 = to_unsigned(0, 6) AND clk_enable = '1' ELSE '0';

  Counter180 : PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF reset = '1' THEN
        count180 <= to_unsigned(1, 8);
      ELSIF clk_enable = '1' THEN
        IF count180 >= to_unsigned(179, 8) THEN
          count180 <= to_unsigned(0, 8);
        ELSE
          count180 <= count180 + to_unsigned(1, 8);
        END IF;
      END IF;
    END IF; 
  END PROCESS Counter180;

  phase_all <= '1' WHEN clk_enable = '1' ELSE '0';

  temp_process3 : PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF reset = '1' THEN
        phase_0_1 <= '0';
      ELSIF clk_enable = '1' THEN
        phase_0_1 <= phase_0_tmp_1;
      END IF;
    END IF; 
  END PROCESS temp_process3;

  phase_0_tmp_1 <= '1' WHEN count180 = to_unsigned(179, 8) AND clk_enable = '1' ELSE '0';

  temp_process4 : PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF reset = '1' THEN
        phase_1_1 <= '1';
      ELSIF clk_enable = '1' THEN
        phase_1_1 <= phase_1_tmp_1;
      END IF;
    END IF; 
  END PROCESS temp_process4;

  phase_1_tmp_1 <= '1' WHEN count180 = to_unsigned(0, 8) AND clk_enable = '1' ELSE '0';

  enb <=  phase_all AND clk_enable;

  enb_1_60_0 <=  phase_0 AND clk_enable;

  enb_1_60_1 <=  phase_1 AND clk_enable;

  enb_1_180_0 <=  phase_0_1 AND clk_enable;

  enb_1_180_1 <=  phase_1_1 AND clk_enable;


END rtl;

