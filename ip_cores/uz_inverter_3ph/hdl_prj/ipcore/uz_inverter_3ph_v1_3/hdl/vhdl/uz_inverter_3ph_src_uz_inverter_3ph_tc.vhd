-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\valen\Documents\repos\UZ\ultrazohm_sw\ip_cores\uz_inverter_3ph\hdl_prj\hdlsrc\uz_inverter_3phgm\uz_inverter_3ph_src_uz_inverter_3ph_tc.vhd
-- Created: 2022-05-09 15:52:47
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_inverter_3ph_src_uz_inverter_3ph_tc
-- Source Path: uz_inverter_3ph_tc
-- Hierarchy Level: 1
-- 
-- Master clock enable input: clk_enable
-- 
-- enb         : identical to clk_enable
-- enb_1_25_0  : 25x slower than clk with last phase
-- enb_1_25_1  : 25x slower than clk with phase 1
-- enb_1_125_1 : 125x slower than clk with phase 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY uz_inverter_3ph_src_uz_inverter_3ph_tc IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        enb                               :   OUT   std_logic;
        enb_1_25_0                        :   OUT   std_logic;
        enb_1_25_1                        :   OUT   std_logic;
        enb_1_125_1                       :   OUT   std_logic
        );
END uz_inverter_3ph_src_uz_inverter_3ph_tc;


ARCHITECTURE rtl OF uz_inverter_3ph_src_uz_inverter_3ph_tc IS

  -- Signals
  SIGNAL count25                          : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL phase_0                          : std_logic;
  SIGNAL phase_0_tmp                      : std_logic;
  SIGNAL phase_1                          : std_logic;
  SIGNAL phase_1_tmp                      : std_logic;
  SIGNAL count125                         : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL phase_all                        : std_logic;
  SIGNAL phase_1_1                        : std_logic;
  SIGNAL phase_1_tmp_1                    : std_logic;

BEGIN
  Counter25 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      count25 <= to_unsigned(1, 5);
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        IF count25 >= to_unsigned(24, 5) THEN
          count25 <= to_unsigned(0, 5);
        ELSE
          count25 <= count25 + to_unsigned(1, 5);
        END IF;
      END IF;
    END IF; 
  END PROCESS Counter25;

  temp_process1 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      phase_0 <= '0';
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        phase_0 <= phase_0_tmp;
      END IF;
    END IF; 
  END PROCESS temp_process1;

  phase_0_tmp <= '1' WHEN count25 = to_unsigned(24, 5) AND clk_enable = '1' ELSE '0';

  temp_process2 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      phase_1 <= '1';
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        phase_1 <= phase_1_tmp;
      END IF;
    END IF; 
  END PROCESS temp_process2;

  phase_1_tmp <= '1' WHEN count25 = to_unsigned(0, 5) AND clk_enable = '1' ELSE '0';

  Counter125 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      count125 <= to_unsigned(1, 7);
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        IF count125 >= to_unsigned(124, 7) THEN
          count125 <= to_unsigned(0, 7);
        ELSE
          count125 <= count125 + to_unsigned(1, 7);
        END IF;
      END IF;
    END IF; 
  END PROCESS Counter125;

  phase_all <= '1' WHEN clk_enable = '1' ELSE '0';

  temp_process3 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      phase_1_1 <= '1';
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        phase_1_1 <= phase_1_tmp_1;
      END IF;
    END IF; 
  END PROCESS temp_process3;

  phase_1_tmp_1 <= '1' WHEN count125 = to_unsigned(0, 7) AND clk_enable = '1' ELSE '0';

  enb <=  phase_all AND clk_enable;

  enb_1_25_0 <=  phase_0 AND clk_enable;

  enb_1_25_1 <=  phase_1 AND clk_enable;

  enb_1_125_1 <=  phase_1_1 AND clk_enable;


END rtl;

