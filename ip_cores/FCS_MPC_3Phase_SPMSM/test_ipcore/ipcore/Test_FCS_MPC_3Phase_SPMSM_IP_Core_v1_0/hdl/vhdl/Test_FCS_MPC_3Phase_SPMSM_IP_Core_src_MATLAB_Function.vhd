-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\FCS_MPC_3Phase_SPMSM\test_ipcore\hdlsrc\FCS_MPC_3Phase_SPMSM_TEST1\Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_MATLAB_Function.vhd
-- Created: 2022-07-08 13:09:05
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_MATLAB_Function
-- Source Path: FCS_MPC_3Phase_SPMSM_TEST1/Microcontroller Software/Subsystem1/MATLAB Function
-- Hierarchy Level: 1
-- 
-- Determination of the factors for the voltage per switching state in alpha beta coordinates
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_Subsystem1_pkg.ALL;

ENTITY Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_MATLAB_Function IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        u_dc_link                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        i_ph_ctrl_alpha                   :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        i_ph_ctrl_beta                    :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        omega_el                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        theta_el                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        Rs                                :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        reciprocal_Ls                     :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        psiPM                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        ialpha_ref                        :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        ibeta_ref                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        SampleTime                        :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        vk                                :   IN    vector_of_std_logic_vector32(0 TO 1);  -- single [2]
        J                                 :   OUT   vector_of_std_logic_vector32(0 TO 7);  -- single [8]
        v                                 :   OUT   matrix_of_std_logic_vector32(0 TO 1, 0 TO 7)  -- single [2x8]
        );
END Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_MATLAB_Function;


ARCHITECTURE rtl OF Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_MATLAB_Function IS

  -- Component Declarations
  COMPONENT Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sincos_single
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          nfp_in                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_out1                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          nfp_out2                        :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    USE ENTITY work.Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single(rtl);

  FOR ALL : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sincos_single
    USE ENTITY work.Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sincos_single(rtl);

  FOR ALL : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    USE ENTITY work.Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single(rtl);

  FOR ALL : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    USE ENTITY work.Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single(rtl);

  -- Signals
  SIGNAL J_1                              : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL kconst                           : vector_of_std_logic_vector32(0 TO 15);  -- ufix32 [16]
  SIGNAL gain_in_vectorConcatenate        : vector_of_std_logic_vector32(0 TO 15);  -- ufix32 [16]
  SIGNAL In_1                             : matrix_of_std_logic_vector32(0 TO 1, 0 TO 7);  -- ufix32 [2x8]
  SIGNAL c4_In_1                          : vector_of_std_logic_vector32(0 TO 15);  -- ufix32 [16]
  SIGNAL c4_v                             : vector_of_std_logic_vector32(0 TO 15);  -- ufix32 [16]
  SIGNAL v_1                              : matrix_of_std_logic_vector32(0 TO 1, 0 TO 7);  -- ufix32 [2x8]
  SIGNAL psiPM_1                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0                             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_1                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_2                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_3                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_4                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_5                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_6                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL vk_0                             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_7                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_8                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_9                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_10                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_11                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_12                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Rs_1                             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_13                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_14                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_15                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_16                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ialpha_k_1                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression_1               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_17                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_18                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_19                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_20                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ialpha_k_2                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_21                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1                            : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_22                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_23                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_24                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_25                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_26                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL vk_1                             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_27                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_28                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_29                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_30                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_31                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_32                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression_2               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_33                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_34                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_35                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_36                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ibeta_k_1                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression_3               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_37                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_38                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_39                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_40                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ibeta_k_2                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_41                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_1                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_42                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL J_2                              : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL out0_43                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_44                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_45                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_46                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_47                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression_4               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_48                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_49                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_50                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_51                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ialpha_k_2_1                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_52                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_2                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_53                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_54                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_55                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_56                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_57                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression_5               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_58                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_59                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_60                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_61                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ibeta_k_2_1                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_62                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_3                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_63                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL J_3                              : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL out0_64                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_65                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_66                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_67                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_68                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression_6               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_69                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_70                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_71                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_72                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ialpha_k_2_2                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_73                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_4                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_74                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_75                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_76                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_77                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_78                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression_7               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_79                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_80                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_81                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_82                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ibeta_k_2_2                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_83                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_5                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_84                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL J_4                              : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL out0_85                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_86                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_87                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_88                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_89                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression_8               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_90                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_91                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_92                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_93                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ialpha_k_2_3                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_94                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_6                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_95                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_96                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_97                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_98                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_99                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression_9               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_100                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_101                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_102                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_103                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ibeta_k_2_3                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_104                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_7                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_105                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL J_5                              : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL out0_106                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_107                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_108                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_109                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_110                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression_10              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_111                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_112                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_113                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_114                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ialpha_k_2_4                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_115                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_8                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_116                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_117                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_118                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_119                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_120                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression_11              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_121                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_122                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_123                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_124                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ibeta_k_2_4                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_125                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_9                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_126                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL J_6                              : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL out0_127                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_128                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_129                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_130                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_131                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression_12              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_132                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_133                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_134                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_135                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ialpha_k_2_5                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_136                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_10                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_137                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_138                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_139                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_140                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_141                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression_13              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_142                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_143                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_144                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_145                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ibeta_k_2_5                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_146                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_11                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_147                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL J_7                              : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL out0_148                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_149                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_150                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_151                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_152                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression_14              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_153                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_154                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_155                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_156                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ialpha_k_2_6                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_157                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_12                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_158                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_159                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_160                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_161                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_162                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression_15              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_163                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_164                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_165                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_166                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ibeta_k_2_6                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_167                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_13                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_168                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL J_8                              : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL out0_169                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_170                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_171                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_172                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_173                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression_16              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_174                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_175                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_176                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_177                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ialpha_k_2_7                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_178                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_14                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_179                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_180                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_181                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_182                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_183                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_expression_17              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_184                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_185                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_186                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_187                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ibeta_k_2_7                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_188                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_15                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_189                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL J_9                              : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]

BEGIN
  --  Calculation of the voltages per switching state in alpha beta coordinates
  u_nfp_mul_comp : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => kconst(0),  -- single
              nfp_in2 => c4_In_1(0),  -- single
              nfp_out => c4_v(0)  -- single
              );

  u_nfp_mul_comp_1 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => kconst(1),  -- single
              nfp_in2 => c4_In_1(1),  -- single
              nfp_out => c4_v(1)  -- single
              );

  u_nfp_mul_comp_2 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => kconst(2),  -- single
              nfp_in2 => c4_In_1(2),  -- single
              nfp_out => c4_v(2)  -- single
              );

  u_nfp_mul_comp_3 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => kconst(3),  -- single
              nfp_in2 => c4_In_1(3),  -- single
              nfp_out => c4_v(3)  -- single
              );

  u_nfp_mul_comp_4 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => kconst(4),  -- single
              nfp_in2 => c4_In_1(4),  -- single
              nfp_out => c4_v(4)  -- single
              );

  u_nfp_mul_comp_5 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => kconst(5),  -- single
              nfp_in2 => c4_In_1(5),  -- single
              nfp_out => c4_v(5)  -- single
              );

  u_nfp_mul_comp_6 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => kconst(6),  -- single
              nfp_in2 => c4_In_1(6),  -- single
              nfp_out => c4_v(6)  -- single
              );

  u_nfp_mul_comp_7 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => kconst(7),  -- single
              nfp_in2 => c4_In_1(7),  -- single
              nfp_out => c4_v(7)  -- single
              );

  u_nfp_mul_comp_8 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => kconst(8),  -- single
              nfp_in2 => c4_In_1(8),  -- single
              nfp_out => c4_v(8)  -- single
              );

  u_nfp_mul_comp_9 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => kconst(9),  -- single
              nfp_in2 => c4_In_1(9),  -- single
              nfp_out => c4_v(9)  -- single
              );

  u_nfp_mul_comp_10 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => kconst(10),  -- single
              nfp_in2 => c4_In_1(10),  -- single
              nfp_out => c4_v(10)  -- single
              );

  u_nfp_mul_comp_11 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => kconst(11),  -- single
              nfp_in2 => c4_In_1(11),  -- single
              nfp_out => c4_v(11)  -- single
              );

  u_nfp_mul_comp_12 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => kconst(12),  -- single
              nfp_in2 => c4_In_1(12),  -- single
              nfp_out => c4_v(12)  -- single
              );

  u_nfp_mul_comp_13 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => kconst(13),  -- single
              nfp_in2 => c4_In_1(13),  -- single
              nfp_out => c4_v(13)  -- single
              );

  u_nfp_mul_comp_14 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => kconst(14),  -- single
              nfp_in2 => c4_In_1(14),  -- single
              nfp_out => c4_v(14)  -- single
              );

  u_nfp_mul_comp_15 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => kconst(15),  -- single
              nfp_in2 => c4_In_1(15),  -- single
              nfp_out => c4_v(15)  -- single
              );

  u_nfp_sincos_comp : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sincos_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in => theta_el,  -- single
              nfp_out1 => out0,  -- single
              nfp_out2 => out0_1  -- single
              );

  u_nfp_mul_comp_16 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0,  -- single
              nfp_out => out0_2  -- single
              );

  u_nfp_mul_comp_17 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_2,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_3  -- single
              );

  -- Prediction of the alpha/beta currents of the 3-Phase-SPMSM with the finite control set  
  u_nfp_add_comp : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => v_1(0, 0),  -- single
              nfp_in2 => out0_3,  -- single
              nfp_out => out0_4  -- single
              );

  u_nfp_mul_comp_18 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_5  -- single
              );

  u_nfp_mul_comp_19 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_4,  -- single
              nfp_in2 => out0_5,  -- single
              nfp_out => out0_6  -- single
              );

  u_nfp_mul_comp_20 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0,  -- single
              nfp_out => out0_8  -- single
              );

  u_nfp_mul_comp_21 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_8,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_9  -- single
              );

  u_nfp_add_comp_1 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_7,  -- single
              nfp_in2 => out0_9,  -- single
              nfp_out => out0_10  -- single
              );

  u_nfp_mul_comp_22 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_11  -- single
              );

  u_nfp_mul_comp_23 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_10,  -- single
              nfp_in2 => out0_11,  -- single
              nfp_out => out0_12  -- single
              );

  u_nfp_mul_comp_24 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_13  -- single
              );

  u_nfp_mul_comp_25 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_13,  -- single
              nfp_out => out0_14  -- single
              );

  u_nfp_sub_comp : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression,  -- single
              nfp_in2 => out0_14,  -- single
              nfp_out => out0_15  -- single
              );

  u_nfp_mul_comp_26 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => i_ph_ctrl_alpha,  -- single
              nfp_in2 => out0_15,  -- single
              nfp_out => out0_16  -- single
              );

  u_nfp_add_comp_2 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_12,  -- single
              nfp_in2 => out0_16,  -- single
              nfp_out => ialpha_k_1  -- single
              );

  u_nfp_mul_comp_27 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_17  -- single
              );

  u_nfp_mul_comp_28 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_17,  -- single
              nfp_out => out0_18  -- single
              );

  u_nfp_sub_comp_1 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression_1,  -- single
              nfp_in2 => out0_18,  -- single
              nfp_out => out0_19  -- single
              );

  u_nfp_mul_comp_29 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ialpha_k_1,  -- single
              nfp_in2 => out0_19,  -- single
              nfp_out => out0_20  -- single
              );

  u_nfp_add_comp_3 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_6,  -- single
              nfp_in2 => out0_20,  -- single
              nfp_out => ialpha_k_2  -- single
              );

  -- Calculation of the cost function
  u_nfp_sub_comp_2 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ialpha_ref,  -- single
              nfp_in2 => ialpha_k_2,  -- single
              nfp_out => out0_21  -- single
              );

  u_nfp_mul_comp_30 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_21,  -- single
              nfp_in2 => out0_21,  -- single
              nfp_out => Out_1  -- single
              );

  u_nfp_mul_comp_31 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0_1,  -- single
              nfp_out => out0_22  -- single
              );

  u_nfp_mul_comp_32 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_22,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_23  -- single
              );

  u_nfp_sub_comp_3 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => v_1(1, 0),  -- single
              nfp_in2 => out0_23,  -- single
              nfp_out => out0_24  -- single
              );

  u_nfp_mul_comp_33 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_25  -- single
              );

  u_nfp_mul_comp_34 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_24,  -- single
              nfp_in2 => out0_25,  -- single
              nfp_out => out0_26  -- single
              );

  u_nfp_mul_comp_35 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0_1,  -- single
              nfp_out => out0_28  -- single
              );

  u_nfp_mul_comp_36 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_28,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_29  -- single
              );

  u_nfp_sub_comp_4 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_27,  -- single
              nfp_in2 => out0_29,  -- single
              nfp_out => out0_30  -- single
              );

  u_nfp_mul_comp_37 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_31  -- single
              );

  u_nfp_mul_comp_38 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_30,  -- single
              nfp_in2 => out0_31,  -- single
              nfp_out => out0_32  -- single
              );

  u_nfp_mul_comp_39 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_33  -- single
              );

  u_nfp_mul_comp_40 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_33,  -- single
              nfp_out => out0_34  -- single
              );

  u_nfp_sub_comp_5 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression_2,  -- single
              nfp_in2 => out0_34,  -- single
              nfp_out => out0_35  -- single
              );

  u_nfp_mul_comp_41 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => i_ph_ctrl_beta,  -- single
              nfp_in2 => out0_35,  -- single
              nfp_out => out0_36  -- single
              );

  u_nfp_add_comp_4 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_32,  -- single
              nfp_in2 => out0_36,  -- single
              nfp_out => ibeta_k_1  -- single
              );

  u_nfp_mul_comp_42 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_37  -- single
              );

  u_nfp_mul_comp_43 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_37,  -- single
              nfp_out => out0_38  -- single
              );

  u_nfp_sub_comp_6 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression_3,  -- single
              nfp_in2 => out0_38,  -- single
              nfp_out => out0_39  -- single
              );

  u_nfp_mul_comp_44 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ibeta_k_1,  -- single
              nfp_in2 => out0_39,  -- single
              nfp_out => out0_40  -- single
              );

  u_nfp_add_comp_5 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_26,  -- single
              nfp_in2 => out0_40,  -- single
              nfp_out => ibeta_k_2  -- single
              );

  u_nfp_sub_comp_7 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ibeta_ref,  -- single
              nfp_in2 => ibeta_k_2,  -- single
              nfp_out => out0_41  -- single
              );

  u_nfp_mul_comp_45 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_41,  -- single
              nfp_in2 => out0_41,  -- single
              nfp_out => Out_1_1  -- single
              );

  u_nfp_add_comp_6 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Out_1,  -- single
              nfp_in2 => Out_1_1,  -- single
              nfp_out => out0_42  -- single
              );

  u_nfp_mul_comp_46 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0,  -- single
              nfp_out => out0_43  -- single
              );

  u_nfp_mul_comp_47 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_43,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_44  -- single
              );

  -- Prediction of the alpha/beta currents of the 3-Phase-SPMSM with the finite control set  
  u_nfp_add_comp_7 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => v_1(0, 1),  -- single
              nfp_in2 => out0_44,  -- single
              nfp_out => out0_45  -- single
              );

  u_nfp_mul_comp_48 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_46  -- single
              );

  u_nfp_mul_comp_49 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_45,  -- single
              nfp_in2 => out0_46,  -- single
              nfp_out => out0_47  -- single
              );

  u_nfp_mul_comp_50 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_48  -- single
              );

  u_nfp_mul_comp_51 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_48,  -- single
              nfp_out => out0_49  -- single
              );

  u_nfp_sub_comp_8 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression_4,  -- single
              nfp_in2 => out0_49,  -- single
              nfp_out => out0_50  -- single
              );

  u_nfp_mul_comp_52 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ialpha_k_1,  -- single
              nfp_in2 => out0_50,  -- single
              nfp_out => out0_51  -- single
              );

  u_nfp_add_comp_8 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_47,  -- single
              nfp_in2 => out0_51,  -- single
              nfp_out => ialpha_k_2_1  -- single
              );

  -- Calculation of the cost function
  u_nfp_sub_comp_9 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ialpha_ref,  -- single
              nfp_in2 => ialpha_k_2_1,  -- single
              nfp_out => out0_52  -- single
              );

  u_nfp_mul_comp_53 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_52,  -- single
              nfp_in2 => out0_52,  -- single
              nfp_out => Out_1_2  -- single
              );

  u_nfp_mul_comp_54 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0_1,  -- single
              nfp_out => out0_53  -- single
              );

  u_nfp_mul_comp_55 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_53,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_54  -- single
              );

  u_nfp_sub_comp_10 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => v_1(1, 1),  -- single
              nfp_in2 => out0_54,  -- single
              nfp_out => out0_55  -- single
              );

  u_nfp_mul_comp_56 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_56  -- single
              );

  u_nfp_mul_comp_57 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_55,  -- single
              nfp_in2 => out0_56,  -- single
              nfp_out => out0_57  -- single
              );

  u_nfp_mul_comp_58 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_58  -- single
              );

  u_nfp_mul_comp_59 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_58,  -- single
              nfp_out => out0_59  -- single
              );

  u_nfp_sub_comp_11 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression_5,  -- single
              nfp_in2 => out0_59,  -- single
              nfp_out => out0_60  -- single
              );

  u_nfp_mul_comp_60 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ibeta_k_1,  -- single
              nfp_in2 => out0_60,  -- single
              nfp_out => out0_61  -- single
              );

  u_nfp_add_comp_9 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_57,  -- single
              nfp_in2 => out0_61,  -- single
              nfp_out => ibeta_k_2_1  -- single
              );

  u_nfp_sub_comp_12 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ibeta_ref,  -- single
              nfp_in2 => ibeta_k_2_1,  -- single
              nfp_out => out0_62  -- single
              );

  u_nfp_mul_comp_61 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_62,  -- single
              nfp_in2 => out0_62,  -- single
              nfp_out => Out_1_3  -- single
              );

  u_nfp_add_comp_10 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Out_1_2,  -- single
              nfp_in2 => Out_1_3,  -- single
              nfp_out => out0_63  -- single
              );

  u_nfp_mul_comp_62 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0,  -- single
              nfp_out => out0_64  -- single
              );

  u_nfp_mul_comp_63 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_64,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_65  -- single
              );

  -- Prediction of the alpha/beta currents of the 3-Phase-SPMSM with the finite control set  
  u_nfp_add_comp_11 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => v_1(0, 2),  -- single
              nfp_in2 => out0_65,  -- single
              nfp_out => out0_66  -- single
              );

  u_nfp_mul_comp_64 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_67  -- single
              );

  u_nfp_mul_comp_65 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_66,  -- single
              nfp_in2 => out0_67,  -- single
              nfp_out => out0_68  -- single
              );

  u_nfp_mul_comp_66 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_69  -- single
              );

  u_nfp_mul_comp_67 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_69,  -- single
              nfp_out => out0_70  -- single
              );

  u_nfp_sub_comp_13 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression_6,  -- single
              nfp_in2 => out0_70,  -- single
              nfp_out => out0_71  -- single
              );

  u_nfp_mul_comp_68 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ialpha_k_1,  -- single
              nfp_in2 => out0_71,  -- single
              nfp_out => out0_72  -- single
              );

  u_nfp_add_comp_12 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_68,  -- single
              nfp_in2 => out0_72,  -- single
              nfp_out => ialpha_k_2_2  -- single
              );

  -- Calculation of the cost function
  u_nfp_sub_comp_14 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ialpha_ref,  -- single
              nfp_in2 => ialpha_k_2_2,  -- single
              nfp_out => out0_73  -- single
              );

  u_nfp_mul_comp_69 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_73,  -- single
              nfp_in2 => out0_73,  -- single
              nfp_out => Out_1_4  -- single
              );

  u_nfp_mul_comp_70 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0_1,  -- single
              nfp_out => out0_74  -- single
              );

  u_nfp_mul_comp_71 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_74,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_75  -- single
              );

  u_nfp_sub_comp_15 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => v_1(1, 2),  -- single
              nfp_in2 => out0_75,  -- single
              nfp_out => out0_76  -- single
              );

  u_nfp_mul_comp_72 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_77  -- single
              );

  u_nfp_mul_comp_73 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_76,  -- single
              nfp_in2 => out0_77,  -- single
              nfp_out => out0_78  -- single
              );

  u_nfp_mul_comp_74 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_79  -- single
              );

  u_nfp_mul_comp_75 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_79,  -- single
              nfp_out => out0_80  -- single
              );

  u_nfp_sub_comp_16 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression_7,  -- single
              nfp_in2 => out0_80,  -- single
              nfp_out => out0_81  -- single
              );

  u_nfp_mul_comp_76 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ibeta_k_1,  -- single
              nfp_in2 => out0_81,  -- single
              nfp_out => out0_82  -- single
              );

  u_nfp_add_comp_13 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_78,  -- single
              nfp_in2 => out0_82,  -- single
              nfp_out => ibeta_k_2_2  -- single
              );

  u_nfp_sub_comp_17 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ibeta_ref,  -- single
              nfp_in2 => ibeta_k_2_2,  -- single
              nfp_out => out0_83  -- single
              );

  u_nfp_mul_comp_77 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_83,  -- single
              nfp_in2 => out0_83,  -- single
              nfp_out => Out_1_5  -- single
              );

  u_nfp_add_comp_14 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Out_1_4,  -- single
              nfp_in2 => Out_1_5,  -- single
              nfp_out => out0_84  -- single
              );

  u_nfp_mul_comp_78 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0,  -- single
              nfp_out => out0_85  -- single
              );

  u_nfp_mul_comp_79 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_85,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_86  -- single
              );

  -- Prediction of the alpha/beta currents of the 3-Phase-SPMSM with the finite control set  
  u_nfp_add_comp_15 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => v_1(0, 3),  -- single
              nfp_in2 => out0_86,  -- single
              nfp_out => out0_87  -- single
              );

  u_nfp_mul_comp_80 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_88  -- single
              );

  u_nfp_mul_comp_81 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_87,  -- single
              nfp_in2 => out0_88,  -- single
              nfp_out => out0_89  -- single
              );

  u_nfp_mul_comp_82 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_90  -- single
              );

  u_nfp_mul_comp_83 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_90,  -- single
              nfp_out => out0_91  -- single
              );

  u_nfp_sub_comp_18 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression_8,  -- single
              nfp_in2 => out0_91,  -- single
              nfp_out => out0_92  -- single
              );

  u_nfp_mul_comp_84 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ialpha_k_1,  -- single
              nfp_in2 => out0_92,  -- single
              nfp_out => out0_93  -- single
              );

  u_nfp_add_comp_16 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_89,  -- single
              nfp_in2 => out0_93,  -- single
              nfp_out => ialpha_k_2_3  -- single
              );

  -- Calculation of the cost function
  u_nfp_sub_comp_19 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ialpha_ref,  -- single
              nfp_in2 => ialpha_k_2_3,  -- single
              nfp_out => out0_94  -- single
              );

  u_nfp_mul_comp_85 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_94,  -- single
              nfp_in2 => out0_94,  -- single
              nfp_out => Out_1_6  -- single
              );

  u_nfp_mul_comp_86 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0_1,  -- single
              nfp_out => out0_95  -- single
              );

  u_nfp_mul_comp_87 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_95,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_96  -- single
              );

  u_nfp_sub_comp_20 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => v_1(1, 3),  -- single
              nfp_in2 => out0_96,  -- single
              nfp_out => out0_97  -- single
              );

  u_nfp_mul_comp_88 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_98  -- single
              );

  u_nfp_mul_comp_89 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_97,  -- single
              nfp_in2 => out0_98,  -- single
              nfp_out => out0_99  -- single
              );

  u_nfp_mul_comp_90 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_100  -- single
              );

  u_nfp_mul_comp_91 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_100,  -- single
              nfp_out => out0_101  -- single
              );

  u_nfp_sub_comp_21 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression_9,  -- single
              nfp_in2 => out0_101,  -- single
              nfp_out => out0_102  -- single
              );

  u_nfp_mul_comp_92 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ibeta_k_1,  -- single
              nfp_in2 => out0_102,  -- single
              nfp_out => out0_103  -- single
              );

  u_nfp_add_comp_17 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_99,  -- single
              nfp_in2 => out0_103,  -- single
              nfp_out => ibeta_k_2_3  -- single
              );

  u_nfp_sub_comp_22 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ibeta_ref,  -- single
              nfp_in2 => ibeta_k_2_3,  -- single
              nfp_out => out0_104  -- single
              );

  u_nfp_mul_comp_93 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_104,  -- single
              nfp_in2 => out0_104,  -- single
              nfp_out => Out_1_7  -- single
              );

  u_nfp_add_comp_18 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Out_1_6,  -- single
              nfp_in2 => Out_1_7,  -- single
              nfp_out => out0_105  -- single
              );

  u_nfp_mul_comp_94 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0,  -- single
              nfp_out => out0_106  -- single
              );

  u_nfp_mul_comp_95 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_106,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_107  -- single
              );

  -- Prediction of the alpha/beta currents of the 3-Phase-SPMSM with the finite control set  
  u_nfp_add_comp_19 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => v_1(0, 4),  -- single
              nfp_in2 => out0_107,  -- single
              nfp_out => out0_108  -- single
              );

  u_nfp_mul_comp_96 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_109  -- single
              );

  u_nfp_mul_comp_97 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_108,  -- single
              nfp_in2 => out0_109,  -- single
              nfp_out => out0_110  -- single
              );

  u_nfp_mul_comp_98 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_111  -- single
              );

  u_nfp_mul_comp_99 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_111,  -- single
              nfp_out => out0_112  -- single
              );

  u_nfp_sub_comp_23 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression_10,  -- single
              nfp_in2 => out0_112,  -- single
              nfp_out => out0_113  -- single
              );

  u_nfp_mul_comp_100 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ialpha_k_1,  -- single
              nfp_in2 => out0_113,  -- single
              nfp_out => out0_114  -- single
              );

  u_nfp_add_comp_20 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_110,  -- single
              nfp_in2 => out0_114,  -- single
              nfp_out => ialpha_k_2_4  -- single
              );

  -- Calculation of the cost function
  u_nfp_sub_comp_24 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ialpha_ref,  -- single
              nfp_in2 => ialpha_k_2_4,  -- single
              nfp_out => out0_115  -- single
              );

  u_nfp_mul_comp_101 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_115,  -- single
              nfp_in2 => out0_115,  -- single
              nfp_out => Out_1_8  -- single
              );

  u_nfp_mul_comp_102 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0_1,  -- single
              nfp_out => out0_116  -- single
              );

  u_nfp_mul_comp_103 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_116,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_117  -- single
              );

  u_nfp_sub_comp_25 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => v_1(1, 4),  -- single
              nfp_in2 => out0_117,  -- single
              nfp_out => out0_118  -- single
              );

  u_nfp_mul_comp_104 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_119  -- single
              );

  u_nfp_mul_comp_105 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_118,  -- single
              nfp_in2 => out0_119,  -- single
              nfp_out => out0_120  -- single
              );

  u_nfp_mul_comp_106 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_121  -- single
              );

  u_nfp_mul_comp_107 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_121,  -- single
              nfp_out => out0_122  -- single
              );

  u_nfp_sub_comp_26 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression_11,  -- single
              nfp_in2 => out0_122,  -- single
              nfp_out => out0_123  -- single
              );

  u_nfp_mul_comp_108 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ibeta_k_1,  -- single
              nfp_in2 => out0_123,  -- single
              nfp_out => out0_124  -- single
              );

  u_nfp_add_comp_21 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_120,  -- single
              nfp_in2 => out0_124,  -- single
              nfp_out => ibeta_k_2_4  -- single
              );

  u_nfp_sub_comp_27 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ibeta_ref,  -- single
              nfp_in2 => ibeta_k_2_4,  -- single
              nfp_out => out0_125  -- single
              );

  u_nfp_mul_comp_109 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_125,  -- single
              nfp_in2 => out0_125,  -- single
              nfp_out => Out_1_9  -- single
              );

  u_nfp_add_comp_22 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Out_1_8,  -- single
              nfp_in2 => Out_1_9,  -- single
              nfp_out => out0_126  -- single
              );

  u_nfp_mul_comp_110 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0,  -- single
              nfp_out => out0_127  -- single
              );

  u_nfp_mul_comp_111 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_127,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_128  -- single
              );

  -- Prediction of the alpha/beta currents of the 3-Phase-SPMSM with the finite control set  
  u_nfp_add_comp_23 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => v_1(0, 5),  -- single
              nfp_in2 => out0_128,  -- single
              nfp_out => out0_129  -- single
              );

  u_nfp_mul_comp_112 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_130  -- single
              );

  u_nfp_mul_comp_113 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_129,  -- single
              nfp_in2 => out0_130,  -- single
              nfp_out => out0_131  -- single
              );

  u_nfp_mul_comp_114 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_132  -- single
              );

  u_nfp_mul_comp_115 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_132,  -- single
              nfp_out => out0_133  -- single
              );

  u_nfp_sub_comp_28 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression_12,  -- single
              nfp_in2 => out0_133,  -- single
              nfp_out => out0_134  -- single
              );

  u_nfp_mul_comp_116 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ialpha_k_1,  -- single
              nfp_in2 => out0_134,  -- single
              nfp_out => out0_135  -- single
              );

  u_nfp_add_comp_24 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_131,  -- single
              nfp_in2 => out0_135,  -- single
              nfp_out => ialpha_k_2_5  -- single
              );

  -- Calculation of the cost function
  u_nfp_sub_comp_29 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ialpha_ref,  -- single
              nfp_in2 => ialpha_k_2_5,  -- single
              nfp_out => out0_136  -- single
              );

  u_nfp_mul_comp_117 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_136,  -- single
              nfp_in2 => out0_136,  -- single
              nfp_out => Out_1_10  -- single
              );

  u_nfp_mul_comp_118 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0_1,  -- single
              nfp_out => out0_137  -- single
              );

  u_nfp_mul_comp_119 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_137,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_138  -- single
              );

  u_nfp_sub_comp_30 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => v_1(1, 5),  -- single
              nfp_in2 => out0_138,  -- single
              nfp_out => out0_139  -- single
              );

  u_nfp_mul_comp_120 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_140  -- single
              );

  u_nfp_mul_comp_121 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_139,  -- single
              nfp_in2 => out0_140,  -- single
              nfp_out => out0_141  -- single
              );

  u_nfp_mul_comp_122 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_142  -- single
              );

  u_nfp_mul_comp_123 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_142,  -- single
              nfp_out => out0_143  -- single
              );

  u_nfp_sub_comp_31 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression_13,  -- single
              nfp_in2 => out0_143,  -- single
              nfp_out => out0_144  -- single
              );

  u_nfp_mul_comp_124 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ibeta_k_1,  -- single
              nfp_in2 => out0_144,  -- single
              nfp_out => out0_145  -- single
              );

  u_nfp_add_comp_25 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_141,  -- single
              nfp_in2 => out0_145,  -- single
              nfp_out => ibeta_k_2_5  -- single
              );

  u_nfp_sub_comp_32 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ibeta_ref,  -- single
              nfp_in2 => ibeta_k_2_5,  -- single
              nfp_out => out0_146  -- single
              );

  u_nfp_mul_comp_125 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_146,  -- single
              nfp_in2 => out0_146,  -- single
              nfp_out => Out_1_11  -- single
              );

  u_nfp_add_comp_26 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Out_1_10,  -- single
              nfp_in2 => Out_1_11,  -- single
              nfp_out => out0_147  -- single
              );

  u_nfp_mul_comp_126 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0,  -- single
              nfp_out => out0_148  -- single
              );

  u_nfp_mul_comp_127 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_148,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_149  -- single
              );

  -- Prediction of the alpha/beta currents of the 3-Phase-SPMSM with the finite control set  
  u_nfp_add_comp_27 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => v_1(0, 6),  -- single
              nfp_in2 => out0_149,  -- single
              nfp_out => out0_150  -- single
              );

  u_nfp_mul_comp_128 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_151  -- single
              );

  u_nfp_mul_comp_129 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_150,  -- single
              nfp_in2 => out0_151,  -- single
              nfp_out => out0_152  -- single
              );

  u_nfp_mul_comp_130 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_153  -- single
              );

  u_nfp_mul_comp_131 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_153,  -- single
              nfp_out => out0_154  -- single
              );

  u_nfp_sub_comp_33 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression_14,  -- single
              nfp_in2 => out0_154,  -- single
              nfp_out => out0_155  -- single
              );

  u_nfp_mul_comp_132 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ialpha_k_1,  -- single
              nfp_in2 => out0_155,  -- single
              nfp_out => out0_156  -- single
              );

  u_nfp_add_comp_28 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_152,  -- single
              nfp_in2 => out0_156,  -- single
              nfp_out => ialpha_k_2_6  -- single
              );

  -- Calculation of the cost function
  u_nfp_sub_comp_34 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ialpha_ref,  -- single
              nfp_in2 => ialpha_k_2_6,  -- single
              nfp_out => out0_157  -- single
              );

  u_nfp_mul_comp_133 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_157,  -- single
              nfp_in2 => out0_157,  -- single
              nfp_out => Out_1_12  -- single
              );

  u_nfp_mul_comp_134 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0_1,  -- single
              nfp_out => out0_158  -- single
              );

  u_nfp_mul_comp_135 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_158,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_159  -- single
              );

  u_nfp_sub_comp_35 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => v_1(1, 6),  -- single
              nfp_in2 => out0_159,  -- single
              nfp_out => out0_160  -- single
              );

  u_nfp_mul_comp_136 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_161  -- single
              );

  u_nfp_mul_comp_137 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_160,  -- single
              nfp_in2 => out0_161,  -- single
              nfp_out => out0_162  -- single
              );

  u_nfp_mul_comp_138 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_163  -- single
              );

  u_nfp_mul_comp_139 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_163,  -- single
              nfp_out => out0_164  -- single
              );

  u_nfp_sub_comp_36 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression_15,  -- single
              nfp_in2 => out0_164,  -- single
              nfp_out => out0_165  -- single
              );

  u_nfp_mul_comp_140 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ibeta_k_1,  -- single
              nfp_in2 => out0_165,  -- single
              nfp_out => out0_166  -- single
              );

  u_nfp_add_comp_29 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_162,  -- single
              nfp_in2 => out0_166,  -- single
              nfp_out => ibeta_k_2_6  -- single
              );

  u_nfp_sub_comp_37 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ibeta_ref,  -- single
              nfp_in2 => ibeta_k_2_6,  -- single
              nfp_out => out0_167  -- single
              );

  u_nfp_mul_comp_141 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_167,  -- single
              nfp_in2 => out0_167,  -- single
              nfp_out => Out_1_13  -- single
              );

  u_nfp_add_comp_30 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Out_1_12,  -- single
              nfp_in2 => Out_1_13,  -- single
              nfp_out => out0_168  -- single
              );

  u_nfp_mul_comp_142 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0,  -- single
              nfp_out => out0_169  -- single
              );

  u_nfp_mul_comp_143 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_169,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_170  -- single
              );

  -- Prediction of the alpha/beta currents of the 3-Phase-SPMSM with the finite control set  
  u_nfp_add_comp_31 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => v_1(0, 7),  -- single
              nfp_in2 => out0_170,  -- single
              nfp_out => out0_171  -- single
              );

  u_nfp_mul_comp_144 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_172  -- single
              );

  u_nfp_mul_comp_145 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_171,  -- single
              nfp_in2 => out0_172,  -- single
              nfp_out => out0_173  -- single
              );

  u_nfp_mul_comp_146 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_174  -- single
              );

  u_nfp_mul_comp_147 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_174,  -- single
              nfp_out => out0_175  -- single
              );

  u_nfp_sub_comp_38 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression_16,  -- single
              nfp_in2 => out0_175,  -- single
              nfp_out => out0_176  -- single
              );

  u_nfp_mul_comp_148 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ialpha_k_1,  -- single
              nfp_in2 => out0_176,  -- single
              nfp_out => out0_177  -- single
              );

  u_nfp_add_comp_32 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_173,  -- single
              nfp_in2 => out0_177,  -- single
              nfp_out => ialpha_k_2_7  -- single
              );

  -- Calculation of the cost function
  u_nfp_sub_comp_39 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ialpha_ref,  -- single
              nfp_in2 => ialpha_k_2_7,  -- single
              nfp_out => out0_178  -- single
              );

  u_nfp_mul_comp_149 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_178,  -- single
              nfp_in2 => out0_178,  -- single
              nfp_out => Out_1_14  -- single
              );

  u_nfp_mul_comp_150 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0_1,  -- single
              nfp_out => out0_179  -- single
              );

  u_nfp_mul_comp_151 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_179,  -- single
              nfp_in2 => omega_el,  -- single
              nfp_out => out0_180  -- single
              );

  u_nfp_sub_comp_40 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => v_1(1, 7),  -- single
              nfp_in2 => out0_180,  -- single
              nfp_out => out0_181  -- single
              );

  u_nfp_mul_comp_152 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_182  -- single
              );

  u_nfp_mul_comp_153 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_181,  -- single
              nfp_in2 => out0_182,  -- single
              nfp_out => out0_183  -- single
              );

  u_nfp_mul_comp_154 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime,  -- single
              nfp_in2 => reciprocal_Ls,  -- single
              nfp_out => out0_184  -- single
              );

  u_nfp_mul_comp_155 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Rs_1,  -- single
              nfp_in2 => out0_184,  -- single
              nfp_out => out0_185  -- single
              );

  u_nfp_sub_comp_41 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => const_expression_17,  -- single
              nfp_in2 => out0_185,  -- single
              nfp_out => out0_186  -- single
              );

  u_nfp_mul_comp_156 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ibeta_k_1,  -- single
              nfp_in2 => out0_186,  -- single
              nfp_out => out0_187  -- single
              );

  u_nfp_add_comp_33 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_183,  -- single
              nfp_in2 => out0_187,  -- single
              nfp_out => ibeta_k_2_7  -- single
              );

  u_nfp_sub_comp_42 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ibeta_ref,  -- single
              nfp_in2 => ibeta_k_2_7,  -- single
              nfp_out => out0_188  -- single
              );

  u_nfp_mul_comp_157 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_188,  -- single
              nfp_in2 => out0_188,  -- single
              nfp_out => Out_1_15  -- single
              );

  u_nfp_add_comp_34 : Test_FCS_MPC_3Phase_SPMSM_IP_Core_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Out_1_14,  -- single
              nfp_in2 => Out_1_15,  -- single
              nfp_out => out0_189  -- single
              );

  J_1(0) <= X"00000000";
  J_1(1) <= X"00000000";
  J_1(2) <= X"00000000";
  J_1(3) <= X"00000000";
  J_1(4) <= X"00000000";
  J_1(5) <= X"00000000";
  J_1(6) <= X"00000000";
  J_1(7) <= X"00000000";

  kconst(0) <= X"00000000";
  kconst(1) <= X"00000000";
  kconst(2) <= X"3f2aaaab";
  kconst(3) <= X"00000000";
  kconst(4) <= X"3eaaaaab";
  kconst(5) <= X"3f13d07d";
  kconst(6) <= X"beaaaaab";
  kconst(7) <= X"3f13d07d";
  kconst(8) <= X"bf2aaaab";
  kconst(9) <= X"00000000";
  kconst(10) <= X"beaaaaab";
  kconst(11) <= X"bf13d07d";
  kconst(12) <= X"3eaaaaab";
  kconst(13) <= X"bf13d07d";
  kconst(14) <= X"00000000";
  kconst(15) <= X"00000000";

  --  Calculation of the voltages per switching state in alpha beta coordinates
  gain_in_vectorConcatenate(0) <= u_dc_link;
  gain_in_vectorConcatenate(1) <= u_dc_link;
  gain_in_vectorConcatenate(2) <= u_dc_link;
  gain_in_vectorConcatenate(3) <= u_dc_link;
  gain_in_vectorConcatenate(4) <= u_dc_link;
  gain_in_vectorConcatenate(5) <= u_dc_link;
  gain_in_vectorConcatenate(6) <= u_dc_link;
  gain_in_vectorConcatenate(7) <= u_dc_link;
  gain_in_vectorConcatenate(8) <= u_dc_link;
  gain_in_vectorConcatenate(9) <= u_dc_link;
  gain_in_vectorConcatenate(10) <= u_dc_link;
  gain_in_vectorConcatenate(11) <= u_dc_link;
  gain_in_vectorConcatenate(12) <= u_dc_link;
  gain_in_vectorConcatenate(13) <= u_dc_link;
  gain_in_vectorConcatenate(14) <= u_dc_link;
  gain_in_vectorConcatenate(15) <= u_dc_link;

  --  Calculation of the voltages per switching state in alpha beta coordinates
  In_1GEN_LABEL1: FOR d1 IN 0 TO 7 GENERATE
    In_1GEN_LABEL: FOR d0 IN 0 TO 1 GENERATE
      In_1(d0, d1) <= gain_in_vectorConcatenate(d0 + (d1 * 2));
    END GENERATE;
  END GENERATE;

  c4_In_1GEN_LABEL1: FOR d1 IN 0 TO 7 GENERATE
    c4_In_1GEN_LABEL: FOR d0 IN 0 TO 1 GENERATE
      c4_In_1(d0 + (d1 * 2)) <= In_1(d0, d1);
    END GENERATE;
  END GENERATE;


  v_1GEN_LABEL1: FOR d1 IN 0 TO 7 GENERATE
    v_1GEN_LABEL: FOR d0 IN 0 TO 1 GENERATE
      v_1(d0, d1) <= c4_v(d0 + (d1 * 2));
    END GENERATE;
  END GENERATE;

  reduced_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        psiPM_1 <= X"00000000";
      ELSIF enb = '1' THEN
        psiPM_1 <= psiPM;
      END IF;
    END IF;
  END PROCESS reduced_process;


  -- Applying Dimension of the Cost-Function Vector
  -- Delay compensation with a modell of a 3-Phase-SPMSM
  vk_0 <= vk(0);

  delayMatch2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        out0_7 <= X"00000000";
      ELSIF enb = '1' THEN
        out0_7 <= vk_0;
      END IF;
    END IF;
  END PROCESS delayMatch2_process;


  const_expression <= X"3f800000";

  reduced_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Rs_1 <= X"00000000";
      ELSIF enb = '1' THEN
        Rs_1 <= Rs;
      END IF;
    END IF;
  END PROCESS reduced_1_process;


  const_expression_1 <= X"3f800000";

  vk_1 <= vk(1);

  delayMatch7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        out0_27 <= X"00000000";
      ELSIF enb = '1' THEN
        out0_27 <= vk_1;
      END IF;
    END IF;
  END PROCESS delayMatch7_process;


  const_expression_2 <= X"3f800000";

  const_expression_3 <= X"3f800000";

  J_2(0) <= out0_42;
  J_2(1) <= J_1(1);
  J_2(2) <= J_1(2);
  J_2(3) <= J_1(3);
  J_2(4) <= J_1(4);
  J_2(5) <= J_1(5);
  J_2(6) <= J_1(6);
  J_2(7) <= J_1(7);

  const_expression_4 <= X"3f800000";

  const_expression_5 <= X"3f800000";

  J_3(0) <= J_2(0);
  J_3(1) <= out0_63;
  J_3(2) <= J_2(2);
  J_3(3) <= J_2(3);
  J_3(4) <= J_2(4);
  J_3(5) <= J_2(5);
  J_3(6) <= J_2(6);
  J_3(7) <= J_2(7);

  const_expression_6 <= X"3f800000";

  const_expression_7 <= X"3f800000";

  J_4(0) <= J_3(0);
  J_4(1) <= J_3(1);
  J_4(2) <= out0_84;
  J_4(3) <= J_3(3);
  J_4(4) <= J_3(4);
  J_4(5) <= J_3(5);
  J_4(6) <= J_3(6);
  J_4(7) <= J_3(7);

  const_expression_8 <= X"3f800000";

  const_expression_9 <= X"3f800000";

  J_5(0) <= J_4(0);
  J_5(1) <= J_4(1);
  J_5(2) <= J_4(2);
  J_5(3) <= out0_105;
  J_5(4) <= J_4(4);
  J_5(5) <= J_4(5);
  J_5(6) <= J_4(6);
  J_5(7) <= J_4(7);

  const_expression_10 <= X"3f800000";

  const_expression_11 <= X"3f800000";

  J_6(0) <= J_5(0);
  J_6(1) <= J_5(1);
  J_6(2) <= J_5(2);
  J_6(3) <= J_5(3);
  J_6(4) <= out0_126;
  J_6(5) <= J_5(5);
  J_6(6) <= J_5(6);
  J_6(7) <= J_5(7);

  const_expression_12 <= X"3f800000";

  const_expression_13 <= X"3f800000";

  J_7(0) <= J_6(0);
  J_7(1) <= J_6(1);
  J_7(2) <= J_6(2);
  J_7(3) <= J_6(3);
  J_7(4) <= J_6(4);
  J_7(5) <= out0_147;
  J_7(6) <= J_6(6);
  J_7(7) <= J_6(7);

  const_expression_14 <= X"3f800000";

  const_expression_15 <= X"3f800000";

  J_8(0) <= J_7(0);
  J_8(1) <= J_7(1);
  J_8(2) <= J_7(2);
  J_8(3) <= J_7(3);
  J_8(4) <= J_7(4);
  J_8(5) <= J_7(5);
  J_8(6) <= out0_168;
  J_8(7) <= J_7(7);

  const_expression_16 <= X"3f800000";

  const_expression_17 <= X"3f800000";

  J_9(0) <= J_8(0);
  J_9(1) <= J_8(1);
  J_9(2) <= J_8(2);
  J_9(3) <= J_8(3);
  J_9(4) <= J_8(4);
  J_9(5) <= J_8(5);
  J_9(6) <= J_8(6);
  J_9(7) <= out0_189;

  J <= J_9;

  v <= v_1;

END rtl;

