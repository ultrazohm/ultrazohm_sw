-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\parallel_phase_voltages_6Phase\hdlsrc\parallel_phase_voltages_per_switching_state_6\Parallel_phase_voltages_6Phase_addr_decoder.vhd
-- Created: 2022-09-29 14:34:51
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Parallel_phase_voltages_6Phase_addr_decoder
-- Source Path: Parallel_phase_voltages_6Phase/Parallel_phase_voltages_6Phase_axi_lite/Parallel_phase_voltages_6Phase_addr_decoder
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Parallel_phase_voltages_6Phase_addr_decoder IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        data_write                        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        addr_sel                          :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14
        wr_enb                            :   IN    std_logic;  -- ufix1
        rd_enb                            :   IN    std_logic;  -- ufix1
        read_ip_timestamp                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_d_voltage_per_switching_state_AXI_1 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_q_voltage_per_switching_state_AXI_1 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_x_voltage_per_switching_state_AXI_1 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_y_voltage_per_switching_state_AXI_1 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_d_voltage_per_switching_state_AXI_2 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_q_voltage_per_switching_state_AXI_2 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_x_voltage_per_switching_state_AXI_2 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_y_voltage_per_switching_state_AXI_2 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_d_voltage_per_switching_state_AXI_3 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_q_voltage_per_switching_state_AXI_3 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_x_voltage_per_switching_state_AXI_3 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_y_voltage_per_switching_state_AXI_3 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_d_voltage_per_switching_state_AXI_4 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_q_voltage_per_switching_state_AXI_4 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_x_voltage_per_switching_state_AXI_4 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_y_voltage_per_switching_state_AXI_4 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_d_voltage_per_switching_state_AXI_5 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_q_voltage_per_switching_state_AXI_5 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_x_voltage_per_switching_state_AXI_5 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_y_voltage_per_switching_state_AXI_5 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_d_voltage_per_switching_state_AXI_6 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_q_voltage_per_switching_state_AXI_6 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_x_voltage_per_switching_state_AXI_6 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_y_voltage_per_switching_state_AXI_6 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_d_voltage_per_switching_state_AXI_7 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_q_voltage_per_switching_state_AXI_7 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_x_voltage_per_switching_state_AXI_7 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_y_voltage_per_switching_state_AXI_7 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_d_voltage_per_switching_state_AXI_8 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_q_voltage_per_switching_state_AXI_8 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_x_voltage_per_switching_state_AXI_8 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_y_voltage_per_switching_state_AXI_8 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_d_voltage_per_switching_state_AXI_9 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_q_voltage_per_switching_state_AXI_9 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_x_voltage_per_switching_state_AXI_9 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_y_voltage_per_switching_state_AXI_9 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_d_voltage_per_switching_state_AXI_10 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_q_voltage_per_switching_state_AXI_10 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_x_voltage_per_switching_state_AXI_10 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_y_voltage_per_switching_state_AXI_10 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_d_voltage_per_switching_state_AXI_11 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_q_voltage_per_switching_state_AXI_11 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_x_voltage_per_switching_state_AXI_11 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_y_voltage_per_switching_state_AXI_11 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_d_voltage_per_switching_state_AXI_12 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_q_voltage_per_switching_state_AXI_12 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_x_voltage_per_switching_state_AXI_12 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_y_voltage_per_switching_state_AXI_12 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_d_voltage_per_switching_state_AXI_13 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_q_voltage_per_switching_state_AXI_13 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_x_voltage_per_switching_state_AXI_13 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_y_voltage_per_switching_state_AXI_13 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_d_voltage_per_switching_state_AXI_14 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_q_voltage_per_switching_state_AXI_14 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_x_voltage_per_switching_state_AXI_14 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_y_voltage_per_switching_state_AXI_14 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_d_voltage_per_switching_state_AXI_15 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_q_voltage_per_switching_state_AXI_15 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_x_voltage_per_switching_state_AXI_15 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_y_voltage_per_switching_state_AXI_15 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_d_voltage_per_switching_state_AXI_16 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_q_voltage_per_switching_state_AXI_16 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_x_voltage_per_switching_state_AXI_16 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        read_y_voltage_per_switching_state_AXI_16 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        data_read                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_axi_enable                  :   OUT   std_logic;  -- ufix1
        write_theta_el_offset_AXI         :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_u_dc_link_voltage_AXI       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_use_AXI                     :   OUT   std_logic;  -- ufix1
        write_theta_el_AXI                :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En20
        write_Index_AXI                   :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32
        );
END Parallel_phase_voltages_6Phase_addr_decoder;


ARCHITECTURE rtl OF Parallel_phase_voltages_6Phase_addr_decoder IS

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL addr_sel_unsigned                : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL decode_sel_y_voltage_per_switching_state_AXI_16_1_1 : std_logic;  -- ufix1
  SIGNAL const_1                          : std_logic;  -- ufix1
  SIGNAL decode_sel_x_voltage_per_switching_state_AXI_16_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_q_voltage_per_switching_state_AXI_16_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_d_voltage_per_switching_state_AXI_16_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_y_voltage_per_switching_state_AXI_15_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_x_voltage_per_switching_state_AXI_15_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_q_voltage_per_switching_state_AXI_15_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_d_voltage_per_switching_state_AXI_15_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_y_voltage_per_switching_state_AXI_14_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_x_voltage_per_switching_state_AXI_14_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_q_voltage_per_switching_state_AXI_14_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_d_voltage_per_switching_state_AXI_14_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_y_voltage_per_switching_state_AXI_13_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_x_voltage_per_switching_state_AXI_13_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_q_voltage_per_switching_state_AXI_13_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_d_voltage_per_switching_state_AXI_13_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_y_voltage_per_switching_state_AXI_12_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_x_voltage_per_switching_state_AXI_12_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_q_voltage_per_switching_state_AXI_12_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_d_voltage_per_switching_state_AXI_12_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_y_voltage_per_switching_state_AXI_11_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_x_voltage_per_switching_state_AXI_11_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_q_voltage_per_switching_state_AXI_11_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_d_voltage_per_switching_state_AXI_11_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_y_voltage_per_switching_state_AXI_10_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_x_voltage_per_switching_state_AXI_10_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_q_voltage_per_switching_state_AXI_10_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_d_voltage_per_switching_state_AXI_10_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_y_voltage_per_switching_state_AXI_9_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_x_voltage_per_switching_state_AXI_9_1_1 : std_logic;  -- ufix1
  SIGNAL hSelSignalDelay_x_voltage_per_switching_state_AXI_9_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_ip_timestamp_1_1      : std_logic;  -- ufix1
  SIGNAL const_0                          : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_ip_timestamp_unsigned       : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_d_voltage_per_switching_state_AXI_1_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_q_voltage_per_switching_state_AXI_1_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_x_voltage_per_switching_state_AXI_1_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_y_voltage_per_switching_state_AXI_1_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_d_voltage_per_switching_state_AXI_2_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_q_voltage_per_switching_state_AXI_2_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_x_voltage_per_switching_state_AXI_2_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_y_voltage_per_switching_state_AXI_2_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_d_voltage_per_switching_state_AXI_3_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_q_voltage_per_switching_state_AXI_3_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_x_voltage_per_switching_state_AXI_3_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_y_voltage_per_switching_state_AXI_3_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_d_voltage_per_switching_state_AXI_4_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_q_voltage_per_switching_state_AXI_4_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_x_voltage_per_switching_state_AXI_4_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_y_voltage_per_switching_state_AXI_4_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_d_voltage_per_switching_state_AXI_5_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_q_voltage_per_switching_state_AXI_5_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_x_voltage_per_switching_state_AXI_5_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_y_voltage_per_switching_state_AXI_5_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_d_voltage_per_switching_state_AXI_6_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_q_voltage_per_switching_state_AXI_6_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_x_voltage_per_switching_state_AXI_6_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_y_voltage_per_switching_state_AXI_6_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_d_voltage_per_switching_state_AXI_7_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_q_voltage_per_switching_state_AXI_7_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_x_voltage_per_switching_state_AXI_7_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_y_voltage_per_switching_state_AXI_7_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_d_voltage_per_switching_state_AXI_8_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_q_voltage_per_switching_state_AXI_8_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_x_voltage_per_switching_state_AXI_8_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_y_voltage_per_switching_state_AXI_8_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_d_voltage_per_switching_state_AXI_9_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_q_voltage_per_switching_state_AXI_9_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL decode_sel_q_voltage_per_switching_state_AXI_9_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_d_voltage_per_switching_state_AXI_9_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_y_voltage_per_switching_state_AXI_8_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_x_voltage_per_switching_state_AXI_8_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_q_voltage_per_switching_state_AXI_8_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_d_voltage_per_switching_state_AXI_8_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_y_voltage_per_switching_state_AXI_7_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_x_voltage_per_switching_state_AXI_7_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_q_voltage_per_switching_state_AXI_7_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_d_voltage_per_switching_state_AXI_7_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_y_voltage_per_switching_state_AXI_6_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_x_voltage_per_switching_state_AXI_6_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_q_voltage_per_switching_state_AXI_6_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_d_voltage_per_switching_state_AXI_6_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_y_voltage_per_switching_state_AXI_5_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_x_voltage_per_switching_state_AXI_5_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_q_voltage_per_switching_state_AXI_5_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_d_voltage_per_switching_state_AXI_5_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_y_voltage_per_switching_state_AXI_4_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_x_voltage_per_switching_state_AXI_4_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_q_voltage_per_switching_state_AXI_4_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_d_voltage_per_switching_state_AXI_4_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_y_voltage_per_switching_state_AXI_3_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_x_voltage_per_switching_state_AXI_3_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_q_voltage_per_switching_state_AXI_3_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_d_voltage_per_switching_state_AXI_3_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_y_voltage_per_switching_state_AXI_2_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_x_voltage_per_switching_state_AXI_2_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_q_voltage_per_switching_state_AXI_2_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_d_voltage_per_switching_state_AXI_2_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_y_voltage_per_switching_state_AXI_1_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_x_voltage_per_switching_state_AXI_1_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_q_voltage_per_switching_state_AXI_1_1_1 : std_logic;  -- ufix1
  SIGNAL decode_sel_d_voltage_per_switching_state_AXI_1_1_1 : std_logic;  -- ufix1
  SIGNAL read_reg_ip_timestamp            : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_ip_timestamp_1_1       : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_d_voltage_per_switching_state_AXI_1 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_d_voltage_per_switching_state_AXI_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_d_voltage_per_switching_state_AXI_1_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_q_voltage_per_switching_state_AXI_1 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_q_voltage_per_switching_state_AXI_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_q_voltage_per_switching_state_AXI_1_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_x_voltage_per_switching_state_AXI_1 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_x_voltage_per_switching_state_AXI_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_x_voltage_per_switching_state_AXI_1_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_y_voltage_per_switching_state_AXI_1 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_y_voltage_per_switching_state_AXI_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_y_voltage_per_switching_state_AXI_1_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_d_voltage_per_switching_state_AXI_2 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_d_voltage_per_switching_state_AXI_2_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_d_voltage_per_switching_state_AXI_2_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_q_voltage_per_switching_state_AXI_2 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_q_voltage_per_switching_state_AXI_2_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_q_voltage_per_switching_state_AXI_2_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_x_voltage_per_switching_state_AXI_2 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_x_voltage_per_switching_state_AXI_2_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_x_voltage_per_switching_state_AXI_2_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_y_voltage_per_switching_state_AXI_2 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_y_voltage_per_switching_state_AXI_2_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_y_voltage_per_switching_state_AXI_2_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_d_voltage_per_switching_state_AXI_3 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_d_voltage_per_switching_state_AXI_3_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_d_voltage_per_switching_state_AXI_3_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_q_voltage_per_switching_state_AXI_3 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_q_voltage_per_switching_state_AXI_3_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_q_voltage_per_switching_state_AXI_3_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_x_voltage_per_switching_state_AXI_3 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_x_voltage_per_switching_state_AXI_3_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_x_voltage_per_switching_state_AXI_3_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_y_voltage_per_switching_state_AXI_3 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_y_voltage_per_switching_state_AXI_3_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_y_voltage_per_switching_state_AXI_3_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_d_voltage_per_switching_state_AXI_4 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_d_voltage_per_switching_state_AXI_4_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_d_voltage_per_switching_state_AXI_4_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_q_voltage_per_switching_state_AXI_4 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_q_voltage_per_switching_state_AXI_4_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_q_voltage_per_switching_state_AXI_4_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_x_voltage_per_switching_state_AXI_4 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_x_voltage_per_switching_state_AXI_4_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_x_voltage_per_switching_state_AXI_4_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_y_voltage_per_switching_state_AXI_4 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_y_voltage_per_switching_state_AXI_4_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_y_voltage_per_switching_state_AXI_4_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_d_voltage_per_switching_state_AXI_5 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_d_voltage_per_switching_state_AXI_5_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_d_voltage_per_switching_state_AXI_5_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_q_voltage_per_switching_state_AXI_5 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_q_voltage_per_switching_state_AXI_5_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_q_voltage_per_switching_state_AXI_5_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_x_voltage_per_switching_state_AXI_5 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_x_voltage_per_switching_state_AXI_5_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_x_voltage_per_switching_state_AXI_5_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_y_voltage_per_switching_state_AXI_5 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_y_voltage_per_switching_state_AXI_5_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_y_voltage_per_switching_state_AXI_5_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_d_voltage_per_switching_state_AXI_6 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_d_voltage_per_switching_state_AXI_6_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_d_voltage_per_switching_state_AXI_6_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_q_voltage_per_switching_state_AXI_6 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_q_voltage_per_switching_state_AXI_6_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_q_voltage_per_switching_state_AXI_6_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_x_voltage_per_switching_state_AXI_6 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_x_voltage_per_switching_state_AXI_6_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_x_voltage_per_switching_state_AXI_6_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_y_voltage_per_switching_state_AXI_6 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_y_voltage_per_switching_state_AXI_6_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_y_voltage_per_switching_state_AXI_6_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_d_voltage_per_switching_state_AXI_7 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_d_voltage_per_switching_state_AXI_7_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_d_voltage_per_switching_state_AXI_7_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_q_voltage_per_switching_state_AXI_7 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_q_voltage_per_switching_state_AXI_7_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_q_voltage_per_switching_state_AXI_7_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_x_voltage_per_switching_state_AXI_7 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_x_voltage_per_switching_state_AXI_7_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_x_voltage_per_switching_state_AXI_7_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_y_voltage_per_switching_state_AXI_7 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_y_voltage_per_switching_state_AXI_7_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_y_voltage_per_switching_state_AXI_7_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_d_voltage_per_switching_state_AXI_8 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_d_voltage_per_switching_state_AXI_8_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_d_voltage_per_switching_state_AXI_8_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_q_voltage_per_switching_state_AXI_8 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_q_voltage_per_switching_state_AXI_8_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_q_voltage_per_switching_state_AXI_8_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_x_voltage_per_switching_state_AXI_8 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_x_voltage_per_switching_state_AXI_8_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_x_voltage_per_switching_state_AXI_8_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_y_voltage_per_switching_state_AXI_8 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_y_voltage_per_switching_state_AXI_8_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_y_voltage_per_switching_state_AXI_8_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_d_voltage_per_switching_state_AXI_9 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_d_voltage_per_switching_state_AXI_9_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_d_voltage_per_switching_state_AXI_9_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_reg_q_voltage_per_switching_state_AXI_9 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_q_voltage_per_switching_state_AXI_9_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_opt_reg_out_q_voltage_per_switching_state_AXI_9_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_q_voltage_per_switching_state_AXI_9_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_x_voltage_per_switching_state_AXI_9_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_x_voltage_per_switching_state_AXI_9 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_x_voltage_per_switching_state_AXI_9_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_y_voltage_per_switching_state_AXI_9_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_x_voltage_per_switching_state_AXI_9_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_x_voltage_per_switching_state_AXI_9_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_y_voltage_per_switching_state_AXI_9_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_y_voltage_per_switching_state_AXI_9 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_y_voltage_per_switching_state_AXI_9_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_d_voltage_per_switching_state_AXI_10_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_y_voltage_per_switching_state_AXI_9_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_y_voltage_per_switching_state_AXI_9_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_d_voltage_per_switching_state_AXI_10_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_d_voltage_per_switching_state_AXI_10 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_d_voltage_per_switching_state_AXI_10_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_q_voltage_per_switching_state_AXI_10_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_d_voltage_per_switching_state_AXI_10_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_d_voltage_per_switching_state_AXI_10_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_q_voltage_per_switching_state_AXI_10_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_q_voltage_per_switching_state_AXI_10 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_q_voltage_per_switching_state_AXI_10_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_x_voltage_per_switching_state_AXI_10_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_q_voltage_per_switching_state_AXI_10_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_q_voltage_per_switching_state_AXI_10_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_x_voltage_per_switching_state_AXI_10_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_x_voltage_per_switching_state_AXI_10 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_x_voltage_per_switching_state_AXI_10_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_y_voltage_per_switching_state_AXI_10_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_x_voltage_per_switching_state_AXI_10_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_x_voltage_per_switching_state_AXI_10_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_y_voltage_per_switching_state_AXI_10_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_y_voltage_per_switching_state_AXI_10 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_y_voltage_per_switching_state_AXI_10_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_d_voltage_per_switching_state_AXI_11_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_y_voltage_per_switching_state_AXI_10_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_y_voltage_per_switching_state_AXI_10_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_d_voltage_per_switching_state_AXI_11_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_d_voltage_per_switching_state_AXI_11 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_d_voltage_per_switching_state_AXI_11_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_q_voltage_per_switching_state_AXI_11_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_d_voltage_per_switching_state_AXI_11_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_d_voltage_per_switching_state_AXI_11_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_q_voltage_per_switching_state_AXI_11_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_q_voltage_per_switching_state_AXI_11 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_q_voltage_per_switching_state_AXI_11_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_x_voltage_per_switching_state_AXI_11_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_q_voltage_per_switching_state_AXI_11_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_q_voltage_per_switching_state_AXI_11_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_x_voltage_per_switching_state_AXI_11_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_x_voltage_per_switching_state_AXI_11 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_x_voltage_per_switching_state_AXI_11_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_y_voltage_per_switching_state_AXI_11_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_x_voltage_per_switching_state_AXI_11_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_x_voltage_per_switching_state_AXI_11_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_y_voltage_per_switching_state_AXI_11_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_y_voltage_per_switching_state_AXI_11 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_y_voltage_per_switching_state_AXI_11_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_d_voltage_per_switching_state_AXI_12_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_y_voltage_per_switching_state_AXI_11_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_y_voltage_per_switching_state_AXI_11_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_d_voltage_per_switching_state_AXI_12_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_d_voltage_per_switching_state_AXI_12 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_d_voltage_per_switching_state_AXI_12_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_q_voltage_per_switching_state_AXI_12_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_d_voltage_per_switching_state_AXI_12_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_d_voltage_per_switching_state_AXI_12_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_q_voltage_per_switching_state_AXI_12_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_q_voltage_per_switching_state_AXI_12 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_q_voltage_per_switching_state_AXI_12_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_x_voltage_per_switching_state_AXI_12_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_q_voltage_per_switching_state_AXI_12_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_q_voltage_per_switching_state_AXI_12_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_x_voltage_per_switching_state_AXI_12_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_x_voltage_per_switching_state_AXI_12 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_x_voltage_per_switching_state_AXI_12_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_y_voltage_per_switching_state_AXI_12_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_x_voltage_per_switching_state_AXI_12_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_x_voltage_per_switching_state_AXI_12_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_y_voltage_per_switching_state_AXI_12_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_y_voltage_per_switching_state_AXI_12 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_y_voltage_per_switching_state_AXI_12_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_d_voltage_per_switching_state_AXI_13_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_y_voltage_per_switching_state_AXI_12_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_y_voltage_per_switching_state_AXI_12_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_d_voltage_per_switching_state_AXI_13_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_d_voltage_per_switching_state_AXI_13 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_d_voltage_per_switching_state_AXI_13_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_q_voltage_per_switching_state_AXI_13_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_d_voltage_per_switching_state_AXI_13_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_d_voltage_per_switching_state_AXI_13_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_q_voltage_per_switching_state_AXI_13_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_q_voltage_per_switching_state_AXI_13 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_q_voltage_per_switching_state_AXI_13_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_x_voltage_per_switching_state_AXI_13_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_q_voltage_per_switching_state_AXI_13_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_q_voltage_per_switching_state_AXI_13_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_x_voltage_per_switching_state_AXI_13_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_x_voltage_per_switching_state_AXI_13 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_x_voltage_per_switching_state_AXI_13_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_y_voltage_per_switching_state_AXI_13_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_x_voltage_per_switching_state_AXI_13_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_x_voltage_per_switching_state_AXI_13_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_y_voltage_per_switching_state_AXI_13_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_y_voltage_per_switching_state_AXI_13 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_y_voltage_per_switching_state_AXI_13_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_d_voltage_per_switching_state_AXI_14_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_y_voltage_per_switching_state_AXI_13_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_y_voltage_per_switching_state_AXI_13_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_d_voltage_per_switching_state_AXI_14_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_d_voltage_per_switching_state_AXI_14 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_d_voltage_per_switching_state_AXI_14_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_q_voltage_per_switching_state_AXI_14_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_d_voltage_per_switching_state_AXI_14_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_d_voltage_per_switching_state_AXI_14_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_q_voltage_per_switching_state_AXI_14_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_q_voltage_per_switching_state_AXI_14 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_q_voltage_per_switching_state_AXI_14_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_x_voltage_per_switching_state_AXI_14_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_q_voltage_per_switching_state_AXI_14_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_q_voltage_per_switching_state_AXI_14_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_x_voltage_per_switching_state_AXI_14_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_x_voltage_per_switching_state_AXI_14 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_x_voltage_per_switching_state_AXI_14_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_y_voltage_per_switching_state_AXI_14_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_x_voltage_per_switching_state_AXI_14_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_x_voltage_per_switching_state_AXI_14_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_y_voltage_per_switching_state_AXI_14_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_y_voltage_per_switching_state_AXI_14 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_y_voltage_per_switching_state_AXI_14_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_d_voltage_per_switching_state_AXI_15_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_y_voltage_per_switching_state_AXI_14_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_y_voltage_per_switching_state_AXI_14_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_d_voltage_per_switching_state_AXI_15_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_d_voltage_per_switching_state_AXI_15 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_d_voltage_per_switching_state_AXI_15_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_q_voltage_per_switching_state_AXI_15_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_d_voltage_per_switching_state_AXI_15_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_d_voltage_per_switching_state_AXI_15_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_q_voltage_per_switching_state_AXI_15_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_q_voltage_per_switching_state_AXI_15 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_q_voltage_per_switching_state_AXI_15_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_x_voltage_per_switching_state_AXI_15_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_q_voltage_per_switching_state_AXI_15_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_q_voltage_per_switching_state_AXI_15_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_x_voltage_per_switching_state_AXI_15_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_x_voltage_per_switching_state_AXI_15 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_x_voltage_per_switching_state_AXI_15_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_y_voltage_per_switching_state_AXI_15_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_x_voltage_per_switching_state_AXI_15_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_x_voltage_per_switching_state_AXI_15_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_y_voltage_per_switching_state_AXI_15_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_y_voltage_per_switching_state_AXI_15 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_y_voltage_per_switching_state_AXI_15_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_d_voltage_per_switching_state_AXI_16_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_y_voltage_per_switching_state_AXI_15_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_y_voltage_per_switching_state_AXI_15_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_d_voltage_per_switching_state_AXI_16_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_d_voltage_per_switching_state_AXI_16 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_d_voltage_per_switching_state_AXI_16_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_q_voltage_per_switching_state_AXI_16_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_d_voltage_per_switching_state_AXI_16_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_d_voltage_per_switching_state_AXI_16_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_q_voltage_per_switching_state_AXI_16_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_q_voltage_per_switching_state_AXI_16 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_q_voltage_per_switching_state_AXI_16_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_x_voltage_per_switching_state_AXI_16_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_q_voltage_per_switching_state_AXI_16_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_q_voltage_per_switching_state_AXI_16_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_x_voltage_per_switching_state_AXI_16_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_x_voltage_per_switching_state_AXI_16 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_x_voltage_per_switching_state_AXI_16_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL hSelSignalDelay_y_voltage_per_switching_state_AXI_16_1_1 : std_logic;  -- ufix1
  SIGNAL reg_data_read_middle_x_voltage_per_switching_state_AXI_16_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_x_voltage_per_switching_state_AXI_16_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL read_y_voltage_per_switching_state_AXI_16_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL read_reg_y_voltage_per_switching_state_AXI_16 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL data_slice_y_voltage_per_switching_state_AXI_16_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL reg_data_read_middle_y_voltage_per_switching_state_AXI_16_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_rd_y_voltage_per_switching_state_AXI_16_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_sel_axi_enable_1_1        : std_logic;  -- ufix1
  SIGNAL reg_enb_axi_enable_1_1           : std_logic;  -- ufix1
  SIGNAL data_write_unsigned              : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL data_in_axi_enable               : std_logic;  -- ufix1
  SIGNAL data_reg_axi_enable_1_1          : std_logic;  -- ufix1
  SIGNAL decode_sel_theta_el_offset_AXI_1_1 : std_logic;  -- ufix1
  SIGNAL reg_enb_theta_el_offset_AXI_1_1  : std_logic;  -- ufix1
  SIGNAL data_reg_theta_el_offset_AXI_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_sel_u_dc_link_voltage_AXI_1_1 : std_logic;  -- ufix1
  SIGNAL reg_enb_u_dc_link_voltage_AXI_1_1 : std_logic;  -- ufix1
  SIGNAL data_reg_u_dc_link_voltage_AXI_1_1 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL decode_sel_use_AXI_1_1           : std_logic;  -- ufix1
  SIGNAL reg_enb_use_AXI_1_1              : std_logic;  -- ufix1
  SIGNAL data_in_use_AXI                  : std_logic;  -- ufix1
  SIGNAL data_reg_use_AXI_1_1             : std_logic;  -- ufix1
  SIGNAL decode_sel_theta_el_AXI_1_1      : std_logic;  -- ufix1
  SIGNAL reg_enb_theta_el_AXI_1_1         : std_logic;  -- ufix1
  SIGNAL data_in_theta_el_AXI             : signed(23 DOWNTO 0);  -- sfix24_En20
  SIGNAL data_reg_theta_el_AXI_1_1        : signed(23 DOWNTO 0);  -- sfix24_En20
  SIGNAL decode_sel_Index_AXI_1_1         : std_logic;  -- ufix1
  SIGNAL reg_enb_Index_AXI_1_1            : std_logic;  -- ufix1
  SIGNAL data_in_Index_AXI                : signed(31 DOWNTO 0);  -- sfix32
  SIGNAL data_reg_Index_AXI_1_1           : signed(31 DOWNTO 0);  -- sfix32

BEGIN
  addr_sel_unsigned <= unsigned(addr_sel);

  
  decode_sel_y_voltage_per_switching_state_AXI_16_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0084#, 14) ELSE
      '0';

  const_1 <= '1';

  enb <= const_1;

  
  decode_sel_x_voltage_per_switching_state_AXI_16_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0083#, 14) ELSE
      '0';

  
  decode_sel_q_voltage_per_switching_state_AXI_16_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0082#, 14) ELSE
      '0';

  
  decode_sel_d_voltage_per_switching_state_AXI_16_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0081#, 14) ELSE
      '0';

  
  decode_sel_y_voltage_per_switching_state_AXI_15_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0080#, 14) ELSE
      '0';

  
  decode_sel_x_voltage_per_switching_state_AXI_15_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#007F#, 14) ELSE
      '0';

  
  decode_sel_q_voltage_per_switching_state_AXI_15_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#007E#, 14) ELSE
      '0';

  
  decode_sel_d_voltage_per_switching_state_AXI_15_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#007D#, 14) ELSE
      '0';

  
  decode_sel_y_voltage_per_switching_state_AXI_14_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#007C#, 14) ELSE
      '0';

  
  decode_sel_x_voltage_per_switching_state_AXI_14_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#007B#, 14) ELSE
      '0';

  
  decode_sel_q_voltage_per_switching_state_AXI_14_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#007A#, 14) ELSE
      '0';

  
  decode_sel_d_voltage_per_switching_state_AXI_14_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0079#, 14) ELSE
      '0';

  
  decode_sel_y_voltage_per_switching_state_AXI_13_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0078#, 14) ELSE
      '0';

  
  decode_sel_x_voltage_per_switching_state_AXI_13_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0077#, 14) ELSE
      '0';

  
  decode_sel_q_voltage_per_switching_state_AXI_13_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0076#, 14) ELSE
      '0';

  
  decode_sel_d_voltage_per_switching_state_AXI_13_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0075#, 14) ELSE
      '0';

  
  decode_sel_y_voltage_per_switching_state_AXI_12_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0074#, 14) ELSE
      '0';

  
  decode_sel_x_voltage_per_switching_state_AXI_12_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0073#, 14) ELSE
      '0';

  
  decode_sel_q_voltage_per_switching_state_AXI_12_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0072#, 14) ELSE
      '0';

  
  decode_sel_d_voltage_per_switching_state_AXI_12_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0071#, 14) ELSE
      '0';

  
  decode_sel_y_voltage_per_switching_state_AXI_11_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0070#, 14) ELSE
      '0';

  
  decode_sel_x_voltage_per_switching_state_AXI_11_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#006F#, 14) ELSE
      '0';

  
  decode_sel_q_voltage_per_switching_state_AXI_11_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#006E#, 14) ELSE
      '0';

  
  decode_sel_d_voltage_per_switching_state_AXI_11_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#006D#, 14) ELSE
      '0';

  
  decode_sel_y_voltage_per_switching_state_AXI_10_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#006C#, 14) ELSE
      '0';

  
  decode_sel_x_voltage_per_switching_state_AXI_10_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#006B#, 14) ELSE
      '0';

  
  decode_sel_q_voltage_per_switching_state_AXI_10_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#006A#, 14) ELSE
      '0';

  
  decode_sel_d_voltage_per_switching_state_AXI_10_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0069#, 14) ELSE
      '0';

  
  decode_sel_y_voltage_per_switching_state_AXI_9_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0068#, 14) ELSE
      '0';

  
  decode_sel_x_voltage_per_switching_state_AXI_9_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0067#, 14) ELSE
      '0';

  reg_hSelSignalDelay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_x_voltage_per_switching_state_AXI_9_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_x_voltage_per_switching_state_AXI_9_1_1 <= decode_sel_x_voltage_per_switching_state_AXI_9_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_process;


  
  decode_sel_ip_timestamp_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0002#, 14) ELSE
      '0';

  const_0 <= to_unsigned(0, 32);

  read_ip_timestamp_unsigned <= unsigned(read_ip_timestamp);

  read_d_voltage_per_switching_state_AXI_1_signed <= signed(read_d_voltage_per_switching_state_AXI_1);

  read_q_voltage_per_switching_state_AXI_1_signed <= signed(read_q_voltage_per_switching_state_AXI_1);

  read_x_voltage_per_switching_state_AXI_1_signed <= signed(read_x_voltage_per_switching_state_AXI_1);

  read_y_voltage_per_switching_state_AXI_1_signed <= signed(read_y_voltage_per_switching_state_AXI_1);

  read_d_voltage_per_switching_state_AXI_2_signed <= signed(read_d_voltage_per_switching_state_AXI_2);

  read_q_voltage_per_switching_state_AXI_2_signed <= signed(read_q_voltage_per_switching_state_AXI_2);

  read_x_voltage_per_switching_state_AXI_2_signed <= signed(read_x_voltage_per_switching_state_AXI_2);

  read_y_voltage_per_switching_state_AXI_2_signed <= signed(read_y_voltage_per_switching_state_AXI_2);

  read_d_voltage_per_switching_state_AXI_3_signed <= signed(read_d_voltage_per_switching_state_AXI_3);

  read_q_voltage_per_switching_state_AXI_3_signed <= signed(read_q_voltage_per_switching_state_AXI_3);

  read_x_voltage_per_switching_state_AXI_3_signed <= signed(read_x_voltage_per_switching_state_AXI_3);

  read_y_voltage_per_switching_state_AXI_3_signed <= signed(read_y_voltage_per_switching_state_AXI_3);

  read_d_voltage_per_switching_state_AXI_4_signed <= signed(read_d_voltage_per_switching_state_AXI_4);

  read_q_voltage_per_switching_state_AXI_4_signed <= signed(read_q_voltage_per_switching_state_AXI_4);

  read_x_voltage_per_switching_state_AXI_4_signed <= signed(read_x_voltage_per_switching_state_AXI_4);

  read_y_voltage_per_switching_state_AXI_4_signed <= signed(read_y_voltage_per_switching_state_AXI_4);

  read_d_voltage_per_switching_state_AXI_5_signed <= signed(read_d_voltage_per_switching_state_AXI_5);

  read_q_voltage_per_switching_state_AXI_5_signed <= signed(read_q_voltage_per_switching_state_AXI_5);

  read_x_voltage_per_switching_state_AXI_5_signed <= signed(read_x_voltage_per_switching_state_AXI_5);

  read_y_voltage_per_switching_state_AXI_5_signed <= signed(read_y_voltage_per_switching_state_AXI_5);

  read_d_voltage_per_switching_state_AXI_6_signed <= signed(read_d_voltage_per_switching_state_AXI_6);

  read_q_voltage_per_switching_state_AXI_6_signed <= signed(read_q_voltage_per_switching_state_AXI_6);

  read_x_voltage_per_switching_state_AXI_6_signed <= signed(read_x_voltage_per_switching_state_AXI_6);

  read_y_voltage_per_switching_state_AXI_6_signed <= signed(read_y_voltage_per_switching_state_AXI_6);

  read_d_voltage_per_switching_state_AXI_7_signed <= signed(read_d_voltage_per_switching_state_AXI_7);

  read_q_voltage_per_switching_state_AXI_7_signed <= signed(read_q_voltage_per_switching_state_AXI_7);

  read_x_voltage_per_switching_state_AXI_7_signed <= signed(read_x_voltage_per_switching_state_AXI_7);

  read_y_voltage_per_switching_state_AXI_7_signed <= signed(read_y_voltage_per_switching_state_AXI_7);

  read_d_voltage_per_switching_state_AXI_8_signed <= signed(read_d_voltage_per_switching_state_AXI_8);

  read_q_voltage_per_switching_state_AXI_8_signed <= signed(read_q_voltage_per_switching_state_AXI_8);

  read_x_voltage_per_switching_state_AXI_8_signed <= signed(read_x_voltage_per_switching_state_AXI_8);

  read_y_voltage_per_switching_state_AXI_8_signed <= signed(read_y_voltage_per_switching_state_AXI_8);

  read_d_voltage_per_switching_state_AXI_9_signed <= signed(read_d_voltage_per_switching_state_AXI_9);

  read_q_voltage_per_switching_state_AXI_9_signed <= signed(read_q_voltage_per_switching_state_AXI_9);

  
  decode_sel_q_voltage_per_switching_state_AXI_9_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0066#, 14) ELSE
      '0';

  
  decode_sel_d_voltage_per_switching_state_AXI_9_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0065#, 14) ELSE
      '0';

  
  decode_sel_y_voltage_per_switching_state_AXI_8_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0064#, 14) ELSE
      '0';

  
  decode_sel_x_voltage_per_switching_state_AXI_8_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0063#, 14) ELSE
      '0';

  
  decode_sel_q_voltage_per_switching_state_AXI_8_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0062#, 14) ELSE
      '0';

  
  decode_sel_d_voltage_per_switching_state_AXI_8_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0061#, 14) ELSE
      '0';

  
  decode_sel_y_voltage_per_switching_state_AXI_7_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0060#, 14) ELSE
      '0';

  
  decode_sel_x_voltage_per_switching_state_AXI_7_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#005F#, 14) ELSE
      '0';

  
  decode_sel_q_voltage_per_switching_state_AXI_7_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#005E#, 14) ELSE
      '0';

  
  decode_sel_d_voltage_per_switching_state_AXI_7_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#005D#, 14) ELSE
      '0';

  
  decode_sel_y_voltage_per_switching_state_AXI_6_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#005C#, 14) ELSE
      '0';

  
  decode_sel_x_voltage_per_switching_state_AXI_6_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#005B#, 14) ELSE
      '0';

  
  decode_sel_q_voltage_per_switching_state_AXI_6_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#005A#, 14) ELSE
      '0';

  
  decode_sel_d_voltage_per_switching_state_AXI_6_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0059#, 14) ELSE
      '0';

  
  decode_sel_y_voltage_per_switching_state_AXI_5_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0058#, 14) ELSE
      '0';

  
  decode_sel_x_voltage_per_switching_state_AXI_5_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0057#, 14) ELSE
      '0';

  
  decode_sel_q_voltage_per_switching_state_AXI_5_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0056#, 14) ELSE
      '0';

  
  decode_sel_d_voltage_per_switching_state_AXI_5_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0055#, 14) ELSE
      '0';

  
  decode_sel_y_voltage_per_switching_state_AXI_4_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0054#, 14) ELSE
      '0';

  
  decode_sel_x_voltage_per_switching_state_AXI_4_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0053#, 14) ELSE
      '0';

  
  decode_sel_q_voltage_per_switching_state_AXI_4_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0052#, 14) ELSE
      '0';

  
  decode_sel_d_voltage_per_switching_state_AXI_4_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0051#, 14) ELSE
      '0';

  
  decode_sel_y_voltage_per_switching_state_AXI_3_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0050#, 14) ELSE
      '0';

  
  decode_sel_x_voltage_per_switching_state_AXI_3_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#004F#, 14) ELSE
      '0';

  
  decode_sel_q_voltage_per_switching_state_AXI_3_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#004E#, 14) ELSE
      '0';

  
  decode_sel_d_voltage_per_switching_state_AXI_3_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#004D#, 14) ELSE
      '0';

  
  decode_sel_y_voltage_per_switching_state_AXI_2_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#004C#, 14) ELSE
      '0';

  
  decode_sel_x_voltage_per_switching_state_AXI_2_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#004B#, 14) ELSE
      '0';

  
  decode_sel_q_voltage_per_switching_state_AXI_2_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#004A#, 14) ELSE
      '0';

  
  decode_sel_d_voltage_per_switching_state_AXI_2_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0049#, 14) ELSE
      '0';

  
  decode_sel_y_voltage_per_switching_state_AXI_1_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0048#, 14) ELSE
      '0';

  
  decode_sel_x_voltage_per_switching_state_AXI_1_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0047#, 14) ELSE
      '0';

  
  decode_sel_q_voltage_per_switching_state_AXI_1_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0046#, 14) ELSE
      '0';

  
  decode_sel_d_voltage_per_switching_state_AXI_1_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0045#, 14) ELSE
      '0';

  reg_ip_timestamp_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_ip_timestamp <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        read_reg_ip_timestamp <= read_ip_timestamp_unsigned;
      END IF;
    END IF;
  END PROCESS reg_ip_timestamp_process;


  
  decode_rd_ip_timestamp_1_1 <= const_0 WHEN decode_sel_ip_timestamp_1_1 = '0' ELSE
      read_reg_ip_timestamp;

  reg_d_voltage_per_switching_state_AXI_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_1 <= read_d_voltage_per_switching_state_AXI_1_signed;
      END IF;
    END IF;
  END PROCESS reg_d_voltage_per_switching_state_AXI_1_process;


  data_slice_d_voltage_per_switching_state_AXI_1_1 <= unsigned(resize(read_reg_d_voltage_per_switching_state_AXI_1, 32));

  
  decode_rd_d_voltage_per_switching_state_AXI_1_1_1 <= decode_rd_ip_timestamp_1_1 WHEN decode_sel_d_voltage_per_switching_state_AXI_1_1_1 = '0' ELSE
      data_slice_d_voltage_per_switching_state_AXI_1_1;

  reg_q_voltage_per_switching_state_AXI_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_1 <= read_q_voltage_per_switching_state_AXI_1_signed;
      END IF;
    END IF;
  END PROCESS reg_q_voltage_per_switching_state_AXI_1_process;


  data_slice_q_voltage_per_switching_state_AXI_1_1 <= unsigned(resize(read_reg_q_voltage_per_switching_state_AXI_1, 32));

  
  decode_rd_q_voltage_per_switching_state_AXI_1_1_1 <= decode_rd_d_voltage_per_switching_state_AXI_1_1_1 WHEN decode_sel_q_voltage_per_switching_state_AXI_1_1_1 = '0' ELSE
      data_slice_q_voltage_per_switching_state_AXI_1_1;

  reg_x_voltage_per_switching_state_AXI_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_1 <= read_x_voltage_per_switching_state_AXI_1_signed;
      END IF;
    END IF;
  END PROCESS reg_x_voltage_per_switching_state_AXI_1_process;


  data_slice_x_voltage_per_switching_state_AXI_1_1 <= unsigned(resize(read_reg_x_voltage_per_switching_state_AXI_1, 32));

  
  decode_rd_x_voltage_per_switching_state_AXI_1_1_1 <= decode_rd_q_voltage_per_switching_state_AXI_1_1_1 WHEN decode_sel_x_voltage_per_switching_state_AXI_1_1_1 = '0' ELSE
      data_slice_x_voltage_per_switching_state_AXI_1_1;

  reg_y_voltage_per_switching_state_AXI_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_1 <= read_y_voltage_per_switching_state_AXI_1_signed;
      END IF;
    END IF;
  END PROCESS reg_y_voltage_per_switching_state_AXI_1_process;


  data_slice_y_voltage_per_switching_state_AXI_1_1 <= unsigned(resize(read_reg_y_voltage_per_switching_state_AXI_1, 32));

  
  decode_rd_y_voltage_per_switching_state_AXI_1_1_1 <= decode_rd_x_voltage_per_switching_state_AXI_1_1_1 WHEN decode_sel_y_voltage_per_switching_state_AXI_1_1_1 = '0' ELSE
      data_slice_y_voltage_per_switching_state_AXI_1_1;

  reg_d_voltage_per_switching_state_AXI_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_2 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_2 <= read_d_voltage_per_switching_state_AXI_2_signed;
      END IF;
    END IF;
  END PROCESS reg_d_voltage_per_switching_state_AXI_2_process;


  data_slice_d_voltage_per_switching_state_AXI_2_1 <= unsigned(resize(read_reg_d_voltage_per_switching_state_AXI_2, 32));

  
  decode_rd_d_voltage_per_switching_state_AXI_2_1_1 <= decode_rd_y_voltage_per_switching_state_AXI_1_1_1 WHEN decode_sel_d_voltage_per_switching_state_AXI_2_1_1 = '0' ELSE
      data_slice_d_voltage_per_switching_state_AXI_2_1;

  reg_q_voltage_per_switching_state_AXI_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_2 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_2 <= read_q_voltage_per_switching_state_AXI_2_signed;
      END IF;
    END IF;
  END PROCESS reg_q_voltage_per_switching_state_AXI_2_process;


  data_slice_q_voltage_per_switching_state_AXI_2_1 <= unsigned(resize(read_reg_q_voltage_per_switching_state_AXI_2, 32));

  
  decode_rd_q_voltage_per_switching_state_AXI_2_1_1 <= decode_rd_d_voltage_per_switching_state_AXI_2_1_1 WHEN decode_sel_q_voltage_per_switching_state_AXI_2_1_1 = '0' ELSE
      data_slice_q_voltage_per_switching_state_AXI_2_1;

  reg_x_voltage_per_switching_state_AXI_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_2 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_2 <= read_x_voltage_per_switching_state_AXI_2_signed;
      END IF;
    END IF;
  END PROCESS reg_x_voltage_per_switching_state_AXI_2_process;


  data_slice_x_voltage_per_switching_state_AXI_2_1 <= unsigned(resize(read_reg_x_voltage_per_switching_state_AXI_2, 32));

  
  decode_rd_x_voltage_per_switching_state_AXI_2_1_1 <= decode_rd_q_voltage_per_switching_state_AXI_2_1_1 WHEN decode_sel_x_voltage_per_switching_state_AXI_2_1_1 = '0' ELSE
      data_slice_x_voltage_per_switching_state_AXI_2_1;

  reg_y_voltage_per_switching_state_AXI_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_2 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_2 <= read_y_voltage_per_switching_state_AXI_2_signed;
      END IF;
    END IF;
  END PROCESS reg_y_voltage_per_switching_state_AXI_2_process;


  data_slice_y_voltage_per_switching_state_AXI_2_1 <= unsigned(resize(read_reg_y_voltage_per_switching_state_AXI_2, 32));

  
  decode_rd_y_voltage_per_switching_state_AXI_2_1_1 <= decode_rd_x_voltage_per_switching_state_AXI_2_1_1 WHEN decode_sel_y_voltage_per_switching_state_AXI_2_1_1 = '0' ELSE
      data_slice_y_voltage_per_switching_state_AXI_2_1;

  reg_d_voltage_per_switching_state_AXI_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_3 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_3 <= read_d_voltage_per_switching_state_AXI_3_signed;
      END IF;
    END IF;
  END PROCESS reg_d_voltage_per_switching_state_AXI_3_process;


  data_slice_d_voltage_per_switching_state_AXI_3_1 <= unsigned(resize(read_reg_d_voltage_per_switching_state_AXI_3, 32));

  
  decode_rd_d_voltage_per_switching_state_AXI_3_1_1 <= decode_rd_y_voltage_per_switching_state_AXI_2_1_1 WHEN decode_sel_d_voltage_per_switching_state_AXI_3_1_1 = '0' ELSE
      data_slice_d_voltage_per_switching_state_AXI_3_1;

  reg_q_voltage_per_switching_state_AXI_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_3 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_3 <= read_q_voltage_per_switching_state_AXI_3_signed;
      END IF;
    END IF;
  END PROCESS reg_q_voltage_per_switching_state_AXI_3_process;


  data_slice_q_voltage_per_switching_state_AXI_3_1 <= unsigned(resize(read_reg_q_voltage_per_switching_state_AXI_3, 32));

  
  decode_rd_q_voltage_per_switching_state_AXI_3_1_1 <= decode_rd_d_voltage_per_switching_state_AXI_3_1_1 WHEN decode_sel_q_voltage_per_switching_state_AXI_3_1_1 = '0' ELSE
      data_slice_q_voltage_per_switching_state_AXI_3_1;

  reg_x_voltage_per_switching_state_AXI_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_3 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_3 <= read_x_voltage_per_switching_state_AXI_3_signed;
      END IF;
    END IF;
  END PROCESS reg_x_voltage_per_switching_state_AXI_3_process;


  data_slice_x_voltage_per_switching_state_AXI_3_1 <= unsigned(resize(read_reg_x_voltage_per_switching_state_AXI_3, 32));

  
  decode_rd_x_voltage_per_switching_state_AXI_3_1_1 <= decode_rd_q_voltage_per_switching_state_AXI_3_1_1 WHEN decode_sel_x_voltage_per_switching_state_AXI_3_1_1 = '0' ELSE
      data_slice_x_voltage_per_switching_state_AXI_3_1;

  reg_y_voltage_per_switching_state_AXI_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_3 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_3 <= read_y_voltage_per_switching_state_AXI_3_signed;
      END IF;
    END IF;
  END PROCESS reg_y_voltage_per_switching_state_AXI_3_process;


  data_slice_y_voltage_per_switching_state_AXI_3_1 <= unsigned(resize(read_reg_y_voltage_per_switching_state_AXI_3, 32));

  
  decode_rd_y_voltage_per_switching_state_AXI_3_1_1 <= decode_rd_x_voltage_per_switching_state_AXI_3_1_1 WHEN decode_sel_y_voltage_per_switching_state_AXI_3_1_1 = '0' ELSE
      data_slice_y_voltage_per_switching_state_AXI_3_1;

  reg_d_voltage_per_switching_state_AXI_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_4 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_4 <= read_d_voltage_per_switching_state_AXI_4_signed;
      END IF;
    END IF;
  END PROCESS reg_d_voltage_per_switching_state_AXI_4_process;


  data_slice_d_voltage_per_switching_state_AXI_4_1 <= unsigned(resize(read_reg_d_voltage_per_switching_state_AXI_4, 32));

  
  decode_rd_d_voltage_per_switching_state_AXI_4_1_1 <= decode_rd_y_voltage_per_switching_state_AXI_3_1_1 WHEN decode_sel_d_voltage_per_switching_state_AXI_4_1_1 = '0' ELSE
      data_slice_d_voltage_per_switching_state_AXI_4_1;

  reg_q_voltage_per_switching_state_AXI_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_4 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_4 <= read_q_voltage_per_switching_state_AXI_4_signed;
      END IF;
    END IF;
  END PROCESS reg_q_voltage_per_switching_state_AXI_4_process;


  data_slice_q_voltage_per_switching_state_AXI_4_1 <= unsigned(resize(read_reg_q_voltage_per_switching_state_AXI_4, 32));

  
  decode_rd_q_voltage_per_switching_state_AXI_4_1_1 <= decode_rd_d_voltage_per_switching_state_AXI_4_1_1 WHEN decode_sel_q_voltage_per_switching_state_AXI_4_1_1 = '0' ELSE
      data_slice_q_voltage_per_switching_state_AXI_4_1;

  reg_x_voltage_per_switching_state_AXI_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_4 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_4 <= read_x_voltage_per_switching_state_AXI_4_signed;
      END IF;
    END IF;
  END PROCESS reg_x_voltage_per_switching_state_AXI_4_process;


  data_slice_x_voltage_per_switching_state_AXI_4_1 <= unsigned(resize(read_reg_x_voltage_per_switching_state_AXI_4, 32));

  
  decode_rd_x_voltage_per_switching_state_AXI_4_1_1 <= decode_rd_q_voltage_per_switching_state_AXI_4_1_1 WHEN decode_sel_x_voltage_per_switching_state_AXI_4_1_1 = '0' ELSE
      data_slice_x_voltage_per_switching_state_AXI_4_1;

  reg_y_voltage_per_switching_state_AXI_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_4 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_4 <= read_y_voltage_per_switching_state_AXI_4_signed;
      END IF;
    END IF;
  END PROCESS reg_y_voltage_per_switching_state_AXI_4_process;


  data_slice_y_voltage_per_switching_state_AXI_4_1 <= unsigned(resize(read_reg_y_voltage_per_switching_state_AXI_4, 32));

  
  decode_rd_y_voltage_per_switching_state_AXI_4_1_1 <= decode_rd_x_voltage_per_switching_state_AXI_4_1_1 WHEN decode_sel_y_voltage_per_switching_state_AXI_4_1_1 = '0' ELSE
      data_slice_y_voltage_per_switching_state_AXI_4_1;

  reg_d_voltage_per_switching_state_AXI_5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_5 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_5 <= read_d_voltage_per_switching_state_AXI_5_signed;
      END IF;
    END IF;
  END PROCESS reg_d_voltage_per_switching_state_AXI_5_process;


  data_slice_d_voltage_per_switching_state_AXI_5_1 <= unsigned(resize(read_reg_d_voltage_per_switching_state_AXI_5, 32));

  
  decode_rd_d_voltage_per_switching_state_AXI_5_1_1 <= decode_rd_y_voltage_per_switching_state_AXI_4_1_1 WHEN decode_sel_d_voltage_per_switching_state_AXI_5_1_1 = '0' ELSE
      data_slice_d_voltage_per_switching_state_AXI_5_1;

  reg_q_voltage_per_switching_state_AXI_5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_5 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_5 <= read_q_voltage_per_switching_state_AXI_5_signed;
      END IF;
    END IF;
  END PROCESS reg_q_voltage_per_switching_state_AXI_5_process;


  data_slice_q_voltage_per_switching_state_AXI_5_1 <= unsigned(resize(read_reg_q_voltage_per_switching_state_AXI_5, 32));

  
  decode_rd_q_voltage_per_switching_state_AXI_5_1_1 <= decode_rd_d_voltage_per_switching_state_AXI_5_1_1 WHEN decode_sel_q_voltage_per_switching_state_AXI_5_1_1 = '0' ELSE
      data_slice_q_voltage_per_switching_state_AXI_5_1;

  reg_x_voltage_per_switching_state_AXI_5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_5 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_5 <= read_x_voltage_per_switching_state_AXI_5_signed;
      END IF;
    END IF;
  END PROCESS reg_x_voltage_per_switching_state_AXI_5_process;


  data_slice_x_voltage_per_switching_state_AXI_5_1 <= unsigned(resize(read_reg_x_voltage_per_switching_state_AXI_5, 32));

  
  decode_rd_x_voltage_per_switching_state_AXI_5_1_1 <= decode_rd_q_voltage_per_switching_state_AXI_5_1_1 WHEN decode_sel_x_voltage_per_switching_state_AXI_5_1_1 = '0' ELSE
      data_slice_x_voltage_per_switching_state_AXI_5_1;

  reg_y_voltage_per_switching_state_AXI_5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_5 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_5 <= read_y_voltage_per_switching_state_AXI_5_signed;
      END IF;
    END IF;
  END PROCESS reg_y_voltage_per_switching_state_AXI_5_process;


  data_slice_y_voltage_per_switching_state_AXI_5_1 <= unsigned(resize(read_reg_y_voltage_per_switching_state_AXI_5, 32));

  
  decode_rd_y_voltage_per_switching_state_AXI_5_1_1 <= decode_rd_x_voltage_per_switching_state_AXI_5_1_1 WHEN decode_sel_y_voltage_per_switching_state_AXI_5_1_1 = '0' ELSE
      data_slice_y_voltage_per_switching_state_AXI_5_1;

  reg_d_voltage_per_switching_state_AXI_6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_6 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_6 <= read_d_voltage_per_switching_state_AXI_6_signed;
      END IF;
    END IF;
  END PROCESS reg_d_voltage_per_switching_state_AXI_6_process;


  data_slice_d_voltage_per_switching_state_AXI_6_1 <= unsigned(resize(read_reg_d_voltage_per_switching_state_AXI_6, 32));

  
  decode_rd_d_voltage_per_switching_state_AXI_6_1_1 <= decode_rd_y_voltage_per_switching_state_AXI_5_1_1 WHEN decode_sel_d_voltage_per_switching_state_AXI_6_1_1 = '0' ELSE
      data_slice_d_voltage_per_switching_state_AXI_6_1;

  reg_q_voltage_per_switching_state_AXI_6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_6 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_6 <= read_q_voltage_per_switching_state_AXI_6_signed;
      END IF;
    END IF;
  END PROCESS reg_q_voltage_per_switching_state_AXI_6_process;


  data_slice_q_voltage_per_switching_state_AXI_6_1 <= unsigned(resize(read_reg_q_voltage_per_switching_state_AXI_6, 32));

  
  decode_rd_q_voltage_per_switching_state_AXI_6_1_1 <= decode_rd_d_voltage_per_switching_state_AXI_6_1_1 WHEN decode_sel_q_voltage_per_switching_state_AXI_6_1_1 = '0' ELSE
      data_slice_q_voltage_per_switching_state_AXI_6_1;

  reg_x_voltage_per_switching_state_AXI_6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_6 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_6 <= read_x_voltage_per_switching_state_AXI_6_signed;
      END IF;
    END IF;
  END PROCESS reg_x_voltage_per_switching_state_AXI_6_process;


  data_slice_x_voltage_per_switching_state_AXI_6_1 <= unsigned(resize(read_reg_x_voltage_per_switching_state_AXI_6, 32));

  
  decode_rd_x_voltage_per_switching_state_AXI_6_1_1 <= decode_rd_q_voltage_per_switching_state_AXI_6_1_1 WHEN decode_sel_x_voltage_per_switching_state_AXI_6_1_1 = '0' ELSE
      data_slice_x_voltage_per_switching_state_AXI_6_1;

  reg_y_voltage_per_switching_state_AXI_6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_6 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_6 <= read_y_voltage_per_switching_state_AXI_6_signed;
      END IF;
    END IF;
  END PROCESS reg_y_voltage_per_switching_state_AXI_6_process;


  data_slice_y_voltage_per_switching_state_AXI_6_1 <= unsigned(resize(read_reg_y_voltage_per_switching_state_AXI_6, 32));

  
  decode_rd_y_voltage_per_switching_state_AXI_6_1_1 <= decode_rd_x_voltage_per_switching_state_AXI_6_1_1 WHEN decode_sel_y_voltage_per_switching_state_AXI_6_1_1 = '0' ELSE
      data_slice_y_voltage_per_switching_state_AXI_6_1;

  reg_d_voltage_per_switching_state_AXI_7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_7 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_7 <= read_d_voltage_per_switching_state_AXI_7_signed;
      END IF;
    END IF;
  END PROCESS reg_d_voltage_per_switching_state_AXI_7_process;


  data_slice_d_voltage_per_switching_state_AXI_7_1 <= unsigned(resize(read_reg_d_voltage_per_switching_state_AXI_7, 32));

  
  decode_rd_d_voltage_per_switching_state_AXI_7_1_1 <= decode_rd_y_voltage_per_switching_state_AXI_6_1_1 WHEN decode_sel_d_voltage_per_switching_state_AXI_7_1_1 = '0' ELSE
      data_slice_d_voltage_per_switching_state_AXI_7_1;

  reg_q_voltage_per_switching_state_AXI_7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_7 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_7 <= read_q_voltage_per_switching_state_AXI_7_signed;
      END IF;
    END IF;
  END PROCESS reg_q_voltage_per_switching_state_AXI_7_process;


  data_slice_q_voltage_per_switching_state_AXI_7_1 <= unsigned(resize(read_reg_q_voltage_per_switching_state_AXI_7, 32));

  
  decode_rd_q_voltage_per_switching_state_AXI_7_1_1 <= decode_rd_d_voltage_per_switching_state_AXI_7_1_1 WHEN decode_sel_q_voltage_per_switching_state_AXI_7_1_1 = '0' ELSE
      data_slice_q_voltage_per_switching_state_AXI_7_1;

  reg_x_voltage_per_switching_state_AXI_7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_7 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_7 <= read_x_voltage_per_switching_state_AXI_7_signed;
      END IF;
    END IF;
  END PROCESS reg_x_voltage_per_switching_state_AXI_7_process;


  data_slice_x_voltage_per_switching_state_AXI_7_1 <= unsigned(resize(read_reg_x_voltage_per_switching_state_AXI_7, 32));

  
  decode_rd_x_voltage_per_switching_state_AXI_7_1_1 <= decode_rd_q_voltage_per_switching_state_AXI_7_1_1 WHEN decode_sel_x_voltage_per_switching_state_AXI_7_1_1 = '0' ELSE
      data_slice_x_voltage_per_switching_state_AXI_7_1;

  reg_y_voltage_per_switching_state_AXI_7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_7 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_7 <= read_y_voltage_per_switching_state_AXI_7_signed;
      END IF;
    END IF;
  END PROCESS reg_y_voltage_per_switching_state_AXI_7_process;


  data_slice_y_voltage_per_switching_state_AXI_7_1 <= unsigned(resize(read_reg_y_voltage_per_switching_state_AXI_7, 32));

  
  decode_rd_y_voltage_per_switching_state_AXI_7_1_1 <= decode_rd_x_voltage_per_switching_state_AXI_7_1_1 WHEN decode_sel_y_voltage_per_switching_state_AXI_7_1_1 = '0' ELSE
      data_slice_y_voltage_per_switching_state_AXI_7_1;

  reg_d_voltage_per_switching_state_AXI_8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_8 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_8 <= read_d_voltage_per_switching_state_AXI_8_signed;
      END IF;
    END IF;
  END PROCESS reg_d_voltage_per_switching_state_AXI_8_process;


  data_slice_d_voltage_per_switching_state_AXI_8_1 <= unsigned(resize(read_reg_d_voltage_per_switching_state_AXI_8, 32));

  
  decode_rd_d_voltage_per_switching_state_AXI_8_1_1 <= decode_rd_y_voltage_per_switching_state_AXI_7_1_1 WHEN decode_sel_d_voltage_per_switching_state_AXI_8_1_1 = '0' ELSE
      data_slice_d_voltage_per_switching_state_AXI_8_1;

  reg_q_voltage_per_switching_state_AXI_8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_8 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_8 <= read_q_voltage_per_switching_state_AXI_8_signed;
      END IF;
    END IF;
  END PROCESS reg_q_voltage_per_switching_state_AXI_8_process;


  data_slice_q_voltage_per_switching_state_AXI_8_1 <= unsigned(resize(read_reg_q_voltage_per_switching_state_AXI_8, 32));

  
  decode_rd_q_voltage_per_switching_state_AXI_8_1_1 <= decode_rd_d_voltage_per_switching_state_AXI_8_1_1 WHEN decode_sel_q_voltage_per_switching_state_AXI_8_1_1 = '0' ELSE
      data_slice_q_voltage_per_switching_state_AXI_8_1;

  reg_x_voltage_per_switching_state_AXI_8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_8 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_8 <= read_x_voltage_per_switching_state_AXI_8_signed;
      END IF;
    END IF;
  END PROCESS reg_x_voltage_per_switching_state_AXI_8_process;


  data_slice_x_voltage_per_switching_state_AXI_8_1 <= unsigned(resize(read_reg_x_voltage_per_switching_state_AXI_8, 32));

  
  decode_rd_x_voltage_per_switching_state_AXI_8_1_1 <= decode_rd_q_voltage_per_switching_state_AXI_8_1_1 WHEN decode_sel_x_voltage_per_switching_state_AXI_8_1_1 = '0' ELSE
      data_slice_x_voltage_per_switching_state_AXI_8_1;

  reg_y_voltage_per_switching_state_AXI_8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_8 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_8 <= read_y_voltage_per_switching_state_AXI_8_signed;
      END IF;
    END IF;
  END PROCESS reg_y_voltage_per_switching_state_AXI_8_process;


  data_slice_y_voltage_per_switching_state_AXI_8_1 <= unsigned(resize(read_reg_y_voltage_per_switching_state_AXI_8, 32));

  
  decode_rd_y_voltage_per_switching_state_AXI_8_1_1 <= decode_rd_x_voltage_per_switching_state_AXI_8_1_1 WHEN decode_sel_y_voltage_per_switching_state_AXI_8_1_1 = '0' ELSE
      data_slice_y_voltage_per_switching_state_AXI_8_1;

  reg_d_voltage_per_switching_state_AXI_9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_9 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_9 <= read_d_voltage_per_switching_state_AXI_9_signed;
      END IF;
    END IF;
  END PROCESS reg_d_voltage_per_switching_state_AXI_9_process;


  data_slice_d_voltage_per_switching_state_AXI_9_1 <= unsigned(resize(read_reg_d_voltage_per_switching_state_AXI_9, 32));

  
  decode_rd_d_voltage_per_switching_state_AXI_9_1_1 <= decode_rd_y_voltage_per_switching_state_AXI_8_1_1 WHEN decode_sel_d_voltage_per_switching_state_AXI_9_1_1 = '0' ELSE
      data_slice_d_voltage_per_switching_state_AXI_9_1;

  reg_q_voltage_per_switching_state_AXI_9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_9 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_9 <= read_q_voltage_per_switching_state_AXI_9_signed;
      END IF;
    END IF;
  END PROCESS reg_q_voltage_per_switching_state_AXI_9_process;


  data_slice_q_voltage_per_switching_state_AXI_9_1 <= unsigned(resize(read_reg_q_voltage_per_switching_state_AXI_9, 32));

  
  read_opt_reg_out_q_voltage_per_switching_state_AXI_9_1_1 <= decode_rd_d_voltage_per_switching_state_AXI_9_1_1 WHEN decode_sel_q_voltage_per_switching_state_AXI_9_1_1 = '0' ELSE
      data_slice_q_voltage_per_switching_state_AXI_9_1;

  read_opt_reg_q_voltage_per_switching_state_AXI_9_1_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        decode_rd_q_voltage_per_switching_state_AXI_9_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        decode_rd_q_voltage_per_switching_state_AXI_9_1_1 <= read_opt_reg_out_q_voltage_per_switching_state_AXI_9_1_1;
      END IF;
    END IF;
  END PROCESS read_opt_reg_q_voltage_per_switching_state_AXI_9_1_1_process;


  read_x_voltage_per_switching_state_AXI_9_signed <= signed(read_x_voltage_per_switching_state_AXI_9);

  reg_x_voltage_per_switching_state_AXI_9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_9 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_9 <= read_x_voltage_per_switching_state_AXI_9_signed;
      END IF;
    END IF;
  END PROCESS reg_x_voltage_per_switching_state_AXI_9_process;


  data_slice_x_voltage_per_switching_state_AXI_9_1 <= unsigned(resize(read_reg_x_voltage_per_switching_state_AXI_9, 32));

  reg_hSelSignalDelay_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_y_voltage_per_switching_state_AXI_9_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_y_voltage_per_switching_state_AXI_9_1_1 <= decode_sel_y_voltage_per_switching_state_AXI_9_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_1_process;


  reg_data_read_middle_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_x_voltage_per_switching_state_AXI_9_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_x_voltage_per_switching_state_AXI_9_1_1 <= data_slice_x_voltage_per_switching_state_AXI_9_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_process;


  
  decode_rd_x_voltage_per_switching_state_AXI_9_1_1 <= decode_rd_q_voltage_per_switching_state_AXI_9_1_1 WHEN hSelSignalDelay_x_voltage_per_switching_state_AXI_9_1_1 = '0' ELSE
      reg_data_read_middle_x_voltage_per_switching_state_AXI_9_1_1;

  read_y_voltage_per_switching_state_AXI_9_signed <= signed(read_y_voltage_per_switching_state_AXI_9);

  reg_y_voltage_per_switching_state_AXI_9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_9 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_9 <= read_y_voltage_per_switching_state_AXI_9_signed;
      END IF;
    END IF;
  END PROCESS reg_y_voltage_per_switching_state_AXI_9_process;


  data_slice_y_voltage_per_switching_state_AXI_9_1 <= unsigned(resize(read_reg_y_voltage_per_switching_state_AXI_9, 32));

  reg_hSelSignalDelay_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_d_voltage_per_switching_state_AXI_10_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_d_voltage_per_switching_state_AXI_10_1_1 <= decode_sel_d_voltage_per_switching_state_AXI_10_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_2_process;


  reg_data_read_middle_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_y_voltage_per_switching_state_AXI_9_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_y_voltage_per_switching_state_AXI_9_1_1 <= data_slice_y_voltage_per_switching_state_AXI_9_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_1_process;


  
  decode_rd_y_voltage_per_switching_state_AXI_9_1_1 <= decode_rd_x_voltage_per_switching_state_AXI_9_1_1 WHEN hSelSignalDelay_y_voltage_per_switching_state_AXI_9_1_1 = '0' ELSE
      reg_data_read_middle_y_voltage_per_switching_state_AXI_9_1_1;

  read_d_voltage_per_switching_state_AXI_10_signed <= signed(read_d_voltage_per_switching_state_AXI_10);

  reg_d_voltage_per_switching_state_AXI_10_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_10 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_10 <= read_d_voltage_per_switching_state_AXI_10_signed;
      END IF;
    END IF;
  END PROCESS reg_d_voltage_per_switching_state_AXI_10_process;


  data_slice_d_voltage_per_switching_state_AXI_10_1 <= unsigned(resize(read_reg_d_voltage_per_switching_state_AXI_10, 32));

  reg_hSelSignalDelay_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_q_voltage_per_switching_state_AXI_10_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_q_voltage_per_switching_state_AXI_10_1_1 <= decode_sel_q_voltage_per_switching_state_AXI_10_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_3_process;


  reg_data_read_middle_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_d_voltage_per_switching_state_AXI_10_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_d_voltage_per_switching_state_AXI_10_1_1 <= data_slice_d_voltage_per_switching_state_AXI_10_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_2_process;


  
  decode_rd_d_voltage_per_switching_state_AXI_10_1_1 <= decode_rd_y_voltage_per_switching_state_AXI_9_1_1 WHEN hSelSignalDelay_d_voltage_per_switching_state_AXI_10_1_1 = '0' ELSE
      reg_data_read_middle_d_voltage_per_switching_state_AXI_10_1_1;

  read_q_voltage_per_switching_state_AXI_10_signed <= signed(read_q_voltage_per_switching_state_AXI_10);

  reg_q_voltage_per_switching_state_AXI_10_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_10 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_10 <= read_q_voltage_per_switching_state_AXI_10_signed;
      END IF;
    END IF;
  END PROCESS reg_q_voltage_per_switching_state_AXI_10_process;


  data_slice_q_voltage_per_switching_state_AXI_10_1 <= unsigned(resize(read_reg_q_voltage_per_switching_state_AXI_10, 32));

  reg_hSelSignalDelay_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_x_voltage_per_switching_state_AXI_10_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_x_voltage_per_switching_state_AXI_10_1_1 <= decode_sel_x_voltage_per_switching_state_AXI_10_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_4_process;


  reg_data_read_middle_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_q_voltage_per_switching_state_AXI_10_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_q_voltage_per_switching_state_AXI_10_1_1 <= data_slice_q_voltage_per_switching_state_AXI_10_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_3_process;


  
  decode_rd_q_voltage_per_switching_state_AXI_10_1_1 <= decode_rd_d_voltage_per_switching_state_AXI_10_1_1 WHEN hSelSignalDelay_q_voltage_per_switching_state_AXI_10_1_1 = '0' ELSE
      reg_data_read_middle_q_voltage_per_switching_state_AXI_10_1_1;

  read_x_voltage_per_switching_state_AXI_10_signed <= signed(read_x_voltage_per_switching_state_AXI_10);

  reg_x_voltage_per_switching_state_AXI_10_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_10 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_10 <= read_x_voltage_per_switching_state_AXI_10_signed;
      END IF;
    END IF;
  END PROCESS reg_x_voltage_per_switching_state_AXI_10_process;


  data_slice_x_voltage_per_switching_state_AXI_10_1 <= unsigned(resize(read_reg_x_voltage_per_switching_state_AXI_10, 32));

  reg_hSelSignalDelay_5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_y_voltage_per_switching_state_AXI_10_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_y_voltage_per_switching_state_AXI_10_1_1 <= decode_sel_y_voltage_per_switching_state_AXI_10_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_5_process;


  reg_data_read_middle_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_x_voltage_per_switching_state_AXI_10_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_x_voltage_per_switching_state_AXI_10_1_1 <= data_slice_x_voltage_per_switching_state_AXI_10_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_4_process;


  
  decode_rd_x_voltage_per_switching_state_AXI_10_1_1 <= decode_rd_q_voltage_per_switching_state_AXI_10_1_1 WHEN hSelSignalDelay_x_voltage_per_switching_state_AXI_10_1_1 = '0' ELSE
      reg_data_read_middle_x_voltage_per_switching_state_AXI_10_1_1;

  read_y_voltage_per_switching_state_AXI_10_signed <= signed(read_y_voltage_per_switching_state_AXI_10);

  reg_y_voltage_per_switching_state_AXI_10_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_10 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_10 <= read_y_voltage_per_switching_state_AXI_10_signed;
      END IF;
    END IF;
  END PROCESS reg_y_voltage_per_switching_state_AXI_10_process;


  data_slice_y_voltage_per_switching_state_AXI_10_1 <= unsigned(resize(read_reg_y_voltage_per_switching_state_AXI_10, 32));

  reg_hSelSignalDelay_6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_d_voltage_per_switching_state_AXI_11_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_d_voltage_per_switching_state_AXI_11_1_1 <= decode_sel_d_voltage_per_switching_state_AXI_11_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_6_process;


  reg_data_read_middle_5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_y_voltage_per_switching_state_AXI_10_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_y_voltage_per_switching_state_AXI_10_1_1 <= data_slice_y_voltage_per_switching_state_AXI_10_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_5_process;


  
  decode_rd_y_voltage_per_switching_state_AXI_10_1_1 <= decode_rd_x_voltage_per_switching_state_AXI_10_1_1 WHEN hSelSignalDelay_y_voltage_per_switching_state_AXI_10_1_1 = '0' ELSE
      reg_data_read_middle_y_voltage_per_switching_state_AXI_10_1_1;

  read_d_voltage_per_switching_state_AXI_11_signed <= signed(read_d_voltage_per_switching_state_AXI_11);

  reg_d_voltage_per_switching_state_AXI_11_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_11 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_11 <= read_d_voltage_per_switching_state_AXI_11_signed;
      END IF;
    END IF;
  END PROCESS reg_d_voltage_per_switching_state_AXI_11_process;


  data_slice_d_voltage_per_switching_state_AXI_11_1 <= unsigned(resize(read_reg_d_voltage_per_switching_state_AXI_11, 32));

  reg_hSelSignalDelay_7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_q_voltage_per_switching_state_AXI_11_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_q_voltage_per_switching_state_AXI_11_1_1 <= decode_sel_q_voltage_per_switching_state_AXI_11_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_7_process;


  reg_data_read_middle_6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_d_voltage_per_switching_state_AXI_11_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_d_voltage_per_switching_state_AXI_11_1_1 <= data_slice_d_voltage_per_switching_state_AXI_11_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_6_process;


  
  decode_rd_d_voltage_per_switching_state_AXI_11_1_1 <= decode_rd_y_voltage_per_switching_state_AXI_10_1_1 WHEN hSelSignalDelay_d_voltage_per_switching_state_AXI_11_1_1 = '0' ELSE
      reg_data_read_middle_d_voltage_per_switching_state_AXI_11_1_1;

  read_q_voltage_per_switching_state_AXI_11_signed <= signed(read_q_voltage_per_switching_state_AXI_11);

  reg_q_voltage_per_switching_state_AXI_11_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_11 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_11 <= read_q_voltage_per_switching_state_AXI_11_signed;
      END IF;
    END IF;
  END PROCESS reg_q_voltage_per_switching_state_AXI_11_process;


  data_slice_q_voltage_per_switching_state_AXI_11_1 <= unsigned(resize(read_reg_q_voltage_per_switching_state_AXI_11, 32));

  reg_hSelSignalDelay_8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_x_voltage_per_switching_state_AXI_11_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_x_voltage_per_switching_state_AXI_11_1_1 <= decode_sel_x_voltage_per_switching_state_AXI_11_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_8_process;


  reg_data_read_middle_7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_q_voltage_per_switching_state_AXI_11_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_q_voltage_per_switching_state_AXI_11_1_1 <= data_slice_q_voltage_per_switching_state_AXI_11_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_7_process;


  
  decode_rd_q_voltage_per_switching_state_AXI_11_1_1 <= decode_rd_d_voltage_per_switching_state_AXI_11_1_1 WHEN hSelSignalDelay_q_voltage_per_switching_state_AXI_11_1_1 = '0' ELSE
      reg_data_read_middle_q_voltage_per_switching_state_AXI_11_1_1;

  read_x_voltage_per_switching_state_AXI_11_signed <= signed(read_x_voltage_per_switching_state_AXI_11);

  reg_x_voltage_per_switching_state_AXI_11_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_11 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_11 <= read_x_voltage_per_switching_state_AXI_11_signed;
      END IF;
    END IF;
  END PROCESS reg_x_voltage_per_switching_state_AXI_11_process;


  data_slice_x_voltage_per_switching_state_AXI_11_1 <= unsigned(resize(read_reg_x_voltage_per_switching_state_AXI_11, 32));

  reg_hSelSignalDelay_9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_y_voltage_per_switching_state_AXI_11_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_y_voltage_per_switching_state_AXI_11_1_1 <= decode_sel_y_voltage_per_switching_state_AXI_11_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_9_process;


  reg_data_read_middle_8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_x_voltage_per_switching_state_AXI_11_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_x_voltage_per_switching_state_AXI_11_1_1 <= data_slice_x_voltage_per_switching_state_AXI_11_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_8_process;


  
  decode_rd_x_voltage_per_switching_state_AXI_11_1_1 <= decode_rd_q_voltage_per_switching_state_AXI_11_1_1 WHEN hSelSignalDelay_x_voltage_per_switching_state_AXI_11_1_1 = '0' ELSE
      reg_data_read_middle_x_voltage_per_switching_state_AXI_11_1_1;

  read_y_voltage_per_switching_state_AXI_11_signed <= signed(read_y_voltage_per_switching_state_AXI_11);

  reg_y_voltage_per_switching_state_AXI_11_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_11 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_11 <= read_y_voltage_per_switching_state_AXI_11_signed;
      END IF;
    END IF;
  END PROCESS reg_y_voltage_per_switching_state_AXI_11_process;


  data_slice_y_voltage_per_switching_state_AXI_11_1 <= unsigned(resize(read_reg_y_voltage_per_switching_state_AXI_11, 32));

  reg_hSelSignalDelay_10_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_d_voltage_per_switching_state_AXI_12_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_d_voltage_per_switching_state_AXI_12_1_1 <= decode_sel_d_voltage_per_switching_state_AXI_12_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_10_process;


  reg_data_read_middle_9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_y_voltage_per_switching_state_AXI_11_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_y_voltage_per_switching_state_AXI_11_1_1 <= data_slice_y_voltage_per_switching_state_AXI_11_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_9_process;


  
  decode_rd_y_voltage_per_switching_state_AXI_11_1_1 <= decode_rd_x_voltage_per_switching_state_AXI_11_1_1 WHEN hSelSignalDelay_y_voltage_per_switching_state_AXI_11_1_1 = '0' ELSE
      reg_data_read_middle_y_voltage_per_switching_state_AXI_11_1_1;

  read_d_voltage_per_switching_state_AXI_12_signed <= signed(read_d_voltage_per_switching_state_AXI_12);

  reg_d_voltage_per_switching_state_AXI_12_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_12 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_12 <= read_d_voltage_per_switching_state_AXI_12_signed;
      END IF;
    END IF;
  END PROCESS reg_d_voltage_per_switching_state_AXI_12_process;


  data_slice_d_voltage_per_switching_state_AXI_12_1 <= unsigned(resize(read_reg_d_voltage_per_switching_state_AXI_12, 32));

  reg_hSelSignalDelay_11_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_q_voltage_per_switching_state_AXI_12_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_q_voltage_per_switching_state_AXI_12_1_1 <= decode_sel_q_voltage_per_switching_state_AXI_12_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_11_process;


  reg_data_read_middle_10_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_d_voltage_per_switching_state_AXI_12_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_d_voltage_per_switching_state_AXI_12_1_1 <= data_slice_d_voltage_per_switching_state_AXI_12_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_10_process;


  
  decode_rd_d_voltage_per_switching_state_AXI_12_1_1 <= decode_rd_y_voltage_per_switching_state_AXI_11_1_1 WHEN hSelSignalDelay_d_voltage_per_switching_state_AXI_12_1_1 = '0' ELSE
      reg_data_read_middle_d_voltage_per_switching_state_AXI_12_1_1;

  read_q_voltage_per_switching_state_AXI_12_signed <= signed(read_q_voltage_per_switching_state_AXI_12);

  reg_q_voltage_per_switching_state_AXI_12_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_12 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_12 <= read_q_voltage_per_switching_state_AXI_12_signed;
      END IF;
    END IF;
  END PROCESS reg_q_voltage_per_switching_state_AXI_12_process;


  data_slice_q_voltage_per_switching_state_AXI_12_1 <= unsigned(resize(read_reg_q_voltage_per_switching_state_AXI_12, 32));

  reg_hSelSignalDelay_12_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_x_voltage_per_switching_state_AXI_12_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_x_voltage_per_switching_state_AXI_12_1_1 <= decode_sel_x_voltage_per_switching_state_AXI_12_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_12_process;


  reg_data_read_middle_11_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_q_voltage_per_switching_state_AXI_12_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_q_voltage_per_switching_state_AXI_12_1_1 <= data_slice_q_voltage_per_switching_state_AXI_12_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_11_process;


  
  decode_rd_q_voltage_per_switching_state_AXI_12_1_1 <= decode_rd_d_voltage_per_switching_state_AXI_12_1_1 WHEN hSelSignalDelay_q_voltage_per_switching_state_AXI_12_1_1 = '0' ELSE
      reg_data_read_middle_q_voltage_per_switching_state_AXI_12_1_1;

  read_x_voltage_per_switching_state_AXI_12_signed <= signed(read_x_voltage_per_switching_state_AXI_12);

  reg_x_voltage_per_switching_state_AXI_12_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_12 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_12 <= read_x_voltage_per_switching_state_AXI_12_signed;
      END IF;
    END IF;
  END PROCESS reg_x_voltage_per_switching_state_AXI_12_process;


  data_slice_x_voltage_per_switching_state_AXI_12_1 <= unsigned(resize(read_reg_x_voltage_per_switching_state_AXI_12, 32));

  reg_hSelSignalDelay_13_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_y_voltage_per_switching_state_AXI_12_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_y_voltage_per_switching_state_AXI_12_1_1 <= decode_sel_y_voltage_per_switching_state_AXI_12_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_13_process;


  reg_data_read_middle_12_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_x_voltage_per_switching_state_AXI_12_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_x_voltage_per_switching_state_AXI_12_1_1 <= data_slice_x_voltage_per_switching_state_AXI_12_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_12_process;


  
  decode_rd_x_voltage_per_switching_state_AXI_12_1_1 <= decode_rd_q_voltage_per_switching_state_AXI_12_1_1 WHEN hSelSignalDelay_x_voltage_per_switching_state_AXI_12_1_1 = '0' ELSE
      reg_data_read_middle_x_voltage_per_switching_state_AXI_12_1_1;

  read_y_voltage_per_switching_state_AXI_12_signed <= signed(read_y_voltage_per_switching_state_AXI_12);

  reg_y_voltage_per_switching_state_AXI_12_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_12 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_12 <= read_y_voltage_per_switching_state_AXI_12_signed;
      END IF;
    END IF;
  END PROCESS reg_y_voltage_per_switching_state_AXI_12_process;


  data_slice_y_voltage_per_switching_state_AXI_12_1 <= unsigned(resize(read_reg_y_voltage_per_switching_state_AXI_12, 32));

  reg_hSelSignalDelay_14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_d_voltage_per_switching_state_AXI_13_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_d_voltage_per_switching_state_AXI_13_1_1 <= decode_sel_d_voltage_per_switching_state_AXI_13_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_14_process;


  reg_data_read_middle_13_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_y_voltage_per_switching_state_AXI_12_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_y_voltage_per_switching_state_AXI_12_1_1 <= data_slice_y_voltage_per_switching_state_AXI_12_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_13_process;


  
  decode_rd_y_voltage_per_switching_state_AXI_12_1_1 <= decode_rd_x_voltage_per_switching_state_AXI_12_1_1 WHEN hSelSignalDelay_y_voltage_per_switching_state_AXI_12_1_1 = '0' ELSE
      reg_data_read_middle_y_voltage_per_switching_state_AXI_12_1_1;

  read_d_voltage_per_switching_state_AXI_13_signed <= signed(read_d_voltage_per_switching_state_AXI_13);

  reg_d_voltage_per_switching_state_AXI_13_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_13 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_13 <= read_d_voltage_per_switching_state_AXI_13_signed;
      END IF;
    END IF;
  END PROCESS reg_d_voltage_per_switching_state_AXI_13_process;


  data_slice_d_voltage_per_switching_state_AXI_13_1 <= unsigned(resize(read_reg_d_voltage_per_switching_state_AXI_13, 32));

  reg_hSelSignalDelay_15_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_q_voltage_per_switching_state_AXI_13_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_q_voltage_per_switching_state_AXI_13_1_1 <= decode_sel_q_voltage_per_switching_state_AXI_13_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_15_process;


  reg_data_read_middle_14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_d_voltage_per_switching_state_AXI_13_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_d_voltage_per_switching_state_AXI_13_1_1 <= data_slice_d_voltage_per_switching_state_AXI_13_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_14_process;


  
  decode_rd_d_voltage_per_switching_state_AXI_13_1_1 <= decode_rd_y_voltage_per_switching_state_AXI_12_1_1 WHEN hSelSignalDelay_d_voltage_per_switching_state_AXI_13_1_1 = '0' ELSE
      reg_data_read_middle_d_voltage_per_switching_state_AXI_13_1_1;

  read_q_voltage_per_switching_state_AXI_13_signed <= signed(read_q_voltage_per_switching_state_AXI_13);

  reg_q_voltage_per_switching_state_AXI_13_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_13 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_13 <= read_q_voltage_per_switching_state_AXI_13_signed;
      END IF;
    END IF;
  END PROCESS reg_q_voltage_per_switching_state_AXI_13_process;


  data_slice_q_voltage_per_switching_state_AXI_13_1 <= unsigned(resize(read_reg_q_voltage_per_switching_state_AXI_13, 32));

  reg_hSelSignalDelay_16_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_x_voltage_per_switching_state_AXI_13_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_x_voltage_per_switching_state_AXI_13_1_1 <= decode_sel_x_voltage_per_switching_state_AXI_13_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_16_process;


  reg_data_read_middle_15_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_q_voltage_per_switching_state_AXI_13_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_q_voltage_per_switching_state_AXI_13_1_1 <= data_slice_q_voltage_per_switching_state_AXI_13_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_15_process;


  
  decode_rd_q_voltage_per_switching_state_AXI_13_1_1 <= decode_rd_d_voltage_per_switching_state_AXI_13_1_1 WHEN hSelSignalDelay_q_voltage_per_switching_state_AXI_13_1_1 = '0' ELSE
      reg_data_read_middle_q_voltage_per_switching_state_AXI_13_1_1;

  read_x_voltage_per_switching_state_AXI_13_signed <= signed(read_x_voltage_per_switching_state_AXI_13);

  reg_x_voltage_per_switching_state_AXI_13_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_13 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_13 <= read_x_voltage_per_switching_state_AXI_13_signed;
      END IF;
    END IF;
  END PROCESS reg_x_voltage_per_switching_state_AXI_13_process;


  data_slice_x_voltage_per_switching_state_AXI_13_1 <= unsigned(resize(read_reg_x_voltage_per_switching_state_AXI_13, 32));

  reg_hSelSignalDelay_17_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_y_voltage_per_switching_state_AXI_13_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_y_voltage_per_switching_state_AXI_13_1_1 <= decode_sel_y_voltage_per_switching_state_AXI_13_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_17_process;


  reg_data_read_middle_16_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_x_voltage_per_switching_state_AXI_13_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_x_voltage_per_switching_state_AXI_13_1_1 <= data_slice_x_voltage_per_switching_state_AXI_13_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_16_process;


  
  decode_rd_x_voltage_per_switching_state_AXI_13_1_1 <= decode_rd_q_voltage_per_switching_state_AXI_13_1_1 WHEN hSelSignalDelay_x_voltage_per_switching_state_AXI_13_1_1 = '0' ELSE
      reg_data_read_middle_x_voltage_per_switching_state_AXI_13_1_1;

  read_y_voltage_per_switching_state_AXI_13_signed <= signed(read_y_voltage_per_switching_state_AXI_13);

  reg_y_voltage_per_switching_state_AXI_13_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_13 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_13 <= read_y_voltage_per_switching_state_AXI_13_signed;
      END IF;
    END IF;
  END PROCESS reg_y_voltage_per_switching_state_AXI_13_process;


  data_slice_y_voltage_per_switching_state_AXI_13_1 <= unsigned(resize(read_reg_y_voltage_per_switching_state_AXI_13, 32));

  reg_hSelSignalDelay_18_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_d_voltage_per_switching_state_AXI_14_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_d_voltage_per_switching_state_AXI_14_1_1 <= decode_sel_d_voltage_per_switching_state_AXI_14_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_18_process;


  reg_data_read_middle_17_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_y_voltage_per_switching_state_AXI_13_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_y_voltage_per_switching_state_AXI_13_1_1 <= data_slice_y_voltage_per_switching_state_AXI_13_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_17_process;


  
  decode_rd_y_voltage_per_switching_state_AXI_13_1_1 <= decode_rd_x_voltage_per_switching_state_AXI_13_1_1 WHEN hSelSignalDelay_y_voltage_per_switching_state_AXI_13_1_1 = '0' ELSE
      reg_data_read_middle_y_voltage_per_switching_state_AXI_13_1_1;

  read_d_voltage_per_switching_state_AXI_14_signed <= signed(read_d_voltage_per_switching_state_AXI_14);

  reg_d_voltage_per_switching_state_AXI_14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_14 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_14 <= read_d_voltage_per_switching_state_AXI_14_signed;
      END IF;
    END IF;
  END PROCESS reg_d_voltage_per_switching_state_AXI_14_process;


  data_slice_d_voltage_per_switching_state_AXI_14_1 <= unsigned(resize(read_reg_d_voltage_per_switching_state_AXI_14, 32));

  reg_hSelSignalDelay_19_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_q_voltage_per_switching_state_AXI_14_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_q_voltage_per_switching_state_AXI_14_1_1 <= decode_sel_q_voltage_per_switching_state_AXI_14_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_19_process;


  reg_data_read_middle_18_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_d_voltage_per_switching_state_AXI_14_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_d_voltage_per_switching_state_AXI_14_1_1 <= data_slice_d_voltage_per_switching_state_AXI_14_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_18_process;


  
  decode_rd_d_voltage_per_switching_state_AXI_14_1_1 <= decode_rd_y_voltage_per_switching_state_AXI_13_1_1 WHEN hSelSignalDelay_d_voltage_per_switching_state_AXI_14_1_1 = '0' ELSE
      reg_data_read_middle_d_voltage_per_switching_state_AXI_14_1_1;

  read_q_voltage_per_switching_state_AXI_14_signed <= signed(read_q_voltage_per_switching_state_AXI_14);

  reg_q_voltage_per_switching_state_AXI_14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_14 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_14 <= read_q_voltage_per_switching_state_AXI_14_signed;
      END IF;
    END IF;
  END PROCESS reg_q_voltage_per_switching_state_AXI_14_process;


  data_slice_q_voltage_per_switching_state_AXI_14_1 <= unsigned(resize(read_reg_q_voltage_per_switching_state_AXI_14, 32));

  reg_hSelSignalDelay_20_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_x_voltage_per_switching_state_AXI_14_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_x_voltage_per_switching_state_AXI_14_1_1 <= decode_sel_x_voltage_per_switching_state_AXI_14_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_20_process;


  reg_data_read_middle_19_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_q_voltage_per_switching_state_AXI_14_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_q_voltage_per_switching_state_AXI_14_1_1 <= data_slice_q_voltage_per_switching_state_AXI_14_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_19_process;


  
  decode_rd_q_voltage_per_switching_state_AXI_14_1_1 <= decode_rd_d_voltage_per_switching_state_AXI_14_1_1 WHEN hSelSignalDelay_q_voltage_per_switching_state_AXI_14_1_1 = '0' ELSE
      reg_data_read_middle_q_voltage_per_switching_state_AXI_14_1_1;

  read_x_voltage_per_switching_state_AXI_14_signed <= signed(read_x_voltage_per_switching_state_AXI_14);

  reg_x_voltage_per_switching_state_AXI_14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_14 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_14 <= read_x_voltage_per_switching_state_AXI_14_signed;
      END IF;
    END IF;
  END PROCESS reg_x_voltage_per_switching_state_AXI_14_process;


  data_slice_x_voltage_per_switching_state_AXI_14_1 <= unsigned(resize(read_reg_x_voltage_per_switching_state_AXI_14, 32));

  reg_hSelSignalDelay_21_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_y_voltage_per_switching_state_AXI_14_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_y_voltage_per_switching_state_AXI_14_1_1 <= decode_sel_y_voltage_per_switching_state_AXI_14_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_21_process;


  reg_data_read_middle_20_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_x_voltage_per_switching_state_AXI_14_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_x_voltage_per_switching_state_AXI_14_1_1 <= data_slice_x_voltage_per_switching_state_AXI_14_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_20_process;


  
  decode_rd_x_voltage_per_switching_state_AXI_14_1_1 <= decode_rd_q_voltage_per_switching_state_AXI_14_1_1 WHEN hSelSignalDelay_x_voltage_per_switching_state_AXI_14_1_1 = '0' ELSE
      reg_data_read_middle_x_voltage_per_switching_state_AXI_14_1_1;

  read_y_voltage_per_switching_state_AXI_14_signed <= signed(read_y_voltage_per_switching_state_AXI_14);

  reg_y_voltage_per_switching_state_AXI_14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_14 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_14 <= read_y_voltage_per_switching_state_AXI_14_signed;
      END IF;
    END IF;
  END PROCESS reg_y_voltage_per_switching_state_AXI_14_process;


  data_slice_y_voltage_per_switching_state_AXI_14_1 <= unsigned(resize(read_reg_y_voltage_per_switching_state_AXI_14, 32));

  reg_hSelSignalDelay_22_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_d_voltage_per_switching_state_AXI_15_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_d_voltage_per_switching_state_AXI_15_1_1 <= decode_sel_d_voltage_per_switching_state_AXI_15_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_22_process;


  reg_data_read_middle_21_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_y_voltage_per_switching_state_AXI_14_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_y_voltage_per_switching_state_AXI_14_1_1 <= data_slice_y_voltage_per_switching_state_AXI_14_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_21_process;


  
  decode_rd_y_voltage_per_switching_state_AXI_14_1_1 <= decode_rd_x_voltage_per_switching_state_AXI_14_1_1 WHEN hSelSignalDelay_y_voltage_per_switching_state_AXI_14_1_1 = '0' ELSE
      reg_data_read_middle_y_voltage_per_switching_state_AXI_14_1_1;

  read_d_voltage_per_switching_state_AXI_15_signed <= signed(read_d_voltage_per_switching_state_AXI_15);

  reg_d_voltage_per_switching_state_AXI_15_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_15 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_15 <= read_d_voltage_per_switching_state_AXI_15_signed;
      END IF;
    END IF;
  END PROCESS reg_d_voltage_per_switching_state_AXI_15_process;


  data_slice_d_voltage_per_switching_state_AXI_15_1 <= unsigned(resize(read_reg_d_voltage_per_switching_state_AXI_15, 32));

  reg_hSelSignalDelay_23_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_q_voltage_per_switching_state_AXI_15_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_q_voltage_per_switching_state_AXI_15_1_1 <= decode_sel_q_voltage_per_switching_state_AXI_15_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_23_process;


  reg_data_read_middle_22_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_d_voltage_per_switching_state_AXI_15_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_d_voltage_per_switching_state_AXI_15_1_1 <= data_slice_d_voltage_per_switching_state_AXI_15_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_22_process;


  
  decode_rd_d_voltage_per_switching_state_AXI_15_1_1 <= decode_rd_y_voltage_per_switching_state_AXI_14_1_1 WHEN hSelSignalDelay_d_voltage_per_switching_state_AXI_15_1_1 = '0' ELSE
      reg_data_read_middle_d_voltage_per_switching_state_AXI_15_1_1;

  read_q_voltage_per_switching_state_AXI_15_signed <= signed(read_q_voltage_per_switching_state_AXI_15);

  reg_q_voltage_per_switching_state_AXI_15_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_15 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_15 <= read_q_voltage_per_switching_state_AXI_15_signed;
      END IF;
    END IF;
  END PROCESS reg_q_voltage_per_switching_state_AXI_15_process;


  data_slice_q_voltage_per_switching_state_AXI_15_1 <= unsigned(resize(read_reg_q_voltage_per_switching_state_AXI_15, 32));

  reg_hSelSignalDelay_24_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_x_voltage_per_switching_state_AXI_15_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_x_voltage_per_switching_state_AXI_15_1_1 <= decode_sel_x_voltage_per_switching_state_AXI_15_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_24_process;


  reg_data_read_middle_23_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_q_voltage_per_switching_state_AXI_15_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_q_voltage_per_switching_state_AXI_15_1_1 <= data_slice_q_voltage_per_switching_state_AXI_15_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_23_process;


  
  decode_rd_q_voltage_per_switching_state_AXI_15_1_1 <= decode_rd_d_voltage_per_switching_state_AXI_15_1_1 WHEN hSelSignalDelay_q_voltage_per_switching_state_AXI_15_1_1 = '0' ELSE
      reg_data_read_middle_q_voltage_per_switching_state_AXI_15_1_1;

  read_x_voltage_per_switching_state_AXI_15_signed <= signed(read_x_voltage_per_switching_state_AXI_15);

  reg_x_voltage_per_switching_state_AXI_15_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_15 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_15 <= read_x_voltage_per_switching_state_AXI_15_signed;
      END IF;
    END IF;
  END PROCESS reg_x_voltage_per_switching_state_AXI_15_process;


  data_slice_x_voltage_per_switching_state_AXI_15_1 <= unsigned(resize(read_reg_x_voltage_per_switching_state_AXI_15, 32));

  reg_hSelSignalDelay_25_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_y_voltage_per_switching_state_AXI_15_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_y_voltage_per_switching_state_AXI_15_1_1 <= decode_sel_y_voltage_per_switching_state_AXI_15_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_25_process;


  reg_data_read_middle_24_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_x_voltage_per_switching_state_AXI_15_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_x_voltage_per_switching_state_AXI_15_1_1 <= data_slice_x_voltage_per_switching_state_AXI_15_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_24_process;


  
  decode_rd_x_voltage_per_switching_state_AXI_15_1_1 <= decode_rd_q_voltage_per_switching_state_AXI_15_1_1 WHEN hSelSignalDelay_x_voltage_per_switching_state_AXI_15_1_1 = '0' ELSE
      reg_data_read_middle_x_voltage_per_switching_state_AXI_15_1_1;

  read_y_voltage_per_switching_state_AXI_15_signed <= signed(read_y_voltage_per_switching_state_AXI_15);

  reg_y_voltage_per_switching_state_AXI_15_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_15 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_15 <= read_y_voltage_per_switching_state_AXI_15_signed;
      END IF;
    END IF;
  END PROCESS reg_y_voltage_per_switching_state_AXI_15_process;


  data_slice_y_voltage_per_switching_state_AXI_15_1 <= unsigned(resize(read_reg_y_voltage_per_switching_state_AXI_15, 32));

  reg_hSelSignalDelay_26_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_d_voltage_per_switching_state_AXI_16_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_d_voltage_per_switching_state_AXI_16_1_1 <= decode_sel_d_voltage_per_switching_state_AXI_16_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_26_process;


  reg_data_read_middle_25_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_y_voltage_per_switching_state_AXI_15_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_y_voltage_per_switching_state_AXI_15_1_1 <= data_slice_y_voltage_per_switching_state_AXI_15_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_25_process;


  
  decode_rd_y_voltage_per_switching_state_AXI_15_1_1 <= decode_rd_x_voltage_per_switching_state_AXI_15_1_1 WHEN hSelSignalDelay_y_voltage_per_switching_state_AXI_15_1_1 = '0' ELSE
      reg_data_read_middle_y_voltage_per_switching_state_AXI_15_1_1;

  read_d_voltage_per_switching_state_AXI_16_signed <= signed(read_d_voltage_per_switching_state_AXI_16);

  reg_d_voltage_per_switching_state_AXI_16_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_16 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_d_voltage_per_switching_state_AXI_16 <= read_d_voltage_per_switching_state_AXI_16_signed;
      END IF;
    END IF;
  END PROCESS reg_d_voltage_per_switching_state_AXI_16_process;


  data_slice_d_voltage_per_switching_state_AXI_16_1 <= unsigned(resize(read_reg_d_voltage_per_switching_state_AXI_16, 32));

  reg_hSelSignalDelay_27_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_q_voltage_per_switching_state_AXI_16_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_q_voltage_per_switching_state_AXI_16_1_1 <= decode_sel_q_voltage_per_switching_state_AXI_16_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_27_process;


  reg_data_read_middle_26_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_d_voltage_per_switching_state_AXI_16_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_d_voltage_per_switching_state_AXI_16_1_1 <= data_slice_d_voltage_per_switching_state_AXI_16_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_26_process;


  
  decode_rd_d_voltage_per_switching_state_AXI_16_1_1 <= decode_rd_y_voltage_per_switching_state_AXI_15_1_1 WHEN hSelSignalDelay_d_voltage_per_switching_state_AXI_16_1_1 = '0' ELSE
      reg_data_read_middle_d_voltage_per_switching_state_AXI_16_1_1;

  read_q_voltage_per_switching_state_AXI_16_signed <= signed(read_q_voltage_per_switching_state_AXI_16);

  reg_q_voltage_per_switching_state_AXI_16_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_16 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_q_voltage_per_switching_state_AXI_16 <= read_q_voltage_per_switching_state_AXI_16_signed;
      END IF;
    END IF;
  END PROCESS reg_q_voltage_per_switching_state_AXI_16_process;


  data_slice_q_voltage_per_switching_state_AXI_16_1 <= unsigned(resize(read_reg_q_voltage_per_switching_state_AXI_16, 32));

  reg_hSelSignalDelay_28_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_x_voltage_per_switching_state_AXI_16_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_x_voltage_per_switching_state_AXI_16_1_1 <= decode_sel_x_voltage_per_switching_state_AXI_16_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_28_process;


  reg_data_read_middle_27_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_q_voltage_per_switching_state_AXI_16_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_q_voltage_per_switching_state_AXI_16_1_1 <= data_slice_q_voltage_per_switching_state_AXI_16_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_27_process;


  
  decode_rd_q_voltage_per_switching_state_AXI_16_1_1 <= decode_rd_d_voltage_per_switching_state_AXI_16_1_1 WHEN hSelSignalDelay_q_voltage_per_switching_state_AXI_16_1_1 = '0' ELSE
      reg_data_read_middle_q_voltage_per_switching_state_AXI_16_1_1;

  read_x_voltage_per_switching_state_AXI_16_signed <= signed(read_x_voltage_per_switching_state_AXI_16);

  reg_x_voltage_per_switching_state_AXI_16_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_16 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_x_voltage_per_switching_state_AXI_16 <= read_x_voltage_per_switching_state_AXI_16_signed;
      END IF;
    END IF;
  END PROCESS reg_x_voltage_per_switching_state_AXI_16_process;


  data_slice_x_voltage_per_switching_state_AXI_16_1 <= unsigned(resize(read_reg_x_voltage_per_switching_state_AXI_16, 32));

  reg_hSelSignalDelay_29_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        hSelSignalDelay_y_voltage_per_switching_state_AXI_16_1_1 <= '0';
      ELSIF enb = '1' THEN
        hSelSignalDelay_y_voltage_per_switching_state_AXI_16_1_1 <= decode_sel_y_voltage_per_switching_state_AXI_16_1_1;
      END IF;
    END IF;
  END PROCESS reg_hSelSignalDelay_29_process;


  reg_data_read_middle_28_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_x_voltage_per_switching_state_AXI_16_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_x_voltage_per_switching_state_AXI_16_1_1 <= data_slice_x_voltage_per_switching_state_AXI_16_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_28_process;


  
  decode_rd_x_voltage_per_switching_state_AXI_16_1_1 <= decode_rd_q_voltage_per_switching_state_AXI_16_1_1 WHEN hSelSignalDelay_x_voltage_per_switching_state_AXI_16_1_1 = '0' ELSE
      reg_data_read_middle_x_voltage_per_switching_state_AXI_16_1_1;

  read_y_voltage_per_switching_state_AXI_16_signed <= signed(read_y_voltage_per_switching_state_AXI_16);

  reg_y_voltage_per_switching_state_AXI_16_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_16 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        read_reg_y_voltage_per_switching_state_AXI_16 <= read_y_voltage_per_switching_state_AXI_16_signed;
      END IF;
    END IF;
  END PROCESS reg_y_voltage_per_switching_state_AXI_16_process;


  data_slice_y_voltage_per_switching_state_AXI_16_1 <= unsigned(resize(read_reg_y_voltage_per_switching_state_AXI_16, 32));

  reg_data_read_middle_29_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reg_data_read_middle_y_voltage_per_switching_state_AXI_16_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        reg_data_read_middle_y_voltage_per_switching_state_AXI_16_1_1 <= data_slice_y_voltage_per_switching_state_AXI_16_1;
      END IF;
    END IF;
  END PROCESS reg_data_read_middle_29_process;


  
  decode_rd_y_voltage_per_switching_state_AXI_16_1_1 <= decode_rd_x_voltage_per_switching_state_AXI_16_1_1 WHEN hSelSignalDelay_y_voltage_per_switching_state_AXI_16_1_1 = '0' ELSE
      reg_data_read_middle_y_voltage_per_switching_state_AXI_16_1_1;

  data_read <= std_logic_vector(decode_rd_y_voltage_per_switching_state_AXI_16_1_1);

  
  decode_sel_axi_enable_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0001#, 14) ELSE
      '0';

  reg_enb_axi_enable_1_1 <= decode_sel_axi_enable_1_1 AND wr_enb;

  data_write_unsigned <= unsigned(data_write);

  data_in_axi_enable <= data_write_unsigned(0);

  reg_axi_enable_1_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        data_reg_axi_enable_1_1 <= '1';
      ELSIF enb = '1' AND reg_enb_axi_enable_1_1 = '1' THEN
        data_reg_axi_enable_1_1 <= data_in_axi_enable;
      END IF;
    END IF;
  END PROCESS reg_axi_enable_1_1_process;


  write_axi_enable <= data_reg_axi_enable_1_1;

  
  decode_sel_theta_el_offset_AXI_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0040#, 14) ELSE
      '0';

  reg_enb_theta_el_offset_AXI_1_1 <= decode_sel_theta_el_offset_AXI_1_1 AND wr_enb;

  reg_theta_el_offset_AXI_1_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        data_reg_theta_el_offset_AXI_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' AND reg_enb_theta_el_offset_AXI_1_1 = '1' THEN
        data_reg_theta_el_offset_AXI_1_1 <= data_write_unsigned;
      END IF;
    END IF;
  END PROCESS reg_theta_el_offset_AXI_1_1_process;


  write_theta_el_offset_AXI <= std_logic_vector(data_reg_theta_el_offset_AXI_1_1);

  
  decode_sel_u_dc_link_voltage_AXI_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0041#, 14) ELSE
      '0';

  reg_enb_u_dc_link_voltage_AXI_1_1 <= decode_sel_u_dc_link_voltage_AXI_1_1 AND wr_enb;

  reg_u_dc_link_voltage_AXI_1_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        data_reg_u_dc_link_voltage_AXI_1_1 <= to_unsigned(0, 32);
      ELSIF enb = '1' AND reg_enb_u_dc_link_voltage_AXI_1_1 = '1' THEN
        data_reg_u_dc_link_voltage_AXI_1_1 <= data_write_unsigned;
      END IF;
    END IF;
  END PROCESS reg_u_dc_link_voltage_AXI_1_1_process;


  write_u_dc_link_voltage_AXI <= std_logic_vector(data_reg_u_dc_link_voltage_AXI_1_1);

  
  decode_sel_use_AXI_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0042#, 14) ELSE
      '0';

  reg_enb_use_AXI_1_1 <= decode_sel_use_AXI_1_1 AND wr_enb;

  data_in_use_AXI <= data_write_unsigned(0);

  reg_use_AXI_1_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        data_reg_use_AXI_1_1 <= '0';
      ELSIF enb = '1' AND reg_enb_use_AXI_1_1 = '1' THEN
        data_reg_use_AXI_1_1 <= data_in_use_AXI;
      END IF;
    END IF;
  END PROCESS reg_use_AXI_1_1_process;


  write_use_AXI <= data_reg_use_AXI_1_1;

  
  decode_sel_theta_el_AXI_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0043#, 14) ELSE
      '0';

  reg_enb_theta_el_AXI_1_1 <= decode_sel_theta_el_AXI_1_1 AND wr_enb;

  data_in_theta_el_AXI <= signed(data_write_unsigned(23 DOWNTO 0));

  reg_theta_el_AXI_1_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        data_reg_theta_el_AXI_1_1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' AND reg_enb_theta_el_AXI_1_1 = '1' THEN
        data_reg_theta_el_AXI_1_1 <= data_in_theta_el_AXI;
      END IF;
    END IF;
  END PROCESS reg_theta_el_AXI_1_1_process;


  write_theta_el_AXI <= std_logic_vector(data_reg_theta_el_AXI_1_1);

  
  decode_sel_Index_AXI_1_1 <= '1' WHEN addr_sel_unsigned = to_unsigned(16#0044#, 14) ELSE
      '0';

  reg_enb_Index_AXI_1_1 <= decode_sel_Index_AXI_1_1 AND wr_enb;

  data_in_Index_AXI <= signed(data_write_unsigned);

  reg_Index_AXI_1_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        data_reg_Index_AXI_1_1 <= to_signed(0, 32);
      ELSIF enb = '1' AND reg_enb_Index_AXI_1_1 = '1' THEN
        data_reg_Index_AXI_1_1 <= data_in_Index_AXI;
      END IF;
    END IF;
  END PROCESS reg_Index_AXI_1_1_process;


  write_Index_AXI <= std_logic_vector(data_reg_Index_AXI_1_1);

END rtl;

