#ifndef UZ_PREDICTION_AND_COST_FUNCTION_FCS_MPC_6PHASE_PMSM_HW_H
#define UZ_PREDICTION_AND_COST_FUNCTION_FCS_MPC_6PHASE_PMSM_HW_H

#include "stdint.h"

void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_Lq(uint32_t base_address, float Lq);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_Ld(uint32_t base_address, float Ld);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_SampleTime_div_Ld(uint32_t base_address, float SampleTime, float Ld);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_SampleTime_div_Lq(uint32_t base_address, float SampleTime, float Lq);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_SampleTime_div_Lx(uint32_t base_address, float SampleTime, float Lx);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_pole_pairs(uint32_t base_address, float pole_pairs);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_SampleTime_div_Ly(uint32_t base_address, float SampleTime, float Ly);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_Rs(uint32_t base_address, float Rs);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_psiPM(uint32_t base_address, float psiPM);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_id_ref(uint32_t base_address, float id_ref);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_iq_ref(uint32_t base_address, float iq_ref);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_ix_ref(uint32_t base_address, float ix_ref);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_iy_ref(uint32_t base_address, float iy_ref);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_use_AXI(uint32_t base_address, _Bool use_AXI);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_id_k_1_AXI(uint32_t base_address, float id_k_1_AXI);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_iq_k_1_AXI(uint32_t base_address, float iq_k_1_AXI);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_ix_k_1_AXI(uint32_t base_address, float ix_k_1_AXI);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_iy_k_1_AXI(uint32_t base_address, float iy_k_1_AXI);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_omega_m_measured_AXI(uint32_t base_address, float omega_m_measured_AXI);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_d_voltage_per_switching_state_AXI(uint32_t base_address, float d_voltage_per_switching_state_AXI);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_q_voltage_per_switching_state_AXI(uint32_t base_address, float q_voltage_per_switching_state_AXI);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_x_voltage_per_switching_state_AXI(uint32_t base_address, float x_voltage_per_switching_state_AXI);
void uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_set_y_voltage_per_switching_state_AXI(uint32_t base_address, float y_voltage_per_switching_state_AXI);
float uz_prediction_and_cost_function_fcs_mpc_6phase_pmsm_hw_get_J_AXI(uint32_t base_address);

#endif // UZ_PREDICTION_AND_COST_FUNCTION_FCS_MPC_6PHASE_PMSM_HW_H
