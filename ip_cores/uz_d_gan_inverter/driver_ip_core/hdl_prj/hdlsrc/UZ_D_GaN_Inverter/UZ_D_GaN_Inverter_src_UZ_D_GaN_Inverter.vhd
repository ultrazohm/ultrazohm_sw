-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\UZ_D_GaN_Inverter\UZ_D_GaN_Inverter_src_UZ_D_GaN_Inverter.vhd
-- Created: 2022-02-02 11:26:32
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-08
-- Target subsystem base rate: 1e-08
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- AXI_Gan_Temp_1_period         ce_out        1e-08
-- AXI_Gan_Temp_1_hightime       ce_out        1e-08
-- AXI_Gan_Temp_1_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_1_dutycyc        ce_out        1e-08
-- AXI_Gan_Temp_2_period         ce_out        1e-08
-- AXI_Gan_Temp_2_hightime       ce_out        1e-08
-- AXI_Gan_Temp_2_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_2_dutycyc        ce_out        1e-08
-- AXI_Gan_Temp_3_period         ce_out        1e-08
-- AXI_Gan_Temp_3_hightime       ce_out        1e-08
-- AXI_Gan_Temp_3_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_3_dutycyc        ce_out        1e-08
-- AXI_Gan_Temp_4_period         ce_out        1e-08
-- AXI_Gan_Temp_4_hightime       ce_out        1e-08
-- AXI_Gan_Temp_4_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_4_dutycyc        ce_out        1e-08
-- AXI_Gan_Temp_5_period         ce_out        1e-08
-- AXI_Gan_Temp_5_hightime       ce_out        1e-08
-- AXI_Gan_Temp_5_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_5_dutycyc        ce_out        1e-08
-- AXI_Gan_Temp_6_period         ce_out        1e-08
-- AXI_Gan_Temp_6_hightime       ce_out        1e-08
-- AXI_Gan_Temp_6_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_6_dutycyc        ce_out        1e-08
-- AXI_GaN_FAULT                 ce_out        1e-08
-- AXI_GaN_OC                    ce_out        1e-08
-- AXI_I_DIAG                    ce_out        1e-08
-- PWM_EN                        ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: UZ_D_GaN_Inverter_src_UZ_D_GaN_Inverter
-- Source Path: UZ_D_GaN_Inverter/UZ_D_GaN_Inverter
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.UZ_D_GaN_Inverter_src_UZ_D_GaN_Inverter_pkg.ALL;

ENTITY UZ_D_GaN_Inverter_src_UZ_D_GaN_Inverter IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        GaN_Temp                          :   IN    std_logic_vector(5 DOWNTO 0);  -- ufix6
        GaN_FAULT                         :   IN    std_logic_vector(5 DOWNTO 0);  -- ufix6
        GaN_OC                            :   IN    std_logic_vector(5 DOWNTO 0);  -- ufix6
        I_DIAG                            :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI_PWM_Enable                    :   IN    std_logic;
        AXI_en_in                         :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        AXI_Gan_Temp_1_period             :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_1_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_1_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_1_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_Gan_Temp_2_period             :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_2_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_2_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_2_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_Gan_Temp_3_period             :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_3_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_3_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_3_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_Gan_Temp_4_period             :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_4_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_4_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_4_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_Gan_Temp_5_period             :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_5_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_5_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_5_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_Gan_Temp_6_period             :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_6_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_6_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_6_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_GaN_FAULT                     :   OUT   std_logic_vector(5 DOWNTO 0);  -- ufix6
        AXI_GaN_OC                        :   OUT   std_logic_vector(5 DOWNTO 0);  -- ufix6
        AXI_I_DIAG                        :   OUT   std_logic_vector(3 DOWNTO 0);  -- ufix4
        PWM_EN                            :   OUT   std_logic
        );
END UZ_D_GaN_Inverter_src_UZ_D_GaN_Inverter;


ARCHITECTURE rtl OF UZ_D_GaN_Inverter_src_UZ_D_GaN_Inverter IS

  -- Component Declarations
  COMPONENT UZ_D_GaN_Inverter_src_PWMdutyFreqDetection
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic;  -- ufix1
          en_in_AXI                       :   IN    std_logic;
          AXI_period                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          AXI_hightime                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          AXI_lowtime                     :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          AXI_dutycyc                     :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En24
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : UZ_D_GaN_Inverter_src_PWMdutyFreqDetection
    USE ENTITY work.UZ_D_GaN_Inverter_src_PWMdutyFreqDetection(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL GaN_Temp_unsigned                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Bit_Slice_GaN_Temp1_out1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice_GaN_Temp2_out1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice_GaN_Temp3_out1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice_GaN_Temp4_out1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice_GaN_Temp5_out1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice_GaN_Temp6_out1         : std_logic;  -- ufix1
  SIGNAL Mux_out1                         : std_logic_vector(0 TO 5);  -- ufix1 [6]
  SIGNAL Delay4_out1                      : std_logic;
  SIGNAL Mux1_out1                        : std_logic_vector(0 TO 5);  -- boolean [6]
  SIGNAL PWMdutyFreqDetection_out1        : vector_of_std_logic_vector32(0 TO 5);  -- ufix32 [6]
  SIGNAL PWMdutyFreqDetection_out2        : vector_of_std_logic_vector32(0 TO 5);  -- ufix32 [6]
  SIGNAL PWMdutyFreqDetection_out3        : vector_of_std_logic_vector32(0 TO 5);  -- ufix32 [6]
  SIGNAL PWMdutyFreqDetection_out4        : vector_of_std_logic_vector32(0 TO 5);  -- ufix32 [6]
  SIGNAL GaN_FAULT_unsigned               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL delayMatch_reg                   : vector_of_unsigned6(0 TO 27);  -- ufix6 [28]
  SIGNAL Delay_out1                       : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL GaN_OC_unsigned                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL delayMatch1_reg                  : vector_of_unsigned6(0 TO 27);  -- ufix6 [28]
  SIGNAL Delay1_out1                      : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL I_DIAG_unsigned                  : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL delayMatch2_reg                  : vector_of_unsigned4(0 TO 27);  -- ufix4 [28]
  SIGNAL Delay2_out1                      : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL delayMatch3_reg                  : std_logic_vector(0 TO 27);  -- ufix1 [28]
  SIGNAL Delay3_out1                      : std_logic;

BEGIN
  -- Enable PWM signal input
  -- 
  -- OC signals
  -- 
  -- GaN_Temp_H1   (LSB)
  -- 
  -- GaN_Temp_L1
  -- 
  -- GaN_Temp_H2
  -- 
  -- GaN_Temp_L2
  -- 
  -- GaN_Temp_H3
  -- 
  -- GaN_Temp_L3
  -- 
  -- GaN_FAULT_H1   (LSB)
  -- 
  -- GaN_FAULT_L1
  -- 
  -- GaN_FAULT_H2
  -- 
  -- GaN_FAULT_L2
  -- 
  -- GaN_FAULT_H3
  -- 
  -- GaN_FAULT_L3
  -- 
  -- GaN_OC_H1   (LSB)
  -- 
  -- GaN_OC_L1
  -- 
  -- GaN_OC_H2
  -- 
  -- GaN_OC_L2
  -- 
  -- GaN_OC_H3
  -- 
  -- GaN_OC_L3
  -- 
  -- *OC = over current
  -- 
  -- I_DIAG   (LSB)
  -- 
  -- I_DIAG1
  -- 
  -- I_DIAG2
  -- 
  -- I_DAIG3
  -- 
  -- FAULT signals
  -- 
  -- I_DIAG signals
  -- 
  -- PWM_EN

  GaN_Temp_unsigned <= unsigned(GaN_Temp);

  Bit_Slice_GaN_Temp1_out1 <= GaN_Temp_unsigned(0);

  Bit_Slice_GaN_Temp2_out1 <= GaN_Temp_unsigned(1);

  Bit_Slice_GaN_Temp3_out1 <= GaN_Temp_unsigned(2);

  Bit_Slice_GaN_Temp4_out1 <= GaN_Temp_unsigned(3);

  Bit_Slice_GaN_Temp5_out1 <= GaN_Temp_unsigned(4);

  Bit_Slice_GaN_Temp6_out1 <= GaN_Temp_unsigned(5);

  Mux_out1(0) <= Bit_Slice_GaN_Temp1_out1;
  Mux_out1(1) <= Bit_Slice_GaN_Temp2_out1;
  Mux_out1(2) <= Bit_Slice_GaN_Temp3_out1;
  Mux_out1(3) <= Bit_Slice_GaN_Temp4_out1;
  Mux_out1(4) <= Bit_Slice_GaN_Temp5_out1;
  Mux_out1(5) <= Bit_Slice_GaN_Temp6_out1;

  enb <= clk_enable;

  Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay4_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay4_out1 <= AXI_en_in;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  Mux1_out1(0) <= Delay4_out1;
  Mux1_out1(1) <= Delay4_out1;
  Mux1_out1(2) <= Delay4_out1;
  Mux1_out1(3) <= Delay4_out1;
  Mux1_out1(4) <= Delay4_out1;
  Mux1_out1(5) <= Delay4_out1;

  GEN_LABEL: FOR k IN 0 TO 5 GENERATE
    u_PWMdutyFreqDetection : UZ_D_GaN_Inverter_src_PWMdutyFreqDetection
      PORT MAP( clk => clk,
                reset => reset,
                enb => clk_enable,
                In1 => Mux_out1(k),  -- ufix1
                en_in_AXI => Mux1_out1(k),
                AXI_period => PWMdutyFreqDetection_out1(k),  -- uint32
                AXI_hightime => PWMdutyFreqDetection_out2(k),  -- uint32
                AXI_lowtime => PWMdutyFreqDetection_out3(k),  -- uint32
                AXI_dutycyc => PWMdutyFreqDetection_out4(k)  -- sfix32_En24
                );
  END GENERATE;

  GaN_FAULT_unsigned <= unsigned(GaN_FAULT);

  delayMatch_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch_reg <= (OTHERS => to_unsigned(16#00#, 6));
      ELSIF enb = '1' THEN
        delayMatch_reg(0) <= GaN_FAULT_unsigned;
        delayMatch_reg(1 TO 27) <= delayMatch_reg(0 TO 26);
      END IF;
    END IF;
  END PROCESS delayMatch_process;

  Delay_out1 <= delayMatch_reg(27);

  AXI_GaN_FAULT <= std_logic_vector(Delay_out1);

  GaN_OC_unsigned <= unsigned(GaN_OC);

  delayMatch1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch1_reg <= (OTHERS => to_unsigned(16#00#, 6));
      ELSIF enb = '1' THEN
        delayMatch1_reg(0) <= GaN_OC_unsigned;
        delayMatch1_reg(1 TO 27) <= delayMatch1_reg(0 TO 26);
      END IF;
    END IF;
  END PROCESS delayMatch1_process;

  Delay1_out1 <= delayMatch1_reg(27);

  AXI_GaN_OC <= std_logic_vector(Delay1_out1);

  I_DIAG_unsigned <= unsigned(I_DIAG);

  delayMatch2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch2_reg <= (OTHERS => to_unsigned(16#0#, 4));
      ELSIF enb = '1' THEN
        delayMatch2_reg(0) <= I_DIAG_unsigned;
        delayMatch2_reg(1 TO 27) <= delayMatch2_reg(0 TO 26);
      END IF;
    END IF;
  END PROCESS delayMatch2_process;

  Delay2_out1 <= delayMatch2_reg(27);

  AXI_I_DIAG <= std_logic_vector(Delay2_out1);

  delayMatch3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch3_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch3_reg(0) <= AXI_PWM_Enable;
        delayMatch3_reg(1 TO 27) <= delayMatch3_reg(0 TO 26);
      END IF;
    END IF;
  END PROCESS delayMatch3_process;

  Delay3_out1 <= delayMatch3_reg(27);

  ce_out <= clk_enable;

  AXI_Gan_Temp_1_period <= PWMdutyFreqDetection_out1(0);

  AXI_Gan_Temp_1_hightime <= PWMdutyFreqDetection_out2(0);

  AXI_Gan_Temp_1_lowtime <= PWMdutyFreqDetection_out3(0);

  AXI_Gan_Temp_1_dutycyc <= PWMdutyFreqDetection_out4(0);

  AXI_Gan_Temp_2_period <= PWMdutyFreqDetection_out1(1);

  AXI_Gan_Temp_2_hightime <= PWMdutyFreqDetection_out2(1);

  AXI_Gan_Temp_2_lowtime <= PWMdutyFreqDetection_out3(1);

  AXI_Gan_Temp_2_dutycyc <= PWMdutyFreqDetection_out4(1);

  AXI_Gan_Temp_3_period <= PWMdutyFreqDetection_out1(2);

  AXI_Gan_Temp_3_hightime <= PWMdutyFreqDetection_out2(2);

  AXI_Gan_Temp_3_lowtime <= PWMdutyFreqDetection_out3(2);

  AXI_Gan_Temp_3_dutycyc <= PWMdutyFreqDetection_out4(2);

  AXI_Gan_Temp_4_period <= PWMdutyFreqDetection_out1(3);

  AXI_Gan_Temp_4_hightime <= PWMdutyFreqDetection_out2(3);

  AXI_Gan_Temp_4_lowtime <= PWMdutyFreqDetection_out3(3);

  AXI_Gan_Temp_4_dutycyc <= PWMdutyFreqDetection_out4(3);

  AXI_Gan_Temp_5_period <= PWMdutyFreqDetection_out1(4);

  AXI_Gan_Temp_5_hightime <= PWMdutyFreqDetection_out2(4);

  AXI_Gan_Temp_5_lowtime <= PWMdutyFreqDetection_out3(4);

  AXI_Gan_Temp_5_dutycyc <= PWMdutyFreqDetection_out4(4);

  AXI_Gan_Temp_6_period <= PWMdutyFreqDetection_out1(5);

  AXI_Gan_Temp_6_hightime <= PWMdutyFreqDetection_out2(5);

  AXI_Gan_Temp_6_lowtime <= PWMdutyFreqDetection_out3(5);

  AXI_Gan_Temp_6_dutycyc <= PWMdutyFreqDetection_out4(5);

  PWM_EN <= Delay3_out1;

END rtl;

