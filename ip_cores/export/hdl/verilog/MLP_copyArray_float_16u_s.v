// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP_copyArray_float_16u_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_input_address0,
        p_input_ce0,
        p_input_q0,
        p_input_address1,
        p_input_ce1,
        p_input_q1,
        p_output_address0,
        p_output_ce0,
        p_output_we0,
        p_output_d0,
        p_output_address1,
        p_output_ce1,
        p_output_we1,
        p_output_d1,
        p_output_offset,
        size
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_pp0_stage0 = 11'd2;
parameter    ap_ST_fsm_pp0_stage1 = 11'd4;
parameter    ap_ST_fsm_pp0_stage2 = 11'd8;
parameter    ap_ST_fsm_pp0_stage3 = 11'd16;
parameter    ap_ST_fsm_pp0_stage4 = 11'd32;
parameter    ap_ST_fsm_pp0_stage5 = 11'd64;
parameter    ap_ST_fsm_pp0_stage6 = 11'd128;
parameter    ap_ST_fsm_pp0_stage7 = 11'd256;
parameter    ap_ST_fsm_pp0_stage8 = 11'd512;
parameter    ap_ST_fsm_state12 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] p_input_address0;
output   p_input_ce0;
input  [31:0] p_input_q0;
output  [3:0] p_input_address1;
output   p_input_ce1;
input  [31:0] p_input_q1;
output  [9:0] p_output_address0;
output   p_output_ce0;
output   p_output_we0;
output  [31:0] p_output_d0;
output  [9:0] p_output_address1;
output   p_output_ce1;
output   p_output_we1;
output  [31:0] p_output_d1;
input  [9:0] p_output_offset;
input  [31:0] size;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] p_input_address0;
reg p_input_ce0;
reg[3:0] p_input_address1;
reg p_input_ce1;
reg[9:0] p_output_address0;
reg p_output_ce0;
reg p_output_we0;
reg[31:0] p_output_d0;
reg[9:0] p_output_address1;
reg p_output_ce1;
reg p_output_we1;
reg[31:0] p_output_d1;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [27:0] i_reg_360;
reg   [31:0] reg_371;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln130_reg_734;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
reg   [27:0] trunc_ln_reg_729;
wire   [0:0] icmp_ln130_fu_387_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state11_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [27:0] add_ln130_fu_392_p2;
reg   [27:0] add_ln130_reg_738;
wire   [9:0] tmp_s_fu_402_p3;
reg   [9:0] tmp_s_reg_743;
wire   [9:0] or_ln136_fu_415_p2;
reg   [9:0] or_ln136_reg_767;
wire   [9:0] or_ln136_1_fu_435_p2;
reg   [9:0] or_ln136_1_reg_777;
wire   [9:0] or_ln136_2_fu_445_p2;
reg   [9:0] or_ln136_2_reg_787;
wire   [9:0] or_ln136_3_fu_473_p2;
reg   [9:0] or_ln136_3_reg_797;
wire   [9:0] or_ln136_4_fu_483_p2;
reg   [9:0] or_ln136_4_reg_807;
wire   [9:0] or_ln136_5_fu_511_p2;
reg   [9:0] or_ln136_5_reg_817;
wire   [9:0] or_ln136_6_fu_521_p2;
reg   [9:0] or_ln136_6_reg_827;
wire   [9:0] or_ln136_7_fu_549_p2;
reg   [9:0] or_ln136_7_reg_837;
wire   [9:0] or_ln136_8_fu_559_p2;
reg   [9:0] or_ln136_8_reg_847;
wire   [9:0] or_ln136_9_fu_587_p2;
reg   [9:0] or_ln136_9_reg_857;
wire   [9:0] or_ln136_10_fu_597_p2;
reg   [9:0] or_ln136_10_reg_867;
wire   [9:0] or_ln136_11_fu_625_p2;
reg   [9:0] or_ln136_11_reg_877;
wire   [9:0] or_ln136_12_fu_635_p2;
reg   [9:0] or_ln136_12_reg_887;
wire   [9:0] add_ln136_13_fu_663_p2;
reg   [9:0] add_ln136_13_reg_897;
wire   [9:0] add_ln136_14_fu_677_p2;
reg   [9:0] add_ln136_14_reg_907;
wire   [9:0] add_ln136_15_fu_692_p2;
reg   [9:0] add_ln136_15_reg_917;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage8_subdone;
reg   [27:0] ap_phi_mux_i_phi_fu_364_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln136_fu_410_p1;
wire   [63:0] zext_ln136_17_fu_421_p1;
wire   [63:0] zext_ln136_16_fu_430_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln136_19_fu_440_p1;
wire   [63:0] zext_ln136_21_fu_450_p1;
wire   [63:0] zext_ln136_18_fu_459_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln136_20_fu_468_p1;
wire   [63:0] zext_ln136_23_fu_478_p1;
wire   [63:0] zext_ln136_25_fu_488_p1;
wire   [63:0] zext_ln136_22_fu_497_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln136_24_fu_506_p1;
wire   [63:0] zext_ln136_27_fu_516_p1;
wire   [63:0] zext_ln136_29_fu_526_p1;
wire   [63:0] zext_ln136_26_fu_535_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln136_28_fu_544_p1;
wire   [63:0] zext_ln136_31_fu_554_p1;
wire   [63:0] zext_ln136_33_fu_564_p1;
wire   [63:0] zext_ln136_30_fu_573_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln136_32_fu_582_p1;
wire   [63:0] zext_ln136_35_fu_592_p1;
wire   [63:0] zext_ln136_37_fu_602_p1;
wire   [63:0] zext_ln136_34_fu_611_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln136_36_fu_620_p1;
wire   [63:0] zext_ln136_39_fu_630_p1;
wire   [63:0] zext_ln136_41_fu_640_p1;
wire   [63:0] zext_ln136_38_fu_649_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln136_40_fu_658_p1;
wire   [63:0] zext_ln136_43_fu_672_p1;
wire   [63:0] zext_ln136_45_fu_687_p1;
wire   [63:0] zext_ln136_42_fu_697_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln136_44_fu_701_p1;
wire   [63:0] zext_ln136_46_fu_705_p1;
wire   [5:0] empty_fu_398_p1;
wire   [9:0] add_ln136_fu_426_p2;
wire   [9:0] add_ln136_1_fu_455_p2;
wire   [9:0] add_ln136_2_fu_464_p2;
wire   [9:0] add_ln136_3_fu_493_p2;
wire   [9:0] add_ln136_4_fu_502_p2;
wire   [9:0] add_ln136_5_fu_531_p2;
wire   [9:0] add_ln136_6_fu_540_p2;
wire   [9:0] add_ln136_7_fu_569_p2;
wire   [9:0] add_ln136_8_fu_578_p2;
wire   [9:0] add_ln136_9_fu_607_p2;
wire   [9:0] add_ln136_10_fu_616_p2;
wire   [9:0] add_ln136_11_fu_645_p2;
wire   [9:0] add_ln136_12_fu_654_p2;
wire   [9:0] or_ln136_13_fu_667_p2;
wire   [9:0] or_ln136_14_fu_682_p2;
wire    ap_CS_fsm_state12;
reg   [10:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_360 <= add_ln130_reg_738;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_360 <= 28'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln130_reg_738 <= add_ln130_fu_392_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        add_ln136_13_reg_897 <= add_ln136_13_fu_663_p2;
        add_ln136_14_reg_907 <= add_ln136_14_fu_677_p2;
        add_ln136_15_reg_917 <= add_ln136_15_fu_692_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln130_reg_734 <= icmp_ln130_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        or_ln136_10_reg_867[9 : 4] <= or_ln136_10_fu_597_p2[9 : 4];
        or_ln136_9_reg_857[9 : 4] <= or_ln136_9_fu_587_p2[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        or_ln136_11_reg_877[9 : 4] <= or_ln136_11_fu_625_p2[9 : 4];
        or_ln136_12_reg_887[9 : 4] <= or_ln136_12_fu_635_p2[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        or_ln136_1_reg_777[9 : 4] <= or_ln136_1_fu_435_p2[9 : 4];
        or_ln136_2_reg_787[9 : 4] <= or_ln136_2_fu_445_p2[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        or_ln136_3_reg_797[9 : 4] <= or_ln136_3_fu_473_p2[9 : 4];
        or_ln136_4_reg_807[9 : 4] <= or_ln136_4_fu_483_p2[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        or_ln136_5_reg_817[9 : 4] <= or_ln136_5_fu_511_p2[9 : 4];
        or_ln136_6_reg_827[9 : 4] <= or_ln136_6_fu_521_p2[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        or_ln136_7_reg_837[9 : 4] <= or_ln136_7_fu_549_p2[9 : 4];
        or_ln136_8_reg_847[9 : 4] <= or_ln136_8_fu_559_p2[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln130_fu_387_p2 == 1'd0))) begin
        or_ln136_reg_767[9 : 4] <= or_ln136_fu_415_p2[9 : 4];
        tmp_s_reg_743[9 : 4] <= tmp_s_fu_402_p3[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_371 <= p_input_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        trunc_ln_reg_729 <= {{size[31:4]}};
    end
end

always @ (*) begin
    if ((icmp_ln130_fu_387_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_364_p4 = add_ln130_reg_738;
    end else begin
        ap_phi_mux_i_phi_fu_364_p4 = i_reg_360;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            p_input_address0 = zext_ln136_45_fu_687_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            p_input_address0 = zext_ln136_41_fu_640_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            p_input_address0 = zext_ln136_37_fu_602_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            p_input_address0 = zext_ln136_33_fu_564_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            p_input_address0 = zext_ln136_29_fu_526_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            p_input_address0 = zext_ln136_25_fu_488_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            p_input_address0 = zext_ln136_21_fu_450_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_input_address0 = zext_ln136_17_fu_421_p1;
        end else begin
            p_input_address0 = 'bx;
        end
    end else begin
        p_input_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            p_input_address1 = zext_ln136_43_fu_672_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            p_input_address1 = zext_ln136_39_fu_630_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            p_input_address1 = zext_ln136_35_fu_592_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            p_input_address1 = zext_ln136_31_fu_554_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            p_input_address1 = zext_ln136_27_fu_516_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            p_input_address1 = zext_ln136_23_fu_478_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            p_input_address1 = zext_ln136_19_fu_440_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_input_address1 = zext_ln136_fu_410_p1;
        end else begin
            p_input_address1 = 'bx;
        end
    end else begin
        p_input_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        p_input_ce0 = 1'b1;
    end else begin
        p_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        p_input_ce1 = 1'b1;
    end else begin
        p_input_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_output_address0 = zext_ln136_46_fu_705_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        p_output_address0 = zext_ln136_42_fu_697_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        p_output_address0 = zext_ln136_38_fu_649_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        p_output_address0 = zext_ln136_34_fu_611_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        p_output_address0 = zext_ln136_30_fu_573_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        p_output_address0 = zext_ln136_26_fu_535_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_output_address0 = zext_ln136_22_fu_497_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_output_address0 = zext_ln136_20_fu_468_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_output_address0 = zext_ln136_16_fu_430_p1;
    end else begin
        p_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            p_output_address1 = zext_ln136_44_fu_701_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            p_output_address1 = zext_ln136_40_fu_658_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            p_output_address1 = zext_ln136_36_fu_620_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            p_output_address1 = zext_ln136_32_fu_582_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            p_output_address1 = zext_ln136_28_fu_544_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            p_output_address1 = zext_ln136_24_fu_506_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            p_output_address1 = zext_ln136_18_fu_459_p1;
        end else begin
            p_output_address1 = 'bx;
        end
    end else begin
        p_output_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        p_output_ce0 = 1'b1;
    end else begin
        p_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        p_output_ce1 = 1'b1;
    end else begin
        p_output_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_output_d0 = reg_371;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        p_output_d0 = p_input_q1;
    end else begin
        p_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        p_output_d1 = p_input_q1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_output_d1 = reg_371;
    end else begin
        p_output_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        p_output_we0 = 1'b1;
    end else begin
        p_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln130_reg_734 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        p_output_we1 = 1'b1;
    end else begin
        p_output_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln130_fu_387_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln130_fu_387_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln130_fu_392_p2 = (ap_phi_mux_i_phi_fu_364_p4 + 28'd1);

assign add_ln136_10_fu_616_p2 = (p_output_offset + or_ln136_9_reg_857);

assign add_ln136_11_fu_645_p2 = (p_output_offset + or_ln136_10_reg_867);

assign add_ln136_12_fu_654_p2 = (p_output_offset + or_ln136_11_reg_877);

assign add_ln136_13_fu_663_p2 = (p_output_offset + or_ln136_12_reg_887);

assign add_ln136_14_fu_677_p2 = (p_output_offset + or_ln136_13_fu_667_p2);

assign add_ln136_15_fu_692_p2 = (p_output_offset + or_ln136_14_fu_682_p2);

assign add_ln136_1_fu_455_p2 = (p_output_offset + or_ln136_reg_767);

assign add_ln136_2_fu_464_p2 = (p_output_offset + or_ln136_1_reg_777);

assign add_ln136_3_fu_493_p2 = (p_output_offset + or_ln136_2_reg_787);

assign add_ln136_4_fu_502_p2 = (p_output_offset + or_ln136_3_reg_797);

assign add_ln136_5_fu_531_p2 = (p_output_offset + or_ln136_4_reg_807);

assign add_ln136_6_fu_540_p2 = (p_output_offset + or_ln136_5_reg_817);

assign add_ln136_7_fu_569_p2 = (p_output_offset + or_ln136_6_reg_827);

assign add_ln136_8_fu_578_p2 = (p_output_offset + or_ln136_7_reg_837);

assign add_ln136_9_fu_607_p2 = (p_output_offset + or_ln136_8_reg_847);

assign add_ln136_fu_426_p2 = (p_output_offset + tmp_s_reg_743);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign empty_fu_398_p1 = ap_phi_mux_i_phi_fu_364_p4[5:0];

assign icmp_ln130_fu_387_p2 = ((ap_phi_mux_i_phi_fu_364_p4 == trunc_ln_reg_729) ? 1'b1 : 1'b0);

assign or_ln136_10_fu_597_p2 = (tmp_s_reg_743 | 10'd11);

assign or_ln136_11_fu_625_p2 = (tmp_s_reg_743 | 10'd12);

assign or_ln136_12_fu_635_p2 = (tmp_s_reg_743 | 10'd13);

assign or_ln136_13_fu_667_p2 = (tmp_s_reg_743 | 10'd14);

assign or_ln136_14_fu_682_p2 = (tmp_s_reg_743 | 10'd15);

assign or_ln136_1_fu_435_p2 = (tmp_s_reg_743 | 10'd2);

assign or_ln136_2_fu_445_p2 = (tmp_s_reg_743 | 10'd3);

assign or_ln136_3_fu_473_p2 = (tmp_s_reg_743 | 10'd4);

assign or_ln136_4_fu_483_p2 = (tmp_s_reg_743 | 10'd5);

assign or_ln136_5_fu_511_p2 = (tmp_s_reg_743 | 10'd6);

assign or_ln136_6_fu_521_p2 = (tmp_s_reg_743 | 10'd7);

assign or_ln136_7_fu_549_p2 = (tmp_s_reg_743 | 10'd8);

assign or_ln136_8_fu_559_p2 = (tmp_s_reg_743 | 10'd9);

assign or_ln136_9_fu_587_p2 = (tmp_s_reg_743 | 10'd10);

assign or_ln136_fu_415_p2 = (tmp_s_fu_402_p3 | 10'd1);

assign tmp_s_fu_402_p3 = {{empty_fu_398_p1}, {4'd0}};

assign zext_ln136_16_fu_430_p1 = add_ln136_fu_426_p2;

assign zext_ln136_17_fu_421_p1 = or_ln136_fu_415_p2;

assign zext_ln136_18_fu_459_p1 = add_ln136_1_fu_455_p2;

assign zext_ln136_19_fu_440_p1 = or_ln136_1_fu_435_p2;

assign zext_ln136_20_fu_468_p1 = add_ln136_2_fu_464_p2;

assign zext_ln136_21_fu_450_p1 = or_ln136_2_fu_445_p2;

assign zext_ln136_22_fu_497_p1 = add_ln136_3_fu_493_p2;

assign zext_ln136_23_fu_478_p1 = or_ln136_3_fu_473_p2;

assign zext_ln136_24_fu_506_p1 = add_ln136_4_fu_502_p2;

assign zext_ln136_25_fu_488_p1 = or_ln136_4_fu_483_p2;

assign zext_ln136_26_fu_535_p1 = add_ln136_5_fu_531_p2;

assign zext_ln136_27_fu_516_p1 = or_ln136_5_fu_511_p2;

assign zext_ln136_28_fu_544_p1 = add_ln136_6_fu_540_p2;

assign zext_ln136_29_fu_526_p1 = or_ln136_6_fu_521_p2;

assign zext_ln136_30_fu_573_p1 = add_ln136_7_fu_569_p2;

assign zext_ln136_31_fu_554_p1 = or_ln136_7_fu_549_p2;

assign zext_ln136_32_fu_582_p1 = add_ln136_8_fu_578_p2;

assign zext_ln136_33_fu_564_p1 = or_ln136_8_fu_559_p2;

assign zext_ln136_34_fu_611_p1 = add_ln136_9_fu_607_p2;

assign zext_ln136_35_fu_592_p1 = or_ln136_9_fu_587_p2;

assign zext_ln136_36_fu_620_p1 = add_ln136_10_fu_616_p2;

assign zext_ln136_37_fu_602_p1 = or_ln136_10_fu_597_p2;

assign zext_ln136_38_fu_649_p1 = add_ln136_11_fu_645_p2;

assign zext_ln136_39_fu_630_p1 = or_ln136_11_fu_625_p2;

assign zext_ln136_40_fu_658_p1 = add_ln136_12_fu_654_p2;

assign zext_ln136_41_fu_640_p1 = or_ln136_12_fu_635_p2;

assign zext_ln136_42_fu_697_p1 = add_ln136_13_reg_897;

assign zext_ln136_43_fu_672_p1 = or_ln136_13_fu_667_p2;

assign zext_ln136_44_fu_701_p1 = add_ln136_14_reg_907;

assign zext_ln136_45_fu_687_p1 = or_ln136_14_fu_682_p2;

assign zext_ln136_46_fu_705_p1 = add_ln136_15_reg_917;

assign zext_ln136_fu_410_p1 = tmp_s_fu_402_p3;

always @ (posedge ap_clk) begin
    tmp_s_reg_743[3:0] <= 4'b0000;
    or_ln136_reg_767[3:0] <= 4'b0001;
    or_ln136_1_reg_777[3:0] <= 4'b0010;
    or_ln136_2_reg_787[3:0] <= 4'b0011;
    or_ln136_3_reg_797[3:0] <= 4'b0100;
    or_ln136_4_reg_807[3:0] <= 4'b0101;
    or_ln136_5_reg_817[3:0] <= 4'b0110;
    or_ln136_6_reg_827[3:0] <= 4'b0111;
    or_ln136_7_reg_837[3:0] <= 4'b1000;
    or_ln136_8_reg_847[3:0] <= 4'b1001;
    or_ln136_9_reg_857[3:0] <= 4'b1010;
    or_ln136_10_reg_867[3:0] <= 4'b1011;
    or_ln136_11_reg_877[3:0] <= 4'b1100;
    or_ln136_12_reg_887[3:0] <= 4'b1101;
end

endmodule //MLP_copyArray_float_16u_s
