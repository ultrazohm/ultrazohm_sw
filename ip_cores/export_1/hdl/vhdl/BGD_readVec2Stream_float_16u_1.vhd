-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity BGD_readVec2Stream_float_16u_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_out_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    p_out_full_n : IN STD_LOGIC;
    p_out_write : OUT STD_LOGIC;
    p_n_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_n_empty_n : IN STD_LOGIC;
    p_n_read : OUT STD_LOGIC;
    bramWeightGradientAvg_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    bramWeightGradientAvg_ce0 : OUT STD_LOGIC;
    bramWeightGradientAvg_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    bramWeightGradientAvg_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    bramWeightGradientAvg_ce1 : OUT STD_LOGIC;
    bramWeightGradientAvg_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of BGD_readVec2Stream_float_16u_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv28_1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_const_lv14_3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000011";
    constant ap_const_lv14_4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_const_lv14_5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000101";
    constant ap_const_lv14_6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000110";
    constant ap_const_lv14_7 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000111";
    constant ap_const_lv14_8 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_const_lv14_9 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001001";
    constant ap_const_lv14_A : STD_LOGIC_VECTOR (13 downto 0) := "00000000001010";
    constant ap_const_lv14_B : STD_LOGIC_VECTOR (13 downto 0) := "00000000001011";
    constant ap_const_lv14_C : STD_LOGIC_VECTOR (13 downto 0) := "00000000001100";
    constant ap_const_lv14_D : STD_LOGIC_VECTOR (13 downto 0) := "00000000001101";
    constant ap_const_lv14_E : STD_LOGIC_VECTOR (13 downto 0) := "00000000001110";
    constant ap_const_lv14_F : STD_LOGIC_VECTOR (13 downto 0) := "00000000001111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln111_reg_528 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_n_blk_n : STD_LOGIC;
    signal i_reg_236 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln_reg_523 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal icmp_ln111_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln111_fu_262_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln111_reg_532 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_4_fu_272_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_4_reg_537 : STD_LOGIC_VECTOR (13 downto 0);
    signal l_val_m_Val_0_reg_565 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal l_val_m_Val_1_reg_570 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_m_Val_2_reg_585 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal l_val_m_Val_3_reg_590 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_m_Val_4_reg_605 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal l_val_m_Val_5_reg_610 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_m_Val_6_reg_625 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal l_val_m_Val_7_reg_630 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_m_Val_8_reg_645 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal l_val_m_Val_9_reg_650 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_m_Val_10_reg_665 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal l_val_m_Val_11_reg_670 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_m_Val_12_reg_685 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal l_val_m_Val_13_reg_690 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_phi_mux_i_phi_fu_240_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln116_fu_280_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_1_fu_291_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_2_fu_301_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln116_3_fu_311_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_4_fu_321_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln116_5_fu_331_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_6_fu_341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln116_7_fu_351_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_8_fu_361_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln116_9_fu_371_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_10_fu_381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln116_11_fu_391_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_12_fu_401_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln116_13_fu_411_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_14_fu_421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln116_15_fu_431_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal empty_fu_268_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln116_fu_285_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln116_1_fu_296_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln116_2_fu_306_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln116_3_fu_316_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln116_4_fu_326_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln116_5_fu_336_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln116_6_fu_346_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln116_7_fu_356_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln116_8_fu_366_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln116_9_fu_376_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln116_10_fu_386_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln116_11_fu_396_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln116_12_fu_406_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln116_13_fu_416_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln116_14_fu_426_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal l_v_90_fu_482_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_v_89_fu_478_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_v_88_fu_475_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_v_87_fu_472_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_v_86_fu_469_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_v_85_fu_466_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_v_84_fu_463_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_v_83_fu_460_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_v_82_fu_457_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_v_81_fu_454_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_v_80_fu_451_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_v_79_fu_448_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_v_78_fu_445_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_v_77_fu_442_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_v_76_fu_439_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_v_fu_436_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((p_n_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((p_n_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln111_reg_528 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_236 <= add_ln111_reg_532;
            elsif ((not(((p_n_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_236 <= ap_const_lv28_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln111_reg_532 <= add_ln111_fu_262_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln111_reg_528 <= icmp_ln111_fu_257_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln111_reg_528 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                l_val_m_Val_0_reg_565 <= bramWeightGradientAvg_q1;
                l_val_m_Val_1_reg_570 <= bramWeightGradientAvg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln111_reg_528 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                l_val_m_Val_10_reg_665 <= bramWeightGradientAvg_q1;
                l_val_m_Val_11_reg_670 <= bramWeightGradientAvg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln111_reg_528 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                l_val_m_Val_12_reg_685 <= bramWeightGradientAvg_q1;
                l_val_m_Val_13_reg_690 <= bramWeightGradientAvg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln111_reg_528 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                l_val_m_Val_2_reg_585 <= bramWeightGradientAvg_q1;
                l_val_m_Val_3_reg_590 <= bramWeightGradientAvg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln111_reg_528 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                l_val_m_Val_4_reg_605 <= bramWeightGradientAvg_q1;
                l_val_m_Val_5_reg_610 <= bramWeightGradientAvg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln111_reg_528 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                l_val_m_Val_6_reg_625 <= bramWeightGradientAvg_q1;
                l_val_m_Val_7_reg_630 <= bramWeightGradientAvg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln111_reg_528 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                l_val_m_Val_8_reg_645 <= bramWeightGradientAvg_q1;
                l_val_m_Val_9_reg_650 <= bramWeightGradientAvg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln111_fu_257_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    tmp_4_reg_537(13 downto 4) <= tmp_4_fu_272_p3(13 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_n_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                trunc_ln_reg_523 <= p_n_dout(31 downto 4);
            end if;
        end if;
    end process;
    tmp_4_reg_537(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_n_empty_n, icmp_ln111_fu_257_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((p_n_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln111_fu_257_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln111_fu_257_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    add_ln111_fu_262_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_phi_fu_240_p4) + unsigned(ap_const_lv28_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_out_full_n, ap_enable_reg_pp0_iter1, icmp_ln111_reg_528)
    begin
                ap_block_pp0_stage0_01001 <= ((icmp_ln111_reg_528 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (p_out_full_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_out_full_n, ap_enable_reg_pp0_iter1, icmp_ln111_reg_528)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln111_reg_528 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (p_out_full_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_out_full_n, ap_enable_reg_pp0_iter1, icmp_ln111_reg_528)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln111_reg_528 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (p_out_full_n = ap_const_logic_0));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, p_n_empty_n)
    begin
                ap_block_state1 <= ((p_n_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state10_pp0_stage0_iter1_assign_proc : process(p_out_full_n, icmp_ln111_reg_528)
    begin
                ap_block_state10_pp0_stage0_iter1 <= ((icmp_ln111_reg_528 = ap_const_lv1_0) and (p_out_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln111_fu_257_p2)
    begin
        if ((icmp_ln111_fu_257_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_240_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln111_reg_528, i_reg_236, add_ln111_reg_532)
    begin
        if (((icmp_ln111_reg_528 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_240_p4 <= add_ln111_reg_532;
        else 
            ap_phi_mux_i_phi_fu_240_p4 <= i_reg_236;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    bramWeightGradientAvg_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, zext_ln116_1_fu_291_p1, ap_block_pp0_stage1, zext_ln116_3_fu_311_p1, ap_block_pp0_stage2, zext_ln116_5_fu_331_p1, ap_block_pp0_stage3, zext_ln116_7_fu_351_p1, ap_block_pp0_stage4, zext_ln116_9_fu_371_p1, ap_block_pp0_stage5, zext_ln116_11_fu_391_p1, ap_block_pp0_stage6, zext_ln116_13_fu_411_p1, ap_block_pp0_stage7, zext_ln116_15_fu_431_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                bramWeightGradientAvg_address0 <= zext_ln116_15_fu_431_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                bramWeightGradientAvg_address0 <= zext_ln116_13_fu_411_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                bramWeightGradientAvg_address0 <= zext_ln116_11_fu_391_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                bramWeightGradientAvg_address0 <= zext_ln116_9_fu_371_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                bramWeightGradientAvg_address0 <= zext_ln116_7_fu_351_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                bramWeightGradientAvg_address0 <= zext_ln116_5_fu_331_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                bramWeightGradientAvg_address0 <= zext_ln116_3_fu_311_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                bramWeightGradientAvg_address0 <= zext_ln116_1_fu_291_p1(14 - 1 downto 0);
            else 
                bramWeightGradientAvg_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            bramWeightGradientAvg_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    bramWeightGradientAvg_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, zext_ln116_fu_280_p1, zext_ln116_2_fu_301_p1, ap_block_pp0_stage1, zext_ln116_4_fu_321_p1, ap_block_pp0_stage2, zext_ln116_6_fu_341_p1, ap_block_pp0_stage3, zext_ln116_8_fu_361_p1, ap_block_pp0_stage4, zext_ln116_10_fu_381_p1, ap_block_pp0_stage5, zext_ln116_12_fu_401_p1, ap_block_pp0_stage6, zext_ln116_14_fu_421_p1, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                bramWeightGradientAvg_address1 <= zext_ln116_14_fu_421_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                bramWeightGradientAvg_address1 <= zext_ln116_12_fu_401_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                bramWeightGradientAvg_address1 <= zext_ln116_10_fu_381_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                bramWeightGradientAvg_address1 <= zext_ln116_8_fu_361_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                bramWeightGradientAvg_address1 <= zext_ln116_6_fu_341_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                bramWeightGradientAvg_address1 <= zext_ln116_4_fu_321_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                bramWeightGradientAvg_address1 <= zext_ln116_2_fu_301_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                bramWeightGradientAvg_address1 <= zext_ln116_fu_280_p1(14 - 1 downto 0);
            else 
                bramWeightGradientAvg_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            bramWeightGradientAvg_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    bramWeightGradientAvg_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            bramWeightGradientAvg_ce0 <= ap_const_logic_1;
        else 
            bramWeightGradientAvg_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bramWeightGradientAvg_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            bramWeightGradientAvg_ce1 <= ap_const_logic_1;
        else 
            bramWeightGradientAvg_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_268_p1 <= ap_phi_mux_i_phi_fu_240_p4(10 - 1 downto 0);
    icmp_ln111_fu_257_p2 <= "1" when (ap_phi_mux_i_phi_fu_240_p4 = trunc_ln_reg_523) else "0";
    l_v_76_fu_439_p1 <= l_val_m_Val_1_reg_570;
    l_v_77_fu_442_p1 <= l_val_m_Val_2_reg_585;
    l_v_78_fu_445_p1 <= l_val_m_Val_3_reg_590;
    l_v_79_fu_448_p1 <= l_val_m_Val_4_reg_605;
    l_v_80_fu_451_p1 <= l_val_m_Val_5_reg_610;
    l_v_81_fu_454_p1 <= l_val_m_Val_6_reg_625;
    l_v_82_fu_457_p1 <= l_val_m_Val_7_reg_630;
    l_v_83_fu_460_p1 <= l_val_m_Val_8_reg_645;
    l_v_84_fu_463_p1 <= l_val_m_Val_9_reg_650;
    l_v_85_fu_466_p1 <= l_val_m_Val_10_reg_665;
    l_v_86_fu_469_p1 <= l_val_m_Val_11_reg_670;
    l_v_87_fu_472_p1 <= l_val_m_Val_12_reg_685;
    l_v_88_fu_475_p1 <= l_val_m_Val_13_reg_690;
    l_v_89_fu_478_p1 <= bramWeightGradientAvg_q1;
    l_v_90_fu_482_p1 <= bramWeightGradientAvg_q0;
    l_v_fu_436_p1 <= l_val_m_Val_0_reg_565;
    or_ln116_10_fu_386_p2 <= (tmp_4_reg_537 or ap_const_lv14_B);
    or_ln116_11_fu_396_p2 <= (tmp_4_reg_537 or ap_const_lv14_C);
    or_ln116_12_fu_406_p2 <= (tmp_4_reg_537 or ap_const_lv14_D);
    or_ln116_13_fu_416_p2 <= (tmp_4_reg_537 or ap_const_lv14_E);
    or_ln116_14_fu_426_p2 <= (tmp_4_reg_537 or ap_const_lv14_F);
    or_ln116_1_fu_296_p2 <= (tmp_4_reg_537 or ap_const_lv14_2);
    or_ln116_2_fu_306_p2 <= (tmp_4_reg_537 or ap_const_lv14_3);
    or_ln116_3_fu_316_p2 <= (tmp_4_reg_537 or ap_const_lv14_4);
    or_ln116_4_fu_326_p2 <= (tmp_4_reg_537 or ap_const_lv14_5);
    or_ln116_5_fu_336_p2 <= (tmp_4_reg_537 or ap_const_lv14_6);
    or_ln116_6_fu_346_p2 <= (tmp_4_reg_537 or ap_const_lv14_7);
    or_ln116_7_fu_356_p2 <= (tmp_4_reg_537 or ap_const_lv14_8);
    or_ln116_8_fu_366_p2 <= (tmp_4_reg_537 or ap_const_lv14_9);
    or_ln116_9_fu_376_p2 <= (tmp_4_reg_537 or ap_const_lv14_A);
    or_ln116_fu_285_p2 <= (tmp_4_fu_272_p3 or ap_const_lv14_1);

    p_n_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_n_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_n_blk_n <= p_n_empty_n;
        else 
            p_n_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_n_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_n_empty_n)
    begin
        if ((not(((p_n_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_n_read <= ap_const_logic_1;
        else 
            p_n_read <= ap_const_logic_0;
        end if; 
    end process;


    p_out_blk_n_assign_proc : process(p_out_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln111_reg_528)
    begin
        if (((icmp_ln111_reg_528 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out_blk_n <= p_out_full_n;
        else 
            p_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_out_din <= (((((((((((((((l_v_90_fu_482_p1 & l_v_89_fu_478_p1) & l_v_88_fu_475_p1) & l_v_87_fu_472_p1) & l_v_86_fu_469_p1) & l_v_85_fu_466_p1) & l_v_84_fu_463_p1) & l_v_83_fu_460_p1) & l_v_82_fu_457_p1) & l_v_81_fu_454_p1) & l_v_80_fu_451_p1) & l_v_79_fu_448_p1) & l_v_78_fu_445_p1) & l_v_77_fu_442_p1) & l_v_76_fu_439_p1) & l_v_fu_436_p1);

    p_out_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln111_reg_528, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln111_reg_528 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out_write <= ap_const_logic_1;
        else 
            p_out_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_4_fu_272_p3 <= (empty_fu_268_p1 & ap_const_lv4_0);
    zext_ln116_10_fu_381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln116_9_fu_376_p2),64));
    zext_ln116_11_fu_391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln116_10_fu_386_p2),64));
    zext_ln116_12_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln116_11_fu_396_p2),64));
    zext_ln116_13_fu_411_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln116_12_fu_406_p2),64));
    zext_ln116_14_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln116_13_fu_416_p2),64));
    zext_ln116_15_fu_431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln116_14_fu_426_p2),64));
    zext_ln116_1_fu_291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln116_fu_285_p2),64));
    zext_ln116_2_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln116_1_fu_296_p2),64));
    zext_ln116_3_fu_311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln116_2_fu_306_p2),64));
    zext_ln116_4_fu_321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln116_3_fu_316_p2),64));
    zext_ln116_5_fu_331_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln116_4_fu_326_p2),64));
    zext_ln116_6_fu_341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln116_5_fu_336_p2),64));
    zext_ln116_7_fu_351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln116_6_fu_346_p2),64));
    zext_ln116_8_fu_361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln116_7_fu_356_p2),64));
    zext_ln116_9_fu_371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln116_8_fu_366_p2),64));
    zext_ln116_fu_280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_272_p3),64));
end behav;
