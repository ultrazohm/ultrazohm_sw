-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity BGD_computeHiddenError_float_1u_0u_s is
port (
    p_outputError_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_outputError_full_n : IN STD_LOGIC;
    p_outputError_write : OUT STD_LOGIC;
    p_n_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_n_empty_n : IN STD_LOGIC;
    p_n_read : OUT STD_LOGIC;
    p_k_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_k_empty_n : IN STD_LOGIC;
    p_k_read : OUT STD_LOGIC;
    p_weights_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    p_weights_ce0 : OUT STD_LOGIC;
    p_weights_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_weights_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_weights_we0 : OUT STD_LOGIC;
    p_weights_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    p_weights_ce1 : OUT STD_LOGIC;
    p_weights_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_weights_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_weights_we1 : OUT STD_LOGIC;
    p_weights_offset_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    p_weights_offset_empty_n : IN STD_LOGIC;
    p_weights_offset_read : OUT STD_LOGIC;
    p_latterError_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_latterError_ce0 : OUT STD_LOGIC;
    p_latterError_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_latterError_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_latterError_we0 : OUT STD_LOGIC;
    p_latterError_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_latterError_ce1 : OUT STD_LOGIC;
    p_latterError_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_latterError_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_latterError_we1 : OUT STD_LOGIC;
    p_outputCurrentLayer_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    p_outputCurrentLayer_ce0 : OUT STD_LOGIC;
    p_outputCurrentLayer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_outputCurrentLayer_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_outputCurrentLayer_we0 : OUT STD_LOGIC;
    p_outputCurrentLayer_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    p_outputCurrentLayer_ce1 : OUT STD_LOGIC;
    p_outputCurrentLayer_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_outputCurrentLayer_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_outputCurrentLayer_we1 : OUT STD_LOGIC;
    p_outputCurrentLayer_offset_dout : IN STD_LOGIC_VECTOR (13 downto 0);
    p_outputCurrentLayer_offset_empty_n : IN STD_LOGIC;
    p_outputCurrentLayer_offset_read : OUT STD_LOGIC;
    p_k_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_k_out_full_n : IN STD_LOGIC;
    p_k_out_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of BGD_computeHiddenError_float_1u_0u_s is 
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal computeHiddenError_float_1u_0u_entry5183_U0_ap_start : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_ap_done : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_ap_continue : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_ap_idle : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_ap_ready : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_start_out : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_start_write : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_k_read : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_k_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_k_out_write : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_n_read : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_weights_offset_read : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_outputCurrentLayer_offset_read : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_n_c_i_din : STD_LOGIC_VECTOR (31 downto 0);
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_n_c_i_write : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_n_c17_i_din : STD_LOGIC_VECTOR (31 downto 0);
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_n_c17_i_write : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_k_c_i_din : STD_LOGIC_VECTOR (31 downto 0);
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_k_c_i_write : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_k_c18_i_din : STD_LOGIC_VECTOR (31 downto 0);
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_k_c18_i_write : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_k_c19_i_din : STD_LOGIC_VECTOR (31 downto 0);
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_k_c19_i_write : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_k_c20_i_din : STD_LOGIC_VECTOR (31 downto 0);
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_k_c20_i_write : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_weights_offset_c_i_din : STD_LOGIC_VECTOR (15 downto 0);
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_weights_offset_c_i_write : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_outputCurrentLayer_offset_c_i_din : STD_LOGIC_VECTOR (13 downto 0);
    signal computeHiddenError_float_1u_0u_entry5183_U0_p_outputCurrentLayer_offset_c_i_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal gem2StreamTranspose_float_1u_U0_ap_start : STD_LOGIC;
    signal gem2StreamTranspose_float_1u_U0_ap_done : STD_LOGIC;
    signal gem2StreamTranspose_float_1u_U0_ap_continue : STD_LOGIC;
    signal gem2StreamTranspose_float_1u_U0_ap_idle : STD_LOGIC;
    signal gem2StreamTranspose_float_1u_U0_ap_ready : STD_LOGIC;
    signal gem2StreamTranspose_float_1u_U0_start_out : STD_LOGIC;
    signal gem2StreamTranspose_float_1u_U0_start_write : STD_LOGIC;
    signal gem2StreamTranspose_float_1u_U0_p_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal gem2StreamTranspose_float_1u_U0_p_out_write : STD_LOGIC;
    signal gem2StreamTranspose_float_1u_U0_p_n_read : STD_LOGIC;
    signal gem2StreamTranspose_float_1u_U0_p_k_read : STD_LOGIC;
    signal gem2StreamTranspose_float_1u_U0_p_in_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal gem2StreamTranspose_float_1u_U0_p_in_ce0 : STD_LOGIC;
    signal gem2StreamTranspose_float_1u_U0_p_in_offset_read : STD_LOGIC;
    signal gem2StreamTranspose_float_1u_U0_p_n_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal gem2StreamTranspose_float_1u_U0_p_n_out_write : STD_LOGIC;
    signal gem2StreamTranspose_float_1u_U0_p_k_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal gem2StreamTranspose_float_1u_U0_p_k_out_write : STD_LOGIC;
    signal vec2GemStream_float_1u_U0_ap_start : STD_LOGIC;
    signal vec2GemStream_float_1u_U0_ap_done : STD_LOGIC;
    signal vec2GemStream_float_1u_U0_ap_continue : STD_LOGIC;
    signal vec2GemStream_float_1u_U0_ap_idle : STD_LOGIC;
    signal vec2GemStream_float_1u_U0_ap_ready : STD_LOGIC;
    signal vec2GemStream_float_1u_U0_p_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal vec2GemStream_float_1u_U0_p_out_write : STD_LOGIC;
    signal vec2GemStream_float_1u_U0_p_m_read : STD_LOGIC;
    signal vec2GemStream_float_1u_U0_p_n_read : STD_LOGIC;
    signal vec2GemStream_float_1u_U0_p_in_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal vec2GemStream_float_1u_U0_p_in_ce0 : STD_LOGIC;
    signal streamZero_float_1u_U0_ap_start : STD_LOGIC;
    signal streamZero_float_1u_U0_ap_done : STD_LOGIC;
    signal streamZero_float_1u_U0_ap_continue : STD_LOGIC;
    signal streamZero_float_1u_U0_ap_idle : STD_LOGIC;
    signal streamZero_float_1u_U0_ap_ready : STD_LOGIC;
    signal streamZero_float_1u_U0_p_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal streamZero_float_1u_U0_p_out_write : STD_LOGIC;
    signal streamZero_float_1u_U0_p_n_read : STD_LOGIC;
    signal gemv_float_0u_unsigned_int_U0_ap_start : STD_LOGIC;
    signal gemv_float_0u_unsigned_int_U0_start_out : STD_LOGIC;
    signal gemv_float_0u_unsigned_int_U0_start_write : STD_LOGIC;
    signal gemv_float_0u_unsigned_int_U0_l_strWeights6_read : STD_LOGIC;
    signal gemv_float_0u_unsigned_int_U0_l_strLatterError7_read : STD_LOGIC;
    signal gemv_float_0u_unsigned_int_U0_l_strZero8_read : STD_LOGIC;
    signal gemv_float_0u_unsigned_int_U0_l_strMv9_din : STD_LOGIC_VECTOR (31 downto 0);
    signal gemv_float_0u_unsigned_int_U0_l_strMv9_write : STD_LOGIC;
    signal gemv_float_0u_unsigned_int_U0_p_m_read : STD_LOGIC;
    signal gemv_float_0u_unsigned_int_U0_p_n_read : STD_LOGIC;
    signal gemv_float_0u_unsigned_int_U0_p_m_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal gemv_float_0u_unsigned_int_U0_p_m_out_write : STD_LOGIC;
    signal gemv_float_0u_unsigned_int_U0_ap_done : STD_LOGIC;
    signal gemv_float_0u_unsigned_int_U0_ap_ready : STD_LOGIC;
    signal gemv_float_0u_unsigned_int_U0_ap_idle : STD_LOGIC;
    signal gemv_float_0u_unsigned_int_U0_ap_continue : STD_LOGIC;
    signal readVec2Stream_float_1u_2_U0_ap_start : STD_LOGIC;
    signal readVec2Stream_float_1u_2_U0_ap_done : STD_LOGIC;
    signal readVec2Stream_float_1u_2_U0_ap_continue : STD_LOGIC;
    signal readVec2Stream_float_1u_2_U0_ap_idle : STD_LOGIC;
    signal readVec2Stream_float_1u_2_U0_ap_ready : STD_LOGIC;
    signal readVec2Stream_float_1u_2_U0_start_out : STD_LOGIC;
    signal readVec2Stream_float_1u_2_U0_start_write : STD_LOGIC;
    signal readVec2Stream_float_1u_2_U0_p_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal readVec2Stream_float_1u_2_U0_p_out_write : STD_LOGIC;
    signal readVec2Stream_float_1u_2_U0_p_in_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal readVec2Stream_float_1u_2_U0_p_in_ce0 : STD_LOGIC;
    signal readVec2Stream_float_1u_2_U0_p_in_offset_read : STD_LOGIC;
    signal readVec2Stream_float_1u_2_U0_p_n_read : STD_LOGIC;
    signal readVec2Stream_float_1u_2_U0_p_n_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal readVec2Stream_float_1u_2_U0_p_n_out_write : STD_LOGIC;
    signal applyFunction_float_1u_U0_ap_start : STD_LOGIC;
    signal applyFunction_float_1u_U0_ap_done : STD_LOGIC;
    signal applyFunction_float_1u_U0_ap_continue : STD_LOGIC;
    signal applyFunction_float_1u_U0_ap_idle : STD_LOGIC;
    signal applyFunction_float_1u_U0_ap_ready : STD_LOGIC;
    signal applyFunction_float_1u_U0_l_strOutputCurLayer10_read : STD_LOGIC;
    signal applyFunction_float_1u_U0_l_strActivDeriv11_din : STD_LOGIC_VECTOR (31 downto 0);
    signal applyFunction_float_1u_U0_l_strActivDeriv11_write : STD_LOGIC;
    signal applyFunction_float_1u_U0_p_n_read : STD_LOGIC;
    signal hadamardProduct_float_1u_U0_ap_start : STD_LOGIC;
    signal hadamardProduct_float_1u_U0_ap_done : STD_LOGIC;
    signal hadamardProduct_float_1u_U0_ap_continue : STD_LOGIC;
    signal hadamardProduct_float_1u_U0_ap_idle : STD_LOGIC;
    signal hadamardProduct_float_1u_U0_ap_ready : STD_LOGIC;
    signal hadamardProduct_float_1u_U0_p_x_read : STD_LOGIC;
    signal hadamardProduct_float_1u_U0_p_y_read : STD_LOGIC;
    signal hadamardProduct_float_1u_U0_p_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal hadamardProduct_float_1u_U0_p_out_write : STD_LOGIC;
    signal hadamardProduct_float_1u_U0_p_n_read : STD_LOGIC;
    signal p_n_c_i_full_n : STD_LOGIC;
    signal p_n_c_i_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_n_c_i_empty_n : STD_LOGIC;
    signal p_n_c17_i_full_n : STD_LOGIC;
    signal p_n_c17_i_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_n_c17_i_empty_n : STD_LOGIC;
    signal p_k_c_i_full_n : STD_LOGIC;
    signal p_k_c_i_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_k_c_i_empty_n : STD_LOGIC;
    signal p_k_c18_i_full_n : STD_LOGIC;
    signal p_k_c18_i_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_k_c18_i_empty_n : STD_LOGIC;
    signal p_k_c19_i_full_n : STD_LOGIC;
    signal p_k_c19_i_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_k_c19_i_empty_n : STD_LOGIC;
    signal p_k_c20_i_full_n : STD_LOGIC;
    signal p_k_c20_i_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_k_c20_i_empty_n : STD_LOGIC;
    signal p_weights_offset_c_i_full_n : STD_LOGIC;
    signal p_weights_offset_c_i_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal p_weights_offset_c_i_empty_n : STD_LOGIC;
    signal p_outputCurrentLayer_offset_c_i_full_n : STD_LOGIC;
    signal p_outputCurrentLayer_offset_c_i_dout : STD_LOGIC_VECTOR (13 downto 0);
    signal p_outputCurrentLayer_offset_c_i_empty_n : STD_LOGIC;
    signal l_strWeights_full_n : STD_LOGIC;
    signal l_strWeights_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal l_strWeights_empty_n : STD_LOGIC;
    signal p_n_c21_i_full_n : STD_LOGIC;
    signal p_n_c21_i_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_n_c21_i_empty_n : STD_LOGIC;
    signal p_k_c22_i_full_n : STD_LOGIC;
    signal p_k_c22_i_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_k_c22_i_empty_n : STD_LOGIC;
    signal l_strLatterError_full_n : STD_LOGIC;
    signal l_strLatterError_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal l_strLatterError_empty_n : STD_LOGIC;
    signal l_strZero_full_n : STD_LOGIC;
    signal l_strZero_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal l_strZero_empty_n : STD_LOGIC;
    signal l_strMv_full_n : STD_LOGIC;
    signal l_strMv_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal l_strMv_empty_n : STD_LOGIC;
    signal p_k_c23_i_full_n : STD_LOGIC;
    signal p_k_c23_i_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_k_c23_i_empty_n : STD_LOGIC;
    signal l_strOutputCurLayer_full_n : STD_LOGIC;
    signal l_strOutputCurLayer_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal l_strOutputCurLayer_empty_n : STD_LOGIC;
    signal p_k_c24_i_full_n : STD_LOGIC;
    signal p_k_c24_i_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_k_c24_i_empty_n : STD_LOGIC;
    signal l_strActivDeriv_full_n : STD_LOGIC;
    signal l_strActivDeriv_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal l_strActivDeriv_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_computeHiddenError_float_1u_0u_entry5183_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_computeHiddenError_float_1u_0u_entry5183_U0_ap_ready : STD_LOGIC;
    signal computeHiddenError_float_1u_0u_entry5183_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_gem2StreamTranspose_float_1u_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_gem2StreamTranspose_float_1u_U0_ap_ready : STD_LOGIC;
    signal gem2StreamTranspose_float_1u_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_vec2GemStream_float_1u_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_vec2GemStream_float_1u_U0_ap_ready : STD_LOGIC;
    signal vec2GemStream_float_1u_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_readVec2Stream_float_1u_2_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_readVec2Stream_float_1u_2_U0_ap_ready : STD_LOGIC;
    signal readVec2Stream_float_1u_2_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal start_for_streamZero_float_1u_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_streamZero_float_1u_U0_full_n : STD_LOGIC;
    signal start_for_streamZero_float_1u_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_streamZero_float_1u_U0_empty_n : STD_LOGIC;
    signal start_for_gemv_float_0u_unsigned_int_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_gemv_float_0u_unsigned_int_U0_full_n : STD_LOGIC;
    signal start_for_gemv_float_0u_unsigned_int_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_gemv_float_0u_unsigned_int_U0_empty_n : STD_LOGIC;
    signal vec2GemStream_float_1u_U0_start_full_n : STD_LOGIC;
    signal vec2GemStream_float_1u_U0_start_write : STD_LOGIC;
    signal streamZero_float_1u_U0_start_full_n : STD_LOGIC;
    signal streamZero_float_1u_U0_start_write : STD_LOGIC;
    signal start_for_hadamardProduct_float_1u_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_hadamardProduct_float_1u_U0_full_n : STD_LOGIC;
    signal start_for_hadamardProduct_float_1u_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_hadamardProduct_float_1u_U0_empty_n : STD_LOGIC;
    signal start_for_applyFunction_float_1u_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_applyFunction_float_1u_U0_full_n : STD_LOGIC;
    signal start_for_applyFunction_float_1u_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_applyFunction_float_1u_U0_empty_n : STD_LOGIC;
    signal applyFunction_float_1u_U0_start_full_n : STD_LOGIC;
    signal applyFunction_float_1u_U0_start_write : STD_LOGIC;
    signal hadamardProduct_float_1u_U0_start_full_n : STD_LOGIC;
    signal hadamardProduct_float_1u_U0_start_write : STD_LOGIC;

    component BGD_computeHiddenError_float_1u_0u_entry5183 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_k_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_k_empty_n : IN STD_LOGIC;
        p_k_read : OUT STD_LOGIC;
        p_k_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_k_out_full_n : IN STD_LOGIC;
        p_k_out_write : OUT STD_LOGIC;
        p_n_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_n_empty_n : IN STD_LOGIC;
        p_n_read : OUT STD_LOGIC;
        p_weights_offset_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        p_weights_offset_empty_n : IN STD_LOGIC;
        p_weights_offset_read : OUT STD_LOGIC;
        p_outputCurrentLayer_offset_dout : IN STD_LOGIC_VECTOR (13 downto 0);
        p_outputCurrentLayer_offset_empty_n : IN STD_LOGIC;
        p_outputCurrentLayer_offset_read : OUT STD_LOGIC;
        p_n_c_i_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_n_c_i_full_n : IN STD_LOGIC;
        p_n_c_i_write : OUT STD_LOGIC;
        p_n_c17_i_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_n_c17_i_full_n : IN STD_LOGIC;
        p_n_c17_i_write : OUT STD_LOGIC;
        p_k_c_i_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_k_c_i_full_n : IN STD_LOGIC;
        p_k_c_i_write : OUT STD_LOGIC;
        p_k_c18_i_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_k_c18_i_full_n : IN STD_LOGIC;
        p_k_c18_i_write : OUT STD_LOGIC;
        p_k_c19_i_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_k_c19_i_full_n : IN STD_LOGIC;
        p_k_c19_i_write : OUT STD_LOGIC;
        p_k_c20_i_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_k_c20_i_full_n : IN STD_LOGIC;
        p_k_c20_i_write : OUT STD_LOGIC;
        p_weights_offset_c_i_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_weights_offset_c_i_full_n : IN STD_LOGIC;
        p_weights_offset_c_i_write : OUT STD_LOGIC;
        p_outputCurrentLayer_offset_c_i_din : OUT STD_LOGIC_VECTOR (13 downto 0);
        p_outputCurrentLayer_offset_c_i_full_n : IN STD_LOGIC;
        p_outputCurrentLayer_offset_c_i_write : OUT STD_LOGIC );
    end component;


    component BGD_gem2StreamTranspose_float_1u_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out_full_n : IN STD_LOGIC;
        p_out_write : OUT STD_LOGIC;
        p_n_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_n_empty_n : IN STD_LOGIC;
        p_n_read : OUT STD_LOGIC;
        p_k_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_k_empty_n : IN STD_LOGIC;
        p_k_read : OUT STD_LOGIC;
        p_in_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_in_ce0 : OUT STD_LOGIC;
        p_in_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_in_offset_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        p_in_offset_empty_n : IN STD_LOGIC;
        p_in_offset_read : OUT STD_LOGIC;
        p_n_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_n_out_full_n : IN STD_LOGIC;
        p_n_out_write : OUT STD_LOGIC;
        p_k_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_k_out_full_n : IN STD_LOGIC;
        p_k_out_write : OUT STD_LOGIC );
    end component;


    component BGD_vec2GemStream_float_1u_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out_full_n : IN STD_LOGIC;
        p_out_write : OUT STD_LOGIC;
        p_m_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_m_empty_n : IN STD_LOGIC;
        p_m_read : OUT STD_LOGIC;
        p_n_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_n_empty_n : IN STD_LOGIC;
        p_n_read : OUT STD_LOGIC;
        p_in_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_in_ce0 : OUT STD_LOGIC;
        p_in_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component BGD_streamZero_float_1u_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out_full_n : IN STD_LOGIC;
        p_out_write : OUT STD_LOGIC;
        p_n_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_n_empty_n : IN STD_LOGIC;
        p_n_read : OUT STD_LOGIC );
    end component;


    component BGD_gemv_float_0u_unsigned_int_s IS
    port (
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        l_strWeights6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        l_strWeights6_empty_n : IN STD_LOGIC;
        l_strWeights6_read : OUT STD_LOGIC;
        l_strLatterError7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        l_strLatterError7_empty_n : IN STD_LOGIC;
        l_strLatterError7_read : OUT STD_LOGIC;
        l_strZero8_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        l_strZero8_empty_n : IN STD_LOGIC;
        l_strZero8_read : OUT STD_LOGIC;
        l_strMv9_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        l_strMv9_full_n : IN STD_LOGIC;
        l_strMv9_write : OUT STD_LOGIC;
        p_m_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_m_empty_n : IN STD_LOGIC;
        p_m_read : OUT STD_LOGIC;
        p_n_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_n_empty_n : IN STD_LOGIC;
        p_n_read : OUT STD_LOGIC;
        p_m_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_m_out_full_n : IN STD_LOGIC;
        p_m_out_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component BGD_readVec2Stream_float_1u_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out_full_n : IN STD_LOGIC;
        p_out_write : OUT STD_LOGIC;
        p_in_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        p_in_ce0 : OUT STD_LOGIC;
        p_in_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_in_offset_dout : IN STD_LOGIC_VECTOR (13 downto 0);
        p_in_offset_empty_n : IN STD_LOGIC;
        p_in_offset_read : OUT STD_LOGIC;
        p_n_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_n_empty_n : IN STD_LOGIC;
        p_n_read : OUT STD_LOGIC;
        p_n_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_n_out_full_n : IN STD_LOGIC;
        p_n_out_write : OUT STD_LOGIC );
    end component;


    component BGD_applyFunction_float_1u_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        l_strOutputCurLayer10_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        l_strOutputCurLayer10_empty_n : IN STD_LOGIC;
        l_strOutputCurLayer10_read : OUT STD_LOGIC;
        l_strActivDeriv11_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        l_strActivDeriv11_full_n : IN STD_LOGIC;
        l_strActivDeriv11_write : OUT STD_LOGIC;
        p_n_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_n_empty_n : IN STD_LOGIC;
        p_n_read : OUT STD_LOGIC );
    end component;


    component BGD_hadamardProduct_float_1u_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_x_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_x_empty_n : IN STD_LOGIC;
        p_x_read : OUT STD_LOGIC;
        p_y_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_y_empty_n : IN STD_LOGIC;
        p_y_read : OUT STD_LOGIC;
        p_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out_full_n : IN STD_LOGIC;
        p_out_write : OUT STD_LOGIC;
        p_n_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_n_empty_n : IN STD_LOGIC;
        p_n_read : OUT STD_LOGIC );
    end component;


    component BGD_fifo_w32_d2_S_x2 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component BGD_fifo_w16_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component BGD_fifo_w14_d2_S_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (13 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (13 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component BGD_start_for_streamZero_float_1u_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component BGD_start_for_gemv_float_0u_unsigned_int_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component BGD_start_for_hadamardProduct_float_1u_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component BGD_start_for_applyFunction_float_1u_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    computeHiddenError_float_1u_0u_entry5183_U0 : component BGD_computeHiddenError_float_1u_0u_entry5183
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => computeHiddenError_float_1u_0u_entry5183_U0_ap_start,
        start_full_n => start_for_streamZero_float_1u_U0_full_n,
        ap_done => computeHiddenError_float_1u_0u_entry5183_U0_ap_done,
        ap_continue => computeHiddenError_float_1u_0u_entry5183_U0_ap_continue,
        ap_idle => computeHiddenError_float_1u_0u_entry5183_U0_ap_idle,
        ap_ready => computeHiddenError_float_1u_0u_entry5183_U0_ap_ready,
        start_out => computeHiddenError_float_1u_0u_entry5183_U0_start_out,
        start_write => computeHiddenError_float_1u_0u_entry5183_U0_start_write,
        p_k_dout => p_k_dout,
        p_k_empty_n => p_k_empty_n,
        p_k_read => computeHiddenError_float_1u_0u_entry5183_U0_p_k_read,
        p_k_out_din => computeHiddenError_float_1u_0u_entry5183_U0_p_k_out_din,
        p_k_out_full_n => p_k_out_full_n,
        p_k_out_write => computeHiddenError_float_1u_0u_entry5183_U0_p_k_out_write,
        p_n_dout => p_n_dout,
        p_n_empty_n => p_n_empty_n,
        p_n_read => computeHiddenError_float_1u_0u_entry5183_U0_p_n_read,
        p_weights_offset_dout => p_weights_offset_dout,
        p_weights_offset_empty_n => p_weights_offset_empty_n,
        p_weights_offset_read => computeHiddenError_float_1u_0u_entry5183_U0_p_weights_offset_read,
        p_outputCurrentLayer_offset_dout => p_outputCurrentLayer_offset_dout,
        p_outputCurrentLayer_offset_empty_n => p_outputCurrentLayer_offset_empty_n,
        p_outputCurrentLayer_offset_read => computeHiddenError_float_1u_0u_entry5183_U0_p_outputCurrentLayer_offset_read,
        p_n_c_i_din => computeHiddenError_float_1u_0u_entry5183_U0_p_n_c_i_din,
        p_n_c_i_full_n => p_n_c_i_full_n,
        p_n_c_i_write => computeHiddenError_float_1u_0u_entry5183_U0_p_n_c_i_write,
        p_n_c17_i_din => computeHiddenError_float_1u_0u_entry5183_U0_p_n_c17_i_din,
        p_n_c17_i_full_n => p_n_c17_i_full_n,
        p_n_c17_i_write => computeHiddenError_float_1u_0u_entry5183_U0_p_n_c17_i_write,
        p_k_c_i_din => computeHiddenError_float_1u_0u_entry5183_U0_p_k_c_i_din,
        p_k_c_i_full_n => p_k_c_i_full_n,
        p_k_c_i_write => computeHiddenError_float_1u_0u_entry5183_U0_p_k_c_i_write,
        p_k_c18_i_din => computeHiddenError_float_1u_0u_entry5183_U0_p_k_c18_i_din,
        p_k_c18_i_full_n => p_k_c18_i_full_n,
        p_k_c18_i_write => computeHiddenError_float_1u_0u_entry5183_U0_p_k_c18_i_write,
        p_k_c19_i_din => computeHiddenError_float_1u_0u_entry5183_U0_p_k_c19_i_din,
        p_k_c19_i_full_n => p_k_c19_i_full_n,
        p_k_c19_i_write => computeHiddenError_float_1u_0u_entry5183_U0_p_k_c19_i_write,
        p_k_c20_i_din => computeHiddenError_float_1u_0u_entry5183_U0_p_k_c20_i_din,
        p_k_c20_i_full_n => p_k_c20_i_full_n,
        p_k_c20_i_write => computeHiddenError_float_1u_0u_entry5183_U0_p_k_c20_i_write,
        p_weights_offset_c_i_din => computeHiddenError_float_1u_0u_entry5183_U0_p_weights_offset_c_i_din,
        p_weights_offset_c_i_full_n => p_weights_offset_c_i_full_n,
        p_weights_offset_c_i_write => computeHiddenError_float_1u_0u_entry5183_U0_p_weights_offset_c_i_write,
        p_outputCurrentLayer_offset_c_i_din => computeHiddenError_float_1u_0u_entry5183_U0_p_outputCurrentLayer_offset_c_i_din,
        p_outputCurrentLayer_offset_c_i_full_n => p_outputCurrentLayer_offset_c_i_full_n,
        p_outputCurrentLayer_offset_c_i_write => computeHiddenError_float_1u_0u_entry5183_U0_p_outputCurrentLayer_offset_c_i_write);

    gem2StreamTranspose_float_1u_U0 : component BGD_gem2StreamTranspose_float_1u_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => gem2StreamTranspose_float_1u_U0_ap_start,
        start_full_n => start_for_gemv_float_0u_unsigned_int_U0_full_n,
        ap_done => gem2StreamTranspose_float_1u_U0_ap_done,
        ap_continue => gem2StreamTranspose_float_1u_U0_ap_continue,
        ap_idle => gem2StreamTranspose_float_1u_U0_ap_idle,
        ap_ready => gem2StreamTranspose_float_1u_U0_ap_ready,
        start_out => gem2StreamTranspose_float_1u_U0_start_out,
        start_write => gem2StreamTranspose_float_1u_U0_start_write,
        p_out_din => gem2StreamTranspose_float_1u_U0_p_out_din,
        p_out_full_n => l_strWeights_full_n,
        p_out_write => gem2StreamTranspose_float_1u_U0_p_out_write,
        p_n_dout => p_n_c_i_dout,
        p_n_empty_n => p_n_c_i_empty_n,
        p_n_read => gem2StreamTranspose_float_1u_U0_p_n_read,
        p_k_dout => p_k_c_i_dout,
        p_k_empty_n => p_k_c_i_empty_n,
        p_k_read => gem2StreamTranspose_float_1u_U0_p_k_read,
        p_in_address0 => gem2StreamTranspose_float_1u_U0_p_in_address0,
        p_in_ce0 => gem2StreamTranspose_float_1u_U0_p_in_ce0,
        p_in_q0 => p_weights_q0,
        p_in_offset_dout => p_weights_offset_c_i_dout,
        p_in_offset_empty_n => p_weights_offset_c_i_empty_n,
        p_in_offset_read => gem2StreamTranspose_float_1u_U0_p_in_offset_read,
        p_n_out_din => gem2StreamTranspose_float_1u_U0_p_n_out_din,
        p_n_out_full_n => p_n_c21_i_full_n,
        p_n_out_write => gem2StreamTranspose_float_1u_U0_p_n_out_write,
        p_k_out_din => gem2StreamTranspose_float_1u_U0_p_k_out_din,
        p_k_out_full_n => p_k_c22_i_full_n,
        p_k_out_write => gem2StreamTranspose_float_1u_U0_p_k_out_write);

    vec2GemStream_float_1u_U0 : component BGD_vec2GemStream_float_1u_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => vec2GemStream_float_1u_U0_ap_start,
        ap_done => vec2GemStream_float_1u_U0_ap_done,
        ap_continue => vec2GemStream_float_1u_U0_ap_continue,
        ap_idle => vec2GemStream_float_1u_U0_ap_idle,
        ap_ready => vec2GemStream_float_1u_U0_ap_ready,
        p_out_din => vec2GemStream_float_1u_U0_p_out_din,
        p_out_full_n => l_strLatterError_full_n,
        p_out_write => vec2GemStream_float_1u_U0_p_out_write,
        p_m_dout => p_k_c18_i_dout,
        p_m_empty_n => p_k_c18_i_empty_n,
        p_m_read => vec2GemStream_float_1u_U0_p_m_read,
        p_n_dout => p_n_c17_i_dout,
        p_n_empty_n => p_n_c17_i_empty_n,
        p_n_read => vec2GemStream_float_1u_U0_p_n_read,
        p_in_address0 => vec2GemStream_float_1u_U0_p_in_address0,
        p_in_ce0 => vec2GemStream_float_1u_U0_p_in_ce0,
        p_in_q0 => p_latterError_q0);

    streamZero_float_1u_U0 : component BGD_streamZero_float_1u_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => streamZero_float_1u_U0_ap_start,
        ap_done => streamZero_float_1u_U0_ap_done,
        ap_continue => streamZero_float_1u_U0_ap_continue,
        ap_idle => streamZero_float_1u_U0_ap_idle,
        ap_ready => streamZero_float_1u_U0_ap_ready,
        p_out_din => streamZero_float_1u_U0_p_out_din,
        p_out_full_n => l_strZero_full_n,
        p_out_write => streamZero_float_1u_U0_p_out_write,
        p_n_dout => p_k_c19_i_dout,
        p_n_empty_n => p_k_c19_i_empty_n,
        p_n_read => streamZero_float_1u_U0_p_n_read);

    gemv_float_0u_unsigned_int_U0 : component BGD_gemv_float_0u_unsigned_int_s
    port map (
        ap_start => gemv_float_0u_unsigned_int_U0_ap_start,
        start_full_n => start_for_hadamardProduct_float_1u_U0_full_n,
        start_out => gemv_float_0u_unsigned_int_U0_start_out,
        start_write => gemv_float_0u_unsigned_int_U0_start_write,
        l_strWeights6_dout => l_strWeights_dout,
        l_strWeights6_empty_n => l_strWeights_empty_n,
        l_strWeights6_read => gemv_float_0u_unsigned_int_U0_l_strWeights6_read,
        l_strLatterError7_dout => l_strLatterError_dout,
        l_strLatterError7_empty_n => l_strLatterError_empty_n,
        l_strLatterError7_read => gemv_float_0u_unsigned_int_U0_l_strLatterError7_read,
        l_strZero8_dout => l_strZero_dout,
        l_strZero8_empty_n => l_strZero_empty_n,
        l_strZero8_read => gemv_float_0u_unsigned_int_U0_l_strZero8_read,
        l_strMv9_din => gemv_float_0u_unsigned_int_U0_l_strMv9_din,
        l_strMv9_full_n => l_strMv_full_n,
        l_strMv9_write => gemv_float_0u_unsigned_int_U0_l_strMv9_write,
        p_m_dout => p_k_c22_i_dout,
        p_m_empty_n => p_k_c22_i_empty_n,
        p_m_read => gemv_float_0u_unsigned_int_U0_p_m_read,
        p_n_dout => p_n_c21_i_dout,
        p_n_empty_n => p_n_c21_i_empty_n,
        p_n_read => gemv_float_0u_unsigned_int_U0_p_n_read,
        p_m_out_din => gemv_float_0u_unsigned_int_U0_p_m_out_din,
        p_m_out_full_n => p_k_c23_i_full_n,
        p_m_out_write => gemv_float_0u_unsigned_int_U0_p_m_out_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_done => gemv_float_0u_unsigned_int_U0_ap_done,
        ap_ready => gemv_float_0u_unsigned_int_U0_ap_ready,
        ap_idle => gemv_float_0u_unsigned_int_U0_ap_idle,
        ap_continue => gemv_float_0u_unsigned_int_U0_ap_continue);

    readVec2Stream_float_1u_2_U0 : component BGD_readVec2Stream_float_1u_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => readVec2Stream_float_1u_2_U0_ap_start,
        start_full_n => start_for_applyFunction_float_1u_U0_full_n,
        ap_done => readVec2Stream_float_1u_2_U0_ap_done,
        ap_continue => readVec2Stream_float_1u_2_U0_ap_continue,
        ap_idle => readVec2Stream_float_1u_2_U0_ap_idle,
        ap_ready => readVec2Stream_float_1u_2_U0_ap_ready,
        start_out => readVec2Stream_float_1u_2_U0_start_out,
        start_write => readVec2Stream_float_1u_2_U0_start_write,
        p_out_din => readVec2Stream_float_1u_2_U0_p_out_din,
        p_out_full_n => l_strOutputCurLayer_full_n,
        p_out_write => readVec2Stream_float_1u_2_U0_p_out_write,
        p_in_address0 => readVec2Stream_float_1u_2_U0_p_in_address0,
        p_in_ce0 => readVec2Stream_float_1u_2_U0_p_in_ce0,
        p_in_q0 => p_outputCurrentLayer_q0,
        p_in_offset_dout => p_outputCurrentLayer_offset_c_i_dout,
        p_in_offset_empty_n => p_outputCurrentLayer_offset_c_i_empty_n,
        p_in_offset_read => readVec2Stream_float_1u_2_U0_p_in_offset_read,
        p_n_dout => p_k_c20_i_dout,
        p_n_empty_n => p_k_c20_i_empty_n,
        p_n_read => readVec2Stream_float_1u_2_U0_p_n_read,
        p_n_out_din => readVec2Stream_float_1u_2_U0_p_n_out_din,
        p_n_out_full_n => p_k_c24_i_full_n,
        p_n_out_write => readVec2Stream_float_1u_2_U0_p_n_out_write);

    applyFunction_float_1u_U0 : component BGD_applyFunction_float_1u_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => applyFunction_float_1u_U0_ap_start,
        ap_done => applyFunction_float_1u_U0_ap_done,
        ap_continue => applyFunction_float_1u_U0_ap_continue,
        ap_idle => applyFunction_float_1u_U0_ap_idle,
        ap_ready => applyFunction_float_1u_U0_ap_ready,
        l_strOutputCurLayer10_dout => l_strOutputCurLayer_dout,
        l_strOutputCurLayer10_empty_n => l_strOutputCurLayer_empty_n,
        l_strOutputCurLayer10_read => applyFunction_float_1u_U0_l_strOutputCurLayer10_read,
        l_strActivDeriv11_din => applyFunction_float_1u_U0_l_strActivDeriv11_din,
        l_strActivDeriv11_full_n => l_strActivDeriv_full_n,
        l_strActivDeriv11_write => applyFunction_float_1u_U0_l_strActivDeriv11_write,
        p_n_dout => p_k_c24_i_dout,
        p_n_empty_n => p_k_c24_i_empty_n,
        p_n_read => applyFunction_float_1u_U0_p_n_read);

    hadamardProduct_float_1u_U0 : component BGD_hadamardProduct_float_1u_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => hadamardProduct_float_1u_U0_ap_start,
        ap_done => hadamardProduct_float_1u_U0_ap_done,
        ap_continue => hadamardProduct_float_1u_U0_ap_continue,
        ap_idle => hadamardProduct_float_1u_U0_ap_idle,
        ap_ready => hadamardProduct_float_1u_U0_ap_ready,
        p_x_dout => l_strMv_dout,
        p_x_empty_n => l_strMv_empty_n,
        p_x_read => hadamardProduct_float_1u_U0_p_x_read,
        p_y_dout => l_strActivDeriv_dout,
        p_y_empty_n => l_strActivDeriv_empty_n,
        p_y_read => hadamardProduct_float_1u_U0_p_y_read,
        p_out_din => hadamardProduct_float_1u_U0_p_out_din,
        p_out_full_n => p_outputError_full_n,
        p_out_write => hadamardProduct_float_1u_U0_p_out_write,
        p_n_dout => p_k_c23_i_dout,
        p_n_empty_n => p_k_c23_i_empty_n,
        p_n_read => hadamardProduct_float_1u_U0_p_n_read);

    p_n_c_i_U : component BGD_fifo_w32_d2_S_x2
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => computeHiddenError_float_1u_0u_entry5183_U0_p_n_c_i_din,
        if_full_n => p_n_c_i_full_n,
        if_write => computeHiddenError_float_1u_0u_entry5183_U0_p_n_c_i_write,
        if_dout => p_n_c_i_dout,
        if_empty_n => p_n_c_i_empty_n,
        if_read => gem2StreamTranspose_float_1u_U0_p_n_read);

    p_n_c17_i_U : component BGD_fifo_w32_d2_S_x2
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => computeHiddenError_float_1u_0u_entry5183_U0_p_n_c17_i_din,
        if_full_n => p_n_c17_i_full_n,
        if_write => computeHiddenError_float_1u_0u_entry5183_U0_p_n_c17_i_write,
        if_dout => p_n_c17_i_dout,
        if_empty_n => p_n_c17_i_empty_n,
        if_read => vec2GemStream_float_1u_U0_p_n_read);

    p_k_c_i_U : component BGD_fifo_w32_d2_S_x2
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => computeHiddenError_float_1u_0u_entry5183_U0_p_k_c_i_din,
        if_full_n => p_k_c_i_full_n,
        if_write => computeHiddenError_float_1u_0u_entry5183_U0_p_k_c_i_write,
        if_dout => p_k_c_i_dout,
        if_empty_n => p_k_c_i_empty_n,
        if_read => gem2StreamTranspose_float_1u_U0_p_k_read);

    p_k_c18_i_U : component BGD_fifo_w32_d2_S_x2
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => computeHiddenError_float_1u_0u_entry5183_U0_p_k_c18_i_din,
        if_full_n => p_k_c18_i_full_n,
        if_write => computeHiddenError_float_1u_0u_entry5183_U0_p_k_c18_i_write,
        if_dout => p_k_c18_i_dout,
        if_empty_n => p_k_c18_i_empty_n,
        if_read => vec2GemStream_float_1u_U0_p_m_read);

    p_k_c19_i_U : component BGD_fifo_w32_d2_S_x2
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => computeHiddenError_float_1u_0u_entry5183_U0_p_k_c19_i_din,
        if_full_n => p_k_c19_i_full_n,
        if_write => computeHiddenError_float_1u_0u_entry5183_U0_p_k_c19_i_write,
        if_dout => p_k_c19_i_dout,
        if_empty_n => p_k_c19_i_empty_n,
        if_read => streamZero_float_1u_U0_p_n_read);

    p_k_c20_i_U : component BGD_fifo_w32_d2_S_x2
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => computeHiddenError_float_1u_0u_entry5183_U0_p_k_c20_i_din,
        if_full_n => p_k_c20_i_full_n,
        if_write => computeHiddenError_float_1u_0u_entry5183_U0_p_k_c20_i_write,
        if_dout => p_k_c20_i_dout,
        if_empty_n => p_k_c20_i_empty_n,
        if_read => readVec2Stream_float_1u_2_U0_p_n_read);

    p_weights_offset_c_i_U : component BGD_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => computeHiddenError_float_1u_0u_entry5183_U0_p_weights_offset_c_i_din,
        if_full_n => p_weights_offset_c_i_full_n,
        if_write => computeHiddenError_float_1u_0u_entry5183_U0_p_weights_offset_c_i_write,
        if_dout => p_weights_offset_c_i_dout,
        if_empty_n => p_weights_offset_c_i_empty_n,
        if_read => gem2StreamTranspose_float_1u_U0_p_in_offset_read);

    p_outputCurrentLayer_offset_c_i_U : component BGD_fifo_w14_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => computeHiddenError_float_1u_0u_entry5183_U0_p_outputCurrentLayer_offset_c_i_din,
        if_full_n => p_outputCurrentLayer_offset_c_i_full_n,
        if_write => computeHiddenError_float_1u_0u_entry5183_U0_p_outputCurrentLayer_offset_c_i_write,
        if_dout => p_outputCurrentLayer_offset_c_i_dout,
        if_empty_n => p_outputCurrentLayer_offset_c_i_empty_n,
        if_read => readVec2Stream_float_1u_2_U0_p_in_offset_read);

    l_strWeights_U : component BGD_fifo_w32_d2_S_x2
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => gem2StreamTranspose_float_1u_U0_p_out_din,
        if_full_n => l_strWeights_full_n,
        if_write => gem2StreamTranspose_float_1u_U0_p_out_write,
        if_dout => l_strWeights_dout,
        if_empty_n => l_strWeights_empty_n,
        if_read => gemv_float_0u_unsigned_int_U0_l_strWeights6_read);

    p_n_c21_i_U : component BGD_fifo_w32_d2_S_x2
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => gem2StreamTranspose_float_1u_U0_p_n_out_din,
        if_full_n => p_n_c21_i_full_n,
        if_write => gem2StreamTranspose_float_1u_U0_p_n_out_write,
        if_dout => p_n_c21_i_dout,
        if_empty_n => p_n_c21_i_empty_n,
        if_read => gemv_float_0u_unsigned_int_U0_p_n_read);

    p_k_c22_i_U : component BGD_fifo_w32_d2_S_x2
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => gem2StreamTranspose_float_1u_U0_p_k_out_din,
        if_full_n => p_k_c22_i_full_n,
        if_write => gem2StreamTranspose_float_1u_U0_p_k_out_write,
        if_dout => p_k_c22_i_dout,
        if_empty_n => p_k_c22_i_empty_n,
        if_read => gemv_float_0u_unsigned_int_U0_p_m_read);

    l_strLatterError_U : component BGD_fifo_w32_d2_S_x2
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => vec2GemStream_float_1u_U0_p_out_din,
        if_full_n => l_strLatterError_full_n,
        if_write => vec2GemStream_float_1u_U0_p_out_write,
        if_dout => l_strLatterError_dout,
        if_empty_n => l_strLatterError_empty_n,
        if_read => gemv_float_0u_unsigned_int_U0_l_strLatterError7_read);

    l_strZero_U : component BGD_fifo_w32_d2_S_x2
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => streamZero_float_1u_U0_p_out_din,
        if_full_n => l_strZero_full_n,
        if_write => streamZero_float_1u_U0_p_out_write,
        if_dout => l_strZero_dout,
        if_empty_n => l_strZero_empty_n,
        if_read => gemv_float_0u_unsigned_int_U0_l_strZero8_read);

    l_strMv_U : component BGD_fifo_w32_d2_S_x2
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => gemv_float_0u_unsigned_int_U0_l_strMv9_din,
        if_full_n => l_strMv_full_n,
        if_write => gemv_float_0u_unsigned_int_U0_l_strMv9_write,
        if_dout => l_strMv_dout,
        if_empty_n => l_strMv_empty_n,
        if_read => hadamardProduct_float_1u_U0_p_x_read);

    p_k_c23_i_U : component BGD_fifo_w32_d2_S_x2
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => gemv_float_0u_unsigned_int_U0_p_m_out_din,
        if_full_n => p_k_c23_i_full_n,
        if_write => gemv_float_0u_unsigned_int_U0_p_m_out_write,
        if_dout => p_k_c23_i_dout,
        if_empty_n => p_k_c23_i_empty_n,
        if_read => hadamardProduct_float_1u_U0_p_n_read);

    l_strOutputCurLayer_U : component BGD_fifo_w32_d2_S_x2
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => readVec2Stream_float_1u_2_U0_p_out_din,
        if_full_n => l_strOutputCurLayer_full_n,
        if_write => readVec2Stream_float_1u_2_U0_p_out_write,
        if_dout => l_strOutputCurLayer_dout,
        if_empty_n => l_strOutputCurLayer_empty_n,
        if_read => applyFunction_float_1u_U0_l_strOutputCurLayer10_read);

    p_k_c24_i_U : component BGD_fifo_w32_d2_S_x2
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => readVec2Stream_float_1u_2_U0_p_n_out_din,
        if_full_n => p_k_c24_i_full_n,
        if_write => readVec2Stream_float_1u_2_U0_p_n_out_write,
        if_dout => p_k_c24_i_dout,
        if_empty_n => p_k_c24_i_empty_n,
        if_read => applyFunction_float_1u_U0_p_n_read);

    l_strActivDeriv_U : component BGD_fifo_w32_d2_S_x2
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => applyFunction_float_1u_U0_l_strActivDeriv11_din,
        if_full_n => l_strActivDeriv_full_n,
        if_write => applyFunction_float_1u_U0_l_strActivDeriv11_write,
        if_dout => l_strActivDeriv_dout,
        if_empty_n => l_strActivDeriv_empty_n,
        if_read => hadamardProduct_float_1u_U0_p_y_read);

    start_for_streamZero_float_1u_U0_U : component BGD_start_for_streamZero_float_1u_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_streamZero_float_1u_U0_din,
        if_full_n => start_for_streamZero_float_1u_U0_full_n,
        if_write => computeHiddenError_float_1u_0u_entry5183_U0_start_write,
        if_dout => start_for_streamZero_float_1u_U0_dout,
        if_empty_n => start_for_streamZero_float_1u_U0_empty_n,
        if_read => streamZero_float_1u_U0_ap_ready);

    start_for_gemv_float_0u_unsigned_int_U0_U : component BGD_start_for_gemv_float_0u_unsigned_int_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_gemv_float_0u_unsigned_int_U0_din,
        if_full_n => start_for_gemv_float_0u_unsigned_int_U0_full_n,
        if_write => gem2StreamTranspose_float_1u_U0_start_write,
        if_dout => start_for_gemv_float_0u_unsigned_int_U0_dout,
        if_empty_n => start_for_gemv_float_0u_unsigned_int_U0_empty_n,
        if_read => gemv_float_0u_unsigned_int_U0_ap_ready);

    start_for_hadamardProduct_float_1u_U0_U : component BGD_start_for_hadamardProduct_float_1u_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_hadamardProduct_float_1u_U0_din,
        if_full_n => start_for_hadamardProduct_float_1u_U0_full_n,
        if_write => gemv_float_0u_unsigned_int_U0_start_write,
        if_dout => start_for_hadamardProduct_float_1u_U0_dout,
        if_empty_n => start_for_hadamardProduct_float_1u_U0_empty_n,
        if_read => hadamardProduct_float_1u_U0_ap_ready);

    start_for_applyFunction_float_1u_U0_U : component BGD_start_for_applyFunction_float_1u_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_applyFunction_float_1u_U0_din,
        if_full_n => start_for_applyFunction_float_1u_U0_full_n,
        if_write => readVec2Stream_float_1u_2_U0_start_write,
        if_dout => start_for_applyFunction_float_1u_U0_dout,
        if_empty_n => start_for_applyFunction_float_1u_U0_empty_n,
        if_read => applyFunction_float_1u_U0_ap_ready);





    ap_sync_reg_computeHiddenError_float_1u_0u_entry5183_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_computeHiddenError_float_1u_0u_entry5183_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_computeHiddenError_float_1u_0u_entry5183_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_computeHiddenError_float_1u_0u_entry5183_U0_ap_ready <= ap_sync_computeHiddenError_float_1u_0u_entry5183_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_gem2StreamTranspose_float_1u_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_gem2StreamTranspose_float_1u_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_gem2StreamTranspose_float_1u_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_gem2StreamTranspose_float_1u_U0_ap_ready <= ap_sync_gem2StreamTranspose_float_1u_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_readVec2Stream_float_1u_2_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_readVec2Stream_float_1u_2_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_readVec2Stream_float_1u_2_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_readVec2Stream_float_1u_2_U0_ap_ready <= ap_sync_readVec2Stream_float_1u_2_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_vec2GemStream_float_1u_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_vec2GemStream_float_1u_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_vec2GemStream_float_1u_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_vec2GemStream_float_1u_U0_ap_ready <= ap_sync_vec2GemStream_float_1u_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    computeHiddenError_float_1u_0u_entry5183_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((computeHiddenError_float_1u_0u_entry5183_U0_ap_ready = ap_const_logic_0) and (ap_sync_ready = ap_const_logic_1))) then 
                computeHiddenError_float_1u_0u_entry5183_U0_ap_ready_count <= std_logic_vector(unsigned(computeHiddenError_float_1u_0u_entry5183_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((computeHiddenError_float_1u_0u_entry5183_U0_ap_ready = ap_const_logic_1) and (ap_sync_ready = ap_const_logic_0))) then 
                computeHiddenError_float_1u_0u_entry5183_U0_ap_ready_count <= std_logic_vector(unsigned(computeHiddenError_float_1u_0u_entry5183_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    gem2StreamTranspose_float_1u_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (gem2StreamTranspose_float_1u_U0_ap_ready = ap_const_logic_0))) then 
                gem2StreamTranspose_float_1u_U0_ap_ready_count <= std_logic_vector(unsigned(gem2StreamTranspose_float_1u_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (gem2StreamTranspose_float_1u_U0_ap_ready = ap_const_logic_1))) then 
                gem2StreamTranspose_float_1u_U0_ap_ready_count <= std_logic_vector(unsigned(gem2StreamTranspose_float_1u_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    readVec2Stream_float_1u_2_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (readVec2Stream_float_1u_2_U0_ap_ready = ap_const_logic_0))) then 
                readVec2Stream_float_1u_2_U0_ap_ready_count <= std_logic_vector(unsigned(readVec2Stream_float_1u_2_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (readVec2Stream_float_1u_2_U0_ap_ready = ap_const_logic_1))) then 
                readVec2Stream_float_1u_2_U0_ap_ready_count <= std_logic_vector(unsigned(readVec2Stream_float_1u_2_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    vec2GemStream_float_1u_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (vec2GemStream_float_1u_U0_ap_ready = ap_const_logic_0))) then 
                vec2GemStream_float_1u_U0_ap_ready_count <= std_logic_vector(unsigned(vec2GemStream_float_1u_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (vec2GemStream_float_1u_U0_ap_ready = ap_const_logic_1))) then 
                vec2GemStream_float_1u_U0_ap_ready_count <= std_logic_vector(unsigned(vec2GemStream_float_1u_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    ap_done <= ap_sync_done;
    ap_idle <= (vec2GemStream_float_1u_U0_ap_idle and streamZero_float_1u_U0_ap_idle and readVec2Stream_float_1u_2_U0_ap_idle and hadamardProduct_float_1u_U0_ap_idle and gemv_float_0u_unsigned_int_U0_ap_idle and gem2StreamTranspose_float_1u_U0_ap_idle and computeHiddenError_float_1u_0u_entry5183_U0_ap_idle and applyFunction_float_1u_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_computeHiddenError_float_1u_0u_entry5183_U0_ap_ready <= (computeHiddenError_float_1u_0u_entry5183_U0_ap_ready or ap_sync_reg_computeHiddenError_float_1u_0u_entry5183_U0_ap_ready);
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_done <= (hadamardProduct_float_1u_U0_ap_done and computeHiddenError_float_1u_0u_entry5183_U0_ap_done);
    ap_sync_gem2StreamTranspose_float_1u_U0_ap_ready <= (gem2StreamTranspose_float_1u_U0_ap_ready or ap_sync_reg_gem2StreamTranspose_float_1u_U0_ap_ready);
    ap_sync_readVec2Stream_float_1u_2_U0_ap_ready <= (readVec2Stream_float_1u_2_U0_ap_ready or ap_sync_reg_readVec2Stream_float_1u_2_U0_ap_ready);
    ap_sync_ready <= (ap_sync_vec2GemStream_float_1u_U0_ap_ready and ap_sync_readVec2Stream_float_1u_2_U0_ap_ready and ap_sync_gem2StreamTranspose_float_1u_U0_ap_ready and ap_sync_computeHiddenError_float_1u_0u_entry5183_U0_ap_ready);
    ap_sync_vec2GemStream_float_1u_U0_ap_ready <= (vec2GemStream_float_1u_U0_ap_ready or ap_sync_reg_vec2GemStream_float_1u_U0_ap_ready);
    applyFunction_float_1u_U0_ap_continue <= ap_const_logic_1;
    applyFunction_float_1u_U0_ap_start <= start_for_applyFunction_float_1u_U0_empty_n;
    applyFunction_float_1u_U0_start_full_n <= ap_const_logic_1;
    applyFunction_float_1u_U0_start_write <= ap_const_logic_0;
    computeHiddenError_float_1u_0u_entry5183_U0_ap_continue <= ap_sync_continue;
    computeHiddenError_float_1u_0u_entry5183_U0_ap_start <= ((ap_sync_reg_computeHiddenError_float_1u_0u_entry5183_U0_ap_ready xor ap_const_logic_1) and ap_start);
    gem2StreamTranspose_float_1u_U0_ap_continue <= ap_const_logic_1;
    gem2StreamTranspose_float_1u_U0_ap_start <= ((ap_sync_reg_gem2StreamTranspose_float_1u_U0_ap_ready xor ap_const_logic_1) and ap_start);
    gemv_float_0u_unsigned_int_U0_ap_continue <= ap_const_logic_1;
    gemv_float_0u_unsigned_int_U0_ap_start <= start_for_gemv_float_0u_unsigned_int_U0_empty_n;
    hadamardProduct_float_1u_U0_ap_continue <= ap_sync_continue;
    hadamardProduct_float_1u_U0_ap_start <= start_for_hadamardProduct_float_1u_U0_empty_n;
    hadamardProduct_float_1u_U0_start_full_n <= ap_const_logic_1;
    hadamardProduct_float_1u_U0_start_write <= ap_const_logic_0;
    p_k_out_din <= computeHiddenError_float_1u_0u_entry5183_U0_p_k_out_din;
    p_k_out_write <= computeHiddenError_float_1u_0u_entry5183_U0_p_k_out_write;
    p_k_read <= computeHiddenError_float_1u_0u_entry5183_U0_p_k_read;
    p_latterError_address0 <= vec2GemStream_float_1u_U0_p_in_address0;
    p_latterError_address1 <= ap_const_lv7_0;
    p_latterError_ce0 <= vec2GemStream_float_1u_U0_p_in_ce0;
    p_latterError_ce1 <= ap_const_logic_0;
    p_latterError_d0 <= ap_const_lv32_0;
    p_latterError_d1 <= ap_const_lv32_0;
    p_latterError_we0 <= ap_const_logic_0;
    p_latterError_we1 <= ap_const_logic_0;
    p_n_read <= computeHiddenError_float_1u_0u_entry5183_U0_p_n_read;
    p_outputCurrentLayer_address0 <= readVec2Stream_float_1u_2_U0_p_in_address0;
    p_outputCurrentLayer_address1 <= ap_const_lv14_0;
    p_outputCurrentLayer_ce0 <= readVec2Stream_float_1u_2_U0_p_in_ce0;
    p_outputCurrentLayer_ce1 <= ap_const_logic_0;
    p_outputCurrentLayer_d0 <= ap_const_lv32_0;
    p_outputCurrentLayer_d1 <= ap_const_lv32_0;
    p_outputCurrentLayer_offset_read <= computeHiddenError_float_1u_0u_entry5183_U0_p_outputCurrentLayer_offset_read;
    p_outputCurrentLayer_we0 <= ap_const_logic_0;
    p_outputCurrentLayer_we1 <= ap_const_logic_0;
    p_outputError_din <= hadamardProduct_float_1u_U0_p_out_din;
    p_outputError_write <= hadamardProduct_float_1u_U0_p_out_write;
    p_weights_address0 <= gem2StreamTranspose_float_1u_U0_p_in_address0;
    p_weights_address1 <= ap_const_lv16_0;
    p_weights_ce0 <= gem2StreamTranspose_float_1u_U0_p_in_ce0;
    p_weights_ce1 <= ap_const_logic_0;
    p_weights_d0 <= ap_const_lv32_0;
    p_weights_d1 <= ap_const_lv32_0;
    p_weights_offset_read <= computeHiddenError_float_1u_0u_entry5183_U0_p_weights_offset_read;
    p_weights_we0 <= ap_const_logic_0;
    p_weights_we1 <= ap_const_logic_0;
    readVec2Stream_float_1u_2_U0_ap_continue <= ap_const_logic_1;
    readVec2Stream_float_1u_2_U0_ap_start <= ((ap_sync_reg_readVec2Stream_float_1u_2_U0_ap_ready xor ap_const_logic_1) and ap_start);
    start_for_applyFunction_float_1u_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_gemv_float_0u_unsigned_int_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_hadamardProduct_float_1u_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_streamZero_float_1u_U0_din <= (0=>ap_const_logic_1, others=>'-');
    streamZero_float_1u_U0_ap_continue <= ap_const_logic_1;
    streamZero_float_1u_U0_ap_start <= start_for_streamZero_float_1u_U0_empty_n;
    streamZero_float_1u_U0_start_full_n <= ap_const_logic_1;
    streamZero_float_1u_U0_start_write <= ap_const_logic_0;
    vec2GemStream_float_1u_U0_ap_continue <= ap_const_logic_1;
    vec2GemStream_float_1u_U0_ap_start <= ((ap_sync_reg_vec2GemStream_float_1u_U0_ap_ready xor ap_const_logic_1) and ap_start);
    vec2GemStream_float_1u_U0_start_full_n <= ap_const_logic_1;
    vec2GemStream_float_1u_U0_start_write <= ap_const_logic_0;
end behav;
