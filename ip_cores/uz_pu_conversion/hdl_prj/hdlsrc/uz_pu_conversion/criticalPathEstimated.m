open_system('gm_uz_pu_conversion');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'lightblue';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_uz_pu_conversion/uz_pu_conversion/Detect Rise Positive', 'user2');
annotate_port('gm_uz_pu_conversion/uz_pu_conversion/Detect Rise Positive', 0, 1, 'cp : 1.374 ns');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'blue';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_uz_pu_conversion/uz_pu_conversion/Delay32', 'user1');
annotate_port('gm_uz_pu_conversion/uz_pu_conversion/Delay32', 0, 1, 'cp : 0 ns');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'blue';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_uz_pu_conversion/uz_pu_conversion/Product', 'user1');
annotate_port('gm_uz_pu_conversion/uz_pu_conversion/Product', 0, 1, 'cp : 5.674 ns');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'lightblue';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_uz_pu_conversion/uz_pu_conversion/Switch', 'user2');
annotate_port('gm_uz_pu_conversion/uz_pu_conversion/Switch', 0, 1, 'cp : 1.726 ns');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'lightblue';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_uz_pu_conversion/uz_pu_conversion/Detect Rise Positive/FixPt Relational Operator', 'user2');
annotate_port('gm_uz_pu_conversion/uz_pu_conversion/Detect Rise Positive/FixPt Relational Operator', 0, 1, 'cp : 1.374 ns');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'lightblue';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_uz_pu_conversion/uz_pu_conversion/Detect Rise Positive/Positive', 'user2');
annotate_port('gm_uz_pu_conversion/uz_pu_conversion/Detect Rise Positive/Positive', 0, 1, 'cp : 0.687 ns');
