// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP_p_anonymous_namespace_dot_tree_float_2u_unsigned_int_float_s (
        p_x_dout,
        p_x_empty_n,
        p_x_read,
        p_y_dout,
        p_y_empty_n,
        p_y_read,
        p_res_din,
        p_res_full_n,
        p_res_write,
        p_n,
        p_iter,
        ap_clk,
        ap_rst,
        p_n_ap_vld,
        p_iter_ap_vld,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [127:0] p_x_dout;
input   p_x_empty_n;
output   p_x_read;
input  [127:0] p_y_dout;
input   p_y_empty_n;
output   p_y_read;
output  [31:0] p_res_din;
input   p_res_full_n;
output   p_res_write;
input  [31:0] p_n;
input  [31:0] p_iter;
input   ap_clk;
input   ap_rst;
input   p_n_ap_vld;
input   p_iter_ap_vld;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    mul_float_4u_unsigned_int_float_U0_ap_start;
wire    mul_float_4u_unsigned_int_float_U0_ap_done;
wire    mul_float_4u_unsigned_int_float_U0_ap_continue;
wire    mul_float_4u_unsigned_int_float_U0_ap_idle;
wire    mul_float_4u_unsigned_int_float_U0_ap_ready;
wire    mul_float_4u_unsigned_int_float_U0_start_out;
wire    mul_float_4u_unsigned_int_float_U0_start_write;
wire    mul_float_4u_unsigned_int_float_U0_p_x_read;
wire    mul_float_4u_unsigned_int_float_U0_p_y_read;
wire   [127:0] mul_float_4u_unsigned_int_float_U0_p_res_din;
wire    mul_float_4u_unsigned_int_float_U0_p_res_write;
wire   [31:0] mul_float_4u_unsigned_int_float_U0_p_n_out_din;
wire    mul_float_4u_unsigned_int_float_U0_p_n_out_write;
wire   [31:0] mul_float_4u_unsigned_int_float_U0_p_mulIters_out_din;
wire    mul_float_4u_unsigned_int_float_U0_p_mulIters_out_write;
wire    sum_float_2u_unsigned_int_float_U0_p_x_read;
wire   [31:0] sum_float_2u_unsigned_int_float_U0_p_sum_din;
wire    sum_float_2u_unsigned_int_float_U0_p_sum_write;
wire    sum_float_2u_unsigned_int_float_U0_p_n_read;
wire    sum_float_2u_unsigned_int_float_U0_p_mulIters_read;
wire    sum_float_2u_unsigned_int_float_U0_ap_start;
wire    sum_float_2u_unsigned_int_float_U0_ap_done;
wire    sum_float_2u_unsigned_int_float_U0_ap_ready;
wire    sum_float_2u_unsigned_int_float_U0_ap_idle;
wire    sum_float_2u_unsigned_int_float_U0_ap_continue;
wire    ap_sync_continue;
wire    l_mulStr_full_n;
wire   [127:0] l_mulStr_dout;
wire    l_mulStr_empty_n;
wire    p_n_c_full_n;
wire   [31:0] p_n_c_dout;
wire    p_n_c_empty_n;
wire    p_iter_c_full_n;
wire   [31:0] p_iter_c_dout;
wire    p_iter_c_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_sum_float_2u_unsigned_int_float_U0_din;
wire    start_for_sum_float_2u_unsigned_int_float_U0_full_n;
wire   [0:0] start_for_sum_float_2u_unsigned_int_float_U0_dout;
wire    start_for_sum_float_2u_unsigned_int_float_U0_empty_n;
wire    sum_float_2u_unsigned_int_float_U0_start_full_n;
wire    sum_float_2u_unsigned_int_float_U0_start_write;

MLP_mul_float_4u_unsigned_int_float_s mul_float_4u_unsigned_int_float_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(mul_float_4u_unsigned_int_float_U0_ap_start),
    .start_full_n(start_for_sum_float_2u_unsigned_int_float_U0_full_n),
    .ap_done(mul_float_4u_unsigned_int_float_U0_ap_done),
    .ap_continue(mul_float_4u_unsigned_int_float_U0_ap_continue),
    .ap_idle(mul_float_4u_unsigned_int_float_U0_ap_idle),
    .ap_ready(mul_float_4u_unsigned_int_float_U0_ap_ready),
    .start_out(mul_float_4u_unsigned_int_float_U0_start_out),
    .start_write(mul_float_4u_unsigned_int_float_U0_start_write),
    .p_x_dout(p_x_dout),
    .p_x_empty_n(p_x_empty_n),
    .p_x_read(mul_float_4u_unsigned_int_float_U0_p_x_read),
    .p_y_dout(p_y_dout),
    .p_y_empty_n(p_y_empty_n),
    .p_y_read(mul_float_4u_unsigned_int_float_U0_p_y_read),
    .p_res_din(mul_float_4u_unsigned_int_float_U0_p_res_din),
    .p_res_full_n(l_mulStr_full_n),
    .p_res_write(mul_float_4u_unsigned_int_float_U0_p_res_write),
    .p_n(p_n),
    .p_mulIters(p_iter),
    .p_n_out_din(mul_float_4u_unsigned_int_float_U0_p_n_out_din),
    .p_n_out_full_n(p_n_c_full_n),
    .p_n_out_write(mul_float_4u_unsigned_int_float_U0_p_n_out_write),
    .p_mulIters_out_din(mul_float_4u_unsigned_int_float_U0_p_mulIters_out_din),
    .p_mulIters_out_full_n(p_iter_c_full_n),
    .p_mulIters_out_write(mul_float_4u_unsigned_int_float_U0_p_mulIters_out_write)
);

MLP_sum_float_2u_unsigned_int_float_s sum_float_2u_unsigned_int_float_U0(
    .p_x_dout(l_mulStr_dout),
    .p_x_empty_n(l_mulStr_empty_n),
    .p_x_read(sum_float_2u_unsigned_int_float_U0_p_x_read),
    .p_sum_din(sum_float_2u_unsigned_int_float_U0_p_sum_din),
    .p_sum_full_n(p_res_full_n),
    .p_sum_write(sum_float_2u_unsigned_int_float_U0_p_sum_write),
    .p_n_dout(p_n_c_dout),
    .p_n_empty_n(p_n_c_empty_n),
    .p_n_read(sum_float_2u_unsigned_int_float_U0_p_n_read),
    .p_mulIters_dout(p_iter_c_dout),
    .p_mulIters_empty_n(p_iter_c_empty_n),
    .p_mulIters_read(sum_float_2u_unsigned_int_float_U0_p_mulIters_read),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(sum_float_2u_unsigned_int_float_U0_ap_start),
    .ap_done(sum_float_2u_unsigned_int_float_U0_ap_done),
    .ap_ready(sum_float_2u_unsigned_int_float_U0_ap_ready),
    .ap_idle(sum_float_2u_unsigned_int_float_U0_ap_idle),
    .ap_continue(sum_float_2u_unsigned_int_float_U0_ap_continue)
);

MLP_fifo_w128_d2_S_x2 l_mulStr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(mul_float_4u_unsigned_int_float_U0_p_res_din),
    .if_full_n(l_mulStr_full_n),
    .if_write(mul_float_4u_unsigned_int_float_U0_p_res_write),
    .if_dout(l_mulStr_dout),
    .if_empty_n(l_mulStr_empty_n),
    .if_read(sum_float_2u_unsigned_int_float_U0_p_x_read)
);

MLP_fifo_w32_d2_S_x7 p_n_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(mul_float_4u_unsigned_int_float_U0_p_n_out_din),
    .if_full_n(p_n_c_full_n),
    .if_write(mul_float_4u_unsigned_int_float_U0_p_n_out_write),
    .if_dout(p_n_c_dout),
    .if_empty_n(p_n_c_empty_n),
    .if_read(sum_float_2u_unsigned_int_float_U0_p_n_read)
);

MLP_fifo_w32_d2_S_x7 p_iter_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(mul_float_4u_unsigned_int_float_U0_p_mulIters_out_din),
    .if_full_n(p_iter_c_full_n),
    .if_write(mul_float_4u_unsigned_int_float_U0_p_mulIters_out_write),
    .if_dout(p_iter_c_dout),
    .if_empty_n(p_iter_c_empty_n),
    .if_read(sum_float_2u_unsigned_int_float_U0_p_mulIters_read)
);

MLP_start_for_sum_float_2u_unsigned_int_float_U0 start_for_sum_float_2u_unsigned_int_float_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_sum_float_2u_unsigned_int_float_U0_din),
    .if_full_n(start_for_sum_float_2u_unsigned_int_float_U0_full_n),
    .if_write(mul_float_4u_unsigned_int_float_U0_start_write),
    .if_dout(start_for_sum_float_2u_unsigned_int_float_U0_dout),
    .if_empty_n(start_for_sum_float_2u_unsigned_int_float_U0_empty_n),
    .if_read(sum_float_2u_unsigned_int_float_U0_ap_ready)
);

assign ap_done = sum_float_2u_unsigned_int_float_U0_ap_done;

assign ap_idle = (sum_float_2u_unsigned_int_float_U0_ap_idle & mul_float_4u_unsigned_int_float_U0_ap_idle);

assign ap_ready = mul_float_4u_unsigned_int_float_U0_ap_ready;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = sum_float_2u_unsigned_int_float_U0_ap_done;

assign ap_sync_ready = mul_float_4u_unsigned_int_float_U0_ap_ready;

assign mul_float_4u_unsigned_int_float_U0_ap_continue = 1'b1;

assign mul_float_4u_unsigned_int_float_U0_ap_start = ap_start;

assign p_res_din = sum_float_2u_unsigned_int_float_U0_p_sum_din;

assign p_res_write = sum_float_2u_unsigned_int_float_U0_p_sum_write;

assign p_x_read = mul_float_4u_unsigned_int_float_U0_p_x_read;

assign p_y_read = mul_float_4u_unsigned_int_float_U0_p_y_read;

assign start_for_sum_float_2u_unsigned_int_float_U0_din = 1'b1;

assign sum_float_2u_unsigned_int_float_U0_ap_continue = ap_continue;

assign sum_float_2u_unsigned_int_float_U0_ap_start = start_for_sum_float_2u_unsigned_int_float_U0_empty_n;

assign sum_float_2u_unsigned_int_float_U0_start_full_n = 1'b1;

assign sum_float_2u_unsigned_int_float_U0_start_write = 1'b0;

endmodule //MLP_p_anonymous_namespace_dot_tree_float_2u_unsigned_int_float_s
