-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\FCS_MPC_switching_states_2_level_inverter\hdlsrc\FCS_MPC_switching_states_2_level_inverter\FCS_MPC_switching_states_2_level_inverter_src_Subsystem.vhd
-- Created: 2022-06-13 10:41:27
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-08
-- Target subsystem base rate: 1e-08
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- HB1T                          ce_out        1e-08
-- HB1B                          ce_out        1e-08
-- HB2T                          ce_out        1e-08
-- HB2B                          ce_out        1e-08
-- HB3T                          ce_out        1e-08
-- HB3B                          ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: FCS_MPC_switching_states_2_level_inverter_src_Subsystem
-- Source Path: FCS_MPC_switching_states_2_level_inverter/Microcontroller Software/Subsystem
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY FCS_MPC_switching_states_2_level_inverter_src_Subsystem IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        I                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        done_min_J                        :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        HB1T                              :   OUT   std_logic;
        HB1B                              :   OUT   std_logic;
        HB2T                              :   OUT   std_logic;
        HB2B                              :   OUT   std_logic;
        HB3T                              :   OUT   std_logic;
        HB3B                              :   OUT   std_logic
        );
END FCS_MPC_switching_states_2_level_inverter_src_Subsystem;


ARCHITECTURE rtl OF FCS_MPC_switching_states_2_level_inverter_src_Subsystem IS

  -- Component Declarations
  COMPONENT FCS_MPC_switching_states_2_level_inverter_src_MATLAB_Function1
    PORT( I                               :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          next_switching_state            :   OUT   std_logic_vector(0 TO 5)  -- boolean [6]
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : FCS_MPC_switching_states_2_level_inverter_src_MATLAB_Function1
    USE ENTITY work.FCS_MPC_switching_states_2_level_inverter_src_MATLAB_Function1(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL alpha1_for_one_cycle_if_edge_recognized : signed(7 DOWNTO 0);  -- int8
  SIGNAL reset_old2_out1                  : std_logic;
  SIGNAL reset_old_switch1_out1           : std_logic;
  SIGNAL Detec_edge_sub_cast              : signed(7 DOWNTO 0);  -- sfix8
  SIGNAL Detec_edge_sub_cast_1            : signed(7 DOWNTO 0);  -- sfix8
  SIGNAL dtc_out                          : std_logic;  -- ufix1
  SIGNAL Saturation_out1                  : std_logic;  -- ufix1
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL I_signed                         : signed(31 DOWNTO 0);  -- int32
  SIGNAL Switch_on2_out1                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL Delay2_out1                      : signed(31 DOWNTO 0);  -- int32
  SIGNAL next_switching_state             : std_logic_vector(0 TO 5);  -- boolean [6]

BEGIN
  u_MATLAB_Function1 : FCS_MPC_switching_states_2_level_inverter_src_MATLAB_Function1
    PORT MAP( I => std_logic_vector(Switch_on2_out1),  -- int32
              next_switching_state => next_switching_state  -- boolean [6]
              );

  enb <= clk_enable;

  
  reset_old_switch1_out1 <= reset_old2_out1 WHEN alpha1_for_one_cycle_if_edge_recognized = to_signed(16#00#, 8) ELSE
      done_min_J;

  reset_old2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reset_old2_out1 <= '0';
      ELSIF enb = '1' THEN
        reset_old2_out1 <= reset_old_switch1_out1;
      END IF;
    END IF;
  END PROCESS reset_old2_process;


  Detec_edge_sub_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & done_min_J;
  Detec_edge_sub_cast_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & reset_old2_out1;
  alpha1_for_one_cycle_if_edge_recognized <= Detec_edge_sub_cast - Detec_edge_sub_cast_1;

  
  dtc_out <= '1' WHEN (alpha1_for_one_cycle_if_edge_recognized(7) = '0') AND (alpha1_for_one_cycle_if_edge_recognized(6 DOWNTO 1) /= "000000") ELSE
      '0' WHEN alpha1_for_one_cycle_if_edge_recognized(7) = '1' ELSE
      alpha1_for_one_cycle_if_edge_recognized(0);

  Saturation_out1 <= dtc_out;

  
  switch_compare_1 <= '1' WHEN Saturation_out1 = '1' ELSE
      '0';

  I_signed <= signed(I);

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_out1 <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        Delay2_out1 <= Switch_on2_out1;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  
  Switch_on2_out1 <= Delay2_out1 WHEN switch_compare_1 = '0' ELSE
      I_signed;

  ce_out <= clk_enable;

  HB1T <= next_switching_state(0);

  HB1B <= next_switching_state(1);

  HB2T <= next_switching_state(2);

  HB2B <= next_switching_state(3);

  HB3T <= next_switching_state(4);

  HB3B <= next_switching_state(5);

END rtl;

