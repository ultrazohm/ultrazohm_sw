// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module BGD_computeGradient_float_16u_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_currentErrorInput_dout,
        p_currentErrorInput_empty_n,
        p_currentErrorInput_read,
        p_outputPrevLayer_dout,
        p_outputPrevLayer_empty_n,
        p_outputPrevLayer_read,
        p_weightGradient_din,
        p_weightGradient_full_n,
        p_weightGradient_write,
        p_biasGradient_din,
        p_biasGradient_full_n,
        p_biasGradient_write,
        p_n_dout,
        p_n_empty_n,
        p_n_read,
        p_k_dout,
        p_k_empty_n,
        p_k_read,
        p_currentErrorOutput_address0,
        p_currentErrorOutput_ce0,
        p_currentErrorOutput_we0,
        p_currentErrorOutput_d0,
        p_n_out_din,
        p_n_out_full_n,
        p_n_out_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state8 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] p_currentErrorInput_dout;
input   p_currentErrorInput_empty_n;
output   p_currentErrorInput_read;
input  [511:0] p_outputPrevLayer_dout;
input   p_outputPrevLayer_empty_n;
output   p_outputPrevLayer_read;
output  [511:0] p_weightGradient_din;
input   p_weightGradient_full_n;
output   p_weightGradient_write;
output  [31:0] p_biasGradient_din;
input   p_biasGradient_full_n;
output   p_biasGradient_write;
input  [31:0] p_n_dout;
input   p_n_empty_n;
output   p_n_read;
input  [31:0] p_k_dout;
input   p_k_empty_n;
output   p_k_read;
output  [3:0] p_currentErrorOutput_address0;
output   p_currentErrorOutput_ce0;
output   p_currentErrorOutput_we0;
output  [31:0] p_currentErrorOutput_d0;
output  [31:0] p_n_out_din;
input   p_n_out_full_n;
output   p_n_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_currentErrorInput_read;
reg p_outputPrevLayer_read;
reg p_weightGradient_write;
reg p_biasGradient_write;
reg p_n_read;
reg p_k_read;
reg p_currentErrorOutput_ce0;
reg p_currentErrorOutput_we0;
reg p_n_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_currentErrorInput_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln353_fu_290_p2;
reg    p_outputPrevLayer_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln358_reg_696;
reg    p_weightGradient_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] icmp_ln358_reg_696_pp0_iter3_reg;
reg    p_biasGradient_blk_n;
reg    p_n_blk_n;
reg    p_k_blk_n;
reg    p_n_out_blk_n;
reg   [27:0] k_reg_205;
reg   [31:0] p_n_read_reg_657;
reg    ap_block_state1;
reg   [27:0] div_cast_i_reg_662;
reg    ap_block_state2;
wire   [31:0] add_ln353_fu_295_p2;
reg   [31:0] add_ln353_reg_671;
wire   [31:0] tmp_fu_306_p1;
reg   [31:0] tmp_reg_676;
wire   [0:0] icmp_ln358_fu_311_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln358_reg_696_pp0_iter1_reg;
reg   [0:0] icmp_ln358_reg_696_pp0_iter2_reg;
wire   [27:0] k_2_fu_316_p2;
reg    ap_enable_reg_pp0_iter0;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] n_reg_194;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln353_fu_301_p1;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_216_p0;
wire   [31:0] grp_fu_220_p0;
wire   [31:0] grp_fu_224_p0;
wire   [31:0] grp_fu_228_p0;
wire   [31:0] grp_fu_232_p0;
wire   [31:0] grp_fu_236_p0;
wire   [31:0] grp_fu_240_p0;
wire   [31:0] grp_fu_244_p0;
wire   [31:0] grp_fu_248_p0;
wire   [31:0] grp_fu_252_p0;
wire   [31:0] grp_fu_256_p0;
wire   [31:0] grp_fu_260_p0;
wire   [31:0] grp_fu_264_p0;
wire   [31:0] grp_fu_268_p0;
wire   [31:0] grp_fu_272_p0;
wire   [31:0] grp_fu_276_p0;
wire   [31:0] trunc_ln674_fu_322_p1;
wire   [31:0] p_Result_i_fu_331_p4;
wire   [31:0] p_Result_57_i_fu_346_p4;
wire   [31:0] p_Result_58_i_fu_361_p4;
wire   [31:0] p_Result_59_i_fu_376_p4;
wire   [31:0] p_Result_60_i_fu_391_p4;
wire   [31:0] p_Result_61_i_fu_406_p4;
wire   [31:0] p_Result_62_i_fu_421_p4;
wire   [31:0] p_Result_63_i_fu_436_p4;
wire   [31:0] p_Result_64_i_fu_451_p4;
wire   [31:0] p_Result_65_i_fu_466_p4;
wire   [31:0] p_Result_66_i_fu_481_p4;
wire   [31:0] p_Result_67_i_fu_496_p4;
wire   [31:0] p_Result_68_i_fu_511_p4;
wire   [31:0] p_Result_69_i_fu_526_p4;
wire   [31:0] p_Result_70_i_fu_541_p4;
wire   [31:0] grp_fu_216_p2;
wire   [31:0] grp_fu_220_p2;
wire   [31:0] grp_fu_224_p2;
wire   [31:0] grp_fu_228_p2;
wire   [31:0] grp_fu_232_p2;
wire   [31:0] grp_fu_236_p2;
wire   [31:0] grp_fu_240_p2;
wire   [31:0] grp_fu_244_p2;
wire   [31:0] grp_fu_248_p2;
wire   [31:0] grp_fu_252_p2;
wire   [31:0] grp_fu_256_p2;
wire   [31:0] grp_fu_260_p2;
wire   [31:0] grp_fu_264_p2;
wire   [31:0] grp_fu_268_p2;
wire   [31:0] grp_fu_272_p2;
wire   [31:0] grp_fu_276_p2;
wire   [31:0] l_v_165_fu_616_p1;
wire   [31:0] l_v_164_fu_612_p1;
wire   [31:0] l_v_163_fu_608_p1;
wire   [31:0] l_v_162_fu_604_p1;
wire   [31:0] l_v_161_fu_600_p1;
wire   [31:0] l_v_160_fu_596_p1;
wire   [31:0] l_v_159_fu_592_p1;
wire   [31:0] l_v_158_fu_588_p1;
wire   [31:0] l_v_157_fu_584_p1;
wire   [31:0] l_v_156_fu_580_p1;
wire   [31:0] l_v_155_fu_576_p1;
wire   [31:0] l_v_154_fu_572_p1;
wire   [31:0] l_v_153_fu_568_p1;
wire   [31:0] l_v_152_fu_564_p1;
wire   [31:0] l_v_151_fu_560_p1;
wire   [31:0] l_v_fu_556_p1;
reg    grp_fu_216_ce;
reg    grp_fu_220_ce;
reg    grp_fu_224_ce;
reg    grp_fu_228_ce;
reg    grp_fu_232_ce;
reg    grp_fu_236_ce;
reg    grp_fu_240_ce;
reg    grp_fu_244_ce;
reg    grp_fu_248_ce;
reg    grp_fu_252_ce;
reg    grp_fu_256_ce;
reg    grp_fu_260_ce;
reg    grp_fu_264_ce;
reg    grp_fu_268_ce;
reg    grp_fu_272_ce;
reg    grp_fu_276_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U377(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_216_p0),
    .din1(tmp_reg_676),
    .ce(grp_fu_216_ce),
    .dout(grp_fu_216_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U378(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_220_p0),
    .din1(tmp_reg_676),
    .ce(grp_fu_220_ce),
    .dout(grp_fu_220_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U379(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_224_p0),
    .din1(tmp_reg_676),
    .ce(grp_fu_224_ce),
    .dout(grp_fu_224_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U380(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_228_p0),
    .din1(tmp_reg_676),
    .ce(grp_fu_228_ce),
    .dout(grp_fu_228_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U381(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_232_p0),
    .din1(tmp_reg_676),
    .ce(grp_fu_232_ce),
    .dout(grp_fu_232_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U382(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_236_p0),
    .din1(tmp_reg_676),
    .ce(grp_fu_236_ce),
    .dout(grp_fu_236_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U383(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_240_p0),
    .din1(tmp_reg_676),
    .ce(grp_fu_240_ce),
    .dout(grp_fu_240_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U384(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_244_p0),
    .din1(tmp_reg_676),
    .ce(grp_fu_244_ce),
    .dout(grp_fu_244_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U385(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_248_p0),
    .din1(tmp_reg_676),
    .ce(grp_fu_248_ce),
    .dout(grp_fu_248_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U386(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_252_p0),
    .din1(tmp_reg_676),
    .ce(grp_fu_252_ce),
    .dout(grp_fu_252_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U387(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_256_p0),
    .din1(tmp_reg_676),
    .ce(grp_fu_256_ce),
    .dout(grp_fu_256_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U388(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_260_p0),
    .din1(tmp_reg_676),
    .ce(grp_fu_260_ce),
    .dout(grp_fu_260_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U389(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_264_p0),
    .din1(tmp_reg_676),
    .ce(grp_fu_264_ce),
    .dout(grp_fu_264_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U390(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_268_p0),
    .din1(tmp_reg_676),
    .ce(grp_fu_268_ce),
    .dout(grp_fu_268_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U391(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_272_p0),
    .din1(tmp_reg_676),
    .ce(grp_fu_272_ce),
    .dout(grp_fu_272_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U392(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_276_p0),
    .din1(tmp_reg_676),
    .ce(grp_fu_276_ce),
    .dout(grp_fu_276_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~(((icmp_ln353_fu_290_p2 == 1'd0) & (p_biasGradient_full_n == 1'b0)) | ((icmp_ln353_fu_290_p2 == 1'd0) & (p_currentErrorInput_empty_n == 1'b0))) & (icmp_ln353_fu_290_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~(((icmp_ln353_fu_290_p2 == 1'd0) & (p_biasGradient_full_n == 1'b0)) | ((icmp_ln353_fu_290_p2 == 1'd0) & (p_currentErrorInput_empty_n == 1'b0))) & (icmp_ln353_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~(((icmp_ln353_fu_290_p2 == 1'd0) & (p_biasGradient_full_n == 1'b0)) | ((icmp_ln353_fu_290_p2 == 1'd0) & (p_currentErrorInput_empty_n == 1'b0))) & (icmp_ln353_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln358_fu_311_p2 == 1'd0))) begin
        k_reg_205 <= k_2_fu_316_p2;
    end else if ((~(((icmp_ln353_fu_290_p2 == 1'd0) & (p_biasGradient_full_n == 1'b0)) | ((icmp_ln353_fu_290_p2 == 1'd0) & (p_currentErrorInput_empty_n == 1'b0))) & (icmp_ln353_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        k_reg_205 <= 28'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        n_reg_194 <= add_ln353_reg_671;
    end else if ((~((ap_start == 1'b0) | (p_n_out_full_n == 1'b0) | (p_k_empty_n == 1'b0) | (p_n_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        n_reg_194 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln353_fu_290_p2 == 1'd0) & (p_biasGradient_full_n == 1'b0)) | ((icmp_ln353_fu_290_p2 == 1'd0) & (p_currentErrorInput_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state2))) begin
        add_ln353_reg_671 <= add_ln353_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (p_n_out_full_n == 1'b0) | (p_k_empty_n == 1'b0) | (p_n_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        div_cast_i_reg_662 <= {{p_k_dout[31:4]}};
        p_n_read_reg_657 <= p_n_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln358_reg_696 <= icmp_ln358_fu_311_p2;
        icmp_ln358_reg_696_pp0_iter1_reg <= icmp_ln358_reg_696;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln358_reg_696_pp0_iter2_reg <= icmp_ln358_reg_696_pp0_iter1_reg;
        icmp_ln358_reg_696_pp0_iter3_reg <= icmp_ln358_reg_696_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln353_fu_290_p2 == 1'd0) & (p_biasGradient_full_n == 1'b0)) | ((icmp_ln353_fu_290_p2 == 1'd0) & (p_currentErrorInput_empty_n == 1'b0))) & (icmp_ln353_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_reg_676 <= tmp_fu_306_p1;
    end
end

always @ (*) begin
    if ((icmp_ln358_fu_311_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln353_fu_290_p2 == 1'd0) & (p_biasGradient_full_n == 1'b0)) | ((icmp_ln353_fu_290_p2 == 1'd0) & (p_currentErrorInput_empty_n == 1'b0))) & (icmp_ln353_fu_290_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln353_fu_290_p2 == 1'd0) & (p_biasGradient_full_n == 1'b0)) | ((icmp_ln353_fu_290_p2 == 1'd0) & (p_currentErrorInput_empty_n == 1'b0))) & (icmp_ln353_fu_290_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_216_ce = 1'b1;
    end else begin
        grp_fu_216_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_220_ce = 1'b1;
    end else begin
        grp_fu_220_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_224_ce = 1'b1;
    end else begin
        grp_fu_224_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_228_ce = 1'b1;
    end else begin
        grp_fu_228_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_232_ce = 1'b1;
    end else begin
        grp_fu_232_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_236_ce = 1'b1;
    end else begin
        grp_fu_236_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_240_ce = 1'b1;
    end else begin
        grp_fu_240_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_244_ce = 1'b1;
    end else begin
        grp_fu_244_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_248_ce = 1'b1;
    end else begin
        grp_fu_248_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_252_ce = 1'b1;
    end else begin
        grp_fu_252_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_256_ce = 1'b1;
    end else begin
        grp_fu_256_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_260_ce = 1'b1;
    end else begin
        grp_fu_260_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_264_ce = 1'b1;
    end else begin
        grp_fu_264_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_268_ce = 1'b1;
    end else begin
        grp_fu_268_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_272_ce = 1'b1;
    end else begin
        grp_fu_272_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_276_ce = 1'b1;
    end else begin
        grp_fu_276_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln353_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_biasGradient_blk_n = p_biasGradient_full_n;
    end else begin
        p_biasGradient_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((icmp_ln353_fu_290_p2 == 1'd0) & (p_biasGradient_full_n == 1'b0)) | ((icmp_ln353_fu_290_p2 == 1'd0) & (p_currentErrorInput_empty_n == 1'b0))) & (icmp_ln353_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_biasGradient_write = 1'b1;
    end else begin
        p_biasGradient_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln353_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_currentErrorInput_blk_n = p_currentErrorInput_empty_n;
    end else begin
        p_currentErrorInput_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((icmp_ln353_fu_290_p2 == 1'd0) & (p_biasGradient_full_n == 1'b0)) | ((icmp_ln353_fu_290_p2 == 1'd0) & (p_currentErrorInput_empty_n == 1'b0))) & (icmp_ln353_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_currentErrorInput_read = 1'b1;
    end else begin
        p_currentErrorInput_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln353_fu_290_p2 == 1'd0) & (p_biasGradient_full_n == 1'b0)) | ((icmp_ln353_fu_290_p2 == 1'd0) & (p_currentErrorInput_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state2))) begin
        p_currentErrorOutput_ce0 = 1'b1;
    end else begin
        p_currentErrorOutput_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln353_fu_290_p2 == 1'd0) & (p_biasGradient_full_n == 1'b0)) | ((icmp_ln353_fu_290_p2 == 1'd0) & (p_currentErrorInput_empty_n == 1'b0))) & (icmp_ln353_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_currentErrorOutput_we0 = 1'b1;
    end else begin
        p_currentErrorOutput_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_k_blk_n = p_k_empty_n;
    end else begin
        p_k_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (p_n_out_full_n == 1'b0) | (p_k_empty_n == 1'b0) | (p_n_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_k_read = 1'b1;
    end else begin
        p_k_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_n_blk_n = p_n_empty_n;
    end else begin
        p_n_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_n_out_blk_n = p_n_out_full_n;
    end else begin
        p_n_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (p_n_out_full_n == 1'b0) | (p_k_empty_n == 1'b0) | (p_n_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_n_out_write = 1'b1;
    end else begin
        p_n_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (p_n_out_full_n == 1'b0) | (p_k_empty_n == 1'b0) | (p_n_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_n_read = 1'b1;
    end else begin
        p_n_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln358_reg_696 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_outputPrevLayer_blk_n = p_outputPrevLayer_empty_n;
    end else begin
        p_outputPrevLayer_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln358_reg_696 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_outputPrevLayer_read = 1'b1;
    end else begin
        p_outputPrevLayer_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln358_reg_696_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        p_weightGradient_blk_n = p_weightGradient_full_n;
    end else begin
        p_weightGradient_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln358_reg_696_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_weightGradient_write = 1'b1;
    end else begin
        p_weightGradient_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (p_n_out_full_n == 1'b0) | (p_k_empty_n == 1'b0) | (p_n_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~(((icmp_ln353_fu_290_p2 == 1'd0) & (p_biasGradient_full_n == 1'b0)) | ((icmp_ln353_fu_290_p2 == 1'd0) & (p_currentErrorInput_empty_n == 1'b0))) & (icmp_ln353_fu_290_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~(((icmp_ln353_fu_290_p2 == 1'd0) & (p_biasGradient_full_n == 1'b0)) | ((icmp_ln353_fu_290_p2 == 1'd0) & (p_currentErrorInput_empty_n == 1'b0))) & (icmp_ln353_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln358_fu_311_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln358_fu_311_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln353_fu_295_p2 = (n_reg_194 + 32'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln358_reg_696_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (p_weightGradient_full_n == 1'b0)) | ((icmp_ln358_reg_696 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (p_outputPrevLayer_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln358_reg_696_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (p_weightGradient_full_n == 1'b0)) | ((icmp_ln358_reg_696 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (p_outputPrevLayer_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln358_reg_696_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (p_weightGradient_full_n == 1'b0)) | ((icmp_ln358_reg_696 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (p_outputPrevLayer_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (p_n_out_full_n == 1'b0) | (p_k_empty_n == 1'b0) | (p_n_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2 = (((icmp_ln353_fu_290_p2 == 1'd0) & (p_biasGradient_full_n == 1'b0)) | ((icmp_ln353_fu_290_p2 == 1'd0) & (p_currentErrorInput_empty_n == 1'b0)));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((icmp_ln358_reg_696 == 1'd0) & (p_outputPrevLayer_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter4 = ((icmp_ln358_reg_696_pp0_iter3_reg == 1'd0) & (p_weightGradient_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_216_p0 = trunc_ln674_fu_322_p1;

assign grp_fu_220_p0 = p_Result_i_fu_331_p4;

assign grp_fu_224_p0 = p_Result_57_i_fu_346_p4;

assign grp_fu_228_p0 = p_Result_58_i_fu_361_p4;

assign grp_fu_232_p0 = p_Result_59_i_fu_376_p4;

assign grp_fu_236_p0 = p_Result_60_i_fu_391_p4;

assign grp_fu_240_p0 = p_Result_61_i_fu_406_p4;

assign grp_fu_244_p0 = p_Result_62_i_fu_421_p4;

assign grp_fu_248_p0 = p_Result_63_i_fu_436_p4;

assign grp_fu_252_p0 = p_Result_64_i_fu_451_p4;

assign grp_fu_256_p0 = p_Result_65_i_fu_466_p4;

assign grp_fu_260_p0 = p_Result_66_i_fu_481_p4;

assign grp_fu_264_p0 = p_Result_67_i_fu_496_p4;

assign grp_fu_268_p0 = p_Result_68_i_fu_511_p4;

assign grp_fu_272_p0 = p_Result_69_i_fu_526_p4;

assign grp_fu_276_p0 = p_Result_70_i_fu_541_p4;

assign icmp_ln353_fu_290_p2 = ((n_reg_194 == p_n_read_reg_657) ? 1'b1 : 1'b0);

assign icmp_ln358_fu_311_p2 = ((k_reg_205 == div_cast_i_reg_662) ? 1'b1 : 1'b0);

assign k_2_fu_316_p2 = (k_reg_205 + 28'd1);

assign l_v_151_fu_560_p1 = grp_fu_220_p2;

assign l_v_152_fu_564_p1 = grp_fu_224_p2;

assign l_v_153_fu_568_p1 = grp_fu_228_p2;

assign l_v_154_fu_572_p1 = grp_fu_232_p2;

assign l_v_155_fu_576_p1 = grp_fu_236_p2;

assign l_v_156_fu_580_p1 = grp_fu_240_p2;

assign l_v_157_fu_584_p1 = grp_fu_244_p2;

assign l_v_158_fu_588_p1 = grp_fu_248_p2;

assign l_v_159_fu_592_p1 = grp_fu_252_p2;

assign l_v_160_fu_596_p1 = grp_fu_256_p2;

assign l_v_161_fu_600_p1 = grp_fu_260_p2;

assign l_v_162_fu_604_p1 = grp_fu_264_p2;

assign l_v_163_fu_608_p1 = grp_fu_268_p2;

assign l_v_164_fu_612_p1 = grp_fu_272_p2;

assign l_v_165_fu_616_p1 = grp_fu_276_p2;

assign l_v_fu_556_p1 = grp_fu_216_p2;

assign p_Result_57_i_fu_346_p4 = {{p_outputPrevLayer_dout[95:64]}};

assign p_Result_58_i_fu_361_p4 = {{p_outputPrevLayer_dout[127:96]}};

assign p_Result_59_i_fu_376_p4 = {{p_outputPrevLayer_dout[159:128]}};

assign p_Result_60_i_fu_391_p4 = {{p_outputPrevLayer_dout[191:160]}};

assign p_Result_61_i_fu_406_p4 = {{p_outputPrevLayer_dout[223:192]}};

assign p_Result_62_i_fu_421_p4 = {{p_outputPrevLayer_dout[255:224]}};

assign p_Result_63_i_fu_436_p4 = {{p_outputPrevLayer_dout[287:256]}};

assign p_Result_64_i_fu_451_p4 = {{p_outputPrevLayer_dout[319:288]}};

assign p_Result_65_i_fu_466_p4 = {{p_outputPrevLayer_dout[351:320]}};

assign p_Result_66_i_fu_481_p4 = {{p_outputPrevLayer_dout[383:352]}};

assign p_Result_67_i_fu_496_p4 = {{p_outputPrevLayer_dout[415:384]}};

assign p_Result_68_i_fu_511_p4 = {{p_outputPrevLayer_dout[447:416]}};

assign p_Result_69_i_fu_526_p4 = {{p_outputPrevLayer_dout[479:448]}};

assign p_Result_70_i_fu_541_p4 = {{p_outputPrevLayer_dout[511:480]}};

assign p_Result_i_fu_331_p4 = {{p_outputPrevLayer_dout[63:32]}};

assign p_biasGradient_din = p_currentErrorInput_dout;

assign p_currentErrorOutput_address0 = zext_ln353_fu_301_p1;

assign p_currentErrorOutput_d0 = p_currentErrorInput_dout;

assign p_n_out_din = p_n_dout;

assign p_weightGradient_din = {{{{{{{{{{{{{{{{l_v_165_fu_616_p1}, {l_v_164_fu_612_p1}}, {l_v_163_fu_608_p1}}, {l_v_162_fu_604_p1}}, {l_v_161_fu_600_p1}}, {l_v_160_fu_596_p1}}, {l_v_159_fu_592_p1}}, {l_v_158_fu_588_p1}}, {l_v_157_fu_584_p1}}, {l_v_156_fu_580_p1}}, {l_v_155_fu_576_p1}}, {l_v_154_fu_572_p1}}, {l_v_153_fu_568_p1}}, {l_v_152_fu_564_p1}}, {l_v_151_fu_560_p1}}, {l_v_fu_556_p1}};

assign tmp_fu_306_p1 = p_currentErrorInput_dout;

assign trunc_ln674_fu_322_p1 = p_outputPrevLayer_dout[31:0];

assign zext_ln353_fu_301_p1 = n_reg_194;

endmodule //BGD_computeGradient_float_16u_s
