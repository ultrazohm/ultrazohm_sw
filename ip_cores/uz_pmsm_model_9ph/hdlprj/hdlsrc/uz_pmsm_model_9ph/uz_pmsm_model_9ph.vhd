-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\valen\Documents\repos\UZ\ultrazohm_sw\ip_cores\uz_pmsm_model_9ph\hdlprj\hdlsrc\uz_pmsm_model_9ph\uz_pmsm_model_9ph.vhd
-- Created: 2022-04-15 14:11:31
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_pmsm_model_9ph
-- Source Path: uz_pmsm_model_9ph
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.uz_pmsm_model_9ph_pkg.ALL;

ENTITY uz_pmsm_model_9ph IS
  PORT( IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESETN                     :   IN    std_logic;  -- ufix1
        u_dq_pl_0                         :   IN    std_logic_vector(224 DOWNTO 0);  -- ufix225
        u_abc_pl_0                        :   IN    std_logic_vector(224 DOWNTO 0);  -- ufix225
        AXI4_ACLK                         :   IN    std_logic;  -- ufix1
        AXI4_ARESETN                      :   IN    std_logic;  -- ufix1
        AXI4_AWID                         :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
        AXI4_AWADDR                       :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_AWLEN                        :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        AXI4_AWSIZE                       :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        AXI4_AWBURST                      :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_AWLOCK                       :   IN    std_logic;  -- ufix1
        AXI4_AWCACHE                      :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_AWPROT                       :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        AXI4_AWVALID                      :   IN    std_logic;  -- ufix1
        AXI4_WDATA                        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_WSTRB                        :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_WLAST                        :   IN    std_logic;  -- ufix1
        AXI4_WVALID                       :   IN    std_logic;  -- ufix1
        AXI4_BREADY                       :   IN    std_logic;  -- ufix1
        AXI4_ARID                         :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
        AXI4_ARADDR                       :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_ARLEN                        :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        AXI4_ARSIZE                       :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        AXI4_ARBURST                      :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_ARLOCK                       :   IN    std_logic;  -- ufix1
        AXI4_ARCACHE                      :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_ARPROT                       :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        AXI4_ARVALID                      :   IN    std_logic;  -- ufix1
        AXI4_RREADY                       :   IN    std_logic;  -- ufix1
        u_abc_pl_out_0                    :   OUT   std_logic_vector(224 DOWNTO 0);  -- ufix225
        AXI4_AWREADY                      :   OUT   std_logic;  -- ufix1
        AXI4_WREADY                       :   OUT   std_logic;  -- ufix1
        AXI4_BID                          :   OUT   std_logic_vector(11 DOWNTO 0);  -- ufix12
        AXI4_BRESP                        :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_BVALID                       :   OUT   std_logic;  -- ufix1
        AXI4_ARREADY                      :   OUT   std_logic;  -- ufix1
        AXI4_RID                          :   OUT   std_logic_vector(11 DOWNTO 0);  -- ufix12
        AXI4_RDATA                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_RRESP                        :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_RLAST                        :   OUT   std_logic;  -- ufix1
        AXI4_RVALID                       :   OUT   std_logic  -- ufix1
        );
END uz_pmsm_model_9ph;


ARCHITECTURE rtl OF uz_pmsm_model_9ph IS

  -- Component Declarations
  COMPONENT uz_pmsm_model_9ph_reset_sync
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset_in                        :   IN    std_logic;  -- ufix1
          reset_out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT uz_pmsm_model_9ph_axi4
    PORT( reset                           :   IN    std_logic;
          AXI4_ACLK                       :   IN    std_logic;  -- ufix1
          AXI4_ARESETN                    :   IN    std_logic;  -- ufix1
          AXI4_AWID                       :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
          AXI4_AWADDR                     :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_AWLEN                      :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          AXI4_AWSIZE                     :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
          AXI4_AWBURST                    :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_AWLOCK                     :   IN    std_logic;  -- ufix1
          AXI4_AWCACHE                    :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_AWPROT                     :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
          AXI4_AWVALID                    :   IN    std_logic;  -- ufix1
          AXI4_WDATA                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_WSTRB                      :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_WLAST                      :   IN    std_logic;  -- ufix1
          AXI4_WVALID                     :   IN    std_logic;  -- ufix1
          AXI4_BREADY                     :   IN    std_logic;  -- ufix1
          AXI4_ARID                       :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
          AXI4_ARADDR                     :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_ARLEN                      :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          AXI4_ARSIZE                     :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
          AXI4_ARBURST                    :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_ARLOCK                     :   IN    std_logic;  -- ufix1
          AXI4_ARCACHE                    :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_ARPROT                     :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
          AXI4_ARVALID                    :   IN    std_logic;  -- ufix1
          AXI4_RREADY                     :   IN    std_logic;  -- ufix1
          read_ip_timestamp               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          read_output_general             :   IN    vector_of_std_logic_vector32(0 TO 4);  -- ufix32 [5]
          read_output_currents_dq         :   IN    vector_of_std_logic_vector32(0 TO 8);  -- ufix32 [9]
          read_output_currents_abc        :   IN    vector_of_std_logic_vector32(0 TO 8);  -- ufix32 [9]
          AXI4_AWREADY                    :   OUT   std_logic;  -- ufix1
          AXI4_WREADY                     :   OUT   std_logic;  -- ufix1
          AXI4_BID                        :   OUT   std_logic_vector(11 DOWNTO 0);  -- ufix12
          AXI4_BRESP                      :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_BVALID                     :   OUT   std_logic;  -- ufix1
          AXI4_ARREADY                    :   OUT   std_logic;  -- ufix1
          AXI4_RID                        :   OUT   std_logic_vector(11 DOWNTO 0);  -- ufix12
          AXI4_RDATA                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_RRESP                      :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_RLAST                      :   OUT   std_logic;  -- ufix1
          AXI4_RVALID                     :   OUT   std_logic;  -- ufix1
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          write_inputs_general            :   OUT   vector_of_std_logic_vector32(0 TO 1);  -- ufix32 [2]
          write_input_voltages_dq         :   OUT   vector_of_std_logic_vector32(0 TO 8);  -- ufix32 [9]
          write_input_voltages_abc        :   OUT   vector_of_std_logic_vector32(0 TO 8);  -- ufix32 [9]
          write_Model_Parameter_reset_integrators :   OUT   std_logic;  -- ufix1
          write_Model_Parameter_simulate_mechanics :   OUT   std_logic;  -- ufix1
          write_Model_Parameter_switch_pspl :   OUT   std_logic;  -- ufix1
          write_Model_Parameter_control_dq_abc :   OUT   std_logic;  -- ufix1
          write_Physical_Parameter_1_J    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Physical_Parameter_mu     :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Physical_Parameter_M_R0   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Physical_Parameter_1_L_d  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Physical_Parameter_1_L_q  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Physical_Parameter_R_1    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Physical_Parameter_polepair :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Physical_Parameter_psi_pm :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Physical_Parameter_L_o1   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Physical_Parameter_L_o2   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Physical_Parameter_L_x1   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Physical_Parameter_L_y1   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Physical_Parameter_L_x2   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Physical_Parameter_L_y2   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Physical_Parameter_L_zero :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          reset_internal                  :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  COMPONENT uz_pmsm_model_9ph_dut
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          dut_enable                      :   IN    std_logic;  -- ufix1
          Model_Parameter_reset_integrators :   IN    std_logic;  -- ufix1
          Model_Parameter_simulate_mechanics :   IN    std_logic;  -- ufix1
          Model_Parameter_switch_pspl     :   IN    std_logic;  -- ufix1
          Model_Parameter_control_dq_abc  :   IN    std_logic;  -- ufix1
          Physical_Parameter_1_J          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Physical_Parameter_mu           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Physical_Parameter_M_R0         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Physical_Parameter_1_L_d        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Physical_Parameter_1_L_q        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Physical_Parameter_R_1          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Physical_Parameter_polepair     :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Physical_Parameter_psi_pm       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Physical_Parameter_L_o1         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Physical_Parameter_L_o2         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Physical_Parameter_L_x1         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Physical_Parameter_L_y1         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Physical_Parameter_L_x2         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Physical_Parameter_L_y2         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Physical_Parameter_L_zero       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          inputs_general_0                :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          inputs_general_1                :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_dq_0             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_dq_1             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_dq_2             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_dq_3             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_dq_4             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_dq_5             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_dq_6             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_dq_7             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_dq_8             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_abc_0            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_abc_1            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_abc_2            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_abc_3            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_abc_4            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_abc_5            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_abc_6            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_abc_7            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          input_voltages_abc_8            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          u_dq_pl_0                       :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_dq_pl_1                       :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_dq_pl_2                       :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_dq_pl_3                       :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_dq_pl_4                       :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_dq_pl_5                       :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_dq_pl_6                       :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_dq_pl_7                       :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_dq_pl_8                       :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc_pl_0                      :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc_pl_1                      :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc_pl_2                      :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc_pl_3                      :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc_pl_4                      :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc_pl_5                      :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc_pl_6                      :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc_pl_7                      :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc_pl_8                      :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          ce_out                          :   OUT   std_logic;  -- ufix1
          output_general_0                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_general_1                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_general_2                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_general_3                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_general_4                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_dq_0            :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_dq_1            :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_dq_2            :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_dq_3            :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_dq_4            :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_dq_5            :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_dq_6            :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_dq_7            :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_dq_8            :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_abc_0           :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_abc_1           :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_abc_2           :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_abc_3           :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_abc_4           :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_abc_5           :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_abc_6           :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_abc_7           :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          output_currents_abc_8           :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          u_abc_pl_out_0                  :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc_pl_out_1                  :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc_pl_out_2                  :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc_pl_out_3                  :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc_pl_out_4                  :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc_pl_out_5                  :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc_pl_out_6                  :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc_pl_out_7                  :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc_pl_out_8                  :   OUT   std_logic_vector(24 DOWNTO 0)  -- sfix25_En12
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : uz_pmsm_model_9ph_reset_sync
    USE ENTITY work.uz_pmsm_model_9ph_reset_sync(rtl);

  FOR ALL : uz_pmsm_model_9ph_axi4
    USE ENTITY work.uz_pmsm_model_9ph_axi4(rtl);

  FOR ALL : uz_pmsm_model_9ph_dut
    USE ENTITY work.uz_pmsm_model_9ph_dut(rtl);

  -- Signals
  SIGNAL reset                            : std_logic;
  SIGNAL ip_timestamp                     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL reset_cm                         : std_logic;  -- ufix1
  SIGNAL u_dq_pl_0_unsigned               : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_dq_pl_0_slice                  : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_dq_pl_0_sig                    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_dq_pl_0_unsigned_1             : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_dq_pl_0_slice_1                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_dq_pl_1_sig                    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_dq_pl_0_unsigned_2             : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_dq_pl_0_slice_2                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_dq_pl_2_sig                    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_dq_pl_0_unsigned_3             : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_dq_pl_0_slice_3                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_dq_pl_3_sig                    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_dq_pl_0_unsigned_4             : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_dq_pl_0_slice_4                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_dq_pl_4_sig                    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_dq_pl_0_unsigned_5             : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_dq_pl_0_slice_5                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_dq_pl_5_sig                    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_dq_pl_0_unsigned_6             : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_dq_pl_0_slice_6                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_dq_pl_6_sig                    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_dq_pl_0_unsigned_7             : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_dq_pl_0_slice_7                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_dq_pl_7_sig                    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_dq_pl_0_unsigned_8             : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_dq_pl_0_slice_8                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_dq_pl_8_sig                    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_0_unsigned              : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_abc_pl_0_slice                 : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_0_sig                   : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_0_unsigned_1            : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_abc_pl_0_slice_1               : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_1_sig                   : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_0_unsigned_2            : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_abc_pl_0_slice_2               : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_2_sig                   : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_0_unsigned_3            : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_abc_pl_0_slice_3               : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_3_sig                   : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_0_unsigned_4            : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_abc_pl_0_slice_4               : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_4_sig                   : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_0_unsigned_5            : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_abc_pl_0_slice_5               : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_5_sig                   : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_0_unsigned_6            : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_abc_pl_0_slice_6               : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_6_sig                   : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_0_unsigned_7            : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_abc_pl_0_slice_7               : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_7_sig                   : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_0_unsigned_8            : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL u_abc_pl_0_slice_8               : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_8_sig                   : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL write_input_voltages_abc_unsigned : vector_of_std_logic_vector32(0 TO 8);  -- ufix32 [9]
  SIGNAL write_input_voltages_dq_unsigned : vector_of_std_logic_vector32(0 TO 8);  -- ufix32 [9]
  SIGNAL write_inputs_general_unsigned    : vector_of_std_logic_vector32(0 TO 1);  -- ufix32 [2]
  SIGNAL reset_internal                   : std_logic;  -- ufix1
  SIGNAL reset_before_sync                : std_logic;  -- ufix1
  SIGNAL read_output_currents_abc_vec     : vector_of_std_logic_vector32(0 TO 8);  -- ufix32 [9]
  SIGNAL read_output_currents_dq_vec      : vector_of_std_logic_vector32(0 TO 8);  -- ufix32 [9]
  SIGNAL read_output_general_vec          : vector_of_std_logic_vector32(0 TO 4);  -- ufix32 [5]
  SIGNAL AXI4_BID_tmp                     : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL AXI4_BRESP_tmp                   : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_RID_tmp                     : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL AXI4_RDATA_tmp                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_RRESP_tmp                   : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL write_axi_enable                 : std_logic;  -- ufix1
  SIGNAL write_Model_Parameter_reset_integrators : std_logic;  -- ufix1
  SIGNAL write_Model_Parameter_simulate_mechanics : std_logic;  -- ufix1
  SIGNAL write_Model_Parameter_switch_pspl : std_logic;  -- ufix1
  SIGNAL write_Model_Parameter_control_dq_abc : std_logic;  -- ufix1
  SIGNAL write_Physical_Parameter_1_J     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Physical_Parameter_mu      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Physical_Parameter_M_R0    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Physical_Parameter_1_L_d   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Physical_Parameter_1_L_q   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Physical_Parameter_R_1     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Physical_Parameter_polepair : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Physical_Parameter_psi_pm  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Physical_Parameter_L_o1    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Physical_Parameter_L_o2    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Physical_Parameter_L_x1    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Physical_Parameter_L_y1    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Physical_Parameter_L_x2    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Physical_Parameter_L_y2    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Physical_Parameter_L_zero  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL u_abc_pl_out_0_sig               : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_out_1_sig               : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_out_2_sig               : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_out_3_sig               : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_out_4_sig               : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_out_5_sig               : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_out_6_sig               : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_out_7_sig               : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_out_8_sig               : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc_pl_out_8_sig_signed        : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_out_7_sig_signed        : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_out_6_sig_signed        : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_out_5_sig_signed        : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_out_4_sig_signed        : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_out_3_sig_signed        : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_out_2_sig_signed        : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_out_1_sig_signed        : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_out_0_sig_signed        : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc_pl_out_0_tmp               : unsigned(224 DOWNTO 0);  -- ufix225

BEGIN
  u_uz_pmsm_model_9ph_reset_sync_inst : uz_pmsm_model_9ph_reset_sync
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset_in => reset_before_sync,  -- ufix1
              reset_out => reset
              );

  u_uz_pmsm_model_9ph_axi4_inst : uz_pmsm_model_9ph_axi4
    PORT MAP( reset => reset,
              AXI4_ACLK => AXI4_ACLK,  -- ufix1
              AXI4_ARESETN => AXI4_ARESETN,  -- ufix1
              AXI4_AWID => AXI4_AWID,  -- ufix12
              AXI4_AWADDR => AXI4_AWADDR,  -- ufix16
              AXI4_AWLEN => AXI4_AWLEN,  -- ufix8
              AXI4_AWSIZE => AXI4_AWSIZE,  -- ufix3
              AXI4_AWBURST => AXI4_AWBURST,  -- ufix2
              AXI4_AWLOCK => AXI4_AWLOCK,  -- ufix1
              AXI4_AWCACHE => AXI4_AWCACHE,  -- ufix4
              AXI4_AWPROT => AXI4_AWPROT,  -- ufix3
              AXI4_AWVALID => AXI4_AWVALID,  -- ufix1
              AXI4_WDATA => AXI4_WDATA,  -- ufix32
              AXI4_WSTRB => AXI4_WSTRB,  -- ufix4
              AXI4_WLAST => AXI4_WLAST,  -- ufix1
              AXI4_WVALID => AXI4_WVALID,  -- ufix1
              AXI4_BREADY => AXI4_BREADY,  -- ufix1
              AXI4_ARID => AXI4_ARID,  -- ufix12
              AXI4_ARADDR => AXI4_ARADDR,  -- ufix16
              AXI4_ARLEN => AXI4_ARLEN,  -- ufix8
              AXI4_ARSIZE => AXI4_ARSIZE,  -- ufix3
              AXI4_ARBURST => AXI4_ARBURST,  -- ufix2
              AXI4_ARLOCK => AXI4_ARLOCK,  -- ufix1
              AXI4_ARCACHE => AXI4_ARCACHE,  -- ufix4
              AXI4_ARPROT => AXI4_ARPROT,  -- ufix3
              AXI4_ARVALID => AXI4_ARVALID,  -- ufix1
              AXI4_RREADY => AXI4_RREADY,  -- ufix1
              read_ip_timestamp => std_logic_vector(ip_timestamp),  -- ufix32
              read_output_general => read_output_general_vec,  -- ufix32 [5]
              read_output_currents_dq => read_output_currents_dq_vec,  -- ufix32 [9]
              read_output_currents_abc => read_output_currents_abc_vec,  -- ufix32 [9]
              AXI4_AWREADY => AXI4_AWREADY,  -- ufix1
              AXI4_WREADY => AXI4_WREADY,  -- ufix1
              AXI4_BID => AXI4_BID_tmp,  -- ufix12
              AXI4_BRESP => AXI4_BRESP_tmp,  -- ufix2
              AXI4_BVALID => AXI4_BVALID,  -- ufix1
              AXI4_ARREADY => AXI4_ARREADY,  -- ufix1
              AXI4_RID => AXI4_RID_tmp,  -- ufix12
              AXI4_RDATA => AXI4_RDATA_tmp,  -- ufix32
              AXI4_RRESP => AXI4_RRESP_tmp,  -- ufix2
              AXI4_RLAST => AXI4_RLAST,  -- ufix1
              AXI4_RVALID => AXI4_RVALID,  -- ufix1
              write_axi_enable => write_axi_enable,  -- ufix1
              write_inputs_general => write_inputs_general_unsigned,  -- ufix32 [2]
              write_input_voltages_dq => write_input_voltages_dq_unsigned,  -- ufix32 [9]
              write_input_voltages_abc => write_input_voltages_abc_unsigned,  -- ufix32 [9]
              write_Model_Parameter_reset_integrators => write_Model_Parameter_reset_integrators,  -- ufix1
              write_Model_Parameter_simulate_mechanics => write_Model_Parameter_simulate_mechanics,  -- ufix1
              write_Model_Parameter_switch_pspl => write_Model_Parameter_switch_pspl,  -- ufix1
              write_Model_Parameter_control_dq_abc => write_Model_Parameter_control_dq_abc,  -- ufix1
              write_Physical_Parameter_1_J => write_Physical_Parameter_1_J,  -- ufix32
              write_Physical_Parameter_mu => write_Physical_Parameter_mu,  -- ufix32
              write_Physical_Parameter_M_R0 => write_Physical_Parameter_M_R0,  -- ufix32
              write_Physical_Parameter_1_L_d => write_Physical_Parameter_1_L_d,  -- ufix32
              write_Physical_Parameter_1_L_q => write_Physical_Parameter_1_L_q,  -- ufix32
              write_Physical_Parameter_R_1 => write_Physical_Parameter_R_1,  -- ufix32
              write_Physical_Parameter_polepair => write_Physical_Parameter_polepair,  -- ufix32
              write_Physical_Parameter_psi_pm => write_Physical_Parameter_psi_pm,  -- ufix32
              write_Physical_Parameter_L_o1 => write_Physical_Parameter_L_o1,  -- ufix32
              write_Physical_Parameter_L_o2 => write_Physical_Parameter_L_o2,  -- ufix32
              write_Physical_Parameter_L_x1 => write_Physical_Parameter_L_x1,  -- ufix32
              write_Physical_Parameter_L_y1 => write_Physical_Parameter_L_y1,  -- ufix32
              write_Physical_Parameter_L_x2 => write_Physical_Parameter_L_x2,  -- ufix32
              write_Physical_Parameter_L_y2 => write_Physical_Parameter_L_y2,  -- ufix32
              write_Physical_Parameter_L_zero => write_Physical_Parameter_L_zero,  -- ufix32
              reset_internal => reset_internal  -- ufix1
              );

  u_uz_pmsm_model_9ph_dut_inst : uz_pmsm_model_9ph_dut
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset => reset,
              dut_enable => write_axi_enable,  -- ufix1
              Model_Parameter_reset_integrators => write_Model_Parameter_reset_integrators,  -- ufix1
              Model_Parameter_simulate_mechanics => write_Model_Parameter_simulate_mechanics,  -- ufix1
              Model_Parameter_switch_pspl => write_Model_Parameter_switch_pspl,  -- ufix1
              Model_Parameter_control_dq_abc => write_Model_Parameter_control_dq_abc,  -- ufix1
              Physical_Parameter_1_J => write_Physical_Parameter_1_J,  -- ufix32
              Physical_Parameter_mu => write_Physical_Parameter_mu,  -- ufix32
              Physical_Parameter_M_R0 => write_Physical_Parameter_M_R0,  -- ufix32
              Physical_Parameter_1_L_d => write_Physical_Parameter_1_L_d,  -- ufix32
              Physical_Parameter_1_L_q => write_Physical_Parameter_1_L_q,  -- ufix32
              Physical_Parameter_R_1 => write_Physical_Parameter_R_1,  -- ufix32
              Physical_Parameter_polepair => write_Physical_Parameter_polepair,  -- ufix32
              Physical_Parameter_psi_pm => write_Physical_Parameter_psi_pm,  -- ufix32
              Physical_Parameter_L_o1 => write_Physical_Parameter_L_o1,  -- ufix32
              Physical_Parameter_L_o2 => write_Physical_Parameter_L_o2,  -- ufix32
              Physical_Parameter_L_x1 => write_Physical_Parameter_L_x1,  -- ufix32
              Physical_Parameter_L_y1 => write_Physical_Parameter_L_y1,  -- ufix32
              Physical_Parameter_L_x2 => write_Physical_Parameter_L_x2,  -- ufix32
              Physical_Parameter_L_y2 => write_Physical_Parameter_L_y2,  -- ufix32
              Physical_Parameter_L_zero => write_Physical_Parameter_L_zero,  -- ufix32
              inputs_general_0 => write_inputs_general_unsigned(0),  -- ufix32
              inputs_general_1 => write_inputs_general_unsigned(1),  -- ufix32
              input_voltages_dq_0 => write_input_voltages_dq_unsigned(0),  -- ufix32
              input_voltages_dq_1 => write_input_voltages_dq_unsigned(1),  -- ufix32
              input_voltages_dq_2 => write_input_voltages_dq_unsigned(2),  -- ufix32
              input_voltages_dq_3 => write_input_voltages_dq_unsigned(3),  -- ufix32
              input_voltages_dq_4 => write_input_voltages_dq_unsigned(4),  -- ufix32
              input_voltages_dq_5 => write_input_voltages_dq_unsigned(5),  -- ufix32
              input_voltages_dq_6 => write_input_voltages_dq_unsigned(6),  -- ufix32
              input_voltages_dq_7 => write_input_voltages_dq_unsigned(7),  -- ufix32
              input_voltages_dq_8 => write_input_voltages_dq_unsigned(8),  -- ufix32
              input_voltages_abc_0 => write_input_voltages_abc_unsigned(0),  -- ufix32
              input_voltages_abc_1 => write_input_voltages_abc_unsigned(1),  -- ufix32
              input_voltages_abc_2 => write_input_voltages_abc_unsigned(2),  -- ufix32
              input_voltages_abc_3 => write_input_voltages_abc_unsigned(3),  -- ufix32
              input_voltages_abc_4 => write_input_voltages_abc_unsigned(4),  -- ufix32
              input_voltages_abc_5 => write_input_voltages_abc_unsigned(5),  -- ufix32
              input_voltages_abc_6 => write_input_voltages_abc_unsigned(6),  -- ufix32
              input_voltages_abc_7 => write_input_voltages_abc_unsigned(7),  -- ufix32
              input_voltages_abc_8 => write_input_voltages_abc_unsigned(8),  -- ufix32
              u_dq_pl_0 => std_logic_vector(u_dq_pl_0_sig),  -- sfix25_En12
              u_dq_pl_1 => std_logic_vector(u_dq_pl_1_sig),  -- sfix25_En12
              u_dq_pl_2 => std_logic_vector(u_dq_pl_2_sig),  -- sfix25_En12
              u_dq_pl_3 => std_logic_vector(u_dq_pl_3_sig),  -- sfix25_En12
              u_dq_pl_4 => std_logic_vector(u_dq_pl_4_sig),  -- sfix25_En12
              u_dq_pl_5 => std_logic_vector(u_dq_pl_5_sig),  -- sfix25_En12
              u_dq_pl_6 => std_logic_vector(u_dq_pl_6_sig),  -- sfix25_En12
              u_dq_pl_7 => std_logic_vector(u_dq_pl_7_sig),  -- sfix25_En12
              u_dq_pl_8 => std_logic_vector(u_dq_pl_8_sig),  -- sfix25_En12
              u_abc_pl_0 => std_logic_vector(u_abc_pl_0_sig),  -- sfix25_En12
              u_abc_pl_1 => std_logic_vector(u_abc_pl_1_sig),  -- sfix25_En12
              u_abc_pl_2 => std_logic_vector(u_abc_pl_2_sig),  -- sfix25_En12
              u_abc_pl_3 => std_logic_vector(u_abc_pl_3_sig),  -- sfix25_En12
              u_abc_pl_4 => std_logic_vector(u_abc_pl_4_sig),  -- sfix25_En12
              u_abc_pl_5 => std_logic_vector(u_abc_pl_5_sig),  -- sfix25_En12
              u_abc_pl_6 => std_logic_vector(u_abc_pl_6_sig),  -- sfix25_En12
              u_abc_pl_7 => std_logic_vector(u_abc_pl_7_sig),  -- sfix25_En12
              u_abc_pl_8 => std_logic_vector(u_abc_pl_8_sig),  -- sfix25_En12
              ce_out => ce_out_sig,  -- ufix1
              output_general_0 => read_output_general_vec(0),  -- ufix32
              output_general_1 => read_output_general_vec(1),  -- ufix32
              output_general_2 => read_output_general_vec(2),  -- ufix32
              output_general_3 => read_output_general_vec(3),  -- ufix32
              output_general_4 => read_output_general_vec(4),  -- ufix32
              output_currents_dq_0 => read_output_currents_dq_vec(0),  -- ufix32
              output_currents_dq_1 => read_output_currents_dq_vec(1),  -- ufix32
              output_currents_dq_2 => read_output_currents_dq_vec(2),  -- ufix32
              output_currents_dq_3 => read_output_currents_dq_vec(3),  -- ufix32
              output_currents_dq_4 => read_output_currents_dq_vec(4),  -- ufix32
              output_currents_dq_5 => read_output_currents_dq_vec(5),  -- ufix32
              output_currents_dq_6 => read_output_currents_dq_vec(6),  -- ufix32
              output_currents_dq_7 => read_output_currents_dq_vec(7),  -- ufix32
              output_currents_dq_8 => read_output_currents_dq_vec(8),  -- ufix32
              output_currents_abc_0 => read_output_currents_abc_vec(0),  -- ufix32
              output_currents_abc_1 => read_output_currents_abc_vec(1),  -- ufix32
              output_currents_abc_2 => read_output_currents_abc_vec(2),  -- ufix32
              output_currents_abc_3 => read_output_currents_abc_vec(3),  -- ufix32
              output_currents_abc_4 => read_output_currents_abc_vec(4),  -- ufix32
              output_currents_abc_5 => read_output_currents_abc_vec(5),  -- ufix32
              output_currents_abc_6 => read_output_currents_abc_vec(6),  -- ufix32
              output_currents_abc_7 => read_output_currents_abc_vec(7),  -- ufix32
              output_currents_abc_8 => read_output_currents_abc_vec(8),  -- ufix32
              u_abc_pl_out_0 => u_abc_pl_out_0_sig,  -- sfix25_En12
              u_abc_pl_out_1 => u_abc_pl_out_1_sig,  -- sfix25_En12
              u_abc_pl_out_2 => u_abc_pl_out_2_sig,  -- sfix25_En12
              u_abc_pl_out_3 => u_abc_pl_out_3_sig,  -- sfix25_En12
              u_abc_pl_out_4 => u_abc_pl_out_4_sig,  -- sfix25_En12
              u_abc_pl_out_5 => u_abc_pl_out_5_sig,  -- sfix25_En12
              u_abc_pl_out_6 => u_abc_pl_out_6_sig,  -- sfix25_En12
              u_abc_pl_out_7 => u_abc_pl_out_7_sig,  -- sfix25_En12
              u_abc_pl_out_8 => u_abc_pl_out_8_sig  -- sfix25_En12
              );

  ip_timestamp <= unsigned'(X"8360AE73");

  reset_cm <=  NOT IPCORE_RESETN;

  u_dq_pl_0_unsigned <= unsigned(u_dq_pl_0);

  u_dq_pl_0_slice <= u_dq_pl_0_unsigned(24 DOWNTO 0);

  u_dq_pl_0_sig <= signed(u_dq_pl_0_slice);

  u_dq_pl_0_unsigned_1 <= unsigned(u_dq_pl_0);

  u_dq_pl_0_slice_1 <= u_dq_pl_0_unsigned_1(49 DOWNTO 25);

  u_dq_pl_1_sig <= signed(u_dq_pl_0_slice_1);

  u_dq_pl_0_unsigned_2 <= unsigned(u_dq_pl_0);

  u_dq_pl_0_slice_2 <= u_dq_pl_0_unsigned_2(74 DOWNTO 50);

  u_dq_pl_2_sig <= signed(u_dq_pl_0_slice_2);

  u_dq_pl_0_unsigned_3 <= unsigned(u_dq_pl_0);

  u_dq_pl_0_slice_3 <= u_dq_pl_0_unsigned_3(99 DOWNTO 75);

  u_dq_pl_3_sig <= signed(u_dq_pl_0_slice_3);

  u_dq_pl_0_unsigned_4 <= unsigned(u_dq_pl_0);

  u_dq_pl_0_slice_4 <= u_dq_pl_0_unsigned_4(124 DOWNTO 100);

  u_dq_pl_4_sig <= signed(u_dq_pl_0_slice_4);

  u_dq_pl_0_unsigned_5 <= unsigned(u_dq_pl_0);

  u_dq_pl_0_slice_5 <= u_dq_pl_0_unsigned_5(149 DOWNTO 125);

  u_dq_pl_5_sig <= signed(u_dq_pl_0_slice_5);

  u_dq_pl_0_unsigned_6 <= unsigned(u_dq_pl_0);

  u_dq_pl_0_slice_6 <= u_dq_pl_0_unsigned_6(174 DOWNTO 150);

  u_dq_pl_6_sig <= signed(u_dq_pl_0_slice_6);

  u_dq_pl_0_unsigned_7 <= unsigned(u_dq_pl_0);

  u_dq_pl_0_slice_7 <= u_dq_pl_0_unsigned_7(199 DOWNTO 175);

  u_dq_pl_7_sig <= signed(u_dq_pl_0_slice_7);

  u_dq_pl_0_unsigned_8 <= unsigned(u_dq_pl_0);

  u_dq_pl_0_slice_8 <= u_dq_pl_0_unsigned_8(224 DOWNTO 200);

  u_dq_pl_8_sig <= signed(u_dq_pl_0_slice_8);

  u_abc_pl_0_unsigned <= unsigned(u_abc_pl_0);

  u_abc_pl_0_slice <= u_abc_pl_0_unsigned(24 DOWNTO 0);

  u_abc_pl_0_sig <= signed(u_abc_pl_0_slice);

  u_abc_pl_0_unsigned_1 <= unsigned(u_abc_pl_0);

  u_abc_pl_0_slice_1 <= u_abc_pl_0_unsigned_1(49 DOWNTO 25);

  u_abc_pl_1_sig <= signed(u_abc_pl_0_slice_1);

  u_abc_pl_0_unsigned_2 <= unsigned(u_abc_pl_0);

  u_abc_pl_0_slice_2 <= u_abc_pl_0_unsigned_2(74 DOWNTO 50);

  u_abc_pl_2_sig <= signed(u_abc_pl_0_slice_2);

  u_abc_pl_0_unsigned_3 <= unsigned(u_abc_pl_0);

  u_abc_pl_0_slice_3 <= u_abc_pl_0_unsigned_3(99 DOWNTO 75);

  u_abc_pl_3_sig <= signed(u_abc_pl_0_slice_3);

  u_abc_pl_0_unsigned_4 <= unsigned(u_abc_pl_0);

  u_abc_pl_0_slice_4 <= u_abc_pl_0_unsigned_4(124 DOWNTO 100);

  u_abc_pl_4_sig <= signed(u_abc_pl_0_slice_4);

  u_abc_pl_0_unsigned_5 <= unsigned(u_abc_pl_0);

  u_abc_pl_0_slice_5 <= u_abc_pl_0_unsigned_5(149 DOWNTO 125);

  u_abc_pl_5_sig <= signed(u_abc_pl_0_slice_5);

  u_abc_pl_0_unsigned_6 <= unsigned(u_abc_pl_0);

  u_abc_pl_0_slice_6 <= u_abc_pl_0_unsigned_6(174 DOWNTO 150);

  u_abc_pl_6_sig <= signed(u_abc_pl_0_slice_6);

  u_abc_pl_0_unsigned_7 <= unsigned(u_abc_pl_0);

  u_abc_pl_0_slice_7 <= u_abc_pl_0_unsigned_7(199 DOWNTO 175);

  u_abc_pl_7_sig <= signed(u_abc_pl_0_slice_7);

  u_abc_pl_0_unsigned_8 <= unsigned(u_abc_pl_0);

  u_abc_pl_0_slice_8 <= u_abc_pl_0_unsigned_8(224 DOWNTO 200);

  u_abc_pl_8_sig <= signed(u_abc_pl_0_slice_8);

  reset_before_sync <= reset_cm OR reset_internal;




  u_abc_pl_out_8_sig_signed <= signed(u_abc_pl_out_8_sig);

  u_abc_pl_out_7_sig_signed <= signed(u_abc_pl_out_7_sig);

  u_abc_pl_out_6_sig_signed <= signed(u_abc_pl_out_6_sig);

  u_abc_pl_out_5_sig_signed <= signed(u_abc_pl_out_5_sig);

  u_abc_pl_out_4_sig_signed <= signed(u_abc_pl_out_4_sig);

  u_abc_pl_out_3_sig_signed <= signed(u_abc_pl_out_3_sig);

  u_abc_pl_out_2_sig_signed <= signed(u_abc_pl_out_2_sig);

  u_abc_pl_out_1_sig_signed <= signed(u_abc_pl_out_1_sig);

  u_abc_pl_out_0_sig_signed <= signed(u_abc_pl_out_0_sig);

  u_abc_pl_out_0_tmp <= unsigned(u_abc_pl_out_8_sig_signed) & unsigned(u_abc_pl_out_7_sig_signed) & unsigned(u_abc_pl_out_6_sig_signed) & unsigned(u_abc_pl_out_5_sig_signed) & unsigned(u_abc_pl_out_4_sig_signed) & unsigned(u_abc_pl_out_3_sig_signed) & unsigned(u_abc_pl_out_2_sig_signed) & unsigned(u_abc_pl_out_1_sig_signed) & unsigned(u_abc_pl_out_0_sig_signed);

  u_abc_pl_out_0 <= std_logic_vector(u_abc_pl_out_0_tmp);

  AXI4_BID <= AXI4_BID_tmp;

  AXI4_BRESP <= AXI4_BRESP_tmp;

  AXI4_RID <= AXI4_RID_tmp;

  AXI4_RDATA <= AXI4_RDATA_tmp;

  AXI4_RRESP <= AXI4_RRESP_tmp;

END rtl;

