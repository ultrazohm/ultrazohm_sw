-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\UZ_D_GaN_Inverter\UZ_D_GaN_Inverter_src_Subsystem.vhd
-- Created: 2022-02-02 16:16:32
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: UZ_D_GaN_Inverter_src_Subsystem
-- Source Path: UZ_D_GaN_Inverter/UZ_D_GaN_Inverter/PWMdutyFreqDetection/Subsystem
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY UZ_D_GaN_Inverter_src_Subsystem IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        S                                 :   IN    std_logic;
        R                                 :   IN    std_logic;
        Q                                 :   OUT   std_logic
        );
END UZ_D_GaN_Inverter_src_Subsystem;


ARCHITECTURE rtl OF UZ_D_GaN_Inverter_src_Subsystem IS

  -- Signals
  SIGNAL Constant3_out1                   : std_logic;
  SIGNAL Data_Type_Conversion_out1        : std_logic;
  SIGNAL Data_Type_Conversion1_out1       : std_logic;
  SIGNAL Logical_Operator3_out1           : std_logic;
  SIGNAL Unit_Delay_out1                  : std_logic;
  SIGNAL Logical_Operator8_out1           : std_logic;
  SIGNAL Logical_Operator7_out1           : std_logic;
  SIGNAL Switch10_out1                    : std_logic;
  SIGNAL Logical_Operator5_out1           : std_logic;
  SIGNAL Logical_Operator4_out1           : std_logic;

BEGIN
  Constant3_out1 <= '0';

  
  Data_Type_Conversion_out1 <= '1' WHEN S /= '0' ELSE
      '0';

  
  Data_Type_Conversion1_out1 <= '1' WHEN R /= '0' ELSE
      '0';

  Logical_Operator3_out1 <=  NOT Data_Type_Conversion1_out1;

  Logical_Operator8_out1 <= Logical_Operator3_out1 AND Unit_Delay_out1;

  Logical_Operator7_out1 <= Data_Type_Conversion_out1 OR Logical_Operator8_out1;

  Unit_Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Unit_Delay_out1 <= '0';
      ELSIF enb = '1' THEN
        Unit_Delay_out1 <= Switch10_out1;
      END IF;
    END IF;
  END PROCESS Unit_Delay_process;


  Logical_Operator5_out1 <= Data_Type_Conversion_out1 OR Unit_Delay_out1;

  Logical_Operator4_out1 <= Logical_Operator5_out1 AND Logical_Operator3_out1;

  
  Switch10_out1 <= Logical_Operator4_out1 WHEN Constant3_out1 = '0' ELSE
      Logical_Operator7_out1;

  Q <= Switch10_out1;

END rtl;

