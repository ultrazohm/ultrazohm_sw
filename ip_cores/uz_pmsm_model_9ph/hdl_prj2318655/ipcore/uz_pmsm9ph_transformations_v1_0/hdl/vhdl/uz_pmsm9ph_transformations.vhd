-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj2318655/hdlsrc/uz_pmsm_model_9ph_21b_all_double/uz_pmsm9ph_transformations.vhd
-- Created: 2022-06-05 21:48:03
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_pmsm9ph_transformations
-- Source Path: uz_pmsm9ph_transformations
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.uz_pmsm9ph_transformations_pkg.ALL;

ENTITY uz_pmsm9ph_transformations IS
  PORT( IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESETN                     :   IN    std_logic;  -- ufix1
        current_in_dq_0                   :   IN    std_logic_vector(224 DOWNTO 0);  -- ufix225
        theta_el1                         :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        In3                               :   IN    std_logic;  -- ufix1
        u_abc1_pl_0                       :   IN    std_logic_vector(74 DOWNTO 0);  -- ufix75
        u_abc2_pl_0                       :   IN    std_logic_vector(74 DOWNTO 0);  -- ufix75
        u_abc3_pl_0                       :   IN    std_logic_vector(74 DOWNTO 0);  -- ufix75
        AXI4_ACLK                         :   IN    std_logic;  -- ufix1
        AXI4_ARESETN                      :   IN    std_logic;  -- ufix1
        AXI4_AWID                         :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
        AXI4_AWADDR                       :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_AWLEN                        :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        AXI4_AWSIZE                       :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        AXI4_AWBURST                      :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_AWLOCK                       :   IN    std_logic;  -- ufix1
        AXI4_AWCACHE                      :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_AWPROT                       :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        AXI4_AWVALID                      :   IN    std_logic;  -- ufix1
        AXI4_WDATA                        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_WSTRB                        :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_WLAST                        :   IN    std_logic;  -- ufix1
        AXI4_WVALID                       :   IN    std_logic;  -- ufix1
        AXI4_BREADY                       :   IN    std_logic;  -- ufix1
        AXI4_ARID                         :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
        AXI4_ARADDR                       :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_ARLEN                        :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        AXI4_ARSIZE                       :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        AXI4_ARBURST                      :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_ARLOCK                       :   IN    std_logic;  -- ufix1
        AXI4_ARCACHE                      :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_ARPROT                       :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        AXI4_ARVALID                      :   IN    std_logic;  -- ufix1
        AXI4_RREADY                       :   IN    std_logic;  -- ufix1
        voltage_out_dq_1_0                :   OUT   std_logic_vector(74 DOWNTO 0);  -- ufix75
        voltage_out_dq_2_0                :   OUT   std_logic_vector(74 DOWNTO 0);  -- ufix75
        voltage_out_dq_3_0                :   OUT   std_logic_vector(74 DOWNTO 0);  -- ufix75
        Out3_0                            :   OUT   std_logic_vector(74 DOWNTO 0);  -- ufix75
        Out4_0                            :   OUT   std_logic_vector(74 DOWNTO 0);  -- ufix75
        Out5_0                            :   OUT   std_logic_vector(74 DOWNTO 0);  -- ufix75
        AXI4_AWREADY                      :   OUT   std_logic;  -- ufix1
        AXI4_WREADY                       :   OUT   std_logic;  -- ufix1
        AXI4_BID                          :   OUT   std_logic_vector(11 DOWNTO 0);  -- ufix12
        AXI4_BRESP                        :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_BVALID                       :   OUT   std_logic;  -- ufix1
        AXI4_ARREADY                      :   OUT   std_logic;  -- ufix1
        AXI4_RID                          :   OUT   std_logic_vector(11 DOWNTO 0);  -- ufix12
        AXI4_RDATA                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_RRESP                        :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_RLAST                        :   OUT   std_logic;  -- ufix1
        AXI4_RVALID                       :   OUT   std_logic  -- ufix1
        );
END uz_pmsm9ph_transformations;


ARCHITECTURE rtl OF uz_pmsm9ph_transformations IS

  -- Component Declarations
  COMPONENT uz_pmsm9ph_transformations_reset_sync
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset_in                        :   IN    std_logic;  -- ufix1
          reset_out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT uz_pmsm9ph_transformations_axi4
    PORT( reset                           :   IN    std_logic;
          AXI4_ACLK                       :   IN    std_logic;  -- ufix1
          AXI4_ARESETN                    :   IN    std_logic;  -- ufix1
          AXI4_AWID                       :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
          AXI4_AWADDR                     :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_AWLEN                      :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          AXI4_AWSIZE                     :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
          AXI4_AWBURST                    :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_AWLOCK                     :   IN    std_logic;  -- ufix1
          AXI4_AWCACHE                    :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_AWPROT                     :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
          AXI4_AWVALID                    :   IN    std_logic;  -- ufix1
          AXI4_WDATA                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_WSTRB                      :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_WLAST                      :   IN    std_logic;  -- ufix1
          AXI4_WVALID                     :   IN    std_logic;  -- ufix1
          AXI4_BREADY                     :   IN    std_logic;  -- ufix1
          AXI4_ARID                       :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
          AXI4_ARADDR                     :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_ARLEN                      :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          AXI4_ARSIZE                     :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
          AXI4_ARBURST                    :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_ARLOCK                     :   IN    std_logic;  -- ufix1
          AXI4_ARCACHE                    :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_ARPROT                     :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
          AXI4_ARVALID                    :   IN    std_logic;  -- ufix1
          AXI4_RREADY                     :   IN    std_logic;  -- ufix1
          read_ip_timestamp               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          read_Out2                       :   IN    vector_of_std_logic_vector25(0 TO 8);  -- sfix25_En12 [9]
          AXI4_AWREADY                    :   OUT   std_logic;  -- ufix1
          AXI4_WREADY                     :   OUT   std_logic;  -- ufix1
          AXI4_BID                        :   OUT   std_logic_vector(11 DOWNTO 0);  -- ufix12
          AXI4_BRESP                      :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_BVALID                     :   OUT   std_logic;  -- ufix1
          AXI4_ARREADY                    :   OUT   std_logic;  -- ufix1
          AXI4_RID                        :   OUT   std_logic_vector(11 DOWNTO 0);  -- ufix12
          AXI4_RDATA                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_RRESP                      :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_RLAST                      :   OUT   std_logic;  -- ufix1
          AXI4_RVALID                     :   OUT   std_logic;  -- ufix1
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          reset_internal                  :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  COMPONENT uz_pmsm9ph_transformations_dut
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          dut_enable                      :   IN    std_logic;  -- ufix1
          current_in_dq_0                 :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          current_in_dq_1                 :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          current_in_dq_2                 :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          current_in_dq_3                 :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          current_in_dq_4                 :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          current_in_dq_5                 :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          current_in_dq_6                 :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          current_in_dq_7                 :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          current_in_dq_8                 :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          theta_el1                       :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En14
          In3                             :   IN    std_logic;  -- ufix1
          u_abc1_pl_0                     :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc1_pl_1                     :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc1_pl_2                     :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc2_pl_0                     :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc2_pl_1                     :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc2_pl_2                     :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc3_pl_0                     :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc3_pl_1                     :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          u_abc3_pl_2                     :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          ce_out                          :   OUT   std_logic;  -- ufix1
          voltage_out_dq_1_0              :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          voltage_out_dq_1_1              :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          voltage_out_dq_1_2              :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          voltage_out_dq_2_0              :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          voltage_out_dq_2_1              :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          voltage_out_dq_2_2              :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          voltage_out_dq_3_0              :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          voltage_out_dq_3_1              :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          voltage_out_dq_3_2              :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out2_0                          :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out2_1                          :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out2_2                          :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out2_3                          :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out2_4                          :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out2_5                          :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out2_6                          :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out2_7                          :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out2_8                          :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out3_0                          :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out3_1                          :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out3_2                          :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out4_0                          :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out4_1                          :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out4_2                          :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out5_0                          :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out5_1                          :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En12
          Out5_2                          :   OUT   std_logic_vector(24 DOWNTO 0)  -- sfix25_En12
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : uz_pmsm9ph_transformations_reset_sync
    USE ENTITY work.uz_pmsm9ph_transformations_reset_sync(rtl);

  FOR ALL : uz_pmsm9ph_transformations_axi4
    USE ENTITY work.uz_pmsm9ph_transformations_axi4(rtl);

  FOR ALL : uz_pmsm9ph_transformations_dut
    USE ENTITY work.uz_pmsm9ph_transformations_dut(rtl);

  -- Signals
  SIGNAL reset                            : std_logic;
  SIGNAL ip_timestamp                     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL reset_cm                         : std_logic;  -- ufix1
  SIGNAL current_in_dq_0_unsigned         : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL current_in_dq_0_slice            : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL current_in_dq_0_sig              : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL current_in_dq_0_unsigned_1       : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL current_in_dq_0_slice_1          : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL current_in_dq_1_sig              : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL current_in_dq_0_unsigned_2       : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL current_in_dq_0_slice_2          : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL current_in_dq_2_sig              : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL current_in_dq_0_unsigned_3       : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL current_in_dq_0_slice_3          : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL current_in_dq_3_sig              : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL current_in_dq_0_unsigned_4       : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL current_in_dq_0_slice_4          : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL current_in_dq_4_sig              : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL current_in_dq_0_unsigned_5       : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL current_in_dq_0_slice_5          : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL current_in_dq_5_sig              : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL current_in_dq_0_unsigned_6       : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL current_in_dq_0_slice_6          : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL current_in_dq_6_sig              : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL current_in_dq_0_unsigned_7       : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL current_in_dq_0_slice_7          : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL current_in_dq_7_sig              : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL current_in_dq_0_unsigned_8       : unsigned(224 DOWNTO 0);  -- ufix225
  SIGNAL current_in_dq_0_slice_8          : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL current_in_dq_8_sig              : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL theta_el1_unsigned               : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL theta_el1_sig                    : signed(17 DOWNTO 0);  -- sfix18_En14
  SIGNAL u_abc1_pl_0_unsigned             : unsigned(74 DOWNTO 0);  -- ufix75
  SIGNAL u_abc1_pl_0_slice                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc1_pl_0_sig                  : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc1_pl_0_slice_1              : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc1_pl_1_sig                  : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc1_pl_0_slice_2              : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc1_pl_2_sig                  : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc2_pl_0_unsigned             : unsigned(74 DOWNTO 0);  -- ufix75
  SIGNAL u_abc2_pl_0_slice                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc2_pl_0_sig                  : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc2_pl_0_slice_1              : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc2_pl_1_sig                  : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc2_pl_0_slice_2              : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc2_pl_2_sig                  : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc3_pl_0_unsigned             : unsigned(74 DOWNTO 0);  -- ufix75
  SIGNAL u_abc3_pl_0_slice                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc3_pl_0_sig                  : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc3_pl_0_slice_1              : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc3_pl_1_sig                  : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL u_abc3_pl_0_slice_2              : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL u_abc3_pl_2_sig                  : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL reset_internal                   : std_logic;  -- ufix1
  SIGNAL reset_before_sync                : std_logic;  -- ufix1
  SIGNAL read_Out2_vec                    : vector_of_std_logic_vector25(0 TO 8);  -- ufix25 [9]
  SIGNAL AXI4_BID_tmp                     : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL AXI4_BRESP_tmp                   : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_RID_tmp                     : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL AXI4_RDATA_tmp                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_RRESP_tmp                   : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL write_axi_enable                 : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL voltage_out_dq_1_0_sig           : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL voltage_out_dq_1_1_sig           : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL voltage_out_dq_1_2_sig           : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL voltage_out_dq_2_0_sig           : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL voltage_out_dq_2_1_sig           : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL voltage_out_dq_2_2_sig           : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL voltage_out_dq_3_0_sig           : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL voltage_out_dq_3_1_sig           : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL voltage_out_dq_3_2_sig           : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL Out3_0_sig                       : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL Out3_1_sig                       : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL Out3_2_sig                       : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL Out4_0_sig                       : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL Out4_1_sig                       : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL Out4_2_sig                       : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL Out5_0_sig                       : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL Out5_1_sig                       : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL Out5_2_sig                       : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL voltage_out_dq_1_2_sig_signed    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL voltage_out_dq_1_1_sig_signed    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL voltage_out_dq_1_0_sig_signed    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL voltage_out_dq_1_0_tmp           : unsigned(74 DOWNTO 0);  -- ufix75
  SIGNAL voltage_out_dq_2_2_sig_signed    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL voltage_out_dq_2_1_sig_signed    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL voltage_out_dq_2_0_sig_signed    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL voltage_out_dq_2_0_tmp           : unsigned(74 DOWNTO 0);  -- ufix75
  SIGNAL voltage_out_dq_3_2_sig_signed    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL voltage_out_dq_3_1_sig_signed    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL voltage_out_dq_3_0_sig_signed    : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL voltage_out_dq_3_0_tmp           : unsigned(74 DOWNTO 0);  -- ufix75
  SIGNAL Out3_2_sig_signed                : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL Out3_1_sig_signed                : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL Out3_0_sig_signed                : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL Out3_0_tmp                       : unsigned(74 DOWNTO 0);  -- ufix75
  SIGNAL Out4_2_sig_signed                : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL Out4_1_sig_signed                : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL Out4_0_sig_signed                : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL Out4_0_tmp                       : unsigned(74 DOWNTO 0);  -- ufix75
  SIGNAL Out5_2_sig_signed                : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL Out5_1_sig_signed                : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL Out5_0_sig_signed                : signed(24 DOWNTO 0);  -- sfix25_En12
  SIGNAL Out5_0_tmp                       : unsigned(74 DOWNTO 0);  -- ufix75

BEGIN
  u_uz_pmsm9ph_transformations_reset_sync_inst : uz_pmsm9ph_transformations_reset_sync
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset_in => reset_before_sync,  -- ufix1
              reset_out => reset
              );

  u_uz_pmsm9ph_transformations_axi4_inst : uz_pmsm9ph_transformations_axi4
    PORT MAP( reset => reset,
              AXI4_ACLK => AXI4_ACLK,  -- ufix1
              AXI4_ARESETN => AXI4_ARESETN,  -- ufix1
              AXI4_AWID => AXI4_AWID,  -- ufix12
              AXI4_AWADDR => AXI4_AWADDR,  -- ufix16
              AXI4_AWLEN => AXI4_AWLEN,  -- ufix8
              AXI4_AWSIZE => AXI4_AWSIZE,  -- ufix3
              AXI4_AWBURST => AXI4_AWBURST,  -- ufix2
              AXI4_AWLOCK => AXI4_AWLOCK,  -- ufix1
              AXI4_AWCACHE => AXI4_AWCACHE,  -- ufix4
              AXI4_AWPROT => AXI4_AWPROT,  -- ufix3
              AXI4_AWVALID => AXI4_AWVALID,  -- ufix1
              AXI4_WDATA => AXI4_WDATA,  -- ufix32
              AXI4_WSTRB => AXI4_WSTRB,  -- ufix4
              AXI4_WLAST => AXI4_WLAST,  -- ufix1
              AXI4_WVALID => AXI4_WVALID,  -- ufix1
              AXI4_BREADY => AXI4_BREADY,  -- ufix1
              AXI4_ARID => AXI4_ARID,  -- ufix12
              AXI4_ARADDR => AXI4_ARADDR,  -- ufix16
              AXI4_ARLEN => AXI4_ARLEN,  -- ufix8
              AXI4_ARSIZE => AXI4_ARSIZE,  -- ufix3
              AXI4_ARBURST => AXI4_ARBURST,  -- ufix2
              AXI4_ARLOCK => AXI4_ARLOCK,  -- ufix1
              AXI4_ARCACHE => AXI4_ARCACHE,  -- ufix4
              AXI4_ARPROT => AXI4_ARPROT,  -- ufix3
              AXI4_ARVALID => AXI4_ARVALID,  -- ufix1
              AXI4_RREADY => AXI4_RREADY,  -- ufix1
              read_ip_timestamp => std_logic_vector(ip_timestamp),  -- ufix32
              read_Out2 => read_Out2_vec,  -- sfix25_En12 [9]
              AXI4_AWREADY => AXI4_AWREADY,  -- ufix1
              AXI4_WREADY => AXI4_WREADY,  -- ufix1
              AXI4_BID => AXI4_BID_tmp,  -- ufix12
              AXI4_BRESP => AXI4_BRESP_tmp,  -- ufix2
              AXI4_BVALID => AXI4_BVALID,  -- ufix1
              AXI4_ARREADY => AXI4_ARREADY,  -- ufix1
              AXI4_RID => AXI4_RID_tmp,  -- ufix12
              AXI4_RDATA => AXI4_RDATA_tmp,  -- ufix32
              AXI4_RRESP => AXI4_RRESP_tmp,  -- ufix2
              AXI4_RLAST => AXI4_RLAST,  -- ufix1
              AXI4_RVALID => AXI4_RVALID,  -- ufix1
              write_axi_enable => write_axi_enable,  -- ufix1
              reset_internal => reset_internal  -- ufix1
              );

  u_uz_pmsm9ph_transformations_dut_inst : uz_pmsm9ph_transformations_dut
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset => reset,
              dut_enable => write_axi_enable,  -- ufix1
              current_in_dq_0 => std_logic_vector(current_in_dq_0_sig),  -- sfix25_En12
              current_in_dq_1 => std_logic_vector(current_in_dq_1_sig),  -- sfix25_En12
              current_in_dq_2 => std_logic_vector(current_in_dq_2_sig),  -- sfix25_En12
              current_in_dq_3 => std_logic_vector(current_in_dq_3_sig),  -- sfix25_En12
              current_in_dq_4 => std_logic_vector(current_in_dq_4_sig),  -- sfix25_En12
              current_in_dq_5 => std_logic_vector(current_in_dq_5_sig),  -- sfix25_En12
              current_in_dq_6 => std_logic_vector(current_in_dq_6_sig),  -- sfix25_En12
              current_in_dq_7 => std_logic_vector(current_in_dq_7_sig),  -- sfix25_En12
              current_in_dq_8 => std_logic_vector(current_in_dq_8_sig),  -- sfix25_En12
              theta_el1 => std_logic_vector(theta_el1_sig),  -- sfix18_En14
              In3 => In3,  -- ufix1
              u_abc1_pl_0 => std_logic_vector(u_abc1_pl_0_sig),  -- sfix25_En12
              u_abc1_pl_1 => std_logic_vector(u_abc1_pl_1_sig),  -- sfix25_En12
              u_abc1_pl_2 => std_logic_vector(u_abc1_pl_2_sig),  -- sfix25_En12
              u_abc2_pl_0 => std_logic_vector(u_abc2_pl_0_sig),  -- sfix25_En12
              u_abc2_pl_1 => std_logic_vector(u_abc2_pl_1_sig),  -- sfix25_En12
              u_abc2_pl_2 => std_logic_vector(u_abc2_pl_2_sig),  -- sfix25_En12
              u_abc3_pl_0 => std_logic_vector(u_abc3_pl_0_sig),  -- sfix25_En12
              u_abc3_pl_1 => std_logic_vector(u_abc3_pl_1_sig),  -- sfix25_En12
              u_abc3_pl_2 => std_logic_vector(u_abc3_pl_2_sig),  -- sfix25_En12
              ce_out => ce_out_sig,  -- ufix1
              voltage_out_dq_1_0 => voltage_out_dq_1_0_sig,  -- sfix25_En12
              voltage_out_dq_1_1 => voltage_out_dq_1_1_sig,  -- sfix25_En12
              voltage_out_dq_1_2 => voltage_out_dq_1_2_sig,  -- sfix25_En12
              voltage_out_dq_2_0 => voltage_out_dq_2_0_sig,  -- sfix25_En12
              voltage_out_dq_2_1 => voltage_out_dq_2_1_sig,  -- sfix25_En12
              voltage_out_dq_2_2 => voltage_out_dq_2_2_sig,  -- sfix25_En12
              voltage_out_dq_3_0 => voltage_out_dq_3_0_sig,  -- sfix25_En12
              voltage_out_dq_3_1 => voltage_out_dq_3_1_sig,  -- sfix25_En12
              voltage_out_dq_3_2 => voltage_out_dq_3_2_sig,  -- sfix25_En12
              Out2_0 => read_Out2_vec(0),  -- sfix25_En12
              Out2_1 => read_Out2_vec(1),  -- sfix25_En12
              Out2_2 => read_Out2_vec(2),  -- sfix25_En12
              Out2_3 => read_Out2_vec(3),  -- sfix25_En12
              Out2_4 => read_Out2_vec(4),  -- sfix25_En12
              Out2_5 => read_Out2_vec(5),  -- sfix25_En12
              Out2_6 => read_Out2_vec(6),  -- sfix25_En12
              Out2_7 => read_Out2_vec(7),  -- sfix25_En12
              Out2_8 => read_Out2_vec(8),  -- sfix25_En12
              Out3_0 => Out3_0_sig,  -- sfix25_En12
              Out3_1 => Out3_1_sig,  -- sfix25_En12
              Out3_2 => Out3_2_sig,  -- sfix25_En12
              Out4_0 => Out4_0_sig,  -- sfix25_En12
              Out4_1 => Out4_1_sig,  -- sfix25_En12
              Out4_2 => Out4_2_sig,  -- sfix25_En12
              Out5_0 => Out5_0_sig,  -- sfix25_En12
              Out5_1 => Out5_1_sig,  -- sfix25_En12
              Out5_2 => Out5_2_sig  -- sfix25_En12
              );

  ip_timestamp <= unsigned'(X"837DAF33");

  reset_cm <=  NOT IPCORE_RESETN;

  current_in_dq_0_unsigned <= unsigned(current_in_dq_0);

  current_in_dq_0_slice <= current_in_dq_0_unsigned(24 DOWNTO 0);

  current_in_dq_0_sig <= signed(current_in_dq_0_slice);

  current_in_dq_0_unsigned_1 <= unsigned(current_in_dq_0);

  current_in_dq_0_slice_1 <= current_in_dq_0_unsigned_1(49 DOWNTO 25);

  current_in_dq_1_sig <= signed(current_in_dq_0_slice_1);

  current_in_dq_0_unsigned_2 <= unsigned(current_in_dq_0);

  current_in_dq_0_slice_2 <= current_in_dq_0_unsigned_2(74 DOWNTO 50);

  current_in_dq_2_sig <= signed(current_in_dq_0_slice_2);

  current_in_dq_0_unsigned_3 <= unsigned(current_in_dq_0);

  current_in_dq_0_slice_3 <= current_in_dq_0_unsigned_3(99 DOWNTO 75);

  current_in_dq_3_sig <= signed(current_in_dq_0_slice_3);

  current_in_dq_0_unsigned_4 <= unsigned(current_in_dq_0);

  current_in_dq_0_slice_4 <= current_in_dq_0_unsigned_4(124 DOWNTO 100);

  current_in_dq_4_sig <= signed(current_in_dq_0_slice_4);

  current_in_dq_0_unsigned_5 <= unsigned(current_in_dq_0);

  current_in_dq_0_slice_5 <= current_in_dq_0_unsigned_5(149 DOWNTO 125);

  current_in_dq_5_sig <= signed(current_in_dq_0_slice_5);

  current_in_dq_0_unsigned_6 <= unsigned(current_in_dq_0);

  current_in_dq_0_slice_6 <= current_in_dq_0_unsigned_6(174 DOWNTO 150);

  current_in_dq_6_sig <= signed(current_in_dq_0_slice_6);

  current_in_dq_0_unsigned_7 <= unsigned(current_in_dq_0);

  current_in_dq_0_slice_7 <= current_in_dq_0_unsigned_7(199 DOWNTO 175);

  current_in_dq_7_sig <= signed(current_in_dq_0_slice_7);

  current_in_dq_0_unsigned_8 <= unsigned(current_in_dq_0);

  current_in_dq_0_slice_8 <= current_in_dq_0_unsigned_8(224 DOWNTO 200);

  current_in_dq_8_sig <= signed(current_in_dq_0_slice_8);

  theta_el1_unsigned <= unsigned(theta_el1);

  theta_el1_sig <= signed(theta_el1_unsigned);

  u_abc1_pl_0_unsigned <= unsigned(u_abc1_pl_0);

  u_abc1_pl_0_slice <= u_abc1_pl_0_unsigned(24 DOWNTO 0);

  u_abc1_pl_0_sig <= signed(u_abc1_pl_0_slice);

  u_abc1_pl_0_slice_1 <= u_abc1_pl_0_unsigned(49 DOWNTO 25);

  u_abc1_pl_1_sig <= signed(u_abc1_pl_0_slice_1);

  u_abc1_pl_0_slice_2 <= u_abc1_pl_0_unsigned(74 DOWNTO 50);

  u_abc1_pl_2_sig <= signed(u_abc1_pl_0_slice_2);

  u_abc2_pl_0_unsigned <= unsigned(u_abc2_pl_0);

  u_abc2_pl_0_slice <= u_abc2_pl_0_unsigned(24 DOWNTO 0);

  u_abc2_pl_0_sig <= signed(u_abc2_pl_0_slice);

  u_abc2_pl_0_slice_1 <= u_abc2_pl_0_unsigned(49 DOWNTO 25);

  u_abc2_pl_1_sig <= signed(u_abc2_pl_0_slice_1);

  u_abc2_pl_0_slice_2 <= u_abc2_pl_0_unsigned(74 DOWNTO 50);

  u_abc2_pl_2_sig <= signed(u_abc2_pl_0_slice_2);

  u_abc3_pl_0_unsigned <= unsigned(u_abc3_pl_0);

  u_abc3_pl_0_slice <= u_abc3_pl_0_unsigned(24 DOWNTO 0);

  u_abc3_pl_0_sig <= signed(u_abc3_pl_0_slice);

  u_abc3_pl_0_slice_1 <= u_abc3_pl_0_unsigned(49 DOWNTO 25);

  u_abc3_pl_1_sig <= signed(u_abc3_pl_0_slice_1);

  u_abc3_pl_0_slice_2 <= u_abc3_pl_0_unsigned(74 DOWNTO 50);

  u_abc3_pl_2_sig <= signed(u_abc3_pl_0_slice_2);

  reset_before_sync <= reset_cm OR reset_internal;


  voltage_out_dq_1_2_sig_signed <= signed(voltage_out_dq_1_2_sig);

  voltage_out_dq_1_1_sig_signed <= signed(voltage_out_dq_1_1_sig);

  voltage_out_dq_1_0_sig_signed <= signed(voltage_out_dq_1_0_sig);

  voltage_out_dq_1_0_tmp <= unsigned(voltage_out_dq_1_2_sig_signed) & unsigned(voltage_out_dq_1_1_sig_signed) & unsigned(voltage_out_dq_1_0_sig_signed);

  voltage_out_dq_1_0 <= std_logic_vector(voltage_out_dq_1_0_tmp);

  voltage_out_dq_2_2_sig_signed <= signed(voltage_out_dq_2_2_sig);

  voltage_out_dq_2_1_sig_signed <= signed(voltage_out_dq_2_1_sig);

  voltage_out_dq_2_0_sig_signed <= signed(voltage_out_dq_2_0_sig);

  voltage_out_dq_2_0_tmp <= unsigned(voltage_out_dq_2_2_sig_signed) & unsigned(voltage_out_dq_2_1_sig_signed) & unsigned(voltage_out_dq_2_0_sig_signed);

  voltage_out_dq_2_0 <= std_logic_vector(voltage_out_dq_2_0_tmp);

  voltage_out_dq_3_2_sig_signed <= signed(voltage_out_dq_3_2_sig);

  voltage_out_dq_3_1_sig_signed <= signed(voltage_out_dq_3_1_sig);

  voltage_out_dq_3_0_sig_signed <= signed(voltage_out_dq_3_0_sig);

  voltage_out_dq_3_0_tmp <= unsigned(voltage_out_dq_3_2_sig_signed) & unsigned(voltage_out_dq_3_1_sig_signed) & unsigned(voltage_out_dq_3_0_sig_signed);

  voltage_out_dq_3_0 <= std_logic_vector(voltage_out_dq_3_0_tmp);

  Out3_2_sig_signed <= signed(Out3_2_sig);

  Out3_1_sig_signed <= signed(Out3_1_sig);

  Out3_0_sig_signed <= signed(Out3_0_sig);

  Out3_0_tmp <= unsigned(Out3_2_sig_signed) & unsigned(Out3_1_sig_signed) & unsigned(Out3_0_sig_signed);

  Out3_0 <= std_logic_vector(Out3_0_tmp);

  Out4_2_sig_signed <= signed(Out4_2_sig);

  Out4_1_sig_signed <= signed(Out4_1_sig);

  Out4_0_sig_signed <= signed(Out4_0_sig);

  Out4_0_tmp <= unsigned(Out4_2_sig_signed) & unsigned(Out4_1_sig_signed) & unsigned(Out4_0_sig_signed);

  Out4_0 <= std_logic_vector(Out4_0_tmp);

  Out5_2_sig_signed <= signed(Out5_2_sig);

  Out5_1_sig_signed <= signed(Out5_1_sig);

  Out5_0_sig_signed <= signed(Out5_0_sig);

  Out5_0_tmp <= unsigned(Out5_2_sig_signed) & unsigned(Out5_1_sig_signed) & unsigned(Out5_0_sig_signed);

  Out5_0 <= std_logic_vector(Out5_0_tmp);

  AXI4_BID <= AXI4_BID_tmp;

  AXI4_BRESP <= AXI4_BRESP_tmp;

  AXI4_RID <= AXI4_RID_tmp;

  AXI4_RDATA <= AXI4_RDATA_tmp;

  AXI4_RRESP <= AXI4_RRESP_tmp;

END rtl;

