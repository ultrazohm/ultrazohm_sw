-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\valen\Documents\repos\UZ\ultrazohm_sw\ip_cores\uz_pmsm_model_9ph\hdl_opti\hdlsrc\uz_pmsm_model_9ph\uz_pmsm_model_9ph_opti_src_Detect_Rise_Positive.vhd
-- Created: 2022-06-01 13:39:43
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_pmsm_model_9ph_opti_src_Detect_Rise_Positive
-- Source Path: uz_pmsm_model_9ph/uz_pmsm_model_9ph/Detect Rise Positive
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY uz_pmsm_model_9ph_opti_src_Detect_Rise_Positive IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_4000_1                      :   IN    std_logic;
        enb_1_20_0                        :   IN    std_logic;
        U                                 :   IN    std_logic;
        Y                                 :   OUT   std_logic
        );
END uz_pmsm_model_9ph_opti_src_Detect_Rise_Positive;


ARCHITECTURE rtl OF uz_pmsm_model_9ph_opti_src_Detect_Rise_Positive IS

  -- Signals
  SIGNAL U_k                              : std_logic;
  SIGNAL U_k_1                            : std_logic;
  SIGNAL Delay_Input1_bypass_reg          : std_logic;  -- ufix1
  SIGNAL U_k_2                            : std_logic;
  SIGNAL U_k_1_1                          : std_logic;
  SIGNAL FixPt_Relational_Operator_relop1 : std_logic;
  SIGNAL FixPt_Relational_Operator_out1   : std_logic;

BEGIN
  -- Edge
  -- 
  -- U(k)

  
  U_k <= '1' WHEN U > '0' ELSE
      '0';

  crp_out_delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        U_k_1 <= '0';
      ELSIF enb_1_20_0 = '1' THEN
        U_k_1 <= U_k;
      END IF;
    END IF;
  END PROCESS crp_out_delay_process;


  Delay_Input1_bypass_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_Input1_bypass_reg <= '0';
      ELSIF enb_1_4000_1 = '1' THEN
        Delay_Input1_bypass_reg <= U_k_1;
      END IF;
    END IF;
  END PROCESS Delay_Input1_bypass_process;

  
  U_k_2 <= U_k_1 WHEN enb_1_4000_1 = '1' ELSE
      Delay_Input1_bypass_reg;

  U_k_1_1 <= U_k_2;

  
  FixPt_Relational_Operator_relop1 <= '1' WHEN U_k > U_k_1_1 ELSE
      '0';

  delayMatch_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        FixPt_Relational_Operator_out1 <= '0';
      ELSIF enb_1_20_0 = '1' THEN
        FixPt_Relational_Operator_out1 <= FixPt_Relational_Operator_relop1;
      END IF;
    END IF;
  END PROCESS delayMatch_process;


  Y <= FixPt_Relational_Operator_out1;

END rtl;

