-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\parallel_8_vsd_and_park\hdlsrc\VSD_and_Park_transformation_6Phase\parallel_8_sim_vsd_and_park_src_MATLAB_Function.vhd
-- Created: 2022-12-22 17:01:27
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: parallel_8_sim_vsd_and_park_src_MATLAB_Function
-- Source Path: VSD_and_Park_transformation_6Phase/vsd_and_park_tra1/MATLAB Function
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.parallel_8_sim_vsd_and_park_src_vsd_and_park_tra1_pac.ALL;

ENTITY parallel_8_sim_vsd_and_park_src_MATLAB_Function IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb                               :   IN    std_logic;
        i_a1                              :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En18
        i_b1                              :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En18
        i_c1                              :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En18
        i_a2                              :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En18
        i_b2                              :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En18
        i_c2                              :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En18
        sin_theta_el                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        cos_theta_el                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        i_alpha                           :   OUT   std_logic_vector(56 DOWNTO 0);  -- sfix57_En45
        i_beta                            :   OUT   std_logic_vector(56 DOWNTO 0);  -- sfix57_En45
        i_x                               :   OUT   std_logic_vector(56 DOWNTO 0);  -- sfix57_En45
        i_y                               :   OUT   std_logic_vector(56 DOWNTO 0);  -- sfix57_En45
        i_0_plus                          :   OUT   std_logic_vector(56 DOWNTO 0);  -- sfix57_En45
        i_0_minus                         :   OUT   std_logic_vector(56 DOWNTO 0);  -- sfix57_En45
        i_d                               :   OUT   std_logic_vector(73 DOWNTO 0);  -- sfix74_En59
        i_q                               :   OUT   std_logic_vector(73 DOWNTO 0)  -- sfix74_En59
        );
END parallel_8_sim_vsd_and_park_src_MATLAB_Function;


ARCHITECTURE rtl OF parallel_8_sim_vsd_and_park_src_MATLAB_Function IS

  -- Constants
  CONSTANT a                              : matrix_of_signed27(0 TO 5, 0 TO 5) := 
    (( to_signed(16#2AA9930#, 27), to_signed(-16#1554C99#, 27), to_signed(-16#1554C99#, 27),
     to_signed(16#24F2155#, 27), to_signed(-16#24F2156#, 27), to_signed(16#0000000#, 27) ),
     ( to_signed(16#0000000#, 27), to_signed(16#24F2155#, 27), to_signed(-16#24F2156#, 27),
     to_signed(16#1554C98#, 27), to_signed(16#1554C98#, 27), to_signed(-16#2AA9931#, 27) ),
     ( to_signed(16#2AA9930#, 27), to_signed(-16#1554C99#, 27), to_signed(-16#1554C99#, 27),
     to_signed(-16#24F2156#, 27), to_signed(16#24F2155#, 27), to_signed(16#0000000#, 27) ),
     ( to_signed(16#0000000#, 27), to_signed(-16#24F2156#, 27), to_signed(16#24F2155#, 27),
     to_signed(16#1554C98#, 27), to_signed(16#1554C98#, 27), to_signed(-16#2AA9931#, 27) ),
     ( to_signed(16#2AA9930#, 27), to_signed(16#2AA9930#, 27), to_signed(16#2AA9930#, 27),
     to_signed(16#0000000#, 27), to_signed(16#0000000#, 27), to_signed(16#0000000#, 27) ),
     ( to_signed(16#0000000#, 27), to_signed(16#0000000#, 27), to_signed(16#0000000#, 27),
     to_signed(16#2AA9930#, 27), to_signed(16#2AA9930#, 27), to_signed(16#2AA9930#, 27) ));  -- sfix27 [6x6]

  -- Signals
  SIGNAL i_a1_signed                      : signed(26 DOWNTO 0);  -- sfix27_En18
  SIGNAL delayMatch_reg                   : vector_of_signed27(0 TO 2);  -- sfix27 [3]
  SIGNAL i_a1_1                           : signed(26 DOWNTO 0);  -- sfix27_En18
  SIGNAL i_b1_signed                      : signed(26 DOWNTO 0);  -- sfix27_En18
  SIGNAL delayMatch1_reg                  : vector_of_signed27(0 TO 2);  -- sfix27 [3]
  SIGNAL i_b1_1                           : signed(26 DOWNTO 0);  -- sfix27_En18
  SIGNAL i_c1_signed                      : signed(26 DOWNTO 0);  -- sfix27_En18
  SIGNAL delayMatch2_reg                  : vector_of_signed27(0 TO 2);  -- sfix27 [3]
  SIGNAL i_c1_1                           : signed(26 DOWNTO 0);  -- sfix27_En18
  SIGNAL i_a2_signed                      : signed(26 DOWNTO 0);  -- sfix27_En18
  SIGNAL delayMatch3_reg                  : vector_of_signed27(0 TO 2);  -- sfix27 [3]
  SIGNAL i_a2_1                           : signed(26 DOWNTO 0);  -- sfix27_En18
  SIGNAL i_b2_signed                      : signed(26 DOWNTO 0);  -- sfix27_En18
  SIGNAL delayMatch4_reg                  : vector_of_signed27(0 TO 2);  -- sfix27 [3]
  SIGNAL i_b2_1                           : signed(26 DOWNTO 0);  -- sfix27_En18
  SIGNAL i_c2_signed                      : signed(26 DOWNTO 0);  -- sfix27_En18
  SIGNAL delayMatch5_reg                  : vector_of_signed27(0 TO 2);  -- sfix27 [3]
  SIGNAL i_c2_1                           : signed(26 DOWNTO 0);  -- sfix27_En18
  SIGNAL sin_theta_el_signed              : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL cos_theta_el_signed              : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL i_alpha_tmp                      : signed(56 DOWNTO 0);  -- sfix57_En45
  SIGNAL i_beta_tmp                       : signed(56 DOWNTO 0);  -- sfix57_En45
  SIGNAL i_x_tmp                          : signed(56 DOWNTO 0);  -- sfix57_En45
  SIGNAL i_y_tmp                          : signed(56 DOWNTO 0);  -- sfix57_En45
  SIGNAL i_0_plus_tmp                     : signed(56 DOWNTO 0);  -- sfix57_En45
  SIGNAL i_0_minus_tmp                    : signed(56 DOWNTO 0);  -- sfix57_En45
  SIGNAL i_d_tmp                          : signed(73 DOWNTO 0);  -- sfix74_En59
  SIGNAL i_q_tmp                          : signed(73 DOWNTO 0);  -- sfix74_En59

BEGIN
  i_a1_signed <= signed(i_a1);

  delayMatch_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch_reg <= (OTHERS => to_signed(16#0000000#, 27));
      ELSIF enb = '1' THEN
        delayMatch_reg(0) <= i_a1_signed;
        delayMatch_reg(1 TO 2) <= delayMatch_reg(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch_process;

  i_a1_1 <= delayMatch_reg(2);

  i_b1_signed <= signed(i_b1);

  delayMatch1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch1_reg <= (OTHERS => to_signed(16#0000000#, 27));
      ELSIF enb = '1' THEN
        delayMatch1_reg(0) <= i_b1_signed;
        delayMatch1_reg(1 TO 2) <= delayMatch1_reg(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch1_process;

  i_b1_1 <= delayMatch1_reg(2);

  i_c1_signed <= signed(i_c1);

  delayMatch2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch2_reg <= (OTHERS => to_signed(16#0000000#, 27));
      ELSIF enb = '1' THEN
        delayMatch2_reg(0) <= i_c1_signed;
        delayMatch2_reg(1 TO 2) <= delayMatch2_reg(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch2_process;

  i_c1_1 <= delayMatch2_reg(2);

  i_a2_signed <= signed(i_a2);

  delayMatch3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch3_reg <= (OTHERS => to_signed(16#0000000#, 27));
      ELSIF enb = '1' THEN
        delayMatch3_reg(0) <= i_a2_signed;
        delayMatch3_reg(1 TO 2) <= delayMatch3_reg(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch3_process;

  i_a2_1 <= delayMatch3_reg(2);

  i_b2_signed <= signed(i_b2);

  delayMatch4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch4_reg <= (OTHERS => to_signed(16#0000000#, 27));
      ELSIF enb = '1' THEN
        delayMatch4_reg(0) <= i_b2_signed;
        delayMatch4_reg(1 TO 2) <= delayMatch4_reg(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch4_process;

  i_b2_1 <= delayMatch4_reg(2);

  i_c2_signed <= signed(i_c2);

  delayMatch5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch5_reg <= (OTHERS => to_signed(16#0000000#, 27));
      ELSIF enb = '1' THEN
        delayMatch5_reg(0) <= i_c2_signed;
        delayMatch5_reg(1 TO 2) <= delayMatch5_reg(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch5_process;

  i_c2_1 <= delayMatch5_reg(2);

  sin_theta_el_signed <= signed(sin_theta_el);

  cos_theta_el_signed <= signed(cos_theta_el);

  MATLAB_Function_output : PROCESS (cos_theta_el_signed, i_a1_1, i_a2_1, i_b1_1, i_b2_1, i_c1_1, i_c2_1,
       sin_theta_el_signed)
    VARIABLE y : vector_of_signed27(0 TO 5);
    VARIABLE prodAB : signed(53 DOWNTO 0);
    VARIABLE c : vector_of_signed57(0 TO 5);
    VARIABLE yfi : signed(15 DOWNTO 0);
    VARIABLE slice_temp : signed(56 DOWNTO 0);
    VARIABLE add_cast : vector_of_signed58(0 TO 5);
    VARIABLE add_cast_0 : vector_of_signed58(0 TO 5);
    VARIABLE add_temp : vector_of_signed58(0 TO 5);
    VARIABLE cast : signed(16 DOWNTO 0);
    VARIABLE cast_0 : signed(16 DOWNTO 0);
    VARIABLE mul_temp : signed(72 DOWNTO 0);
    VARIABLE add_cast_1 : signed(73 DOWNTO 0);
    VARIABLE mul_temp_0 : signed(72 DOWNTO 0);
    VARIABLE add_cast_2 : signed(73 DOWNTO 0);
    VARIABLE mul_temp_1 : signed(72 DOWNTO 0);
    VARIABLE add_cast_3 : signed(73 DOWNTO 0);
    VARIABLE mul_temp_2 : signed(72 DOWNTO 0);
    VARIABLE add_cast_4 : signed(73 DOWNTO 0);
  BEGIN
    prodAB := to_signed(0, 54);
    slice_temp := to_signed(0, 57);
    -- VSD-Transformation
    y(0) := i_a1_1;
    y(1) := i_b1_1;
    y(2) := i_c1_1;
    y(3) := i_a2_1;
    y(4) := i_b2_1;
    y(5) := i_c2_1;

    FOR l IN 0 TO 5 LOOP
      slice_temp := to_signed(0, 57);

      FOR k IN 0 TO 5 LOOP
        prodAB := a(l, k) * y(k);
        add_cast(k) := resize(slice_temp, 58);
        add_cast_0(k) := resize(prodAB, 58);
        add_temp(k) := add_cast(k) + add_cast_0(k);
        slice_temp := add_temp(k)(56 DOWNTO 0);
      END LOOP;

      c(l) := slice_temp;
    END LOOP;

    -- Park-Transformation
    --    B = [0 0]';
    --     B = [cos(theta_el)       sin(theta_el);
    --         -sin(theta_el)       cos(theta_el)] * [i_alpha i_beta]';
    --   i_d = B(1);
    --   i_q = B(2);
    cast := resize(sin_theta_el_signed, 17);
    cast_0 :=  - (cast);
    yfi := cast_0(15 DOWNTO 0);
    i_alpha_tmp <= c(0);
    i_beta_tmp <= c(1);
    i_x_tmp <= c(2);
    i_y_tmp <= c(3);
    i_0_plus_tmp <= c(4);
    i_0_minus_tmp <= c(5);
    mul_temp := cos_theta_el_signed * c(0);
    add_cast_1 := resize(mul_temp, 74);
    mul_temp_0 := sin_theta_el_signed * c(1);
    add_cast_2 := resize(mul_temp_0, 74);
    i_d_tmp <= add_cast_1 + add_cast_2;
    mul_temp_1 := yfi * c(0);
    add_cast_3 := resize(mul_temp_1, 74);
    mul_temp_2 := cos_theta_el_signed * c(1);
    add_cast_4 := resize(mul_temp_2, 74);
    i_q_tmp <= add_cast_3 + add_cast_4;
  END PROCESS MATLAB_Function_output;


  i_alpha <= std_logic_vector(i_alpha_tmp);

  i_beta <= std_logic_vector(i_beta_tmp);

  i_x <= std_logic_vector(i_x_tmp);

  i_y <= std_logic_vector(i_y_tmp);

  i_0_plus <= std_logic_vector(i_0_plus_tmp);

  i_0_minus <= std_logic_vector(i_0_minus_tmp);

  i_d <= std_logic_vector(i_d_tmp);

  i_q <= std_logic_vector(i_q_tmp);

END rtl;

