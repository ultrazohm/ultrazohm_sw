-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\Prediction_and_cost_function_FCS_MPC_6Phase_PMSM\hdlsrc\Prediction_and_cost_function_FCS_MPC_6Phase_PMSM\Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_MATLAB_Function.vhd
-- Created: 2022-08-25 09:54:30
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_MATLAB_Function
-- Source Path: Prediction_and_cost_function_FCS_MPC_6Phase_PMSM/HDL_DUT/MATLAB Function
-- Hierarchy Level: 1
-- 
-- Prediction of the d-, q-, x-, y-currents of the 6-Phase-PMSM with the finite control set 
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_HDL_DUT_pkg.ALL;

ENTITY Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_MATLAB_Function IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        SampleTime_div_Ld                 :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        SampleTime_div_Lq                 :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        SampleTime_div_Lx                 :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        SampleTime_div_Ly                 :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        id_k_1                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        iq_k_1                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        ix_k_1                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        iy_k_1                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        Rs                                :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        omega_el                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        Lq                                :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        Ld                                :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        psiPM                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        d_phase_voltage_per_switching_state :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        q_phase_voltage_per_switching_state :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        x_phase_voltage_per_switching_state :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        y_phase_voltage_per_switching_state :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        id_ref                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        iq_ref                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        ix_ref                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        iy_ref                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        J                                 :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
        );
END Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_MATLAB_Function;


ARCHITECTURE rtl OF Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_MATLAB_Function IS

  -- Component Declarations
  COMPONENT Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_sub_single
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_add_single
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    USE ENTITY work.Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single(rtl);

  FOR ALL : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_sub_single
    USE ENTITY work.Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_sub_single(rtl);

  FOR ALL : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_add_single
    USE ENTITY work.Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_add_single(rtl);

  -- Signals
  SIGNAL delayMatch29_reg                 : vector_of_std_logic_vector32(0 TO 59);  -- ufix32 [60]
  SIGNAL delayMatch29_reg_next            : vector_of_std_logic_vector32(0 TO 59);  -- ufix32 [60]
  SIGNAL id_ref_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch27_reg                 : vector_of_std_logic_vector32(0 TO 40);  -- ufix32 [41]
  SIGNAL delayMatch27_reg_next            : vector_of_std_logic_vector32(0 TO 40);  -- ufix32 [41]
  SIGNAL SampleTime_div_Ld_1              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch24_reg                 : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL delayMatch24_reg_next            : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL d_phase_voltage_per_switching_state_1 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL reduced_reg                      : vector_of_std_logic_vector32(0 TO 5);  -- ufix32 [6]
  SIGNAL reduced_reg_next                 : vector_of_std_logic_vector32(0 TO 5);  -- ufix32 [6]
  SIGNAL Rs_1                             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0                             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_1                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch26_reg                 : vector_of_std_logic_vector32(0 TO 4);  -- ufix32 [5]
  SIGNAL delayMatch26_reg_next            : vector_of_std_logic_vector32(0 TO 4);  -- ufix32 [5]
  SIGNAL out0_2                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch22_reg                 : vector_of_std_logic_vector32(0 TO 13);  -- ufix32 [14]
  SIGNAL delayMatch22_reg_next            : vector_of_std_logic_vector32(0 TO 13);  -- ufix32 [14]
  SIGNAL Lq_1                             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_3                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL reduced_reg_1                    : vector_of_std_logic_vector32(0 TO 15);  -- ufix32 [16]
  SIGNAL reduced_reg_next_1               : vector_of_std_logic_vector32(0 TO 15);  -- ufix32 [16]
  SIGNAL iq_k_1_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_4                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_5                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_6                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch28_reg                 : vector_of_std_logic_vector32(0 TO 42);  -- ufix32 [43]
  SIGNAL delayMatch28_reg_next            : vector_of_std_logic_vector32(0 TO 42);  -- ufix32 [43]
  SIGNAL id_k_1_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL id_k_2                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_7                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1                            : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch49_reg                 : vector_of_std_logic_vector32(0 TO 2);  -- ufix32 [3]
  SIGNAL delayMatch49_reg_next            : vector_of_std_logic_vector32(0 TO 2);  -- ufix32 [3]
  SIGNAL Out_1_1                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch38_reg                 : vector_of_std_logic_vector32(0 TO 62);  -- ufix32 [63]
  SIGNAL delayMatch38_reg_next            : vector_of_std_logic_vector32(0 TO 62);  -- ufix32 [63]
  SIGNAL iq_ref_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch36_reg                 : vector_of_std_logic_vector32(0 TO 43);  -- ufix32 [44]
  SIGNAL delayMatch36_reg_next            : vector_of_std_logic_vector32(0 TO 43);  -- ufix32 [44]
  SIGNAL SampleTime_div_Lq_1              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch31_reg                 : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL delayMatch31_reg_next            : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL q_phase_voltage_per_switching_state_1 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_8                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_9                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch35_reg                 : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL delayMatch35_reg_next            : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL out0_10                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch34_reg                 : vector_of_std_logic_vector32(0 TO 10);  -- ufix32 [11]
  SIGNAL delayMatch34_reg_next            : vector_of_std_logic_vector32(0 TO 10);  -- ufix32 [11]
  SIGNAL omega_el_1                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch33_reg                 : vector_of_std_logic_vector32(0 TO 13);  -- ufix32 [14]
  SIGNAL delayMatch33_reg_next            : vector_of_std_logic_vector32(0 TO 13);  -- ufix32 [14]
  SIGNAL psiPM_1                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch32_reg                 : vector_of_std_logic_vector32(0 TO 5);  -- ufix32 [6]
  SIGNAL delayMatch32_reg_next            : vector_of_std_logic_vector32(0 TO 5);  -- ufix32 [6]
  SIGNAL Ld_1                             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_11                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_12                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_13                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_14                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_15                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL reduced_reg_2                    : vector_of_std_logic_vector32(0 TO 29);  -- ufix32 [30]
  SIGNAL reduced_reg_next_2               : vector_of_std_logic_vector32(0 TO 29);  -- ufix32 [30]
  SIGNAL iq_k_1_2                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL iq_k_2                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_16                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_2                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_17                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch43_reg                 : vector_of_std_logic_vector32(0 TO 43);  -- ufix32 [44]
  SIGNAL delayMatch43_reg_next            : vector_of_std_logic_vector32(0 TO 43);  -- ufix32 [44]
  SIGNAL ix_ref_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch41_reg                 : vector_of_std_logic_vector32(0 TO 24);  -- ufix32 [25]
  SIGNAL delayMatch41_reg_next            : vector_of_std_logic_vector32(0 TO 24);  -- ufix32 [25]
  SIGNAL SampleTime_div_Lx_1              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch40_reg                 : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL delayMatch40_reg_next            : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL x_phase_voltage_per_switching_state_1 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_18                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_19                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_20                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch42_reg                 : vector_of_std_logic_vector32(0 TO 26);  -- ufix32 [27]
  SIGNAL delayMatch42_reg_next            : vector_of_std_logic_vector32(0 TO 26);  -- ufix32 [27]
  SIGNAL ix_k_1_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ix_k_2                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_21                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_3                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch50_reg                 : vector_of_std_logic_vector32(0 TO 29);  -- ufix32 [30]
  SIGNAL delayMatch50_reg_next            : vector_of_std_logic_vector32(0 TO 29);  -- ufix32 [30]
  SIGNAL Out_1_4                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_22                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch48_reg                 : vector_of_std_logic_vector32(0 TO 43);  -- ufix32 [44]
  SIGNAL delayMatch48_reg_next            : vector_of_std_logic_vector32(0 TO 43);  -- ufix32 [44]
  SIGNAL iy_ref_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch46_reg                 : vector_of_std_logic_vector32(0 TO 24);  -- ufix32 [25]
  SIGNAL delayMatch46_reg_next            : vector_of_std_logic_vector32(0 TO 24);  -- ufix32 [25]
  SIGNAL SampleTime_div_Ly_1              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch45_reg                 : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL delayMatch45_reg_next            : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL y_phase_voltage_per_switching_state_1 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_23                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_24                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_25                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch47_reg                 : vector_of_std_logic_vector32(0 TO 26);  -- ufix32 [27]
  SIGNAL delayMatch47_reg_next            : vector_of_std_logic_vector32(0 TO 26);  -- ufix32 [27]
  SIGNAL iy_k_1_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL iy_k_2                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL out0_26                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Out_1_5                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch51_reg                 : vector_of_std_logic_vector32(0 TO 40);  -- ufix32 [41]
  SIGNAL delayMatch51_reg_next            : vector_of_std_logic_vector32(0 TO 40);  -- ufix32 [41]
  SIGNAL Out_1_6                          : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  u_nfp_mul_comp : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => id_k_1,  -- single
              nfp_in2 => Rs_1,  -- single
              nfp_out => out0  -- single
              );

  u_nfp_sub_comp : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => d_phase_voltage_per_switching_state_1,  -- single
              nfp_in2 => out0,  -- single
              nfp_out => out0_1  -- single
              );

  u_nfp_mul_comp_1 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => omega_el,  -- single
              nfp_in2 => Lq_1,  -- single
              nfp_out => out0_3  -- single
              );

  u_nfp_mul_comp_2 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_3,  -- single
              nfp_in2 => iq_k_1_1,  -- single
              nfp_out => out0_4  -- single
              );

  u_nfp_add_comp : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_2,  -- single
              nfp_in2 => out0_4,  -- single
              nfp_out => out0_5  -- single
              );

  u_nfp_mul_comp_3 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime_div_Ld_1,  -- single
              nfp_in2 => out0_5,  -- single
              nfp_out => out0_6  -- single
              );

  u_nfp_add_comp_1 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_6,  -- single
              nfp_in2 => id_k_1_1,  -- single
              nfp_out => id_k_2  -- single
              );

  -- Calculation of the cost function
  u_nfp_sub_comp_1 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => id_ref_1,  -- single
              nfp_in2 => id_k_2,  -- single
              nfp_out => out0_7  -- single
              );

  u_nfp_mul_comp_4 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_7,  -- single
              nfp_in2 => out0_7,  -- single
              nfp_out => Out_1  -- single
              );

  u_nfp_mul_comp_5 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => iq_k_1,  -- single
              nfp_in2 => Rs_1,  -- single
              nfp_out => out0_8  -- single
              );

  u_nfp_sub_comp_2 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => q_phase_voltage_per_switching_state_1,  -- single
              nfp_in2 => out0_8,  -- single
              nfp_out => out0_9  -- single
              );

  u_nfp_mul_comp_6 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => id_k_1,  -- single
              nfp_in2 => Ld_1,  -- single
              nfp_out => out0_11  -- single
              );

  u_nfp_add_comp_2 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => psiPM_1,  -- single
              nfp_in2 => out0_11,  -- single
              nfp_out => out0_12  -- single
              );

  u_nfp_mul_comp_7 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => omega_el_1,  -- single
              nfp_in2 => out0_12,  -- single
              nfp_out => out0_13  -- single
              );

  u_nfp_sub_comp_3 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_10,  -- single
              nfp_in2 => out0_13,  -- single
              nfp_out => out0_14  -- single
              );

  u_nfp_mul_comp_8 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime_div_Lq_1,  -- single
              nfp_in2 => out0_14,  -- single
              nfp_out => out0_15  -- single
              );

  u_nfp_add_comp_3 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_15,  -- single
              nfp_in2 => iq_k_1_2,  -- single
              nfp_out => iq_k_2  -- single
              );

  u_nfp_sub_comp_4 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => iq_ref_1,  -- single
              nfp_in2 => iq_k_2,  -- single
              nfp_out => out0_16  -- single
              );

  u_nfp_mul_comp_9 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_16,  -- single
              nfp_in2 => out0_16,  -- single
              nfp_out => Out_1_2  -- single
              );

  u_nfp_add_comp_4 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => Out_1_1,  -- single
              nfp_in2 => Out_1_2,  -- single
              nfp_out => out0_17  -- single
              );

  u_nfp_mul_comp_10 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ix_k_1,  -- single
              nfp_in2 => Rs_1,  -- single
              nfp_out => out0_18  -- single
              );

  u_nfp_sub_comp_5 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => x_phase_voltage_per_switching_state_1,  -- single
              nfp_in2 => out0_18,  -- single
              nfp_out => out0_19  -- single
              );

  u_nfp_mul_comp_11 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime_div_Lx_1,  -- single
              nfp_in2 => out0_19,  -- single
              nfp_out => out0_20  -- single
              );

  u_nfp_add_comp_5 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_20,  -- single
              nfp_in2 => ix_k_1_1,  -- single
              nfp_out => ix_k_2  -- single
              );

  u_nfp_sub_comp_6 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => ix_ref_1,  -- single
              nfp_in2 => ix_k_2,  -- single
              nfp_out => out0_21  -- single
              );

  u_nfp_mul_comp_12 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_21,  -- single
              nfp_in2 => out0_21,  -- single
              nfp_out => Out_1_3  -- single
              );

  u_nfp_add_comp_6 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_17,  -- single
              nfp_in2 => Out_1_4,  -- single
              nfp_out => out0_22  -- single
              );

  u_nfp_mul_comp_13 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => iy_k_1,  -- single
              nfp_in2 => Rs_1,  -- single
              nfp_out => out0_23  -- single
              );

  u_nfp_sub_comp_7 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => y_phase_voltage_per_switching_state_1,  -- single
              nfp_in2 => out0_23,  -- single
              nfp_out => out0_24  -- single
              );

  u_nfp_mul_comp_14 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => SampleTime_div_Ly_1,  -- single
              nfp_in2 => out0_24,  -- single
              nfp_out => out0_25  -- single
              );

  u_nfp_add_comp_7 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_25,  -- single
              nfp_in2 => iy_k_1_1,  -- single
              nfp_out => iy_k_2  -- single
              );

  u_nfp_sub_comp_8 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_sub_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => iy_ref_1,  -- single
              nfp_in2 => iy_k_2,  -- single
              nfp_out => out0_26  -- single
              );

  u_nfp_mul_comp_15 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_26,  -- single
              nfp_in2 => out0_26,  -- single
              nfp_out => Out_1_5  -- single
              );

  u_nfp_add_comp_8 : Prediction_and_cost_FCS_MPC_6Phase_PMSM_src_nfp_add_single
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              nfp_in1 => out0_22,  -- single
              nfp_in2 => Out_1_6,  -- single
              nfp_out => J  -- single
              );

  delayMatch29_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch29_reg(0) <= X"00000000";
        delayMatch29_reg(1) <= X"00000000";
        delayMatch29_reg(2) <= X"00000000";
        delayMatch29_reg(3) <= X"00000000";
        delayMatch29_reg(4) <= X"00000000";
        delayMatch29_reg(5) <= X"00000000";
        delayMatch29_reg(6) <= X"00000000";
        delayMatch29_reg(7) <= X"00000000";
        delayMatch29_reg(8) <= X"00000000";
        delayMatch29_reg(9) <= X"00000000";
        delayMatch29_reg(10) <= X"00000000";
        delayMatch29_reg(11) <= X"00000000";
        delayMatch29_reg(12) <= X"00000000";
        delayMatch29_reg(13) <= X"00000000";
        delayMatch29_reg(14) <= X"00000000";
        delayMatch29_reg(15) <= X"00000000";
        delayMatch29_reg(16) <= X"00000000";
        delayMatch29_reg(17) <= X"00000000";
        delayMatch29_reg(18) <= X"00000000";
        delayMatch29_reg(19) <= X"00000000";
        delayMatch29_reg(20) <= X"00000000";
        delayMatch29_reg(21) <= X"00000000";
        delayMatch29_reg(22) <= X"00000000";
        delayMatch29_reg(23) <= X"00000000";
        delayMatch29_reg(24) <= X"00000000";
        delayMatch29_reg(25) <= X"00000000";
        delayMatch29_reg(26) <= X"00000000";
        delayMatch29_reg(27) <= X"00000000";
        delayMatch29_reg(28) <= X"00000000";
        delayMatch29_reg(29) <= X"00000000";
        delayMatch29_reg(30) <= X"00000000";
        delayMatch29_reg(31) <= X"00000000";
        delayMatch29_reg(32) <= X"00000000";
        delayMatch29_reg(33) <= X"00000000";
        delayMatch29_reg(34) <= X"00000000";
        delayMatch29_reg(35) <= X"00000000";
        delayMatch29_reg(36) <= X"00000000";
        delayMatch29_reg(37) <= X"00000000";
        delayMatch29_reg(38) <= X"00000000";
        delayMatch29_reg(39) <= X"00000000";
        delayMatch29_reg(40) <= X"00000000";
        delayMatch29_reg(41) <= X"00000000";
        delayMatch29_reg(42) <= X"00000000";
        delayMatch29_reg(43) <= X"00000000";
        delayMatch29_reg(44) <= X"00000000";
        delayMatch29_reg(45) <= X"00000000";
        delayMatch29_reg(46) <= X"00000000";
        delayMatch29_reg(47) <= X"00000000";
        delayMatch29_reg(48) <= X"00000000";
        delayMatch29_reg(49) <= X"00000000";
        delayMatch29_reg(50) <= X"00000000";
        delayMatch29_reg(51) <= X"00000000";
        delayMatch29_reg(52) <= X"00000000";
        delayMatch29_reg(53) <= X"00000000";
        delayMatch29_reg(54) <= X"00000000";
        delayMatch29_reg(55) <= X"00000000";
        delayMatch29_reg(56) <= X"00000000";
        delayMatch29_reg(57) <= X"00000000";
        delayMatch29_reg(58) <= X"00000000";
        delayMatch29_reg(59) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch29_reg(0) <= delayMatch29_reg_next(0);
        delayMatch29_reg(1) <= delayMatch29_reg_next(1);
        delayMatch29_reg(2) <= delayMatch29_reg_next(2);
        delayMatch29_reg(3) <= delayMatch29_reg_next(3);
        delayMatch29_reg(4) <= delayMatch29_reg_next(4);
        delayMatch29_reg(5) <= delayMatch29_reg_next(5);
        delayMatch29_reg(6) <= delayMatch29_reg_next(6);
        delayMatch29_reg(7) <= delayMatch29_reg_next(7);
        delayMatch29_reg(8) <= delayMatch29_reg_next(8);
        delayMatch29_reg(9) <= delayMatch29_reg_next(9);
        delayMatch29_reg(10) <= delayMatch29_reg_next(10);
        delayMatch29_reg(11) <= delayMatch29_reg_next(11);
        delayMatch29_reg(12) <= delayMatch29_reg_next(12);
        delayMatch29_reg(13) <= delayMatch29_reg_next(13);
        delayMatch29_reg(14) <= delayMatch29_reg_next(14);
        delayMatch29_reg(15) <= delayMatch29_reg_next(15);
        delayMatch29_reg(16) <= delayMatch29_reg_next(16);
        delayMatch29_reg(17) <= delayMatch29_reg_next(17);
        delayMatch29_reg(18) <= delayMatch29_reg_next(18);
        delayMatch29_reg(19) <= delayMatch29_reg_next(19);
        delayMatch29_reg(20) <= delayMatch29_reg_next(20);
        delayMatch29_reg(21) <= delayMatch29_reg_next(21);
        delayMatch29_reg(22) <= delayMatch29_reg_next(22);
        delayMatch29_reg(23) <= delayMatch29_reg_next(23);
        delayMatch29_reg(24) <= delayMatch29_reg_next(24);
        delayMatch29_reg(25) <= delayMatch29_reg_next(25);
        delayMatch29_reg(26) <= delayMatch29_reg_next(26);
        delayMatch29_reg(27) <= delayMatch29_reg_next(27);
        delayMatch29_reg(28) <= delayMatch29_reg_next(28);
        delayMatch29_reg(29) <= delayMatch29_reg_next(29);
        delayMatch29_reg(30) <= delayMatch29_reg_next(30);
        delayMatch29_reg(31) <= delayMatch29_reg_next(31);
        delayMatch29_reg(32) <= delayMatch29_reg_next(32);
        delayMatch29_reg(33) <= delayMatch29_reg_next(33);
        delayMatch29_reg(34) <= delayMatch29_reg_next(34);
        delayMatch29_reg(35) <= delayMatch29_reg_next(35);
        delayMatch29_reg(36) <= delayMatch29_reg_next(36);
        delayMatch29_reg(37) <= delayMatch29_reg_next(37);
        delayMatch29_reg(38) <= delayMatch29_reg_next(38);
        delayMatch29_reg(39) <= delayMatch29_reg_next(39);
        delayMatch29_reg(40) <= delayMatch29_reg_next(40);
        delayMatch29_reg(41) <= delayMatch29_reg_next(41);
        delayMatch29_reg(42) <= delayMatch29_reg_next(42);
        delayMatch29_reg(43) <= delayMatch29_reg_next(43);
        delayMatch29_reg(44) <= delayMatch29_reg_next(44);
        delayMatch29_reg(45) <= delayMatch29_reg_next(45);
        delayMatch29_reg(46) <= delayMatch29_reg_next(46);
        delayMatch29_reg(47) <= delayMatch29_reg_next(47);
        delayMatch29_reg(48) <= delayMatch29_reg_next(48);
        delayMatch29_reg(49) <= delayMatch29_reg_next(49);
        delayMatch29_reg(50) <= delayMatch29_reg_next(50);
        delayMatch29_reg(51) <= delayMatch29_reg_next(51);
        delayMatch29_reg(52) <= delayMatch29_reg_next(52);
        delayMatch29_reg(53) <= delayMatch29_reg_next(53);
        delayMatch29_reg(54) <= delayMatch29_reg_next(54);
        delayMatch29_reg(55) <= delayMatch29_reg_next(55);
        delayMatch29_reg(56) <= delayMatch29_reg_next(56);
        delayMatch29_reg(57) <= delayMatch29_reg_next(57);
        delayMatch29_reg(58) <= delayMatch29_reg_next(58);
        delayMatch29_reg(59) <= delayMatch29_reg_next(59);
      END IF;
    END IF;
  END PROCESS delayMatch29_process;

  id_ref_1 <= delayMatch29_reg(59);
  delayMatch29_reg_next(0) <= id_ref;
  delayMatch29_reg_next(1) <= delayMatch29_reg(0);
  delayMatch29_reg_next(2) <= delayMatch29_reg(1);
  delayMatch29_reg_next(3) <= delayMatch29_reg(2);
  delayMatch29_reg_next(4) <= delayMatch29_reg(3);
  delayMatch29_reg_next(5) <= delayMatch29_reg(4);
  delayMatch29_reg_next(6) <= delayMatch29_reg(5);
  delayMatch29_reg_next(7) <= delayMatch29_reg(6);
  delayMatch29_reg_next(8) <= delayMatch29_reg(7);
  delayMatch29_reg_next(9) <= delayMatch29_reg(8);
  delayMatch29_reg_next(10) <= delayMatch29_reg(9);
  delayMatch29_reg_next(11) <= delayMatch29_reg(10);
  delayMatch29_reg_next(12) <= delayMatch29_reg(11);
  delayMatch29_reg_next(13) <= delayMatch29_reg(12);
  delayMatch29_reg_next(14) <= delayMatch29_reg(13);
  delayMatch29_reg_next(15) <= delayMatch29_reg(14);
  delayMatch29_reg_next(16) <= delayMatch29_reg(15);
  delayMatch29_reg_next(17) <= delayMatch29_reg(16);
  delayMatch29_reg_next(18) <= delayMatch29_reg(17);
  delayMatch29_reg_next(19) <= delayMatch29_reg(18);
  delayMatch29_reg_next(20) <= delayMatch29_reg(19);
  delayMatch29_reg_next(21) <= delayMatch29_reg(20);
  delayMatch29_reg_next(22) <= delayMatch29_reg(21);
  delayMatch29_reg_next(23) <= delayMatch29_reg(22);
  delayMatch29_reg_next(24) <= delayMatch29_reg(23);
  delayMatch29_reg_next(25) <= delayMatch29_reg(24);
  delayMatch29_reg_next(26) <= delayMatch29_reg(25);
  delayMatch29_reg_next(27) <= delayMatch29_reg(26);
  delayMatch29_reg_next(28) <= delayMatch29_reg(27);
  delayMatch29_reg_next(29) <= delayMatch29_reg(28);
  delayMatch29_reg_next(30) <= delayMatch29_reg(29);
  delayMatch29_reg_next(31) <= delayMatch29_reg(30);
  delayMatch29_reg_next(32) <= delayMatch29_reg(31);
  delayMatch29_reg_next(33) <= delayMatch29_reg(32);
  delayMatch29_reg_next(34) <= delayMatch29_reg(33);
  delayMatch29_reg_next(35) <= delayMatch29_reg(34);
  delayMatch29_reg_next(36) <= delayMatch29_reg(35);
  delayMatch29_reg_next(37) <= delayMatch29_reg(36);
  delayMatch29_reg_next(38) <= delayMatch29_reg(37);
  delayMatch29_reg_next(39) <= delayMatch29_reg(38);
  delayMatch29_reg_next(40) <= delayMatch29_reg(39);
  delayMatch29_reg_next(41) <= delayMatch29_reg(40);
  delayMatch29_reg_next(42) <= delayMatch29_reg(41);
  delayMatch29_reg_next(43) <= delayMatch29_reg(42);
  delayMatch29_reg_next(44) <= delayMatch29_reg(43);
  delayMatch29_reg_next(45) <= delayMatch29_reg(44);
  delayMatch29_reg_next(46) <= delayMatch29_reg(45);
  delayMatch29_reg_next(47) <= delayMatch29_reg(46);
  delayMatch29_reg_next(48) <= delayMatch29_reg(47);
  delayMatch29_reg_next(49) <= delayMatch29_reg(48);
  delayMatch29_reg_next(50) <= delayMatch29_reg(49);
  delayMatch29_reg_next(51) <= delayMatch29_reg(50);
  delayMatch29_reg_next(52) <= delayMatch29_reg(51);
  delayMatch29_reg_next(53) <= delayMatch29_reg(52);
  delayMatch29_reg_next(54) <= delayMatch29_reg(53);
  delayMatch29_reg_next(55) <= delayMatch29_reg(54);
  delayMatch29_reg_next(56) <= delayMatch29_reg(55);
  delayMatch29_reg_next(57) <= delayMatch29_reg(56);
  delayMatch29_reg_next(58) <= delayMatch29_reg(57);
  delayMatch29_reg_next(59) <= delayMatch29_reg(58);

  delayMatch27_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch27_reg(0) <= X"00000000";
        delayMatch27_reg(1) <= X"00000000";
        delayMatch27_reg(2) <= X"00000000";
        delayMatch27_reg(3) <= X"00000000";
        delayMatch27_reg(4) <= X"00000000";
        delayMatch27_reg(5) <= X"00000000";
        delayMatch27_reg(6) <= X"00000000";
        delayMatch27_reg(7) <= X"00000000";
        delayMatch27_reg(8) <= X"00000000";
        delayMatch27_reg(9) <= X"00000000";
        delayMatch27_reg(10) <= X"00000000";
        delayMatch27_reg(11) <= X"00000000";
        delayMatch27_reg(12) <= X"00000000";
        delayMatch27_reg(13) <= X"00000000";
        delayMatch27_reg(14) <= X"00000000";
        delayMatch27_reg(15) <= X"00000000";
        delayMatch27_reg(16) <= X"00000000";
        delayMatch27_reg(17) <= X"00000000";
        delayMatch27_reg(18) <= X"00000000";
        delayMatch27_reg(19) <= X"00000000";
        delayMatch27_reg(20) <= X"00000000";
        delayMatch27_reg(21) <= X"00000000";
        delayMatch27_reg(22) <= X"00000000";
        delayMatch27_reg(23) <= X"00000000";
        delayMatch27_reg(24) <= X"00000000";
        delayMatch27_reg(25) <= X"00000000";
        delayMatch27_reg(26) <= X"00000000";
        delayMatch27_reg(27) <= X"00000000";
        delayMatch27_reg(28) <= X"00000000";
        delayMatch27_reg(29) <= X"00000000";
        delayMatch27_reg(30) <= X"00000000";
        delayMatch27_reg(31) <= X"00000000";
        delayMatch27_reg(32) <= X"00000000";
        delayMatch27_reg(33) <= X"00000000";
        delayMatch27_reg(34) <= X"00000000";
        delayMatch27_reg(35) <= X"00000000";
        delayMatch27_reg(36) <= X"00000000";
        delayMatch27_reg(37) <= X"00000000";
        delayMatch27_reg(38) <= X"00000000";
        delayMatch27_reg(39) <= X"00000000";
        delayMatch27_reg(40) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch27_reg(0) <= delayMatch27_reg_next(0);
        delayMatch27_reg(1) <= delayMatch27_reg_next(1);
        delayMatch27_reg(2) <= delayMatch27_reg_next(2);
        delayMatch27_reg(3) <= delayMatch27_reg_next(3);
        delayMatch27_reg(4) <= delayMatch27_reg_next(4);
        delayMatch27_reg(5) <= delayMatch27_reg_next(5);
        delayMatch27_reg(6) <= delayMatch27_reg_next(6);
        delayMatch27_reg(7) <= delayMatch27_reg_next(7);
        delayMatch27_reg(8) <= delayMatch27_reg_next(8);
        delayMatch27_reg(9) <= delayMatch27_reg_next(9);
        delayMatch27_reg(10) <= delayMatch27_reg_next(10);
        delayMatch27_reg(11) <= delayMatch27_reg_next(11);
        delayMatch27_reg(12) <= delayMatch27_reg_next(12);
        delayMatch27_reg(13) <= delayMatch27_reg_next(13);
        delayMatch27_reg(14) <= delayMatch27_reg_next(14);
        delayMatch27_reg(15) <= delayMatch27_reg_next(15);
        delayMatch27_reg(16) <= delayMatch27_reg_next(16);
        delayMatch27_reg(17) <= delayMatch27_reg_next(17);
        delayMatch27_reg(18) <= delayMatch27_reg_next(18);
        delayMatch27_reg(19) <= delayMatch27_reg_next(19);
        delayMatch27_reg(20) <= delayMatch27_reg_next(20);
        delayMatch27_reg(21) <= delayMatch27_reg_next(21);
        delayMatch27_reg(22) <= delayMatch27_reg_next(22);
        delayMatch27_reg(23) <= delayMatch27_reg_next(23);
        delayMatch27_reg(24) <= delayMatch27_reg_next(24);
        delayMatch27_reg(25) <= delayMatch27_reg_next(25);
        delayMatch27_reg(26) <= delayMatch27_reg_next(26);
        delayMatch27_reg(27) <= delayMatch27_reg_next(27);
        delayMatch27_reg(28) <= delayMatch27_reg_next(28);
        delayMatch27_reg(29) <= delayMatch27_reg_next(29);
        delayMatch27_reg(30) <= delayMatch27_reg_next(30);
        delayMatch27_reg(31) <= delayMatch27_reg_next(31);
        delayMatch27_reg(32) <= delayMatch27_reg_next(32);
        delayMatch27_reg(33) <= delayMatch27_reg_next(33);
        delayMatch27_reg(34) <= delayMatch27_reg_next(34);
        delayMatch27_reg(35) <= delayMatch27_reg_next(35);
        delayMatch27_reg(36) <= delayMatch27_reg_next(36);
        delayMatch27_reg(37) <= delayMatch27_reg_next(37);
        delayMatch27_reg(38) <= delayMatch27_reg_next(38);
        delayMatch27_reg(39) <= delayMatch27_reg_next(39);
        delayMatch27_reg(40) <= delayMatch27_reg_next(40);
      END IF;
    END IF;
  END PROCESS delayMatch27_process;

  SampleTime_div_Ld_1 <= delayMatch27_reg(40);
  delayMatch27_reg_next(0) <= SampleTime_div_Ld;
  delayMatch27_reg_next(1) <= delayMatch27_reg(0);
  delayMatch27_reg_next(2) <= delayMatch27_reg(1);
  delayMatch27_reg_next(3) <= delayMatch27_reg(2);
  delayMatch27_reg_next(4) <= delayMatch27_reg(3);
  delayMatch27_reg_next(5) <= delayMatch27_reg(4);
  delayMatch27_reg_next(6) <= delayMatch27_reg(5);
  delayMatch27_reg_next(7) <= delayMatch27_reg(6);
  delayMatch27_reg_next(8) <= delayMatch27_reg(7);
  delayMatch27_reg_next(9) <= delayMatch27_reg(8);
  delayMatch27_reg_next(10) <= delayMatch27_reg(9);
  delayMatch27_reg_next(11) <= delayMatch27_reg(10);
  delayMatch27_reg_next(12) <= delayMatch27_reg(11);
  delayMatch27_reg_next(13) <= delayMatch27_reg(12);
  delayMatch27_reg_next(14) <= delayMatch27_reg(13);
  delayMatch27_reg_next(15) <= delayMatch27_reg(14);
  delayMatch27_reg_next(16) <= delayMatch27_reg(15);
  delayMatch27_reg_next(17) <= delayMatch27_reg(16);
  delayMatch27_reg_next(18) <= delayMatch27_reg(17);
  delayMatch27_reg_next(19) <= delayMatch27_reg(18);
  delayMatch27_reg_next(20) <= delayMatch27_reg(19);
  delayMatch27_reg_next(21) <= delayMatch27_reg(20);
  delayMatch27_reg_next(22) <= delayMatch27_reg(21);
  delayMatch27_reg_next(23) <= delayMatch27_reg(22);
  delayMatch27_reg_next(24) <= delayMatch27_reg(23);
  delayMatch27_reg_next(25) <= delayMatch27_reg(24);
  delayMatch27_reg_next(26) <= delayMatch27_reg(25);
  delayMatch27_reg_next(27) <= delayMatch27_reg(26);
  delayMatch27_reg_next(28) <= delayMatch27_reg(27);
  delayMatch27_reg_next(29) <= delayMatch27_reg(28);
  delayMatch27_reg_next(30) <= delayMatch27_reg(29);
  delayMatch27_reg_next(31) <= delayMatch27_reg(30);
  delayMatch27_reg_next(32) <= delayMatch27_reg(31);
  delayMatch27_reg_next(33) <= delayMatch27_reg(32);
  delayMatch27_reg_next(34) <= delayMatch27_reg(33);
  delayMatch27_reg_next(35) <= delayMatch27_reg(34);
  delayMatch27_reg_next(36) <= delayMatch27_reg(35);
  delayMatch27_reg_next(37) <= delayMatch27_reg(36);
  delayMatch27_reg_next(38) <= delayMatch27_reg(37);
  delayMatch27_reg_next(39) <= delayMatch27_reg(38);
  delayMatch27_reg_next(40) <= delayMatch27_reg(39);

  delayMatch24_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch24_reg(0) <= X"00000000";
        delayMatch24_reg(1) <= X"00000000";
        delayMatch24_reg(2) <= X"00000000";
        delayMatch24_reg(3) <= X"00000000";
        delayMatch24_reg(4) <= X"00000000";
        delayMatch24_reg(5) <= X"00000000";
        delayMatch24_reg(6) <= X"00000000";
        delayMatch24_reg(7) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch24_reg(0) <= delayMatch24_reg_next(0);
        delayMatch24_reg(1) <= delayMatch24_reg_next(1);
        delayMatch24_reg(2) <= delayMatch24_reg_next(2);
        delayMatch24_reg(3) <= delayMatch24_reg_next(3);
        delayMatch24_reg(4) <= delayMatch24_reg_next(4);
        delayMatch24_reg(5) <= delayMatch24_reg_next(5);
        delayMatch24_reg(6) <= delayMatch24_reg_next(6);
        delayMatch24_reg(7) <= delayMatch24_reg_next(7);
      END IF;
    END IF;
  END PROCESS delayMatch24_process;

  d_phase_voltage_per_switching_state_1 <= delayMatch24_reg(7);
  delayMatch24_reg_next(0) <= d_phase_voltage_per_switching_state;
  delayMatch24_reg_next(1) <= delayMatch24_reg(0);
  delayMatch24_reg_next(2) <= delayMatch24_reg(1);
  delayMatch24_reg_next(3) <= delayMatch24_reg(2);
  delayMatch24_reg_next(4) <= delayMatch24_reg(3);
  delayMatch24_reg_next(5) <= delayMatch24_reg(4);
  delayMatch24_reg_next(6) <= delayMatch24_reg(5);
  delayMatch24_reg_next(7) <= delayMatch24_reg(6);

  reduced_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reduced_reg(0) <= X"00000000";
        reduced_reg(1) <= X"00000000";
        reduced_reg(2) <= X"00000000";
        reduced_reg(3) <= X"00000000";
        reduced_reg(4) <= X"00000000";
        reduced_reg(5) <= X"00000000";
      ELSIF enb = '1' THEN
        reduced_reg(0) <= reduced_reg_next(0);
        reduced_reg(1) <= reduced_reg_next(1);
        reduced_reg(2) <= reduced_reg_next(2);
        reduced_reg(3) <= reduced_reg_next(3);
        reduced_reg(4) <= reduced_reg_next(4);
        reduced_reg(5) <= reduced_reg_next(5);
      END IF;
    END IF;
  END PROCESS reduced_process;

  Rs_1 <= reduced_reg(5);
  reduced_reg_next(0) <= Rs;
  reduced_reg_next(1) <= reduced_reg(0);
  reduced_reg_next(2) <= reduced_reg(1);
  reduced_reg_next(3) <= reduced_reg(2);
  reduced_reg_next(4) <= reduced_reg(3);
  reduced_reg_next(5) <= reduced_reg(4);

  delayMatch26_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch26_reg(0) <= X"00000000";
        delayMatch26_reg(1) <= X"00000000";
        delayMatch26_reg(2) <= X"00000000";
        delayMatch26_reg(3) <= X"00000000";
        delayMatch26_reg(4) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch26_reg(0) <= delayMatch26_reg_next(0);
        delayMatch26_reg(1) <= delayMatch26_reg_next(1);
        delayMatch26_reg(2) <= delayMatch26_reg_next(2);
        delayMatch26_reg(3) <= delayMatch26_reg_next(3);
        delayMatch26_reg(4) <= delayMatch26_reg_next(4);
      END IF;
    END IF;
  END PROCESS delayMatch26_process;

  out0_2 <= delayMatch26_reg(4);
  delayMatch26_reg_next(0) <= out0_1;
  delayMatch26_reg_next(1) <= delayMatch26_reg(0);
  delayMatch26_reg_next(2) <= delayMatch26_reg(1);
  delayMatch26_reg_next(3) <= delayMatch26_reg(2);
  delayMatch26_reg_next(4) <= delayMatch26_reg(3);

  delayMatch22_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch22_reg(0) <= X"00000000";
        delayMatch22_reg(1) <= X"00000000";
        delayMatch22_reg(2) <= X"00000000";
        delayMatch22_reg(3) <= X"00000000";
        delayMatch22_reg(4) <= X"00000000";
        delayMatch22_reg(5) <= X"00000000";
        delayMatch22_reg(6) <= X"00000000";
        delayMatch22_reg(7) <= X"00000000";
        delayMatch22_reg(8) <= X"00000000";
        delayMatch22_reg(9) <= X"00000000";
        delayMatch22_reg(10) <= X"00000000";
        delayMatch22_reg(11) <= X"00000000";
        delayMatch22_reg(12) <= X"00000000";
        delayMatch22_reg(13) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch22_reg(0) <= delayMatch22_reg_next(0);
        delayMatch22_reg(1) <= delayMatch22_reg_next(1);
        delayMatch22_reg(2) <= delayMatch22_reg_next(2);
        delayMatch22_reg(3) <= delayMatch22_reg_next(3);
        delayMatch22_reg(4) <= delayMatch22_reg_next(4);
        delayMatch22_reg(5) <= delayMatch22_reg_next(5);
        delayMatch22_reg(6) <= delayMatch22_reg_next(6);
        delayMatch22_reg(7) <= delayMatch22_reg_next(7);
        delayMatch22_reg(8) <= delayMatch22_reg_next(8);
        delayMatch22_reg(9) <= delayMatch22_reg_next(9);
        delayMatch22_reg(10) <= delayMatch22_reg_next(10);
        delayMatch22_reg(11) <= delayMatch22_reg_next(11);
        delayMatch22_reg(12) <= delayMatch22_reg_next(12);
        delayMatch22_reg(13) <= delayMatch22_reg_next(13);
      END IF;
    END IF;
  END PROCESS delayMatch22_process;

  Lq_1 <= delayMatch22_reg(13);
  delayMatch22_reg_next(0) <= Lq;
  delayMatch22_reg_next(1) <= delayMatch22_reg(0);
  delayMatch22_reg_next(2) <= delayMatch22_reg(1);
  delayMatch22_reg_next(3) <= delayMatch22_reg(2);
  delayMatch22_reg_next(4) <= delayMatch22_reg(3);
  delayMatch22_reg_next(5) <= delayMatch22_reg(4);
  delayMatch22_reg_next(6) <= delayMatch22_reg(5);
  delayMatch22_reg_next(7) <= delayMatch22_reg(6);
  delayMatch22_reg_next(8) <= delayMatch22_reg(7);
  delayMatch22_reg_next(9) <= delayMatch22_reg(8);
  delayMatch22_reg_next(10) <= delayMatch22_reg(9);
  delayMatch22_reg_next(11) <= delayMatch22_reg(10);
  delayMatch22_reg_next(12) <= delayMatch22_reg(11);
  delayMatch22_reg_next(13) <= delayMatch22_reg(12);

  reduced_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reduced_reg_1(0) <= X"00000000";
        reduced_reg_1(1) <= X"00000000";
        reduced_reg_1(2) <= X"00000000";
        reduced_reg_1(3) <= X"00000000";
        reduced_reg_1(4) <= X"00000000";
        reduced_reg_1(5) <= X"00000000";
        reduced_reg_1(6) <= X"00000000";
        reduced_reg_1(7) <= X"00000000";
        reduced_reg_1(8) <= X"00000000";
        reduced_reg_1(9) <= X"00000000";
        reduced_reg_1(10) <= X"00000000";
        reduced_reg_1(11) <= X"00000000";
        reduced_reg_1(12) <= X"00000000";
        reduced_reg_1(13) <= X"00000000";
        reduced_reg_1(14) <= X"00000000";
        reduced_reg_1(15) <= X"00000000";
      ELSIF enb = '1' THEN
        reduced_reg_1(0) <= reduced_reg_next_1(0);
        reduced_reg_1(1) <= reduced_reg_next_1(1);
        reduced_reg_1(2) <= reduced_reg_next_1(2);
        reduced_reg_1(3) <= reduced_reg_next_1(3);
        reduced_reg_1(4) <= reduced_reg_next_1(4);
        reduced_reg_1(5) <= reduced_reg_next_1(5);
        reduced_reg_1(6) <= reduced_reg_next_1(6);
        reduced_reg_1(7) <= reduced_reg_next_1(7);
        reduced_reg_1(8) <= reduced_reg_next_1(8);
        reduced_reg_1(9) <= reduced_reg_next_1(9);
        reduced_reg_1(10) <= reduced_reg_next_1(10);
        reduced_reg_1(11) <= reduced_reg_next_1(11);
        reduced_reg_1(12) <= reduced_reg_next_1(12);
        reduced_reg_1(13) <= reduced_reg_next_1(13);
        reduced_reg_1(14) <= reduced_reg_next_1(14);
        reduced_reg_1(15) <= reduced_reg_next_1(15);
      END IF;
    END IF;
  END PROCESS reduced_1_process;

  iq_k_1_1 <= reduced_reg_1(15);
  reduced_reg_next_1(0) <= iq_k_1;
  reduced_reg_next_1(1) <= reduced_reg_1(0);
  reduced_reg_next_1(2) <= reduced_reg_1(1);
  reduced_reg_next_1(3) <= reduced_reg_1(2);
  reduced_reg_next_1(4) <= reduced_reg_1(3);
  reduced_reg_next_1(5) <= reduced_reg_1(4);
  reduced_reg_next_1(6) <= reduced_reg_1(5);
  reduced_reg_next_1(7) <= reduced_reg_1(6);
  reduced_reg_next_1(8) <= reduced_reg_1(7);
  reduced_reg_next_1(9) <= reduced_reg_1(8);
  reduced_reg_next_1(10) <= reduced_reg_1(9);
  reduced_reg_next_1(11) <= reduced_reg_1(10);
  reduced_reg_next_1(12) <= reduced_reg_1(11);
  reduced_reg_next_1(13) <= reduced_reg_1(12);
  reduced_reg_next_1(14) <= reduced_reg_1(13);
  reduced_reg_next_1(15) <= reduced_reg_1(14);

  delayMatch28_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch28_reg(0) <= X"00000000";
        delayMatch28_reg(1) <= X"00000000";
        delayMatch28_reg(2) <= X"00000000";
        delayMatch28_reg(3) <= X"00000000";
        delayMatch28_reg(4) <= X"00000000";
        delayMatch28_reg(5) <= X"00000000";
        delayMatch28_reg(6) <= X"00000000";
        delayMatch28_reg(7) <= X"00000000";
        delayMatch28_reg(8) <= X"00000000";
        delayMatch28_reg(9) <= X"00000000";
        delayMatch28_reg(10) <= X"00000000";
        delayMatch28_reg(11) <= X"00000000";
        delayMatch28_reg(12) <= X"00000000";
        delayMatch28_reg(13) <= X"00000000";
        delayMatch28_reg(14) <= X"00000000";
        delayMatch28_reg(15) <= X"00000000";
        delayMatch28_reg(16) <= X"00000000";
        delayMatch28_reg(17) <= X"00000000";
        delayMatch28_reg(18) <= X"00000000";
        delayMatch28_reg(19) <= X"00000000";
        delayMatch28_reg(20) <= X"00000000";
        delayMatch28_reg(21) <= X"00000000";
        delayMatch28_reg(22) <= X"00000000";
        delayMatch28_reg(23) <= X"00000000";
        delayMatch28_reg(24) <= X"00000000";
        delayMatch28_reg(25) <= X"00000000";
        delayMatch28_reg(26) <= X"00000000";
        delayMatch28_reg(27) <= X"00000000";
        delayMatch28_reg(28) <= X"00000000";
        delayMatch28_reg(29) <= X"00000000";
        delayMatch28_reg(30) <= X"00000000";
        delayMatch28_reg(31) <= X"00000000";
        delayMatch28_reg(32) <= X"00000000";
        delayMatch28_reg(33) <= X"00000000";
        delayMatch28_reg(34) <= X"00000000";
        delayMatch28_reg(35) <= X"00000000";
        delayMatch28_reg(36) <= X"00000000";
        delayMatch28_reg(37) <= X"00000000";
        delayMatch28_reg(38) <= X"00000000";
        delayMatch28_reg(39) <= X"00000000";
        delayMatch28_reg(40) <= X"00000000";
        delayMatch28_reg(41) <= X"00000000";
        delayMatch28_reg(42) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch28_reg(0) <= delayMatch28_reg_next(0);
        delayMatch28_reg(1) <= delayMatch28_reg_next(1);
        delayMatch28_reg(2) <= delayMatch28_reg_next(2);
        delayMatch28_reg(3) <= delayMatch28_reg_next(3);
        delayMatch28_reg(4) <= delayMatch28_reg_next(4);
        delayMatch28_reg(5) <= delayMatch28_reg_next(5);
        delayMatch28_reg(6) <= delayMatch28_reg_next(6);
        delayMatch28_reg(7) <= delayMatch28_reg_next(7);
        delayMatch28_reg(8) <= delayMatch28_reg_next(8);
        delayMatch28_reg(9) <= delayMatch28_reg_next(9);
        delayMatch28_reg(10) <= delayMatch28_reg_next(10);
        delayMatch28_reg(11) <= delayMatch28_reg_next(11);
        delayMatch28_reg(12) <= delayMatch28_reg_next(12);
        delayMatch28_reg(13) <= delayMatch28_reg_next(13);
        delayMatch28_reg(14) <= delayMatch28_reg_next(14);
        delayMatch28_reg(15) <= delayMatch28_reg_next(15);
        delayMatch28_reg(16) <= delayMatch28_reg_next(16);
        delayMatch28_reg(17) <= delayMatch28_reg_next(17);
        delayMatch28_reg(18) <= delayMatch28_reg_next(18);
        delayMatch28_reg(19) <= delayMatch28_reg_next(19);
        delayMatch28_reg(20) <= delayMatch28_reg_next(20);
        delayMatch28_reg(21) <= delayMatch28_reg_next(21);
        delayMatch28_reg(22) <= delayMatch28_reg_next(22);
        delayMatch28_reg(23) <= delayMatch28_reg_next(23);
        delayMatch28_reg(24) <= delayMatch28_reg_next(24);
        delayMatch28_reg(25) <= delayMatch28_reg_next(25);
        delayMatch28_reg(26) <= delayMatch28_reg_next(26);
        delayMatch28_reg(27) <= delayMatch28_reg_next(27);
        delayMatch28_reg(28) <= delayMatch28_reg_next(28);
        delayMatch28_reg(29) <= delayMatch28_reg_next(29);
        delayMatch28_reg(30) <= delayMatch28_reg_next(30);
        delayMatch28_reg(31) <= delayMatch28_reg_next(31);
        delayMatch28_reg(32) <= delayMatch28_reg_next(32);
        delayMatch28_reg(33) <= delayMatch28_reg_next(33);
        delayMatch28_reg(34) <= delayMatch28_reg_next(34);
        delayMatch28_reg(35) <= delayMatch28_reg_next(35);
        delayMatch28_reg(36) <= delayMatch28_reg_next(36);
        delayMatch28_reg(37) <= delayMatch28_reg_next(37);
        delayMatch28_reg(38) <= delayMatch28_reg_next(38);
        delayMatch28_reg(39) <= delayMatch28_reg_next(39);
        delayMatch28_reg(40) <= delayMatch28_reg_next(40);
        delayMatch28_reg(41) <= delayMatch28_reg_next(41);
        delayMatch28_reg(42) <= delayMatch28_reg_next(42);
      END IF;
    END IF;
  END PROCESS delayMatch28_process;

  id_k_1_1 <= delayMatch28_reg(42);
  delayMatch28_reg_next(0) <= id_k_1;
  delayMatch28_reg_next(1) <= delayMatch28_reg(0);
  delayMatch28_reg_next(2) <= delayMatch28_reg(1);
  delayMatch28_reg_next(3) <= delayMatch28_reg(2);
  delayMatch28_reg_next(4) <= delayMatch28_reg(3);
  delayMatch28_reg_next(5) <= delayMatch28_reg(4);
  delayMatch28_reg_next(6) <= delayMatch28_reg(5);
  delayMatch28_reg_next(7) <= delayMatch28_reg(6);
  delayMatch28_reg_next(8) <= delayMatch28_reg(7);
  delayMatch28_reg_next(9) <= delayMatch28_reg(8);
  delayMatch28_reg_next(10) <= delayMatch28_reg(9);
  delayMatch28_reg_next(11) <= delayMatch28_reg(10);
  delayMatch28_reg_next(12) <= delayMatch28_reg(11);
  delayMatch28_reg_next(13) <= delayMatch28_reg(12);
  delayMatch28_reg_next(14) <= delayMatch28_reg(13);
  delayMatch28_reg_next(15) <= delayMatch28_reg(14);
  delayMatch28_reg_next(16) <= delayMatch28_reg(15);
  delayMatch28_reg_next(17) <= delayMatch28_reg(16);
  delayMatch28_reg_next(18) <= delayMatch28_reg(17);
  delayMatch28_reg_next(19) <= delayMatch28_reg(18);
  delayMatch28_reg_next(20) <= delayMatch28_reg(19);
  delayMatch28_reg_next(21) <= delayMatch28_reg(20);
  delayMatch28_reg_next(22) <= delayMatch28_reg(21);
  delayMatch28_reg_next(23) <= delayMatch28_reg(22);
  delayMatch28_reg_next(24) <= delayMatch28_reg(23);
  delayMatch28_reg_next(25) <= delayMatch28_reg(24);
  delayMatch28_reg_next(26) <= delayMatch28_reg(25);
  delayMatch28_reg_next(27) <= delayMatch28_reg(26);
  delayMatch28_reg_next(28) <= delayMatch28_reg(27);
  delayMatch28_reg_next(29) <= delayMatch28_reg(28);
  delayMatch28_reg_next(30) <= delayMatch28_reg(29);
  delayMatch28_reg_next(31) <= delayMatch28_reg(30);
  delayMatch28_reg_next(32) <= delayMatch28_reg(31);
  delayMatch28_reg_next(33) <= delayMatch28_reg(32);
  delayMatch28_reg_next(34) <= delayMatch28_reg(33);
  delayMatch28_reg_next(35) <= delayMatch28_reg(34);
  delayMatch28_reg_next(36) <= delayMatch28_reg(35);
  delayMatch28_reg_next(37) <= delayMatch28_reg(36);
  delayMatch28_reg_next(38) <= delayMatch28_reg(37);
  delayMatch28_reg_next(39) <= delayMatch28_reg(38);
  delayMatch28_reg_next(40) <= delayMatch28_reg(39);
  delayMatch28_reg_next(41) <= delayMatch28_reg(40);
  delayMatch28_reg_next(42) <= delayMatch28_reg(41);

  delayMatch49_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch49_reg(0) <= X"00000000";
        delayMatch49_reg(1) <= X"00000000";
        delayMatch49_reg(2) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch49_reg(0) <= delayMatch49_reg_next(0);
        delayMatch49_reg(1) <= delayMatch49_reg_next(1);
        delayMatch49_reg(2) <= delayMatch49_reg_next(2);
      END IF;
    END IF;
  END PROCESS delayMatch49_process;

  Out_1_1 <= delayMatch49_reg(2);
  delayMatch49_reg_next(0) <= Out_1;
  delayMatch49_reg_next(1) <= delayMatch49_reg(0);
  delayMatch49_reg_next(2) <= delayMatch49_reg(1);

  delayMatch38_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch38_reg(0) <= X"00000000";
        delayMatch38_reg(1) <= X"00000000";
        delayMatch38_reg(2) <= X"00000000";
        delayMatch38_reg(3) <= X"00000000";
        delayMatch38_reg(4) <= X"00000000";
        delayMatch38_reg(5) <= X"00000000";
        delayMatch38_reg(6) <= X"00000000";
        delayMatch38_reg(7) <= X"00000000";
        delayMatch38_reg(8) <= X"00000000";
        delayMatch38_reg(9) <= X"00000000";
        delayMatch38_reg(10) <= X"00000000";
        delayMatch38_reg(11) <= X"00000000";
        delayMatch38_reg(12) <= X"00000000";
        delayMatch38_reg(13) <= X"00000000";
        delayMatch38_reg(14) <= X"00000000";
        delayMatch38_reg(15) <= X"00000000";
        delayMatch38_reg(16) <= X"00000000";
        delayMatch38_reg(17) <= X"00000000";
        delayMatch38_reg(18) <= X"00000000";
        delayMatch38_reg(19) <= X"00000000";
        delayMatch38_reg(20) <= X"00000000";
        delayMatch38_reg(21) <= X"00000000";
        delayMatch38_reg(22) <= X"00000000";
        delayMatch38_reg(23) <= X"00000000";
        delayMatch38_reg(24) <= X"00000000";
        delayMatch38_reg(25) <= X"00000000";
        delayMatch38_reg(26) <= X"00000000";
        delayMatch38_reg(27) <= X"00000000";
        delayMatch38_reg(28) <= X"00000000";
        delayMatch38_reg(29) <= X"00000000";
        delayMatch38_reg(30) <= X"00000000";
        delayMatch38_reg(31) <= X"00000000";
        delayMatch38_reg(32) <= X"00000000";
        delayMatch38_reg(33) <= X"00000000";
        delayMatch38_reg(34) <= X"00000000";
        delayMatch38_reg(35) <= X"00000000";
        delayMatch38_reg(36) <= X"00000000";
        delayMatch38_reg(37) <= X"00000000";
        delayMatch38_reg(38) <= X"00000000";
        delayMatch38_reg(39) <= X"00000000";
        delayMatch38_reg(40) <= X"00000000";
        delayMatch38_reg(41) <= X"00000000";
        delayMatch38_reg(42) <= X"00000000";
        delayMatch38_reg(43) <= X"00000000";
        delayMatch38_reg(44) <= X"00000000";
        delayMatch38_reg(45) <= X"00000000";
        delayMatch38_reg(46) <= X"00000000";
        delayMatch38_reg(47) <= X"00000000";
        delayMatch38_reg(48) <= X"00000000";
        delayMatch38_reg(49) <= X"00000000";
        delayMatch38_reg(50) <= X"00000000";
        delayMatch38_reg(51) <= X"00000000";
        delayMatch38_reg(52) <= X"00000000";
        delayMatch38_reg(53) <= X"00000000";
        delayMatch38_reg(54) <= X"00000000";
        delayMatch38_reg(55) <= X"00000000";
        delayMatch38_reg(56) <= X"00000000";
        delayMatch38_reg(57) <= X"00000000";
        delayMatch38_reg(58) <= X"00000000";
        delayMatch38_reg(59) <= X"00000000";
        delayMatch38_reg(60) <= X"00000000";
        delayMatch38_reg(61) <= X"00000000";
        delayMatch38_reg(62) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch38_reg(0) <= delayMatch38_reg_next(0);
        delayMatch38_reg(1) <= delayMatch38_reg_next(1);
        delayMatch38_reg(2) <= delayMatch38_reg_next(2);
        delayMatch38_reg(3) <= delayMatch38_reg_next(3);
        delayMatch38_reg(4) <= delayMatch38_reg_next(4);
        delayMatch38_reg(5) <= delayMatch38_reg_next(5);
        delayMatch38_reg(6) <= delayMatch38_reg_next(6);
        delayMatch38_reg(7) <= delayMatch38_reg_next(7);
        delayMatch38_reg(8) <= delayMatch38_reg_next(8);
        delayMatch38_reg(9) <= delayMatch38_reg_next(9);
        delayMatch38_reg(10) <= delayMatch38_reg_next(10);
        delayMatch38_reg(11) <= delayMatch38_reg_next(11);
        delayMatch38_reg(12) <= delayMatch38_reg_next(12);
        delayMatch38_reg(13) <= delayMatch38_reg_next(13);
        delayMatch38_reg(14) <= delayMatch38_reg_next(14);
        delayMatch38_reg(15) <= delayMatch38_reg_next(15);
        delayMatch38_reg(16) <= delayMatch38_reg_next(16);
        delayMatch38_reg(17) <= delayMatch38_reg_next(17);
        delayMatch38_reg(18) <= delayMatch38_reg_next(18);
        delayMatch38_reg(19) <= delayMatch38_reg_next(19);
        delayMatch38_reg(20) <= delayMatch38_reg_next(20);
        delayMatch38_reg(21) <= delayMatch38_reg_next(21);
        delayMatch38_reg(22) <= delayMatch38_reg_next(22);
        delayMatch38_reg(23) <= delayMatch38_reg_next(23);
        delayMatch38_reg(24) <= delayMatch38_reg_next(24);
        delayMatch38_reg(25) <= delayMatch38_reg_next(25);
        delayMatch38_reg(26) <= delayMatch38_reg_next(26);
        delayMatch38_reg(27) <= delayMatch38_reg_next(27);
        delayMatch38_reg(28) <= delayMatch38_reg_next(28);
        delayMatch38_reg(29) <= delayMatch38_reg_next(29);
        delayMatch38_reg(30) <= delayMatch38_reg_next(30);
        delayMatch38_reg(31) <= delayMatch38_reg_next(31);
        delayMatch38_reg(32) <= delayMatch38_reg_next(32);
        delayMatch38_reg(33) <= delayMatch38_reg_next(33);
        delayMatch38_reg(34) <= delayMatch38_reg_next(34);
        delayMatch38_reg(35) <= delayMatch38_reg_next(35);
        delayMatch38_reg(36) <= delayMatch38_reg_next(36);
        delayMatch38_reg(37) <= delayMatch38_reg_next(37);
        delayMatch38_reg(38) <= delayMatch38_reg_next(38);
        delayMatch38_reg(39) <= delayMatch38_reg_next(39);
        delayMatch38_reg(40) <= delayMatch38_reg_next(40);
        delayMatch38_reg(41) <= delayMatch38_reg_next(41);
        delayMatch38_reg(42) <= delayMatch38_reg_next(42);
        delayMatch38_reg(43) <= delayMatch38_reg_next(43);
        delayMatch38_reg(44) <= delayMatch38_reg_next(44);
        delayMatch38_reg(45) <= delayMatch38_reg_next(45);
        delayMatch38_reg(46) <= delayMatch38_reg_next(46);
        delayMatch38_reg(47) <= delayMatch38_reg_next(47);
        delayMatch38_reg(48) <= delayMatch38_reg_next(48);
        delayMatch38_reg(49) <= delayMatch38_reg_next(49);
        delayMatch38_reg(50) <= delayMatch38_reg_next(50);
        delayMatch38_reg(51) <= delayMatch38_reg_next(51);
        delayMatch38_reg(52) <= delayMatch38_reg_next(52);
        delayMatch38_reg(53) <= delayMatch38_reg_next(53);
        delayMatch38_reg(54) <= delayMatch38_reg_next(54);
        delayMatch38_reg(55) <= delayMatch38_reg_next(55);
        delayMatch38_reg(56) <= delayMatch38_reg_next(56);
        delayMatch38_reg(57) <= delayMatch38_reg_next(57);
        delayMatch38_reg(58) <= delayMatch38_reg_next(58);
        delayMatch38_reg(59) <= delayMatch38_reg_next(59);
        delayMatch38_reg(60) <= delayMatch38_reg_next(60);
        delayMatch38_reg(61) <= delayMatch38_reg_next(61);
        delayMatch38_reg(62) <= delayMatch38_reg_next(62);
      END IF;
    END IF;
  END PROCESS delayMatch38_process;

  iq_ref_1 <= delayMatch38_reg(62);
  delayMatch38_reg_next(0) <= iq_ref;
  delayMatch38_reg_next(1) <= delayMatch38_reg(0);
  delayMatch38_reg_next(2) <= delayMatch38_reg(1);
  delayMatch38_reg_next(3) <= delayMatch38_reg(2);
  delayMatch38_reg_next(4) <= delayMatch38_reg(3);
  delayMatch38_reg_next(5) <= delayMatch38_reg(4);
  delayMatch38_reg_next(6) <= delayMatch38_reg(5);
  delayMatch38_reg_next(7) <= delayMatch38_reg(6);
  delayMatch38_reg_next(8) <= delayMatch38_reg(7);
  delayMatch38_reg_next(9) <= delayMatch38_reg(8);
  delayMatch38_reg_next(10) <= delayMatch38_reg(9);
  delayMatch38_reg_next(11) <= delayMatch38_reg(10);
  delayMatch38_reg_next(12) <= delayMatch38_reg(11);
  delayMatch38_reg_next(13) <= delayMatch38_reg(12);
  delayMatch38_reg_next(14) <= delayMatch38_reg(13);
  delayMatch38_reg_next(15) <= delayMatch38_reg(14);
  delayMatch38_reg_next(16) <= delayMatch38_reg(15);
  delayMatch38_reg_next(17) <= delayMatch38_reg(16);
  delayMatch38_reg_next(18) <= delayMatch38_reg(17);
  delayMatch38_reg_next(19) <= delayMatch38_reg(18);
  delayMatch38_reg_next(20) <= delayMatch38_reg(19);
  delayMatch38_reg_next(21) <= delayMatch38_reg(20);
  delayMatch38_reg_next(22) <= delayMatch38_reg(21);
  delayMatch38_reg_next(23) <= delayMatch38_reg(22);
  delayMatch38_reg_next(24) <= delayMatch38_reg(23);
  delayMatch38_reg_next(25) <= delayMatch38_reg(24);
  delayMatch38_reg_next(26) <= delayMatch38_reg(25);
  delayMatch38_reg_next(27) <= delayMatch38_reg(26);
  delayMatch38_reg_next(28) <= delayMatch38_reg(27);
  delayMatch38_reg_next(29) <= delayMatch38_reg(28);
  delayMatch38_reg_next(30) <= delayMatch38_reg(29);
  delayMatch38_reg_next(31) <= delayMatch38_reg(30);
  delayMatch38_reg_next(32) <= delayMatch38_reg(31);
  delayMatch38_reg_next(33) <= delayMatch38_reg(32);
  delayMatch38_reg_next(34) <= delayMatch38_reg(33);
  delayMatch38_reg_next(35) <= delayMatch38_reg(34);
  delayMatch38_reg_next(36) <= delayMatch38_reg(35);
  delayMatch38_reg_next(37) <= delayMatch38_reg(36);
  delayMatch38_reg_next(38) <= delayMatch38_reg(37);
  delayMatch38_reg_next(39) <= delayMatch38_reg(38);
  delayMatch38_reg_next(40) <= delayMatch38_reg(39);
  delayMatch38_reg_next(41) <= delayMatch38_reg(40);
  delayMatch38_reg_next(42) <= delayMatch38_reg(41);
  delayMatch38_reg_next(43) <= delayMatch38_reg(42);
  delayMatch38_reg_next(44) <= delayMatch38_reg(43);
  delayMatch38_reg_next(45) <= delayMatch38_reg(44);
  delayMatch38_reg_next(46) <= delayMatch38_reg(45);
  delayMatch38_reg_next(47) <= delayMatch38_reg(46);
  delayMatch38_reg_next(48) <= delayMatch38_reg(47);
  delayMatch38_reg_next(49) <= delayMatch38_reg(48);
  delayMatch38_reg_next(50) <= delayMatch38_reg(49);
  delayMatch38_reg_next(51) <= delayMatch38_reg(50);
  delayMatch38_reg_next(52) <= delayMatch38_reg(51);
  delayMatch38_reg_next(53) <= delayMatch38_reg(52);
  delayMatch38_reg_next(54) <= delayMatch38_reg(53);
  delayMatch38_reg_next(55) <= delayMatch38_reg(54);
  delayMatch38_reg_next(56) <= delayMatch38_reg(55);
  delayMatch38_reg_next(57) <= delayMatch38_reg(56);
  delayMatch38_reg_next(58) <= delayMatch38_reg(57);
  delayMatch38_reg_next(59) <= delayMatch38_reg(58);
  delayMatch38_reg_next(60) <= delayMatch38_reg(59);
  delayMatch38_reg_next(61) <= delayMatch38_reg(60);
  delayMatch38_reg_next(62) <= delayMatch38_reg(61);

  delayMatch36_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch36_reg(0) <= X"00000000";
        delayMatch36_reg(1) <= X"00000000";
        delayMatch36_reg(2) <= X"00000000";
        delayMatch36_reg(3) <= X"00000000";
        delayMatch36_reg(4) <= X"00000000";
        delayMatch36_reg(5) <= X"00000000";
        delayMatch36_reg(6) <= X"00000000";
        delayMatch36_reg(7) <= X"00000000";
        delayMatch36_reg(8) <= X"00000000";
        delayMatch36_reg(9) <= X"00000000";
        delayMatch36_reg(10) <= X"00000000";
        delayMatch36_reg(11) <= X"00000000";
        delayMatch36_reg(12) <= X"00000000";
        delayMatch36_reg(13) <= X"00000000";
        delayMatch36_reg(14) <= X"00000000";
        delayMatch36_reg(15) <= X"00000000";
        delayMatch36_reg(16) <= X"00000000";
        delayMatch36_reg(17) <= X"00000000";
        delayMatch36_reg(18) <= X"00000000";
        delayMatch36_reg(19) <= X"00000000";
        delayMatch36_reg(20) <= X"00000000";
        delayMatch36_reg(21) <= X"00000000";
        delayMatch36_reg(22) <= X"00000000";
        delayMatch36_reg(23) <= X"00000000";
        delayMatch36_reg(24) <= X"00000000";
        delayMatch36_reg(25) <= X"00000000";
        delayMatch36_reg(26) <= X"00000000";
        delayMatch36_reg(27) <= X"00000000";
        delayMatch36_reg(28) <= X"00000000";
        delayMatch36_reg(29) <= X"00000000";
        delayMatch36_reg(30) <= X"00000000";
        delayMatch36_reg(31) <= X"00000000";
        delayMatch36_reg(32) <= X"00000000";
        delayMatch36_reg(33) <= X"00000000";
        delayMatch36_reg(34) <= X"00000000";
        delayMatch36_reg(35) <= X"00000000";
        delayMatch36_reg(36) <= X"00000000";
        delayMatch36_reg(37) <= X"00000000";
        delayMatch36_reg(38) <= X"00000000";
        delayMatch36_reg(39) <= X"00000000";
        delayMatch36_reg(40) <= X"00000000";
        delayMatch36_reg(41) <= X"00000000";
        delayMatch36_reg(42) <= X"00000000";
        delayMatch36_reg(43) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch36_reg(0) <= delayMatch36_reg_next(0);
        delayMatch36_reg(1) <= delayMatch36_reg_next(1);
        delayMatch36_reg(2) <= delayMatch36_reg_next(2);
        delayMatch36_reg(3) <= delayMatch36_reg_next(3);
        delayMatch36_reg(4) <= delayMatch36_reg_next(4);
        delayMatch36_reg(5) <= delayMatch36_reg_next(5);
        delayMatch36_reg(6) <= delayMatch36_reg_next(6);
        delayMatch36_reg(7) <= delayMatch36_reg_next(7);
        delayMatch36_reg(8) <= delayMatch36_reg_next(8);
        delayMatch36_reg(9) <= delayMatch36_reg_next(9);
        delayMatch36_reg(10) <= delayMatch36_reg_next(10);
        delayMatch36_reg(11) <= delayMatch36_reg_next(11);
        delayMatch36_reg(12) <= delayMatch36_reg_next(12);
        delayMatch36_reg(13) <= delayMatch36_reg_next(13);
        delayMatch36_reg(14) <= delayMatch36_reg_next(14);
        delayMatch36_reg(15) <= delayMatch36_reg_next(15);
        delayMatch36_reg(16) <= delayMatch36_reg_next(16);
        delayMatch36_reg(17) <= delayMatch36_reg_next(17);
        delayMatch36_reg(18) <= delayMatch36_reg_next(18);
        delayMatch36_reg(19) <= delayMatch36_reg_next(19);
        delayMatch36_reg(20) <= delayMatch36_reg_next(20);
        delayMatch36_reg(21) <= delayMatch36_reg_next(21);
        delayMatch36_reg(22) <= delayMatch36_reg_next(22);
        delayMatch36_reg(23) <= delayMatch36_reg_next(23);
        delayMatch36_reg(24) <= delayMatch36_reg_next(24);
        delayMatch36_reg(25) <= delayMatch36_reg_next(25);
        delayMatch36_reg(26) <= delayMatch36_reg_next(26);
        delayMatch36_reg(27) <= delayMatch36_reg_next(27);
        delayMatch36_reg(28) <= delayMatch36_reg_next(28);
        delayMatch36_reg(29) <= delayMatch36_reg_next(29);
        delayMatch36_reg(30) <= delayMatch36_reg_next(30);
        delayMatch36_reg(31) <= delayMatch36_reg_next(31);
        delayMatch36_reg(32) <= delayMatch36_reg_next(32);
        delayMatch36_reg(33) <= delayMatch36_reg_next(33);
        delayMatch36_reg(34) <= delayMatch36_reg_next(34);
        delayMatch36_reg(35) <= delayMatch36_reg_next(35);
        delayMatch36_reg(36) <= delayMatch36_reg_next(36);
        delayMatch36_reg(37) <= delayMatch36_reg_next(37);
        delayMatch36_reg(38) <= delayMatch36_reg_next(38);
        delayMatch36_reg(39) <= delayMatch36_reg_next(39);
        delayMatch36_reg(40) <= delayMatch36_reg_next(40);
        delayMatch36_reg(41) <= delayMatch36_reg_next(41);
        delayMatch36_reg(42) <= delayMatch36_reg_next(42);
        delayMatch36_reg(43) <= delayMatch36_reg_next(43);
      END IF;
    END IF;
  END PROCESS delayMatch36_process;

  SampleTime_div_Lq_1 <= delayMatch36_reg(43);
  delayMatch36_reg_next(0) <= SampleTime_div_Lq;
  delayMatch36_reg_next(1) <= delayMatch36_reg(0);
  delayMatch36_reg_next(2) <= delayMatch36_reg(1);
  delayMatch36_reg_next(3) <= delayMatch36_reg(2);
  delayMatch36_reg_next(4) <= delayMatch36_reg(3);
  delayMatch36_reg_next(5) <= delayMatch36_reg(4);
  delayMatch36_reg_next(6) <= delayMatch36_reg(5);
  delayMatch36_reg_next(7) <= delayMatch36_reg(6);
  delayMatch36_reg_next(8) <= delayMatch36_reg(7);
  delayMatch36_reg_next(9) <= delayMatch36_reg(8);
  delayMatch36_reg_next(10) <= delayMatch36_reg(9);
  delayMatch36_reg_next(11) <= delayMatch36_reg(10);
  delayMatch36_reg_next(12) <= delayMatch36_reg(11);
  delayMatch36_reg_next(13) <= delayMatch36_reg(12);
  delayMatch36_reg_next(14) <= delayMatch36_reg(13);
  delayMatch36_reg_next(15) <= delayMatch36_reg(14);
  delayMatch36_reg_next(16) <= delayMatch36_reg(15);
  delayMatch36_reg_next(17) <= delayMatch36_reg(16);
  delayMatch36_reg_next(18) <= delayMatch36_reg(17);
  delayMatch36_reg_next(19) <= delayMatch36_reg(18);
  delayMatch36_reg_next(20) <= delayMatch36_reg(19);
  delayMatch36_reg_next(21) <= delayMatch36_reg(20);
  delayMatch36_reg_next(22) <= delayMatch36_reg(21);
  delayMatch36_reg_next(23) <= delayMatch36_reg(22);
  delayMatch36_reg_next(24) <= delayMatch36_reg(23);
  delayMatch36_reg_next(25) <= delayMatch36_reg(24);
  delayMatch36_reg_next(26) <= delayMatch36_reg(25);
  delayMatch36_reg_next(27) <= delayMatch36_reg(26);
  delayMatch36_reg_next(28) <= delayMatch36_reg(27);
  delayMatch36_reg_next(29) <= delayMatch36_reg(28);
  delayMatch36_reg_next(30) <= delayMatch36_reg(29);
  delayMatch36_reg_next(31) <= delayMatch36_reg(30);
  delayMatch36_reg_next(32) <= delayMatch36_reg(31);
  delayMatch36_reg_next(33) <= delayMatch36_reg(32);
  delayMatch36_reg_next(34) <= delayMatch36_reg(33);
  delayMatch36_reg_next(35) <= delayMatch36_reg(34);
  delayMatch36_reg_next(36) <= delayMatch36_reg(35);
  delayMatch36_reg_next(37) <= delayMatch36_reg(36);
  delayMatch36_reg_next(38) <= delayMatch36_reg(37);
  delayMatch36_reg_next(39) <= delayMatch36_reg(38);
  delayMatch36_reg_next(40) <= delayMatch36_reg(39);
  delayMatch36_reg_next(41) <= delayMatch36_reg(40);
  delayMatch36_reg_next(42) <= delayMatch36_reg(41);
  delayMatch36_reg_next(43) <= delayMatch36_reg(42);

  delayMatch31_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch31_reg(0) <= X"00000000";
        delayMatch31_reg(1) <= X"00000000";
        delayMatch31_reg(2) <= X"00000000";
        delayMatch31_reg(3) <= X"00000000";
        delayMatch31_reg(4) <= X"00000000";
        delayMatch31_reg(5) <= X"00000000";
        delayMatch31_reg(6) <= X"00000000";
        delayMatch31_reg(7) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch31_reg(0) <= delayMatch31_reg_next(0);
        delayMatch31_reg(1) <= delayMatch31_reg_next(1);
        delayMatch31_reg(2) <= delayMatch31_reg_next(2);
        delayMatch31_reg(3) <= delayMatch31_reg_next(3);
        delayMatch31_reg(4) <= delayMatch31_reg_next(4);
        delayMatch31_reg(5) <= delayMatch31_reg_next(5);
        delayMatch31_reg(6) <= delayMatch31_reg_next(6);
        delayMatch31_reg(7) <= delayMatch31_reg_next(7);
      END IF;
    END IF;
  END PROCESS delayMatch31_process;

  q_phase_voltage_per_switching_state_1 <= delayMatch31_reg(7);
  delayMatch31_reg_next(0) <= q_phase_voltage_per_switching_state;
  delayMatch31_reg_next(1) <= delayMatch31_reg(0);
  delayMatch31_reg_next(2) <= delayMatch31_reg(1);
  delayMatch31_reg_next(3) <= delayMatch31_reg(2);
  delayMatch31_reg_next(4) <= delayMatch31_reg(3);
  delayMatch31_reg_next(5) <= delayMatch31_reg(4);
  delayMatch31_reg_next(6) <= delayMatch31_reg(5);
  delayMatch31_reg_next(7) <= delayMatch31_reg(6);

  delayMatch35_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch35_reg(0) <= X"00000000";
        delayMatch35_reg(1) <= X"00000000";
        delayMatch35_reg(2) <= X"00000000";
        delayMatch35_reg(3) <= X"00000000";
        delayMatch35_reg(4) <= X"00000000";
        delayMatch35_reg(5) <= X"00000000";
        delayMatch35_reg(6) <= X"00000000";
        delayMatch35_reg(7) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch35_reg(0) <= delayMatch35_reg_next(0);
        delayMatch35_reg(1) <= delayMatch35_reg_next(1);
        delayMatch35_reg(2) <= delayMatch35_reg_next(2);
        delayMatch35_reg(3) <= delayMatch35_reg_next(3);
        delayMatch35_reg(4) <= delayMatch35_reg_next(4);
        delayMatch35_reg(5) <= delayMatch35_reg_next(5);
        delayMatch35_reg(6) <= delayMatch35_reg_next(6);
        delayMatch35_reg(7) <= delayMatch35_reg_next(7);
      END IF;
    END IF;
  END PROCESS delayMatch35_process;

  out0_10 <= delayMatch35_reg(7);
  delayMatch35_reg_next(0) <= out0_9;
  delayMatch35_reg_next(1) <= delayMatch35_reg(0);
  delayMatch35_reg_next(2) <= delayMatch35_reg(1);
  delayMatch35_reg_next(3) <= delayMatch35_reg(2);
  delayMatch35_reg_next(4) <= delayMatch35_reg(3);
  delayMatch35_reg_next(5) <= delayMatch35_reg(4);
  delayMatch35_reg_next(6) <= delayMatch35_reg(5);
  delayMatch35_reg_next(7) <= delayMatch35_reg(6);

  delayMatch34_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch34_reg(0) <= X"00000000";
        delayMatch34_reg(1) <= X"00000000";
        delayMatch34_reg(2) <= X"00000000";
        delayMatch34_reg(3) <= X"00000000";
        delayMatch34_reg(4) <= X"00000000";
        delayMatch34_reg(5) <= X"00000000";
        delayMatch34_reg(6) <= X"00000000";
        delayMatch34_reg(7) <= X"00000000";
        delayMatch34_reg(8) <= X"00000000";
        delayMatch34_reg(9) <= X"00000000";
        delayMatch34_reg(10) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch34_reg(0) <= delayMatch34_reg_next(0);
        delayMatch34_reg(1) <= delayMatch34_reg_next(1);
        delayMatch34_reg(2) <= delayMatch34_reg_next(2);
        delayMatch34_reg(3) <= delayMatch34_reg_next(3);
        delayMatch34_reg(4) <= delayMatch34_reg_next(4);
        delayMatch34_reg(5) <= delayMatch34_reg_next(5);
        delayMatch34_reg(6) <= delayMatch34_reg_next(6);
        delayMatch34_reg(7) <= delayMatch34_reg_next(7);
        delayMatch34_reg(8) <= delayMatch34_reg_next(8);
        delayMatch34_reg(9) <= delayMatch34_reg_next(9);
        delayMatch34_reg(10) <= delayMatch34_reg_next(10);
      END IF;
    END IF;
  END PROCESS delayMatch34_process;

  omega_el_1 <= delayMatch34_reg(10);
  delayMatch34_reg_next(0) <= omega_el;
  delayMatch34_reg_next(1) <= delayMatch34_reg(0);
  delayMatch34_reg_next(2) <= delayMatch34_reg(1);
  delayMatch34_reg_next(3) <= delayMatch34_reg(2);
  delayMatch34_reg_next(4) <= delayMatch34_reg(3);
  delayMatch34_reg_next(5) <= delayMatch34_reg(4);
  delayMatch34_reg_next(6) <= delayMatch34_reg(5);
  delayMatch34_reg_next(7) <= delayMatch34_reg(6);
  delayMatch34_reg_next(8) <= delayMatch34_reg(7);
  delayMatch34_reg_next(9) <= delayMatch34_reg(8);
  delayMatch34_reg_next(10) <= delayMatch34_reg(9);

  delayMatch33_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch33_reg(0) <= X"00000000";
        delayMatch33_reg(1) <= X"00000000";
        delayMatch33_reg(2) <= X"00000000";
        delayMatch33_reg(3) <= X"00000000";
        delayMatch33_reg(4) <= X"00000000";
        delayMatch33_reg(5) <= X"00000000";
        delayMatch33_reg(6) <= X"00000000";
        delayMatch33_reg(7) <= X"00000000";
        delayMatch33_reg(8) <= X"00000000";
        delayMatch33_reg(9) <= X"00000000";
        delayMatch33_reg(10) <= X"00000000";
        delayMatch33_reg(11) <= X"00000000";
        delayMatch33_reg(12) <= X"00000000";
        delayMatch33_reg(13) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch33_reg(0) <= delayMatch33_reg_next(0);
        delayMatch33_reg(1) <= delayMatch33_reg_next(1);
        delayMatch33_reg(2) <= delayMatch33_reg_next(2);
        delayMatch33_reg(3) <= delayMatch33_reg_next(3);
        delayMatch33_reg(4) <= delayMatch33_reg_next(4);
        delayMatch33_reg(5) <= delayMatch33_reg_next(5);
        delayMatch33_reg(6) <= delayMatch33_reg_next(6);
        delayMatch33_reg(7) <= delayMatch33_reg_next(7);
        delayMatch33_reg(8) <= delayMatch33_reg_next(8);
        delayMatch33_reg(9) <= delayMatch33_reg_next(9);
        delayMatch33_reg(10) <= delayMatch33_reg_next(10);
        delayMatch33_reg(11) <= delayMatch33_reg_next(11);
        delayMatch33_reg(12) <= delayMatch33_reg_next(12);
        delayMatch33_reg(13) <= delayMatch33_reg_next(13);
      END IF;
    END IF;
  END PROCESS delayMatch33_process;

  psiPM_1 <= delayMatch33_reg(13);
  delayMatch33_reg_next(0) <= psiPM;
  delayMatch33_reg_next(1) <= delayMatch33_reg(0);
  delayMatch33_reg_next(2) <= delayMatch33_reg(1);
  delayMatch33_reg_next(3) <= delayMatch33_reg(2);
  delayMatch33_reg_next(4) <= delayMatch33_reg(3);
  delayMatch33_reg_next(5) <= delayMatch33_reg(4);
  delayMatch33_reg_next(6) <= delayMatch33_reg(5);
  delayMatch33_reg_next(7) <= delayMatch33_reg(6);
  delayMatch33_reg_next(8) <= delayMatch33_reg(7);
  delayMatch33_reg_next(9) <= delayMatch33_reg(8);
  delayMatch33_reg_next(10) <= delayMatch33_reg(9);
  delayMatch33_reg_next(11) <= delayMatch33_reg(10);
  delayMatch33_reg_next(12) <= delayMatch33_reg(11);
  delayMatch33_reg_next(13) <= delayMatch33_reg(12);

  delayMatch32_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch32_reg(0) <= X"00000000";
        delayMatch32_reg(1) <= X"00000000";
        delayMatch32_reg(2) <= X"00000000";
        delayMatch32_reg(3) <= X"00000000";
        delayMatch32_reg(4) <= X"00000000";
        delayMatch32_reg(5) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch32_reg(0) <= delayMatch32_reg_next(0);
        delayMatch32_reg(1) <= delayMatch32_reg_next(1);
        delayMatch32_reg(2) <= delayMatch32_reg_next(2);
        delayMatch32_reg(3) <= delayMatch32_reg_next(3);
        delayMatch32_reg(4) <= delayMatch32_reg_next(4);
        delayMatch32_reg(5) <= delayMatch32_reg_next(5);
      END IF;
    END IF;
  END PROCESS delayMatch32_process;

  Ld_1 <= delayMatch32_reg(5);
  delayMatch32_reg_next(0) <= Ld;
  delayMatch32_reg_next(1) <= delayMatch32_reg(0);
  delayMatch32_reg_next(2) <= delayMatch32_reg(1);
  delayMatch32_reg_next(3) <= delayMatch32_reg(2);
  delayMatch32_reg_next(4) <= delayMatch32_reg(3);
  delayMatch32_reg_next(5) <= delayMatch32_reg(4);

  reduced_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reduced_reg_2(0) <= X"00000000";
        reduced_reg_2(1) <= X"00000000";
        reduced_reg_2(2) <= X"00000000";
        reduced_reg_2(3) <= X"00000000";
        reduced_reg_2(4) <= X"00000000";
        reduced_reg_2(5) <= X"00000000";
        reduced_reg_2(6) <= X"00000000";
        reduced_reg_2(7) <= X"00000000";
        reduced_reg_2(8) <= X"00000000";
        reduced_reg_2(9) <= X"00000000";
        reduced_reg_2(10) <= X"00000000";
        reduced_reg_2(11) <= X"00000000";
        reduced_reg_2(12) <= X"00000000";
        reduced_reg_2(13) <= X"00000000";
        reduced_reg_2(14) <= X"00000000";
        reduced_reg_2(15) <= X"00000000";
        reduced_reg_2(16) <= X"00000000";
        reduced_reg_2(17) <= X"00000000";
        reduced_reg_2(18) <= X"00000000";
        reduced_reg_2(19) <= X"00000000";
        reduced_reg_2(20) <= X"00000000";
        reduced_reg_2(21) <= X"00000000";
        reduced_reg_2(22) <= X"00000000";
        reduced_reg_2(23) <= X"00000000";
        reduced_reg_2(24) <= X"00000000";
        reduced_reg_2(25) <= X"00000000";
        reduced_reg_2(26) <= X"00000000";
        reduced_reg_2(27) <= X"00000000";
        reduced_reg_2(28) <= X"00000000";
        reduced_reg_2(29) <= X"00000000";
      ELSIF enb = '1' THEN
        reduced_reg_2(0) <= reduced_reg_next_2(0);
        reduced_reg_2(1) <= reduced_reg_next_2(1);
        reduced_reg_2(2) <= reduced_reg_next_2(2);
        reduced_reg_2(3) <= reduced_reg_next_2(3);
        reduced_reg_2(4) <= reduced_reg_next_2(4);
        reduced_reg_2(5) <= reduced_reg_next_2(5);
        reduced_reg_2(6) <= reduced_reg_next_2(6);
        reduced_reg_2(7) <= reduced_reg_next_2(7);
        reduced_reg_2(8) <= reduced_reg_next_2(8);
        reduced_reg_2(9) <= reduced_reg_next_2(9);
        reduced_reg_2(10) <= reduced_reg_next_2(10);
        reduced_reg_2(11) <= reduced_reg_next_2(11);
        reduced_reg_2(12) <= reduced_reg_next_2(12);
        reduced_reg_2(13) <= reduced_reg_next_2(13);
        reduced_reg_2(14) <= reduced_reg_next_2(14);
        reduced_reg_2(15) <= reduced_reg_next_2(15);
        reduced_reg_2(16) <= reduced_reg_next_2(16);
        reduced_reg_2(17) <= reduced_reg_next_2(17);
        reduced_reg_2(18) <= reduced_reg_next_2(18);
        reduced_reg_2(19) <= reduced_reg_next_2(19);
        reduced_reg_2(20) <= reduced_reg_next_2(20);
        reduced_reg_2(21) <= reduced_reg_next_2(21);
        reduced_reg_2(22) <= reduced_reg_next_2(22);
        reduced_reg_2(23) <= reduced_reg_next_2(23);
        reduced_reg_2(24) <= reduced_reg_next_2(24);
        reduced_reg_2(25) <= reduced_reg_next_2(25);
        reduced_reg_2(26) <= reduced_reg_next_2(26);
        reduced_reg_2(27) <= reduced_reg_next_2(27);
        reduced_reg_2(28) <= reduced_reg_next_2(28);
        reduced_reg_2(29) <= reduced_reg_next_2(29);
      END IF;
    END IF;
  END PROCESS reduced_2_process;

  iq_k_1_2 <= reduced_reg_2(29);
  reduced_reg_next_2(0) <= iq_k_1_1;
  reduced_reg_next_2(1) <= reduced_reg_2(0);
  reduced_reg_next_2(2) <= reduced_reg_2(1);
  reduced_reg_next_2(3) <= reduced_reg_2(2);
  reduced_reg_next_2(4) <= reduced_reg_2(3);
  reduced_reg_next_2(5) <= reduced_reg_2(4);
  reduced_reg_next_2(6) <= reduced_reg_2(5);
  reduced_reg_next_2(7) <= reduced_reg_2(6);
  reduced_reg_next_2(8) <= reduced_reg_2(7);
  reduced_reg_next_2(9) <= reduced_reg_2(8);
  reduced_reg_next_2(10) <= reduced_reg_2(9);
  reduced_reg_next_2(11) <= reduced_reg_2(10);
  reduced_reg_next_2(12) <= reduced_reg_2(11);
  reduced_reg_next_2(13) <= reduced_reg_2(12);
  reduced_reg_next_2(14) <= reduced_reg_2(13);
  reduced_reg_next_2(15) <= reduced_reg_2(14);
  reduced_reg_next_2(16) <= reduced_reg_2(15);
  reduced_reg_next_2(17) <= reduced_reg_2(16);
  reduced_reg_next_2(18) <= reduced_reg_2(17);
  reduced_reg_next_2(19) <= reduced_reg_2(18);
  reduced_reg_next_2(20) <= reduced_reg_2(19);
  reduced_reg_next_2(21) <= reduced_reg_2(20);
  reduced_reg_next_2(22) <= reduced_reg_2(21);
  reduced_reg_next_2(23) <= reduced_reg_2(22);
  reduced_reg_next_2(24) <= reduced_reg_2(23);
  reduced_reg_next_2(25) <= reduced_reg_2(24);
  reduced_reg_next_2(26) <= reduced_reg_2(25);
  reduced_reg_next_2(27) <= reduced_reg_2(26);
  reduced_reg_next_2(28) <= reduced_reg_2(27);
  reduced_reg_next_2(29) <= reduced_reg_2(28);

  delayMatch43_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch43_reg(0) <= X"00000000";
        delayMatch43_reg(1) <= X"00000000";
        delayMatch43_reg(2) <= X"00000000";
        delayMatch43_reg(3) <= X"00000000";
        delayMatch43_reg(4) <= X"00000000";
        delayMatch43_reg(5) <= X"00000000";
        delayMatch43_reg(6) <= X"00000000";
        delayMatch43_reg(7) <= X"00000000";
        delayMatch43_reg(8) <= X"00000000";
        delayMatch43_reg(9) <= X"00000000";
        delayMatch43_reg(10) <= X"00000000";
        delayMatch43_reg(11) <= X"00000000";
        delayMatch43_reg(12) <= X"00000000";
        delayMatch43_reg(13) <= X"00000000";
        delayMatch43_reg(14) <= X"00000000";
        delayMatch43_reg(15) <= X"00000000";
        delayMatch43_reg(16) <= X"00000000";
        delayMatch43_reg(17) <= X"00000000";
        delayMatch43_reg(18) <= X"00000000";
        delayMatch43_reg(19) <= X"00000000";
        delayMatch43_reg(20) <= X"00000000";
        delayMatch43_reg(21) <= X"00000000";
        delayMatch43_reg(22) <= X"00000000";
        delayMatch43_reg(23) <= X"00000000";
        delayMatch43_reg(24) <= X"00000000";
        delayMatch43_reg(25) <= X"00000000";
        delayMatch43_reg(26) <= X"00000000";
        delayMatch43_reg(27) <= X"00000000";
        delayMatch43_reg(28) <= X"00000000";
        delayMatch43_reg(29) <= X"00000000";
        delayMatch43_reg(30) <= X"00000000";
        delayMatch43_reg(31) <= X"00000000";
        delayMatch43_reg(32) <= X"00000000";
        delayMatch43_reg(33) <= X"00000000";
        delayMatch43_reg(34) <= X"00000000";
        delayMatch43_reg(35) <= X"00000000";
        delayMatch43_reg(36) <= X"00000000";
        delayMatch43_reg(37) <= X"00000000";
        delayMatch43_reg(38) <= X"00000000";
        delayMatch43_reg(39) <= X"00000000";
        delayMatch43_reg(40) <= X"00000000";
        delayMatch43_reg(41) <= X"00000000";
        delayMatch43_reg(42) <= X"00000000";
        delayMatch43_reg(43) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch43_reg(0) <= delayMatch43_reg_next(0);
        delayMatch43_reg(1) <= delayMatch43_reg_next(1);
        delayMatch43_reg(2) <= delayMatch43_reg_next(2);
        delayMatch43_reg(3) <= delayMatch43_reg_next(3);
        delayMatch43_reg(4) <= delayMatch43_reg_next(4);
        delayMatch43_reg(5) <= delayMatch43_reg_next(5);
        delayMatch43_reg(6) <= delayMatch43_reg_next(6);
        delayMatch43_reg(7) <= delayMatch43_reg_next(7);
        delayMatch43_reg(8) <= delayMatch43_reg_next(8);
        delayMatch43_reg(9) <= delayMatch43_reg_next(9);
        delayMatch43_reg(10) <= delayMatch43_reg_next(10);
        delayMatch43_reg(11) <= delayMatch43_reg_next(11);
        delayMatch43_reg(12) <= delayMatch43_reg_next(12);
        delayMatch43_reg(13) <= delayMatch43_reg_next(13);
        delayMatch43_reg(14) <= delayMatch43_reg_next(14);
        delayMatch43_reg(15) <= delayMatch43_reg_next(15);
        delayMatch43_reg(16) <= delayMatch43_reg_next(16);
        delayMatch43_reg(17) <= delayMatch43_reg_next(17);
        delayMatch43_reg(18) <= delayMatch43_reg_next(18);
        delayMatch43_reg(19) <= delayMatch43_reg_next(19);
        delayMatch43_reg(20) <= delayMatch43_reg_next(20);
        delayMatch43_reg(21) <= delayMatch43_reg_next(21);
        delayMatch43_reg(22) <= delayMatch43_reg_next(22);
        delayMatch43_reg(23) <= delayMatch43_reg_next(23);
        delayMatch43_reg(24) <= delayMatch43_reg_next(24);
        delayMatch43_reg(25) <= delayMatch43_reg_next(25);
        delayMatch43_reg(26) <= delayMatch43_reg_next(26);
        delayMatch43_reg(27) <= delayMatch43_reg_next(27);
        delayMatch43_reg(28) <= delayMatch43_reg_next(28);
        delayMatch43_reg(29) <= delayMatch43_reg_next(29);
        delayMatch43_reg(30) <= delayMatch43_reg_next(30);
        delayMatch43_reg(31) <= delayMatch43_reg_next(31);
        delayMatch43_reg(32) <= delayMatch43_reg_next(32);
        delayMatch43_reg(33) <= delayMatch43_reg_next(33);
        delayMatch43_reg(34) <= delayMatch43_reg_next(34);
        delayMatch43_reg(35) <= delayMatch43_reg_next(35);
        delayMatch43_reg(36) <= delayMatch43_reg_next(36);
        delayMatch43_reg(37) <= delayMatch43_reg_next(37);
        delayMatch43_reg(38) <= delayMatch43_reg_next(38);
        delayMatch43_reg(39) <= delayMatch43_reg_next(39);
        delayMatch43_reg(40) <= delayMatch43_reg_next(40);
        delayMatch43_reg(41) <= delayMatch43_reg_next(41);
        delayMatch43_reg(42) <= delayMatch43_reg_next(42);
        delayMatch43_reg(43) <= delayMatch43_reg_next(43);
      END IF;
    END IF;
  END PROCESS delayMatch43_process;

  ix_ref_1 <= delayMatch43_reg(43);
  delayMatch43_reg_next(0) <= ix_ref;
  delayMatch43_reg_next(1) <= delayMatch43_reg(0);
  delayMatch43_reg_next(2) <= delayMatch43_reg(1);
  delayMatch43_reg_next(3) <= delayMatch43_reg(2);
  delayMatch43_reg_next(4) <= delayMatch43_reg(3);
  delayMatch43_reg_next(5) <= delayMatch43_reg(4);
  delayMatch43_reg_next(6) <= delayMatch43_reg(5);
  delayMatch43_reg_next(7) <= delayMatch43_reg(6);
  delayMatch43_reg_next(8) <= delayMatch43_reg(7);
  delayMatch43_reg_next(9) <= delayMatch43_reg(8);
  delayMatch43_reg_next(10) <= delayMatch43_reg(9);
  delayMatch43_reg_next(11) <= delayMatch43_reg(10);
  delayMatch43_reg_next(12) <= delayMatch43_reg(11);
  delayMatch43_reg_next(13) <= delayMatch43_reg(12);
  delayMatch43_reg_next(14) <= delayMatch43_reg(13);
  delayMatch43_reg_next(15) <= delayMatch43_reg(14);
  delayMatch43_reg_next(16) <= delayMatch43_reg(15);
  delayMatch43_reg_next(17) <= delayMatch43_reg(16);
  delayMatch43_reg_next(18) <= delayMatch43_reg(17);
  delayMatch43_reg_next(19) <= delayMatch43_reg(18);
  delayMatch43_reg_next(20) <= delayMatch43_reg(19);
  delayMatch43_reg_next(21) <= delayMatch43_reg(20);
  delayMatch43_reg_next(22) <= delayMatch43_reg(21);
  delayMatch43_reg_next(23) <= delayMatch43_reg(22);
  delayMatch43_reg_next(24) <= delayMatch43_reg(23);
  delayMatch43_reg_next(25) <= delayMatch43_reg(24);
  delayMatch43_reg_next(26) <= delayMatch43_reg(25);
  delayMatch43_reg_next(27) <= delayMatch43_reg(26);
  delayMatch43_reg_next(28) <= delayMatch43_reg(27);
  delayMatch43_reg_next(29) <= delayMatch43_reg(28);
  delayMatch43_reg_next(30) <= delayMatch43_reg(29);
  delayMatch43_reg_next(31) <= delayMatch43_reg(30);
  delayMatch43_reg_next(32) <= delayMatch43_reg(31);
  delayMatch43_reg_next(33) <= delayMatch43_reg(32);
  delayMatch43_reg_next(34) <= delayMatch43_reg(33);
  delayMatch43_reg_next(35) <= delayMatch43_reg(34);
  delayMatch43_reg_next(36) <= delayMatch43_reg(35);
  delayMatch43_reg_next(37) <= delayMatch43_reg(36);
  delayMatch43_reg_next(38) <= delayMatch43_reg(37);
  delayMatch43_reg_next(39) <= delayMatch43_reg(38);
  delayMatch43_reg_next(40) <= delayMatch43_reg(39);
  delayMatch43_reg_next(41) <= delayMatch43_reg(40);
  delayMatch43_reg_next(42) <= delayMatch43_reg(41);
  delayMatch43_reg_next(43) <= delayMatch43_reg(42);

  delayMatch41_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch41_reg(0) <= X"00000000";
        delayMatch41_reg(1) <= X"00000000";
        delayMatch41_reg(2) <= X"00000000";
        delayMatch41_reg(3) <= X"00000000";
        delayMatch41_reg(4) <= X"00000000";
        delayMatch41_reg(5) <= X"00000000";
        delayMatch41_reg(6) <= X"00000000";
        delayMatch41_reg(7) <= X"00000000";
        delayMatch41_reg(8) <= X"00000000";
        delayMatch41_reg(9) <= X"00000000";
        delayMatch41_reg(10) <= X"00000000";
        delayMatch41_reg(11) <= X"00000000";
        delayMatch41_reg(12) <= X"00000000";
        delayMatch41_reg(13) <= X"00000000";
        delayMatch41_reg(14) <= X"00000000";
        delayMatch41_reg(15) <= X"00000000";
        delayMatch41_reg(16) <= X"00000000";
        delayMatch41_reg(17) <= X"00000000";
        delayMatch41_reg(18) <= X"00000000";
        delayMatch41_reg(19) <= X"00000000";
        delayMatch41_reg(20) <= X"00000000";
        delayMatch41_reg(21) <= X"00000000";
        delayMatch41_reg(22) <= X"00000000";
        delayMatch41_reg(23) <= X"00000000";
        delayMatch41_reg(24) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch41_reg(0) <= delayMatch41_reg_next(0);
        delayMatch41_reg(1) <= delayMatch41_reg_next(1);
        delayMatch41_reg(2) <= delayMatch41_reg_next(2);
        delayMatch41_reg(3) <= delayMatch41_reg_next(3);
        delayMatch41_reg(4) <= delayMatch41_reg_next(4);
        delayMatch41_reg(5) <= delayMatch41_reg_next(5);
        delayMatch41_reg(6) <= delayMatch41_reg_next(6);
        delayMatch41_reg(7) <= delayMatch41_reg_next(7);
        delayMatch41_reg(8) <= delayMatch41_reg_next(8);
        delayMatch41_reg(9) <= delayMatch41_reg_next(9);
        delayMatch41_reg(10) <= delayMatch41_reg_next(10);
        delayMatch41_reg(11) <= delayMatch41_reg_next(11);
        delayMatch41_reg(12) <= delayMatch41_reg_next(12);
        delayMatch41_reg(13) <= delayMatch41_reg_next(13);
        delayMatch41_reg(14) <= delayMatch41_reg_next(14);
        delayMatch41_reg(15) <= delayMatch41_reg_next(15);
        delayMatch41_reg(16) <= delayMatch41_reg_next(16);
        delayMatch41_reg(17) <= delayMatch41_reg_next(17);
        delayMatch41_reg(18) <= delayMatch41_reg_next(18);
        delayMatch41_reg(19) <= delayMatch41_reg_next(19);
        delayMatch41_reg(20) <= delayMatch41_reg_next(20);
        delayMatch41_reg(21) <= delayMatch41_reg_next(21);
        delayMatch41_reg(22) <= delayMatch41_reg_next(22);
        delayMatch41_reg(23) <= delayMatch41_reg_next(23);
        delayMatch41_reg(24) <= delayMatch41_reg_next(24);
      END IF;
    END IF;
  END PROCESS delayMatch41_process;

  SampleTime_div_Lx_1 <= delayMatch41_reg(24);
  delayMatch41_reg_next(0) <= SampleTime_div_Lx;
  delayMatch41_reg_next(1) <= delayMatch41_reg(0);
  delayMatch41_reg_next(2) <= delayMatch41_reg(1);
  delayMatch41_reg_next(3) <= delayMatch41_reg(2);
  delayMatch41_reg_next(4) <= delayMatch41_reg(3);
  delayMatch41_reg_next(5) <= delayMatch41_reg(4);
  delayMatch41_reg_next(6) <= delayMatch41_reg(5);
  delayMatch41_reg_next(7) <= delayMatch41_reg(6);
  delayMatch41_reg_next(8) <= delayMatch41_reg(7);
  delayMatch41_reg_next(9) <= delayMatch41_reg(8);
  delayMatch41_reg_next(10) <= delayMatch41_reg(9);
  delayMatch41_reg_next(11) <= delayMatch41_reg(10);
  delayMatch41_reg_next(12) <= delayMatch41_reg(11);
  delayMatch41_reg_next(13) <= delayMatch41_reg(12);
  delayMatch41_reg_next(14) <= delayMatch41_reg(13);
  delayMatch41_reg_next(15) <= delayMatch41_reg(14);
  delayMatch41_reg_next(16) <= delayMatch41_reg(15);
  delayMatch41_reg_next(17) <= delayMatch41_reg(16);
  delayMatch41_reg_next(18) <= delayMatch41_reg(17);
  delayMatch41_reg_next(19) <= delayMatch41_reg(18);
  delayMatch41_reg_next(20) <= delayMatch41_reg(19);
  delayMatch41_reg_next(21) <= delayMatch41_reg(20);
  delayMatch41_reg_next(22) <= delayMatch41_reg(21);
  delayMatch41_reg_next(23) <= delayMatch41_reg(22);
  delayMatch41_reg_next(24) <= delayMatch41_reg(23);

  delayMatch40_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch40_reg(0) <= X"00000000";
        delayMatch40_reg(1) <= X"00000000";
        delayMatch40_reg(2) <= X"00000000";
        delayMatch40_reg(3) <= X"00000000";
        delayMatch40_reg(4) <= X"00000000";
        delayMatch40_reg(5) <= X"00000000";
        delayMatch40_reg(6) <= X"00000000";
        delayMatch40_reg(7) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch40_reg(0) <= delayMatch40_reg_next(0);
        delayMatch40_reg(1) <= delayMatch40_reg_next(1);
        delayMatch40_reg(2) <= delayMatch40_reg_next(2);
        delayMatch40_reg(3) <= delayMatch40_reg_next(3);
        delayMatch40_reg(4) <= delayMatch40_reg_next(4);
        delayMatch40_reg(5) <= delayMatch40_reg_next(5);
        delayMatch40_reg(6) <= delayMatch40_reg_next(6);
        delayMatch40_reg(7) <= delayMatch40_reg_next(7);
      END IF;
    END IF;
  END PROCESS delayMatch40_process;

  x_phase_voltage_per_switching_state_1 <= delayMatch40_reg(7);
  delayMatch40_reg_next(0) <= x_phase_voltage_per_switching_state;
  delayMatch40_reg_next(1) <= delayMatch40_reg(0);
  delayMatch40_reg_next(2) <= delayMatch40_reg(1);
  delayMatch40_reg_next(3) <= delayMatch40_reg(2);
  delayMatch40_reg_next(4) <= delayMatch40_reg(3);
  delayMatch40_reg_next(5) <= delayMatch40_reg(4);
  delayMatch40_reg_next(6) <= delayMatch40_reg(5);
  delayMatch40_reg_next(7) <= delayMatch40_reg(6);

  delayMatch42_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch42_reg(0) <= X"00000000";
        delayMatch42_reg(1) <= X"00000000";
        delayMatch42_reg(2) <= X"00000000";
        delayMatch42_reg(3) <= X"00000000";
        delayMatch42_reg(4) <= X"00000000";
        delayMatch42_reg(5) <= X"00000000";
        delayMatch42_reg(6) <= X"00000000";
        delayMatch42_reg(7) <= X"00000000";
        delayMatch42_reg(8) <= X"00000000";
        delayMatch42_reg(9) <= X"00000000";
        delayMatch42_reg(10) <= X"00000000";
        delayMatch42_reg(11) <= X"00000000";
        delayMatch42_reg(12) <= X"00000000";
        delayMatch42_reg(13) <= X"00000000";
        delayMatch42_reg(14) <= X"00000000";
        delayMatch42_reg(15) <= X"00000000";
        delayMatch42_reg(16) <= X"00000000";
        delayMatch42_reg(17) <= X"00000000";
        delayMatch42_reg(18) <= X"00000000";
        delayMatch42_reg(19) <= X"00000000";
        delayMatch42_reg(20) <= X"00000000";
        delayMatch42_reg(21) <= X"00000000";
        delayMatch42_reg(22) <= X"00000000";
        delayMatch42_reg(23) <= X"00000000";
        delayMatch42_reg(24) <= X"00000000";
        delayMatch42_reg(25) <= X"00000000";
        delayMatch42_reg(26) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch42_reg(0) <= delayMatch42_reg_next(0);
        delayMatch42_reg(1) <= delayMatch42_reg_next(1);
        delayMatch42_reg(2) <= delayMatch42_reg_next(2);
        delayMatch42_reg(3) <= delayMatch42_reg_next(3);
        delayMatch42_reg(4) <= delayMatch42_reg_next(4);
        delayMatch42_reg(5) <= delayMatch42_reg_next(5);
        delayMatch42_reg(6) <= delayMatch42_reg_next(6);
        delayMatch42_reg(7) <= delayMatch42_reg_next(7);
        delayMatch42_reg(8) <= delayMatch42_reg_next(8);
        delayMatch42_reg(9) <= delayMatch42_reg_next(9);
        delayMatch42_reg(10) <= delayMatch42_reg_next(10);
        delayMatch42_reg(11) <= delayMatch42_reg_next(11);
        delayMatch42_reg(12) <= delayMatch42_reg_next(12);
        delayMatch42_reg(13) <= delayMatch42_reg_next(13);
        delayMatch42_reg(14) <= delayMatch42_reg_next(14);
        delayMatch42_reg(15) <= delayMatch42_reg_next(15);
        delayMatch42_reg(16) <= delayMatch42_reg_next(16);
        delayMatch42_reg(17) <= delayMatch42_reg_next(17);
        delayMatch42_reg(18) <= delayMatch42_reg_next(18);
        delayMatch42_reg(19) <= delayMatch42_reg_next(19);
        delayMatch42_reg(20) <= delayMatch42_reg_next(20);
        delayMatch42_reg(21) <= delayMatch42_reg_next(21);
        delayMatch42_reg(22) <= delayMatch42_reg_next(22);
        delayMatch42_reg(23) <= delayMatch42_reg_next(23);
        delayMatch42_reg(24) <= delayMatch42_reg_next(24);
        delayMatch42_reg(25) <= delayMatch42_reg_next(25);
        delayMatch42_reg(26) <= delayMatch42_reg_next(26);
      END IF;
    END IF;
  END PROCESS delayMatch42_process;

  ix_k_1_1 <= delayMatch42_reg(26);
  delayMatch42_reg_next(0) <= ix_k_1;
  delayMatch42_reg_next(1) <= delayMatch42_reg(0);
  delayMatch42_reg_next(2) <= delayMatch42_reg(1);
  delayMatch42_reg_next(3) <= delayMatch42_reg(2);
  delayMatch42_reg_next(4) <= delayMatch42_reg(3);
  delayMatch42_reg_next(5) <= delayMatch42_reg(4);
  delayMatch42_reg_next(6) <= delayMatch42_reg(5);
  delayMatch42_reg_next(7) <= delayMatch42_reg(6);
  delayMatch42_reg_next(8) <= delayMatch42_reg(7);
  delayMatch42_reg_next(9) <= delayMatch42_reg(8);
  delayMatch42_reg_next(10) <= delayMatch42_reg(9);
  delayMatch42_reg_next(11) <= delayMatch42_reg(10);
  delayMatch42_reg_next(12) <= delayMatch42_reg(11);
  delayMatch42_reg_next(13) <= delayMatch42_reg(12);
  delayMatch42_reg_next(14) <= delayMatch42_reg(13);
  delayMatch42_reg_next(15) <= delayMatch42_reg(14);
  delayMatch42_reg_next(16) <= delayMatch42_reg(15);
  delayMatch42_reg_next(17) <= delayMatch42_reg(16);
  delayMatch42_reg_next(18) <= delayMatch42_reg(17);
  delayMatch42_reg_next(19) <= delayMatch42_reg(18);
  delayMatch42_reg_next(20) <= delayMatch42_reg(19);
  delayMatch42_reg_next(21) <= delayMatch42_reg(20);
  delayMatch42_reg_next(22) <= delayMatch42_reg(21);
  delayMatch42_reg_next(23) <= delayMatch42_reg(22);
  delayMatch42_reg_next(24) <= delayMatch42_reg(23);
  delayMatch42_reg_next(25) <= delayMatch42_reg(24);
  delayMatch42_reg_next(26) <= delayMatch42_reg(25);

  delayMatch50_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch50_reg(0) <= X"00000000";
        delayMatch50_reg(1) <= X"00000000";
        delayMatch50_reg(2) <= X"00000000";
        delayMatch50_reg(3) <= X"00000000";
        delayMatch50_reg(4) <= X"00000000";
        delayMatch50_reg(5) <= X"00000000";
        delayMatch50_reg(6) <= X"00000000";
        delayMatch50_reg(7) <= X"00000000";
        delayMatch50_reg(8) <= X"00000000";
        delayMatch50_reg(9) <= X"00000000";
        delayMatch50_reg(10) <= X"00000000";
        delayMatch50_reg(11) <= X"00000000";
        delayMatch50_reg(12) <= X"00000000";
        delayMatch50_reg(13) <= X"00000000";
        delayMatch50_reg(14) <= X"00000000";
        delayMatch50_reg(15) <= X"00000000";
        delayMatch50_reg(16) <= X"00000000";
        delayMatch50_reg(17) <= X"00000000";
        delayMatch50_reg(18) <= X"00000000";
        delayMatch50_reg(19) <= X"00000000";
        delayMatch50_reg(20) <= X"00000000";
        delayMatch50_reg(21) <= X"00000000";
        delayMatch50_reg(22) <= X"00000000";
        delayMatch50_reg(23) <= X"00000000";
        delayMatch50_reg(24) <= X"00000000";
        delayMatch50_reg(25) <= X"00000000";
        delayMatch50_reg(26) <= X"00000000";
        delayMatch50_reg(27) <= X"00000000";
        delayMatch50_reg(28) <= X"00000000";
        delayMatch50_reg(29) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch50_reg(0) <= delayMatch50_reg_next(0);
        delayMatch50_reg(1) <= delayMatch50_reg_next(1);
        delayMatch50_reg(2) <= delayMatch50_reg_next(2);
        delayMatch50_reg(3) <= delayMatch50_reg_next(3);
        delayMatch50_reg(4) <= delayMatch50_reg_next(4);
        delayMatch50_reg(5) <= delayMatch50_reg_next(5);
        delayMatch50_reg(6) <= delayMatch50_reg_next(6);
        delayMatch50_reg(7) <= delayMatch50_reg_next(7);
        delayMatch50_reg(8) <= delayMatch50_reg_next(8);
        delayMatch50_reg(9) <= delayMatch50_reg_next(9);
        delayMatch50_reg(10) <= delayMatch50_reg_next(10);
        delayMatch50_reg(11) <= delayMatch50_reg_next(11);
        delayMatch50_reg(12) <= delayMatch50_reg_next(12);
        delayMatch50_reg(13) <= delayMatch50_reg_next(13);
        delayMatch50_reg(14) <= delayMatch50_reg_next(14);
        delayMatch50_reg(15) <= delayMatch50_reg_next(15);
        delayMatch50_reg(16) <= delayMatch50_reg_next(16);
        delayMatch50_reg(17) <= delayMatch50_reg_next(17);
        delayMatch50_reg(18) <= delayMatch50_reg_next(18);
        delayMatch50_reg(19) <= delayMatch50_reg_next(19);
        delayMatch50_reg(20) <= delayMatch50_reg_next(20);
        delayMatch50_reg(21) <= delayMatch50_reg_next(21);
        delayMatch50_reg(22) <= delayMatch50_reg_next(22);
        delayMatch50_reg(23) <= delayMatch50_reg_next(23);
        delayMatch50_reg(24) <= delayMatch50_reg_next(24);
        delayMatch50_reg(25) <= delayMatch50_reg_next(25);
        delayMatch50_reg(26) <= delayMatch50_reg_next(26);
        delayMatch50_reg(27) <= delayMatch50_reg_next(27);
        delayMatch50_reg(28) <= delayMatch50_reg_next(28);
        delayMatch50_reg(29) <= delayMatch50_reg_next(29);
      END IF;
    END IF;
  END PROCESS delayMatch50_process;

  Out_1_4 <= delayMatch50_reg(29);
  delayMatch50_reg_next(0) <= Out_1_3;
  delayMatch50_reg_next(1) <= delayMatch50_reg(0);
  delayMatch50_reg_next(2) <= delayMatch50_reg(1);
  delayMatch50_reg_next(3) <= delayMatch50_reg(2);
  delayMatch50_reg_next(4) <= delayMatch50_reg(3);
  delayMatch50_reg_next(5) <= delayMatch50_reg(4);
  delayMatch50_reg_next(6) <= delayMatch50_reg(5);
  delayMatch50_reg_next(7) <= delayMatch50_reg(6);
  delayMatch50_reg_next(8) <= delayMatch50_reg(7);
  delayMatch50_reg_next(9) <= delayMatch50_reg(8);
  delayMatch50_reg_next(10) <= delayMatch50_reg(9);
  delayMatch50_reg_next(11) <= delayMatch50_reg(10);
  delayMatch50_reg_next(12) <= delayMatch50_reg(11);
  delayMatch50_reg_next(13) <= delayMatch50_reg(12);
  delayMatch50_reg_next(14) <= delayMatch50_reg(13);
  delayMatch50_reg_next(15) <= delayMatch50_reg(14);
  delayMatch50_reg_next(16) <= delayMatch50_reg(15);
  delayMatch50_reg_next(17) <= delayMatch50_reg(16);
  delayMatch50_reg_next(18) <= delayMatch50_reg(17);
  delayMatch50_reg_next(19) <= delayMatch50_reg(18);
  delayMatch50_reg_next(20) <= delayMatch50_reg(19);
  delayMatch50_reg_next(21) <= delayMatch50_reg(20);
  delayMatch50_reg_next(22) <= delayMatch50_reg(21);
  delayMatch50_reg_next(23) <= delayMatch50_reg(22);
  delayMatch50_reg_next(24) <= delayMatch50_reg(23);
  delayMatch50_reg_next(25) <= delayMatch50_reg(24);
  delayMatch50_reg_next(26) <= delayMatch50_reg(25);
  delayMatch50_reg_next(27) <= delayMatch50_reg(26);
  delayMatch50_reg_next(28) <= delayMatch50_reg(27);
  delayMatch50_reg_next(29) <= delayMatch50_reg(28);

  delayMatch48_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch48_reg(0) <= X"00000000";
        delayMatch48_reg(1) <= X"00000000";
        delayMatch48_reg(2) <= X"00000000";
        delayMatch48_reg(3) <= X"00000000";
        delayMatch48_reg(4) <= X"00000000";
        delayMatch48_reg(5) <= X"00000000";
        delayMatch48_reg(6) <= X"00000000";
        delayMatch48_reg(7) <= X"00000000";
        delayMatch48_reg(8) <= X"00000000";
        delayMatch48_reg(9) <= X"00000000";
        delayMatch48_reg(10) <= X"00000000";
        delayMatch48_reg(11) <= X"00000000";
        delayMatch48_reg(12) <= X"00000000";
        delayMatch48_reg(13) <= X"00000000";
        delayMatch48_reg(14) <= X"00000000";
        delayMatch48_reg(15) <= X"00000000";
        delayMatch48_reg(16) <= X"00000000";
        delayMatch48_reg(17) <= X"00000000";
        delayMatch48_reg(18) <= X"00000000";
        delayMatch48_reg(19) <= X"00000000";
        delayMatch48_reg(20) <= X"00000000";
        delayMatch48_reg(21) <= X"00000000";
        delayMatch48_reg(22) <= X"00000000";
        delayMatch48_reg(23) <= X"00000000";
        delayMatch48_reg(24) <= X"00000000";
        delayMatch48_reg(25) <= X"00000000";
        delayMatch48_reg(26) <= X"00000000";
        delayMatch48_reg(27) <= X"00000000";
        delayMatch48_reg(28) <= X"00000000";
        delayMatch48_reg(29) <= X"00000000";
        delayMatch48_reg(30) <= X"00000000";
        delayMatch48_reg(31) <= X"00000000";
        delayMatch48_reg(32) <= X"00000000";
        delayMatch48_reg(33) <= X"00000000";
        delayMatch48_reg(34) <= X"00000000";
        delayMatch48_reg(35) <= X"00000000";
        delayMatch48_reg(36) <= X"00000000";
        delayMatch48_reg(37) <= X"00000000";
        delayMatch48_reg(38) <= X"00000000";
        delayMatch48_reg(39) <= X"00000000";
        delayMatch48_reg(40) <= X"00000000";
        delayMatch48_reg(41) <= X"00000000";
        delayMatch48_reg(42) <= X"00000000";
        delayMatch48_reg(43) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch48_reg(0) <= delayMatch48_reg_next(0);
        delayMatch48_reg(1) <= delayMatch48_reg_next(1);
        delayMatch48_reg(2) <= delayMatch48_reg_next(2);
        delayMatch48_reg(3) <= delayMatch48_reg_next(3);
        delayMatch48_reg(4) <= delayMatch48_reg_next(4);
        delayMatch48_reg(5) <= delayMatch48_reg_next(5);
        delayMatch48_reg(6) <= delayMatch48_reg_next(6);
        delayMatch48_reg(7) <= delayMatch48_reg_next(7);
        delayMatch48_reg(8) <= delayMatch48_reg_next(8);
        delayMatch48_reg(9) <= delayMatch48_reg_next(9);
        delayMatch48_reg(10) <= delayMatch48_reg_next(10);
        delayMatch48_reg(11) <= delayMatch48_reg_next(11);
        delayMatch48_reg(12) <= delayMatch48_reg_next(12);
        delayMatch48_reg(13) <= delayMatch48_reg_next(13);
        delayMatch48_reg(14) <= delayMatch48_reg_next(14);
        delayMatch48_reg(15) <= delayMatch48_reg_next(15);
        delayMatch48_reg(16) <= delayMatch48_reg_next(16);
        delayMatch48_reg(17) <= delayMatch48_reg_next(17);
        delayMatch48_reg(18) <= delayMatch48_reg_next(18);
        delayMatch48_reg(19) <= delayMatch48_reg_next(19);
        delayMatch48_reg(20) <= delayMatch48_reg_next(20);
        delayMatch48_reg(21) <= delayMatch48_reg_next(21);
        delayMatch48_reg(22) <= delayMatch48_reg_next(22);
        delayMatch48_reg(23) <= delayMatch48_reg_next(23);
        delayMatch48_reg(24) <= delayMatch48_reg_next(24);
        delayMatch48_reg(25) <= delayMatch48_reg_next(25);
        delayMatch48_reg(26) <= delayMatch48_reg_next(26);
        delayMatch48_reg(27) <= delayMatch48_reg_next(27);
        delayMatch48_reg(28) <= delayMatch48_reg_next(28);
        delayMatch48_reg(29) <= delayMatch48_reg_next(29);
        delayMatch48_reg(30) <= delayMatch48_reg_next(30);
        delayMatch48_reg(31) <= delayMatch48_reg_next(31);
        delayMatch48_reg(32) <= delayMatch48_reg_next(32);
        delayMatch48_reg(33) <= delayMatch48_reg_next(33);
        delayMatch48_reg(34) <= delayMatch48_reg_next(34);
        delayMatch48_reg(35) <= delayMatch48_reg_next(35);
        delayMatch48_reg(36) <= delayMatch48_reg_next(36);
        delayMatch48_reg(37) <= delayMatch48_reg_next(37);
        delayMatch48_reg(38) <= delayMatch48_reg_next(38);
        delayMatch48_reg(39) <= delayMatch48_reg_next(39);
        delayMatch48_reg(40) <= delayMatch48_reg_next(40);
        delayMatch48_reg(41) <= delayMatch48_reg_next(41);
        delayMatch48_reg(42) <= delayMatch48_reg_next(42);
        delayMatch48_reg(43) <= delayMatch48_reg_next(43);
      END IF;
    END IF;
  END PROCESS delayMatch48_process;

  iy_ref_1 <= delayMatch48_reg(43);
  delayMatch48_reg_next(0) <= iy_ref;
  delayMatch48_reg_next(1) <= delayMatch48_reg(0);
  delayMatch48_reg_next(2) <= delayMatch48_reg(1);
  delayMatch48_reg_next(3) <= delayMatch48_reg(2);
  delayMatch48_reg_next(4) <= delayMatch48_reg(3);
  delayMatch48_reg_next(5) <= delayMatch48_reg(4);
  delayMatch48_reg_next(6) <= delayMatch48_reg(5);
  delayMatch48_reg_next(7) <= delayMatch48_reg(6);
  delayMatch48_reg_next(8) <= delayMatch48_reg(7);
  delayMatch48_reg_next(9) <= delayMatch48_reg(8);
  delayMatch48_reg_next(10) <= delayMatch48_reg(9);
  delayMatch48_reg_next(11) <= delayMatch48_reg(10);
  delayMatch48_reg_next(12) <= delayMatch48_reg(11);
  delayMatch48_reg_next(13) <= delayMatch48_reg(12);
  delayMatch48_reg_next(14) <= delayMatch48_reg(13);
  delayMatch48_reg_next(15) <= delayMatch48_reg(14);
  delayMatch48_reg_next(16) <= delayMatch48_reg(15);
  delayMatch48_reg_next(17) <= delayMatch48_reg(16);
  delayMatch48_reg_next(18) <= delayMatch48_reg(17);
  delayMatch48_reg_next(19) <= delayMatch48_reg(18);
  delayMatch48_reg_next(20) <= delayMatch48_reg(19);
  delayMatch48_reg_next(21) <= delayMatch48_reg(20);
  delayMatch48_reg_next(22) <= delayMatch48_reg(21);
  delayMatch48_reg_next(23) <= delayMatch48_reg(22);
  delayMatch48_reg_next(24) <= delayMatch48_reg(23);
  delayMatch48_reg_next(25) <= delayMatch48_reg(24);
  delayMatch48_reg_next(26) <= delayMatch48_reg(25);
  delayMatch48_reg_next(27) <= delayMatch48_reg(26);
  delayMatch48_reg_next(28) <= delayMatch48_reg(27);
  delayMatch48_reg_next(29) <= delayMatch48_reg(28);
  delayMatch48_reg_next(30) <= delayMatch48_reg(29);
  delayMatch48_reg_next(31) <= delayMatch48_reg(30);
  delayMatch48_reg_next(32) <= delayMatch48_reg(31);
  delayMatch48_reg_next(33) <= delayMatch48_reg(32);
  delayMatch48_reg_next(34) <= delayMatch48_reg(33);
  delayMatch48_reg_next(35) <= delayMatch48_reg(34);
  delayMatch48_reg_next(36) <= delayMatch48_reg(35);
  delayMatch48_reg_next(37) <= delayMatch48_reg(36);
  delayMatch48_reg_next(38) <= delayMatch48_reg(37);
  delayMatch48_reg_next(39) <= delayMatch48_reg(38);
  delayMatch48_reg_next(40) <= delayMatch48_reg(39);
  delayMatch48_reg_next(41) <= delayMatch48_reg(40);
  delayMatch48_reg_next(42) <= delayMatch48_reg(41);
  delayMatch48_reg_next(43) <= delayMatch48_reg(42);

  delayMatch46_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch46_reg(0) <= X"00000000";
        delayMatch46_reg(1) <= X"00000000";
        delayMatch46_reg(2) <= X"00000000";
        delayMatch46_reg(3) <= X"00000000";
        delayMatch46_reg(4) <= X"00000000";
        delayMatch46_reg(5) <= X"00000000";
        delayMatch46_reg(6) <= X"00000000";
        delayMatch46_reg(7) <= X"00000000";
        delayMatch46_reg(8) <= X"00000000";
        delayMatch46_reg(9) <= X"00000000";
        delayMatch46_reg(10) <= X"00000000";
        delayMatch46_reg(11) <= X"00000000";
        delayMatch46_reg(12) <= X"00000000";
        delayMatch46_reg(13) <= X"00000000";
        delayMatch46_reg(14) <= X"00000000";
        delayMatch46_reg(15) <= X"00000000";
        delayMatch46_reg(16) <= X"00000000";
        delayMatch46_reg(17) <= X"00000000";
        delayMatch46_reg(18) <= X"00000000";
        delayMatch46_reg(19) <= X"00000000";
        delayMatch46_reg(20) <= X"00000000";
        delayMatch46_reg(21) <= X"00000000";
        delayMatch46_reg(22) <= X"00000000";
        delayMatch46_reg(23) <= X"00000000";
        delayMatch46_reg(24) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch46_reg(0) <= delayMatch46_reg_next(0);
        delayMatch46_reg(1) <= delayMatch46_reg_next(1);
        delayMatch46_reg(2) <= delayMatch46_reg_next(2);
        delayMatch46_reg(3) <= delayMatch46_reg_next(3);
        delayMatch46_reg(4) <= delayMatch46_reg_next(4);
        delayMatch46_reg(5) <= delayMatch46_reg_next(5);
        delayMatch46_reg(6) <= delayMatch46_reg_next(6);
        delayMatch46_reg(7) <= delayMatch46_reg_next(7);
        delayMatch46_reg(8) <= delayMatch46_reg_next(8);
        delayMatch46_reg(9) <= delayMatch46_reg_next(9);
        delayMatch46_reg(10) <= delayMatch46_reg_next(10);
        delayMatch46_reg(11) <= delayMatch46_reg_next(11);
        delayMatch46_reg(12) <= delayMatch46_reg_next(12);
        delayMatch46_reg(13) <= delayMatch46_reg_next(13);
        delayMatch46_reg(14) <= delayMatch46_reg_next(14);
        delayMatch46_reg(15) <= delayMatch46_reg_next(15);
        delayMatch46_reg(16) <= delayMatch46_reg_next(16);
        delayMatch46_reg(17) <= delayMatch46_reg_next(17);
        delayMatch46_reg(18) <= delayMatch46_reg_next(18);
        delayMatch46_reg(19) <= delayMatch46_reg_next(19);
        delayMatch46_reg(20) <= delayMatch46_reg_next(20);
        delayMatch46_reg(21) <= delayMatch46_reg_next(21);
        delayMatch46_reg(22) <= delayMatch46_reg_next(22);
        delayMatch46_reg(23) <= delayMatch46_reg_next(23);
        delayMatch46_reg(24) <= delayMatch46_reg_next(24);
      END IF;
    END IF;
  END PROCESS delayMatch46_process;

  SampleTime_div_Ly_1 <= delayMatch46_reg(24);
  delayMatch46_reg_next(0) <= SampleTime_div_Ly;
  delayMatch46_reg_next(1) <= delayMatch46_reg(0);
  delayMatch46_reg_next(2) <= delayMatch46_reg(1);
  delayMatch46_reg_next(3) <= delayMatch46_reg(2);
  delayMatch46_reg_next(4) <= delayMatch46_reg(3);
  delayMatch46_reg_next(5) <= delayMatch46_reg(4);
  delayMatch46_reg_next(6) <= delayMatch46_reg(5);
  delayMatch46_reg_next(7) <= delayMatch46_reg(6);
  delayMatch46_reg_next(8) <= delayMatch46_reg(7);
  delayMatch46_reg_next(9) <= delayMatch46_reg(8);
  delayMatch46_reg_next(10) <= delayMatch46_reg(9);
  delayMatch46_reg_next(11) <= delayMatch46_reg(10);
  delayMatch46_reg_next(12) <= delayMatch46_reg(11);
  delayMatch46_reg_next(13) <= delayMatch46_reg(12);
  delayMatch46_reg_next(14) <= delayMatch46_reg(13);
  delayMatch46_reg_next(15) <= delayMatch46_reg(14);
  delayMatch46_reg_next(16) <= delayMatch46_reg(15);
  delayMatch46_reg_next(17) <= delayMatch46_reg(16);
  delayMatch46_reg_next(18) <= delayMatch46_reg(17);
  delayMatch46_reg_next(19) <= delayMatch46_reg(18);
  delayMatch46_reg_next(20) <= delayMatch46_reg(19);
  delayMatch46_reg_next(21) <= delayMatch46_reg(20);
  delayMatch46_reg_next(22) <= delayMatch46_reg(21);
  delayMatch46_reg_next(23) <= delayMatch46_reg(22);
  delayMatch46_reg_next(24) <= delayMatch46_reg(23);

  delayMatch45_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch45_reg(0) <= X"00000000";
        delayMatch45_reg(1) <= X"00000000";
        delayMatch45_reg(2) <= X"00000000";
        delayMatch45_reg(3) <= X"00000000";
        delayMatch45_reg(4) <= X"00000000";
        delayMatch45_reg(5) <= X"00000000";
        delayMatch45_reg(6) <= X"00000000";
        delayMatch45_reg(7) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch45_reg(0) <= delayMatch45_reg_next(0);
        delayMatch45_reg(1) <= delayMatch45_reg_next(1);
        delayMatch45_reg(2) <= delayMatch45_reg_next(2);
        delayMatch45_reg(3) <= delayMatch45_reg_next(3);
        delayMatch45_reg(4) <= delayMatch45_reg_next(4);
        delayMatch45_reg(5) <= delayMatch45_reg_next(5);
        delayMatch45_reg(6) <= delayMatch45_reg_next(6);
        delayMatch45_reg(7) <= delayMatch45_reg_next(7);
      END IF;
    END IF;
  END PROCESS delayMatch45_process;

  y_phase_voltage_per_switching_state_1 <= delayMatch45_reg(7);
  delayMatch45_reg_next(0) <= y_phase_voltage_per_switching_state;
  delayMatch45_reg_next(1) <= delayMatch45_reg(0);
  delayMatch45_reg_next(2) <= delayMatch45_reg(1);
  delayMatch45_reg_next(3) <= delayMatch45_reg(2);
  delayMatch45_reg_next(4) <= delayMatch45_reg(3);
  delayMatch45_reg_next(5) <= delayMatch45_reg(4);
  delayMatch45_reg_next(6) <= delayMatch45_reg(5);
  delayMatch45_reg_next(7) <= delayMatch45_reg(6);

  delayMatch47_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch47_reg(0) <= X"00000000";
        delayMatch47_reg(1) <= X"00000000";
        delayMatch47_reg(2) <= X"00000000";
        delayMatch47_reg(3) <= X"00000000";
        delayMatch47_reg(4) <= X"00000000";
        delayMatch47_reg(5) <= X"00000000";
        delayMatch47_reg(6) <= X"00000000";
        delayMatch47_reg(7) <= X"00000000";
        delayMatch47_reg(8) <= X"00000000";
        delayMatch47_reg(9) <= X"00000000";
        delayMatch47_reg(10) <= X"00000000";
        delayMatch47_reg(11) <= X"00000000";
        delayMatch47_reg(12) <= X"00000000";
        delayMatch47_reg(13) <= X"00000000";
        delayMatch47_reg(14) <= X"00000000";
        delayMatch47_reg(15) <= X"00000000";
        delayMatch47_reg(16) <= X"00000000";
        delayMatch47_reg(17) <= X"00000000";
        delayMatch47_reg(18) <= X"00000000";
        delayMatch47_reg(19) <= X"00000000";
        delayMatch47_reg(20) <= X"00000000";
        delayMatch47_reg(21) <= X"00000000";
        delayMatch47_reg(22) <= X"00000000";
        delayMatch47_reg(23) <= X"00000000";
        delayMatch47_reg(24) <= X"00000000";
        delayMatch47_reg(25) <= X"00000000";
        delayMatch47_reg(26) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch47_reg(0) <= delayMatch47_reg_next(0);
        delayMatch47_reg(1) <= delayMatch47_reg_next(1);
        delayMatch47_reg(2) <= delayMatch47_reg_next(2);
        delayMatch47_reg(3) <= delayMatch47_reg_next(3);
        delayMatch47_reg(4) <= delayMatch47_reg_next(4);
        delayMatch47_reg(5) <= delayMatch47_reg_next(5);
        delayMatch47_reg(6) <= delayMatch47_reg_next(6);
        delayMatch47_reg(7) <= delayMatch47_reg_next(7);
        delayMatch47_reg(8) <= delayMatch47_reg_next(8);
        delayMatch47_reg(9) <= delayMatch47_reg_next(9);
        delayMatch47_reg(10) <= delayMatch47_reg_next(10);
        delayMatch47_reg(11) <= delayMatch47_reg_next(11);
        delayMatch47_reg(12) <= delayMatch47_reg_next(12);
        delayMatch47_reg(13) <= delayMatch47_reg_next(13);
        delayMatch47_reg(14) <= delayMatch47_reg_next(14);
        delayMatch47_reg(15) <= delayMatch47_reg_next(15);
        delayMatch47_reg(16) <= delayMatch47_reg_next(16);
        delayMatch47_reg(17) <= delayMatch47_reg_next(17);
        delayMatch47_reg(18) <= delayMatch47_reg_next(18);
        delayMatch47_reg(19) <= delayMatch47_reg_next(19);
        delayMatch47_reg(20) <= delayMatch47_reg_next(20);
        delayMatch47_reg(21) <= delayMatch47_reg_next(21);
        delayMatch47_reg(22) <= delayMatch47_reg_next(22);
        delayMatch47_reg(23) <= delayMatch47_reg_next(23);
        delayMatch47_reg(24) <= delayMatch47_reg_next(24);
        delayMatch47_reg(25) <= delayMatch47_reg_next(25);
        delayMatch47_reg(26) <= delayMatch47_reg_next(26);
      END IF;
    END IF;
  END PROCESS delayMatch47_process;

  iy_k_1_1 <= delayMatch47_reg(26);
  delayMatch47_reg_next(0) <= iy_k_1;
  delayMatch47_reg_next(1) <= delayMatch47_reg(0);
  delayMatch47_reg_next(2) <= delayMatch47_reg(1);
  delayMatch47_reg_next(3) <= delayMatch47_reg(2);
  delayMatch47_reg_next(4) <= delayMatch47_reg(3);
  delayMatch47_reg_next(5) <= delayMatch47_reg(4);
  delayMatch47_reg_next(6) <= delayMatch47_reg(5);
  delayMatch47_reg_next(7) <= delayMatch47_reg(6);
  delayMatch47_reg_next(8) <= delayMatch47_reg(7);
  delayMatch47_reg_next(9) <= delayMatch47_reg(8);
  delayMatch47_reg_next(10) <= delayMatch47_reg(9);
  delayMatch47_reg_next(11) <= delayMatch47_reg(10);
  delayMatch47_reg_next(12) <= delayMatch47_reg(11);
  delayMatch47_reg_next(13) <= delayMatch47_reg(12);
  delayMatch47_reg_next(14) <= delayMatch47_reg(13);
  delayMatch47_reg_next(15) <= delayMatch47_reg(14);
  delayMatch47_reg_next(16) <= delayMatch47_reg(15);
  delayMatch47_reg_next(17) <= delayMatch47_reg(16);
  delayMatch47_reg_next(18) <= delayMatch47_reg(17);
  delayMatch47_reg_next(19) <= delayMatch47_reg(18);
  delayMatch47_reg_next(20) <= delayMatch47_reg(19);
  delayMatch47_reg_next(21) <= delayMatch47_reg(20);
  delayMatch47_reg_next(22) <= delayMatch47_reg(21);
  delayMatch47_reg_next(23) <= delayMatch47_reg(22);
  delayMatch47_reg_next(24) <= delayMatch47_reg(23);
  delayMatch47_reg_next(25) <= delayMatch47_reg(24);
  delayMatch47_reg_next(26) <= delayMatch47_reg(25);

  delayMatch51_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch51_reg(0) <= X"00000000";
        delayMatch51_reg(1) <= X"00000000";
        delayMatch51_reg(2) <= X"00000000";
        delayMatch51_reg(3) <= X"00000000";
        delayMatch51_reg(4) <= X"00000000";
        delayMatch51_reg(5) <= X"00000000";
        delayMatch51_reg(6) <= X"00000000";
        delayMatch51_reg(7) <= X"00000000";
        delayMatch51_reg(8) <= X"00000000";
        delayMatch51_reg(9) <= X"00000000";
        delayMatch51_reg(10) <= X"00000000";
        delayMatch51_reg(11) <= X"00000000";
        delayMatch51_reg(12) <= X"00000000";
        delayMatch51_reg(13) <= X"00000000";
        delayMatch51_reg(14) <= X"00000000";
        delayMatch51_reg(15) <= X"00000000";
        delayMatch51_reg(16) <= X"00000000";
        delayMatch51_reg(17) <= X"00000000";
        delayMatch51_reg(18) <= X"00000000";
        delayMatch51_reg(19) <= X"00000000";
        delayMatch51_reg(20) <= X"00000000";
        delayMatch51_reg(21) <= X"00000000";
        delayMatch51_reg(22) <= X"00000000";
        delayMatch51_reg(23) <= X"00000000";
        delayMatch51_reg(24) <= X"00000000";
        delayMatch51_reg(25) <= X"00000000";
        delayMatch51_reg(26) <= X"00000000";
        delayMatch51_reg(27) <= X"00000000";
        delayMatch51_reg(28) <= X"00000000";
        delayMatch51_reg(29) <= X"00000000";
        delayMatch51_reg(30) <= X"00000000";
        delayMatch51_reg(31) <= X"00000000";
        delayMatch51_reg(32) <= X"00000000";
        delayMatch51_reg(33) <= X"00000000";
        delayMatch51_reg(34) <= X"00000000";
        delayMatch51_reg(35) <= X"00000000";
        delayMatch51_reg(36) <= X"00000000";
        delayMatch51_reg(37) <= X"00000000";
        delayMatch51_reg(38) <= X"00000000";
        delayMatch51_reg(39) <= X"00000000";
        delayMatch51_reg(40) <= X"00000000";
      ELSIF enb = '1' THEN
        delayMatch51_reg(0) <= delayMatch51_reg_next(0);
        delayMatch51_reg(1) <= delayMatch51_reg_next(1);
        delayMatch51_reg(2) <= delayMatch51_reg_next(2);
        delayMatch51_reg(3) <= delayMatch51_reg_next(3);
        delayMatch51_reg(4) <= delayMatch51_reg_next(4);
        delayMatch51_reg(5) <= delayMatch51_reg_next(5);
        delayMatch51_reg(6) <= delayMatch51_reg_next(6);
        delayMatch51_reg(7) <= delayMatch51_reg_next(7);
        delayMatch51_reg(8) <= delayMatch51_reg_next(8);
        delayMatch51_reg(9) <= delayMatch51_reg_next(9);
        delayMatch51_reg(10) <= delayMatch51_reg_next(10);
        delayMatch51_reg(11) <= delayMatch51_reg_next(11);
        delayMatch51_reg(12) <= delayMatch51_reg_next(12);
        delayMatch51_reg(13) <= delayMatch51_reg_next(13);
        delayMatch51_reg(14) <= delayMatch51_reg_next(14);
        delayMatch51_reg(15) <= delayMatch51_reg_next(15);
        delayMatch51_reg(16) <= delayMatch51_reg_next(16);
        delayMatch51_reg(17) <= delayMatch51_reg_next(17);
        delayMatch51_reg(18) <= delayMatch51_reg_next(18);
        delayMatch51_reg(19) <= delayMatch51_reg_next(19);
        delayMatch51_reg(20) <= delayMatch51_reg_next(20);
        delayMatch51_reg(21) <= delayMatch51_reg_next(21);
        delayMatch51_reg(22) <= delayMatch51_reg_next(22);
        delayMatch51_reg(23) <= delayMatch51_reg_next(23);
        delayMatch51_reg(24) <= delayMatch51_reg_next(24);
        delayMatch51_reg(25) <= delayMatch51_reg_next(25);
        delayMatch51_reg(26) <= delayMatch51_reg_next(26);
        delayMatch51_reg(27) <= delayMatch51_reg_next(27);
        delayMatch51_reg(28) <= delayMatch51_reg_next(28);
        delayMatch51_reg(29) <= delayMatch51_reg_next(29);
        delayMatch51_reg(30) <= delayMatch51_reg_next(30);
        delayMatch51_reg(31) <= delayMatch51_reg_next(31);
        delayMatch51_reg(32) <= delayMatch51_reg_next(32);
        delayMatch51_reg(33) <= delayMatch51_reg_next(33);
        delayMatch51_reg(34) <= delayMatch51_reg_next(34);
        delayMatch51_reg(35) <= delayMatch51_reg_next(35);
        delayMatch51_reg(36) <= delayMatch51_reg_next(36);
        delayMatch51_reg(37) <= delayMatch51_reg_next(37);
        delayMatch51_reg(38) <= delayMatch51_reg_next(38);
        delayMatch51_reg(39) <= delayMatch51_reg_next(39);
        delayMatch51_reg(40) <= delayMatch51_reg_next(40);
      END IF;
    END IF;
  END PROCESS delayMatch51_process;

  Out_1_6 <= delayMatch51_reg(40);
  delayMatch51_reg_next(0) <= Out_1_5;
  delayMatch51_reg_next(1) <= delayMatch51_reg(0);
  delayMatch51_reg_next(2) <= delayMatch51_reg(1);
  delayMatch51_reg_next(3) <= delayMatch51_reg(2);
  delayMatch51_reg_next(4) <= delayMatch51_reg(3);
  delayMatch51_reg_next(5) <= delayMatch51_reg(4);
  delayMatch51_reg_next(6) <= delayMatch51_reg(5);
  delayMatch51_reg_next(7) <= delayMatch51_reg(6);
  delayMatch51_reg_next(8) <= delayMatch51_reg(7);
  delayMatch51_reg_next(9) <= delayMatch51_reg(8);
  delayMatch51_reg_next(10) <= delayMatch51_reg(9);
  delayMatch51_reg_next(11) <= delayMatch51_reg(10);
  delayMatch51_reg_next(12) <= delayMatch51_reg(11);
  delayMatch51_reg_next(13) <= delayMatch51_reg(12);
  delayMatch51_reg_next(14) <= delayMatch51_reg(13);
  delayMatch51_reg_next(15) <= delayMatch51_reg(14);
  delayMatch51_reg_next(16) <= delayMatch51_reg(15);
  delayMatch51_reg_next(17) <= delayMatch51_reg(16);
  delayMatch51_reg_next(18) <= delayMatch51_reg(17);
  delayMatch51_reg_next(19) <= delayMatch51_reg(18);
  delayMatch51_reg_next(20) <= delayMatch51_reg(19);
  delayMatch51_reg_next(21) <= delayMatch51_reg(20);
  delayMatch51_reg_next(22) <= delayMatch51_reg(21);
  delayMatch51_reg_next(23) <= delayMatch51_reg(22);
  delayMatch51_reg_next(24) <= delayMatch51_reg(23);
  delayMatch51_reg_next(25) <= delayMatch51_reg(24);
  delayMatch51_reg_next(26) <= delayMatch51_reg(25);
  delayMatch51_reg_next(27) <= delayMatch51_reg(26);
  delayMatch51_reg_next(28) <= delayMatch51_reg(27);
  delayMatch51_reg_next(29) <= delayMatch51_reg(28);
  delayMatch51_reg_next(30) <= delayMatch51_reg(29);
  delayMatch51_reg_next(31) <= delayMatch51_reg(30);
  delayMatch51_reg_next(32) <= delayMatch51_reg(31);
  delayMatch51_reg_next(33) <= delayMatch51_reg(32);
  delayMatch51_reg_next(34) <= delayMatch51_reg(33);
  delayMatch51_reg_next(35) <= delayMatch51_reg(34);
  delayMatch51_reg_next(36) <= delayMatch51_reg(35);
  delayMatch51_reg_next(37) <= delayMatch51_reg(36);
  delayMatch51_reg_next(38) <= delayMatch51_reg(37);
  delayMatch51_reg_next(39) <= delayMatch51_reg(38);
  delayMatch51_reg_next(40) <= delayMatch51_reg(39);

END rtl;

