-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\valen\Documents\repos\UZ\ultrazohm_sw_pr\ip_cores\uz_pmsm_model_3ph_dq\hdl_prj\hdlsrc\uz_pmsm_model\uz_pmsm_model_3ph_dq_src_nfp_signum_double.vhd
-- Created: 2023-01-09 08:42:08
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_pmsm_model_3ph_dq_src_nfp_signum_double
-- Source Path: uz_pmsm_model/uz_pmsm_mode_3ph_dq/nfp_signum_double
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY uz_pmsm_model_3ph_dq_src_nfp_signum_double IS
  PORT( nfp_in                            :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
        nfp_out                           :   OUT   std_logic_vector(63 DOWNTO 0)  -- ufix64
        );
END uz_pmsm_model_3ph_dq_src_nfp_signum_double;


ARCHITECTURE rtl OF uz_pmsm_model_3ph_dq_src_nfp_signum_double IS

  -- Signals
  SIGNAL nfp_in_unsigned                  : unsigned(63 DOWNTO 0);  -- ufix64
  SIGNAL X_S                              : std_logic;  -- ufix1
  SIGNAL X_E                              : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL X_M                              : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Compare_To_Zero1_out1            : std_logic;  -- ufix1
  SIGNAL Compare_To_Zero_out1             : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1            : std_logic;  -- ufix1
  SIGNAL Constant2_out1                   : std_logic;  -- ufix1
  SIGNAL Switch1_out1                     : std_logic;  -- ufix1
  SIGNAL Compare_To_Constant_out1         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1           : std_logic;  -- ufix1
  SIGNAL Constant_out1                    : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Constant1_out1                   : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Switch_out1                      : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Switch2_out1                     : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Constant3_out1                   : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Switch3_out1                     : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL nfp_out_pack                     : unsigned(63 DOWNTO 0);  -- ufix64

BEGIN
  nfp_in_unsigned <= unsigned(nfp_in);

  -- Split 64 bit word into FP sign, exponent, mantissa
  X_S <= nfp_in_unsigned(63);
  X_E <= nfp_in_unsigned(62 DOWNTO 52);
  X_M <= nfp_in_unsigned(51 DOWNTO 0);

  
  Compare_To_Zero1_out1 <= '1' WHEN X_E = to_unsigned(16#000#, 11) ELSE
      '0';

  
  Compare_To_Zero_out1 <= '1' WHEN X_M = to_unsigned(0, 52) ELSE
      '0';

  Logical_Operator_out1 <= Compare_To_Zero1_out1 AND Compare_To_Zero_out1;

  Constant2_out1 <= '0';

  
  Switch1_out1 <= X_S WHEN Logical_Operator_out1 = '0' ELSE
      Constant2_out1;

  Compare_To_Constant_out1 <= (X_E(10) AND X_E(9) AND X_E(8) AND X_E(7) AND X_E(6) AND X_E(5) AND X_E(4) AND X_E(3) AND X_E(2) AND X_E(1) AND X_E(0));

  Logical_Operator1_out1 <=  NOT Compare_To_Zero_out1;

  Logical_Operator2_out1 <= Compare_To_Constant_out1 AND Logical_Operator1_out1;

  Constant_out1 <= to_unsigned(16#3FF#, 11);

  Constant1_out1 <= to_unsigned(16#000#, 11);

  
  Switch_out1 <= Constant_out1 WHEN Logical_Operator_out1 = '0' ELSE
      Constant1_out1;

  
  Switch2_out1 <= Switch_out1 WHEN Logical_Operator2_out1 = '0' ELSE
      X_E;

  Constant3_out1 <= to_unsigned(0, 52);

  
  Switch3_out1 <= Constant3_out1 WHEN Logical_Operator2_out1 = '0' ELSE
      X_M;

  -- Combine FP sign, exponent, mantissa into 64 bit word
  nfp_out_pack <= Switch1_out1 & Switch2_out1 & Switch3_out1;

  nfp_out <= std_logic_vector(nfp_out_pack);

END rtl;

