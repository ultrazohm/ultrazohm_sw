-- -------------------------------------------------------------
-- 
-- File Name: 9phase_trans/hdlsrc/Copy_of_uz_pmsm_model_9ph_21b_all_double/uz_pmsm9ph_trans_100mhz_src_Sine_HDL_Optimized.vhd
-- Created: 2022-06-09 09:43:25
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_pmsm9ph_trans_100mhz_src_Sine_HDL_Optimized
-- Source Path: Copy_of_uz_pmsm_model_9ph_21b_all_double/uz_pmsm_model_9ph/abc_to_dq/Sine HDL Optimized
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.uz_pmsm9ph_trans_100mhz_src_abc_to_dq_pkg.ALL;

ENTITY uz_pmsm9ph_trans_100mhz_src_Sine_HDL_Optimized IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_9_0                         :   IN    std_logic;
        u                                 :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En16
        x                                 :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En16
        y                                 :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En16
        );
END uz_pmsm9ph_trans_100mhz_src_Sine_HDL_Optimized;


ARCHITECTURE rtl OF uz_pmsm9ph_trans_100mhz_src_Sine_HDL_Optimized IS

  -- Constants
  CONSTANT Look_Up_Table1_data            : vector_of_signed18(0 TO 255) := 
    (to_signed(16#00000#, 18), to_signed(16#00192#, 18), to_signed(16#00324#, 18), to_signed(16#004B6#, 18),
     to_signed(16#00648#, 18), to_signed(16#007DA#, 18), to_signed(16#0096C#, 18), to_signed(16#00AFE#, 18),
     to_signed(16#00C90#, 18), to_signed(16#00E21#, 18), to_signed(16#00FB3#, 18), to_signed(16#01144#, 18),
     to_signed(16#012D5#, 18), to_signed(16#01466#, 18), to_signed(16#015F7#, 18), to_signed(16#01787#, 18),
     to_signed(16#01918#, 18), to_signed(16#01AA8#, 18), to_signed(16#01C38#, 18), to_signed(16#01DC7#, 18),
     to_signed(16#01F56#, 18), to_signed(16#020E5#, 18), to_signed(16#02274#, 18), to_signed(16#02402#, 18),
     to_signed(16#02590#, 18), to_signed(16#0271E#, 18), to_signed(16#028AB#, 18), to_signed(16#02A38#, 18),
     to_signed(16#02BC4#, 18), to_signed(16#02D50#, 18), to_signed(16#02EDC#, 18), to_signed(16#03067#, 18),
     to_signed(16#031F1#, 18), to_signed(16#0337C#, 18), to_signed(16#03505#, 18), to_signed(16#0368E#, 18),
     to_signed(16#03817#, 18), to_signed(16#0399F#, 18), to_signed(16#03B27#, 18), to_signed(16#03CAE#, 18),
     to_signed(16#03E34#, 18), to_signed(16#03FBA#, 18), to_signed(16#0413F#, 18), to_signed(16#042C3#, 18),
     to_signed(16#04447#, 18), to_signed(16#045CB#, 18), to_signed(16#0474D#, 18), to_signed(16#048CF#, 18),
     to_signed(16#04A50#, 18), to_signed(16#04BD1#, 18), to_signed(16#04D50#, 18), to_signed(16#04ECF#, 18),
     to_signed(16#0504D#, 18), to_signed(16#051CB#, 18), to_signed(16#05348#, 18), to_signed(16#054C3#, 18),
     to_signed(16#0563E#, 18), to_signed(16#057B9#, 18), to_signed(16#05932#, 18), to_signed(16#05AAA#, 18),
     to_signed(16#05C22#, 18), to_signed(16#05D99#, 18), to_signed(16#05F0F#, 18), to_signed(16#06084#, 18),
     to_signed(16#061F8#, 18), to_signed(16#0636B#, 18), to_signed(16#064DD#, 18), to_signed(16#0664E#, 18),
     to_signed(16#067BE#, 18), to_signed(16#0692D#, 18), to_signed(16#06A9B#, 18), to_signed(16#06C08#, 18),
     to_signed(16#06D74#, 18), to_signed(16#06EDF#, 18), to_signed(16#07049#, 18), to_signed(16#071B2#, 18),
     to_signed(16#0731A#, 18), to_signed(16#07480#, 18), to_signed(16#075E6#, 18), to_signed(16#0774A#, 18),
     to_signed(16#078AD#, 18), to_signed(16#07A10#, 18), to_signed(16#07B70#, 18), to_signed(16#07CD0#, 18),
     to_signed(16#07E2F#, 18), to_signed(16#07F8C#, 18), to_signed(16#080E8#, 18), to_signed(16#08243#, 18),
     to_signed(16#0839C#, 18), to_signed(16#084F5#, 18), to_signed(16#0864C#, 18), to_signed(16#087A1#, 18),
     to_signed(16#088F6#, 18), to_signed(16#08A49#, 18), to_signed(16#08B9A#, 18), to_signed(16#08CEB#, 18),
     to_signed(16#08E3A#, 18), to_signed(16#08F88#, 18), to_signed(16#090D4#, 18), to_signed(16#0921F#, 18),
     to_signed(16#09368#, 18), to_signed(16#094B0#, 18), to_signed(16#095F7#, 18), to_signed(16#0973C#, 18),
     to_signed(16#09880#, 18), to_signed(16#099C2#, 18), to_signed(16#09B03#, 18), to_signed(16#09C42#, 18),
     to_signed(16#09D80#, 18), to_signed(16#09EBC#, 18), to_signed(16#09FF7#, 18), to_signed(16#0A130#, 18),
     to_signed(16#0A268#, 18), to_signed(16#0A39E#, 18), to_signed(16#0A4D2#, 18), to_signed(16#0A605#, 18),
     to_signed(16#0A736#, 18), to_signed(16#0A866#, 18), to_signed(16#0A994#, 18), to_signed(16#0AAC1#, 18),
     to_signed(16#0ABEB#, 18), to_signed(16#0AD14#, 18), to_signed(16#0AE3C#, 18), to_signed(16#0AF62#, 18),
     to_signed(16#0B086#, 18), to_signed(16#0B1A8#, 18), to_signed(16#0B2C9#, 18), to_signed(16#0B3E8#, 18),
     to_signed(16#0B505#, 18), to_signed(16#0B620#, 18), to_signed(16#0B73A#, 18), to_signed(16#0B852#, 18),
     to_signed(16#0B968#, 18), to_signed(16#0BA7D#, 18), to_signed(16#0BB8F#, 18), to_signed(16#0BCA0#, 18),
     to_signed(16#0BDAF#, 18), to_signed(16#0BEBC#, 18), to_signed(16#0BFC7#, 18), to_signed(16#0C0D1#, 18),
     to_signed(16#0C1D8#, 18), to_signed(16#0C2DE#, 18), to_signed(16#0C3E2#, 18), to_signed(16#0C4E4#, 18),
     to_signed(16#0C5E4#, 18), to_signed(16#0C6E2#, 18), to_signed(16#0C7DE#, 18), to_signed(16#0C8D9#, 18),
     to_signed(16#0C9D1#, 18), to_signed(16#0CAC7#, 18), to_signed(16#0CBBC#, 18), to_signed(16#0CCAE#, 18),
     to_signed(16#0CD9F#, 18), to_signed(16#0CE8E#, 18), to_signed(16#0CF7A#, 18), to_signed(16#0D065#, 18),
     to_signed(16#0D14D#, 18), to_signed(16#0D234#, 18), to_signed(16#0D318#, 18), to_signed(16#0D3FB#, 18),
     to_signed(16#0D4DB#, 18), to_signed(16#0D5BA#, 18), to_signed(16#0D696#, 18), to_signed(16#0D770#, 18),
     to_signed(16#0D848#, 18), to_signed(16#0D91E#, 18), to_signed(16#0D9F2#, 18), to_signed(16#0DAC4#, 18),
     to_signed(16#0DB94#, 18), to_signed(16#0DC62#, 18), to_signed(16#0DD2D#, 18), to_signed(16#0DDF7#, 18),
     to_signed(16#0DEBE#, 18), to_signed(16#0DF83#, 18), to_signed(16#0E046#, 18), to_signed(16#0E107#, 18),
     to_signed(16#0E1C6#, 18), to_signed(16#0E282#, 18), to_signed(16#0E33C#, 18), to_signed(16#0E3F4#, 18),
     to_signed(16#0E4AA#, 18), to_signed(16#0E55E#, 18), to_signed(16#0E610#, 18), to_signed(16#0E6BF#, 18),
     to_signed(16#0E76C#, 18), to_signed(16#0E817#, 18), to_signed(16#0E8BF#, 18), to_signed(16#0E966#, 18),
     to_signed(16#0EA0A#, 18), to_signed(16#0EAAB#, 18), to_signed(16#0EB4B#, 18), to_signed(16#0EBE8#, 18),
     to_signed(16#0EC83#, 18), to_signed(16#0ED1C#, 18), to_signed(16#0EDB3#, 18), to_signed(16#0EE47#, 18),
     to_signed(16#0EED9#, 18), to_signed(16#0EF68#, 18), to_signed(16#0EFF5#, 18), to_signed(16#0F080#, 18),
     to_signed(16#0F109#, 18), to_signed(16#0F18F#, 18), to_signed(16#0F213#, 18), to_signed(16#0F295#, 18),
     to_signed(16#0F314#, 18), to_signed(16#0F391#, 18), to_signed(16#0F40C#, 18), to_signed(16#0F484#, 18),
     to_signed(16#0F4FA#, 18), to_signed(16#0F56E#, 18), to_signed(16#0F5DF#, 18), to_signed(16#0F64E#, 18),
     to_signed(16#0F6BA#, 18), to_signed(16#0F724#, 18), to_signed(16#0F78C#, 18), to_signed(16#0F7F1#, 18),
     to_signed(16#0F854#, 18), to_signed(16#0F8B4#, 18), to_signed(16#0F913#, 18), to_signed(16#0F96E#, 18),
     to_signed(16#0F9C8#, 18), to_signed(16#0FA1F#, 18), to_signed(16#0FA73#, 18), to_signed(16#0FAC5#, 18),
     to_signed(16#0FB15#, 18), to_signed(16#0FB62#, 18), to_signed(16#0FBAD#, 18), to_signed(16#0FBF5#, 18),
     to_signed(16#0FC3B#, 18), to_signed(16#0FC7F#, 18), to_signed(16#0FCC0#, 18), to_signed(16#0FCFE#, 18),
     to_signed(16#0FD3B#, 18), to_signed(16#0FD74#, 18), to_signed(16#0FDAC#, 18), to_signed(16#0FDE1#, 18),
     to_signed(16#0FE13#, 18), to_signed(16#0FE43#, 18), to_signed(16#0FE71#, 18), to_signed(16#0FE9C#, 18),
     to_signed(16#0FEC4#, 18), to_signed(16#0FEEB#, 18), to_signed(16#0FF0E#, 18), to_signed(16#0FF30#, 18),
     to_signed(16#0FF4E#, 18), to_signed(16#0FF6B#, 18), to_signed(16#0FF85#, 18), to_signed(16#0FF9C#, 18),
     to_signed(16#0FFB1#, 18), to_signed(16#0FFC4#, 18), to_signed(16#0FFD4#, 18), to_signed(16#0FFE1#, 18),
     to_signed(16#0FFEC#, 18), to_signed(16#0FFF5#, 18), to_signed(16#0FFFB#, 18), to_signed(16#0FFFF#, 18));  -- sfix18 [256]
  CONSTANT Look_Up_Table_data             : vector_of_signed18(0 TO 255) := 
    (to_signed(16#00000#, 18), to_signed(16#00192#, 18), to_signed(16#00324#, 18), to_signed(16#004B6#, 18),
     to_signed(16#00648#, 18), to_signed(16#007DA#, 18), to_signed(16#0096C#, 18), to_signed(16#00AFE#, 18),
     to_signed(16#00C90#, 18), to_signed(16#00E21#, 18), to_signed(16#00FB3#, 18), to_signed(16#01144#, 18),
     to_signed(16#012D5#, 18), to_signed(16#01466#, 18), to_signed(16#015F7#, 18), to_signed(16#01787#, 18),
     to_signed(16#01918#, 18), to_signed(16#01AA8#, 18), to_signed(16#01C38#, 18), to_signed(16#01DC7#, 18),
     to_signed(16#01F56#, 18), to_signed(16#020E5#, 18), to_signed(16#02274#, 18), to_signed(16#02402#, 18),
     to_signed(16#02590#, 18), to_signed(16#0271E#, 18), to_signed(16#028AB#, 18), to_signed(16#02A38#, 18),
     to_signed(16#02BC4#, 18), to_signed(16#02D50#, 18), to_signed(16#02EDC#, 18), to_signed(16#03067#, 18),
     to_signed(16#031F1#, 18), to_signed(16#0337C#, 18), to_signed(16#03505#, 18), to_signed(16#0368E#, 18),
     to_signed(16#03817#, 18), to_signed(16#0399F#, 18), to_signed(16#03B27#, 18), to_signed(16#03CAE#, 18),
     to_signed(16#03E34#, 18), to_signed(16#03FBA#, 18), to_signed(16#0413F#, 18), to_signed(16#042C3#, 18),
     to_signed(16#04447#, 18), to_signed(16#045CB#, 18), to_signed(16#0474D#, 18), to_signed(16#048CF#, 18),
     to_signed(16#04A50#, 18), to_signed(16#04BD1#, 18), to_signed(16#04D50#, 18), to_signed(16#04ECF#, 18),
     to_signed(16#0504D#, 18), to_signed(16#051CB#, 18), to_signed(16#05348#, 18), to_signed(16#054C3#, 18),
     to_signed(16#0563E#, 18), to_signed(16#057B9#, 18), to_signed(16#05932#, 18), to_signed(16#05AAA#, 18),
     to_signed(16#05C22#, 18), to_signed(16#05D99#, 18), to_signed(16#05F0F#, 18), to_signed(16#06084#, 18),
     to_signed(16#061F8#, 18), to_signed(16#0636B#, 18), to_signed(16#064DD#, 18), to_signed(16#0664E#, 18),
     to_signed(16#067BE#, 18), to_signed(16#0692D#, 18), to_signed(16#06A9B#, 18), to_signed(16#06C08#, 18),
     to_signed(16#06D74#, 18), to_signed(16#06EDF#, 18), to_signed(16#07049#, 18), to_signed(16#071B2#, 18),
     to_signed(16#0731A#, 18), to_signed(16#07480#, 18), to_signed(16#075E6#, 18), to_signed(16#0774A#, 18),
     to_signed(16#078AD#, 18), to_signed(16#07A10#, 18), to_signed(16#07B70#, 18), to_signed(16#07CD0#, 18),
     to_signed(16#07E2F#, 18), to_signed(16#07F8C#, 18), to_signed(16#080E8#, 18), to_signed(16#08243#, 18),
     to_signed(16#0839C#, 18), to_signed(16#084F5#, 18), to_signed(16#0864C#, 18), to_signed(16#087A1#, 18),
     to_signed(16#088F6#, 18), to_signed(16#08A49#, 18), to_signed(16#08B9A#, 18), to_signed(16#08CEB#, 18),
     to_signed(16#08E3A#, 18), to_signed(16#08F88#, 18), to_signed(16#090D4#, 18), to_signed(16#0921F#, 18),
     to_signed(16#09368#, 18), to_signed(16#094B0#, 18), to_signed(16#095F7#, 18), to_signed(16#0973C#, 18),
     to_signed(16#09880#, 18), to_signed(16#099C2#, 18), to_signed(16#09B03#, 18), to_signed(16#09C42#, 18),
     to_signed(16#09D80#, 18), to_signed(16#09EBC#, 18), to_signed(16#09FF7#, 18), to_signed(16#0A130#, 18),
     to_signed(16#0A268#, 18), to_signed(16#0A39E#, 18), to_signed(16#0A4D2#, 18), to_signed(16#0A605#, 18),
     to_signed(16#0A736#, 18), to_signed(16#0A866#, 18), to_signed(16#0A994#, 18), to_signed(16#0AAC1#, 18),
     to_signed(16#0ABEB#, 18), to_signed(16#0AD14#, 18), to_signed(16#0AE3C#, 18), to_signed(16#0AF62#, 18),
     to_signed(16#0B086#, 18), to_signed(16#0B1A8#, 18), to_signed(16#0B2C9#, 18), to_signed(16#0B3E8#, 18),
     to_signed(16#0B505#, 18), to_signed(16#0B620#, 18), to_signed(16#0B73A#, 18), to_signed(16#0B852#, 18),
     to_signed(16#0B968#, 18), to_signed(16#0BA7D#, 18), to_signed(16#0BB8F#, 18), to_signed(16#0BCA0#, 18),
     to_signed(16#0BDAF#, 18), to_signed(16#0BEBC#, 18), to_signed(16#0BFC7#, 18), to_signed(16#0C0D1#, 18),
     to_signed(16#0C1D8#, 18), to_signed(16#0C2DE#, 18), to_signed(16#0C3E2#, 18), to_signed(16#0C4E4#, 18),
     to_signed(16#0C5E4#, 18), to_signed(16#0C6E2#, 18), to_signed(16#0C7DE#, 18), to_signed(16#0C8D9#, 18),
     to_signed(16#0C9D1#, 18), to_signed(16#0CAC7#, 18), to_signed(16#0CBBC#, 18), to_signed(16#0CCAE#, 18),
     to_signed(16#0CD9F#, 18), to_signed(16#0CE8E#, 18), to_signed(16#0CF7A#, 18), to_signed(16#0D065#, 18),
     to_signed(16#0D14D#, 18), to_signed(16#0D234#, 18), to_signed(16#0D318#, 18), to_signed(16#0D3FB#, 18),
     to_signed(16#0D4DB#, 18), to_signed(16#0D5BA#, 18), to_signed(16#0D696#, 18), to_signed(16#0D770#, 18),
     to_signed(16#0D848#, 18), to_signed(16#0D91E#, 18), to_signed(16#0D9F2#, 18), to_signed(16#0DAC4#, 18),
     to_signed(16#0DB94#, 18), to_signed(16#0DC62#, 18), to_signed(16#0DD2D#, 18), to_signed(16#0DDF7#, 18),
     to_signed(16#0DEBE#, 18), to_signed(16#0DF83#, 18), to_signed(16#0E046#, 18), to_signed(16#0E107#, 18),
     to_signed(16#0E1C6#, 18), to_signed(16#0E282#, 18), to_signed(16#0E33C#, 18), to_signed(16#0E3F4#, 18),
     to_signed(16#0E4AA#, 18), to_signed(16#0E55E#, 18), to_signed(16#0E610#, 18), to_signed(16#0E6BF#, 18),
     to_signed(16#0E76C#, 18), to_signed(16#0E817#, 18), to_signed(16#0E8BF#, 18), to_signed(16#0E966#, 18),
     to_signed(16#0EA0A#, 18), to_signed(16#0EAAB#, 18), to_signed(16#0EB4B#, 18), to_signed(16#0EBE8#, 18),
     to_signed(16#0EC83#, 18), to_signed(16#0ED1C#, 18), to_signed(16#0EDB3#, 18), to_signed(16#0EE47#, 18),
     to_signed(16#0EED9#, 18), to_signed(16#0EF68#, 18), to_signed(16#0EFF5#, 18), to_signed(16#0F080#, 18),
     to_signed(16#0F109#, 18), to_signed(16#0F18F#, 18), to_signed(16#0F213#, 18), to_signed(16#0F295#, 18),
     to_signed(16#0F314#, 18), to_signed(16#0F391#, 18), to_signed(16#0F40C#, 18), to_signed(16#0F484#, 18),
     to_signed(16#0F4FA#, 18), to_signed(16#0F56E#, 18), to_signed(16#0F5DF#, 18), to_signed(16#0F64E#, 18),
     to_signed(16#0F6BA#, 18), to_signed(16#0F724#, 18), to_signed(16#0F78C#, 18), to_signed(16#0F7F1#, 18),
     to_signed(16#0F854#, 18), to_signed(16#0F8B4#, 18), to_signed(16#0F913#, 18), to_signed(16#0F96E#, 18),
     to_signed(16#0F9C8#, 18), to_signed(16#0FA1F#, 18), to_signed(16#0FA73#, 18), to_signed(16#0FAC5#, 18),
     to_signed(16#0FB15#, 18), to_signed(16#0FB62#, 18), to_signed(16#0FBAD#, 18), to_signed(16#0FBF5#, 18),
     to_signed(16#0FC3B#, 18), to_signed(16#0FC7F#, 18), to_signed(16#0FCC0#, 18), to_signed(16#0FCFE#, 18),
     to_signed(16#0FD3B#, 18), to_signed(16#0FD74#, 18), to_signed(16#0FDAC#, 18), to_signed(16#0FDE1#, 18),
     to_signed(16#0FE13#, 18), to_signed(16#0FE43#, 18), to_signed(16#0FE71#, 18), to_signed(16#0FE9C#, 18),
     to_signed(16#0FEC4#, 18), to_signed(16#0FEEB#, 18), to_signed(16#0FF0E#, 18), to_signed(16#0FF30#, 18),
     to_signed(16#0FF4E#, 18), to_signed(16#0FF6B#, 18), to_signed(16#0FF85#, 18), to_signed(16#0FF9C#, 18),
     to_signed(16#0FFB1#, 18), to_signed(16#0FFC4#, 18), to_signed(16#0FFD4#, 18), to_signed(16#0FFE1#, 18),
     to_signed(16#0FFEC#, 18), to_signed(16#0FFF5#, 18), to_signed(16#0FFFB#, 18), to_signed(16#0FFFF#, 18));  -- sfix18 [256]

  -- Signals
  SIGNAL u_signed                         : signed(17 DOWNTO 0);  -- sfix18_En16
  SIGNAL insig_out1                       : unsigned(9 DOWNTO 0);  -- ufix10_En10
  SIGNAL Point50_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL LTEp501_1_cast                   : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL LTEp501_relop1                   : std_logic;
  SIGNAL RAMDelayBalance_out1             : std_logic;
  SIGNAL pow2switch_out1                  : std_logic;
  SIGNAL Amp50_sub_cast                   : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Amp50_sub_cast_1                 : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Amp50_out1                       : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL insig_out1_dtc                   : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL QuadHandle1_out1                 : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Point25_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL LTEp251_1_cast                   : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL LTEp251_relop1                   : std_logic;
  SIGNAL p50mA_sub_cast                   : signed(19 DOWNTO 0);  -- sfix20_En18
  SIGNAL p50mA_sub_cast_1                 : signed(19 DOWNTO 0);  -- sfix20_En18
  SIGNAL p50mA_out1                       : signed(19 DOWNTO 0);  -- sfix20_En18
  SIGNAL p50mA_out1_dtc                   : unsigned(9 DOWNTO 0);  -- ufix10_En10
  SIGNAL QuadHandle1_out1_dtc             : unsigned(9 DOWNTO 0);  -- ufix10_En10
  SIGNAL QuadHandle2_out1                 : unsigned(9 DOWNTO 0);  -- ufix10_En10
  SIGNAL CastU16En2_out1                  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL CastU16En4_out1                  : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL CastU16En3_out1                  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Saturation_out1                  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Switch_out1                      : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Look_Up_Table1_k                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Look_Up_Table_out1               : signed(17 DOWNTO 0);  -- sfix18_En16
  SIGNAL Look_Up_Table_out1_1             : signed(17 DOWNTO 0) := to_signed(16#00000#, 18);  -- sfix18_En16
  SIGNAL Negate1_cast                     : signed(18 DOWNTO 0);  -- sfix19_En16
  SIGNAL Negate1_cast_1                   : signed(18 DOWNTO 0);  -- sfix19_En16
  SIGNAL Negate_out1                      : signed(17 DOWNTO 0);  -- sfix18_En16
  SIGNAL Sine                             : signed(17 DOWNTO 0);  -- sfix18_En16
  SIGNAL insig_out1_1                     : unsigned(9 DOWNTO 0);  -- ufix10_En10
  SIGNAL Point25_out1_1                   : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL LTEp25_1_cast                    : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL LTEp25_relop1                    : std_logic;
  SIGNAL Point75_out1                     : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL GTEp75_1_cast                    : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL GTEp75_relop1                    : std_logic;
  SIGNAL alpha1st_or_4th_Quad_bool        : std_logic;
  SIGNAL alpha1st_or_4th_Quad_out1        : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL RAMDelayBalance_out1_1           : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL pow2switch_out1_1                : std_logic;
  SIGNAL Point50_out1_1                   : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL p75mA_sub_cast                   : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL p75mA_sub_cast_1                 : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL p75mA_out1                       : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Amp75_sub_cast                   : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Amp75_sub_cast_1                 : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Amp75_out1                       : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Amp25_sub_cast                   : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Amp25_sub_cast_1                 : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL Amp25_out1                       : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL p25mA_sub_cast                   : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL p25mA_sub_cast_1                 : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL p25mA_out1                       : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL LTEp50_1_cast                    : unsigned(17 DOWNTO 0);  -- ufix18_En18
  SIGNAL LTEp50_relop1                    : std_logic;
  SIGNAL QuadHandle1b_out1                : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL QuadHandle1b_out1_dtc            : unsigned(9 DOWNTO 0);  -- ufix10_En10
  SIGNAL QuadHandle1a_out1                : signed(18 DOWNTO 0);  -- sfix19_En18
  SIGNAL QuadHandle1a_out1_dtc            : unsigned(9 DOWNTO 0);  -- ufix10_En10
  SIGNAL QuadHandle2_out1_1               : unsigned(9 DOWNTO 0);  -- ufix10_En10
  SIGNAL CastU16En1_out1                  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL CastU16En3_out1_1                : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL CastU16En2_out1_1                : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Saturation_out1_1                : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Switch_out1_1                    : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Look_Up_Table_k                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Look_Up_Table_out1_2             : signed(17 DOWNTO 0);  -- sfix18_En16
  SIGNAL Look_Up_Table_out1_3             : signed(17 DOWNTO 0) := to_signed(16#00000#, 18);  -- sfix18_En16
  SIGNAL Negate_cast                      : signed(18 DOWNTO 0);  -- sfix19_En16
  SIGNAL Negate_cast_1                    : signed(18 DOWNTO 0);  -- sfix19_En16
  SIGNAL Negate_out1_1                    : signed(17 DOWNTO 0);  -- sfix18_En16
  SIGNAL Cosine                           : signed(17 DOWNTO 0);  -- sfix18_En16

BEGIN
  -- (C) 2016 Mathworks, Inc
  -- 
  -- (C) 2016 Mathworks, Inc

  u_signed <= signed(u);

  insig_out1 <= unsigned(u_signed(15 DOWNTO 6));

  Point50_out1 <= to_unsigned(16#20000#, 18);

  LTEp501_1_cast <= insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  LTEp501_relop1 <= '1' WHEN LTEp501_1_cast <= Point50_out1 ELSE
      '0';

  delayMatch_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        RAMDelayBalance_out1 <= '0';
      ELSIF enb_1_9_0 = '1' THEN
        RAMDelayBalance_out1 <= LTEp501_relop1;
      END IF;
    END IF;
  END PROCESS delayMatch_process;


  pow2switch_out1 <= '1';

  Amp50_sub_cast <= signed(resize(insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 19));
  Amp50_sub_cast_1 <= signed(resize(Point50_out1, 19));
  Amp50_out1 <= Amp50_sub_cast - Amp50_sub_cast_1;

  insig_out1_dtc <= signed(resize(insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 19));

  
  QuadHandle1_out1 <= Amp50_out1 WHEN LTEp501_relop1 = '0' ELSE
      insig_out1_dtc;

  Point25_out1 <= to_unsigned(16#10000#, 18);

  LTEp251_1_cast <= signed(resize(Point25_out1, 19));
  
  LTEp251_relop1 <= '1' WHEN QuadHandle1_out1 <= LTEp251_1_cast ELSE
      '0';

  p50mA_sub_cast <= signed(resize(Point50_out1, 20));
  p50mA_sub_cast_1 <= resize(QuadHandle1_out1, 20);
  p50mA_out1 <= p50mA_sub_cast - p50mA_sub_cast_1;

  p50mA_out1_dtc <= unsigned(p50mA_out1(17 DOWNTO 8));

  QuadHandle1_out1_dtc <= unsigned(QuadHandle1_out1(17 DOWNTO 8));

  
  QuadHandle2_out1 <= p50mA_out1_dtc WHEN LTEp251_relop1 = '0' ELSE
      QuadHandle1_out1_dtc;

  CastU16En2_out1 <= QuadHandle2_out1;

  CastU16En4_out1 <= resize(CastU16En2_out1, 11);

  
  CastU16En3_out1 <= "1111111111" WHEN CastU16En4_out1(10) /= '0' ELSE
      CastU16En4_out1(9 DOWNTO 0);

  -- saturation block maybe optimized away
  -- if the NumDataPoints is a power of 2
  
  Saturation_out1 <= to_unsigned(16#0FF#, 10) WHEN CastU16En3_out1 > to_unsigned(16#0FF#, 10) ELSE
      CastU16En3_out1;

  
  Switch_out1 <= CastU16En3_out1 WHEN pow2switch_out1 = '0' ELSE
      Saturation_out1;

  
  Look_Up_Table1_k <= to_unsigned(16#00#, 8) WHEN Switch_out1 = to_unsigned(16#000#, 10) ELSE
      to_unsigned(16#FF#, 8) WHEN Switch_out1 >= to_unsigned(16#0FF#, 10) ELSE
      Switch_out1(7 DOWNTO 0);
  Look_Up_Table_out1 <= Look_Up_Table1_data(to_integer(Look_Up_Table1_k));

  PipelineRegister1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_9_0 = '1' THEN
        Look_Up_Table_out1_1 <= Look_Up_Table_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister1_process;


  Negate1_cast <= resize(Look_Up_Table_out1_1, 19);
  Negate1_cast_1 <=  - (Negate1_cast);
  Negate_out1 <= Negate1_cast_1(17 DOWNTO 0);

  
  Sine <= Negate_out1 WHEN RAMDelayBalance_out1 = '0' ELSE
      Look_Up_Table_out1_1;

  x <= std_logic_vector(Sine);

  insig_out1_1 <= unsigned(u_signed(15 DOWNTO 6));

  Point25_out1_1 <= to_unsigned(16#10000#, 18);

  LTEp25_1_cast <= insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  LTEp25_relop1 <= '1' WHEN LTEp25_1_cast <= Point25_out1_1 ELSE
      '0';

  Point75_out1 <= to_unsigned(16#30000#, 18);

  GTEp75_1_cast <= insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  GTEp75_relop1 <= '1' WHEN GTEp75_1_cast >= Point75_out1 ELSE
      '0';

  alpha1st_or_4th_Quad_bool <= LTEp25_relop1 OR GTEp75_relop1;

  alpha1st_or_4th_Quad_out1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & alpha1st_or_4th_Quad_bool;

  delayMatch1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        RAMDelayBalance_out1_1 <= to_unsigned(16#00#, 8);
      ELSIF enb_1_9_0 = '1' THEN
        RAMDelayBalance_out1_1 <= alpha1st_or_4th_Quad_out1;
      END IF;
    END IF;
  END PROCESS delayMatch1_process;


  pow2switch_out1_1 <= '1';

  Point50_out1_1 <= to_unsigned(16#20000#, 18);

  p75mA_sub_cast <= signed(resize(Point75_out1, 19));
  p75mA_sub_cast_1 <= signed(resize(insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 19));
  p75mA_out1 <= p75mA_sub_cast - p75mA_sub_cast_1;

  Amp75_sub_cast <= signed(resize(insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 19));
  Amp75_sub_cast_1 <= signed(resize(Point75_out1, 19));
  Amp75_out1 <= Amp75_sub_cast - Amp75_sub_cast_1;

  Amp25_sub_cast <= signed(resize(insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 19));
  Amp25_sub_cast_1 <= signed(resize(Point25_out1_1, 19));
  Amp25_out1 <= Amp25_sub_cast - Amp25_sub_cast_1;

  p25mA_sub_cast <= signed(resize(Point25_out1_1, 19));
  p25mA_sub_cast_1 <= signed(resize(insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 19));
  p25mA_out1 <= p25mA_sub_cast - p25mA_sub_cast_1;

  LTEp50_1_cast <= insig_out1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  LTEp50_relop1 <= '1' WHEN LTEp50_1_cast <= Point50_out1_1 ELSE
      '0';

  
  QuadHandle1b_out1 <= p75mA_out1 WHEN GTEp75_relop1 = '0' ELSE
      Amp75_out1;

  
  QuadHandle1b_out1_dtc <= "1111111111" WHEN (QuadHandle1b_out1(18) = '0') AND (QuadHandle1b_out1(17 DOWNTO 8) = "1111111111") ELSE
      "0000000000" WHEN QuadHandle1b_out1(18) = '1' ELSE
      unsigned(QuadHandle1b_out1(17 DOWNTO 8));

  
  QuadHandle1a_out1 <= Amp25_out1 WHEN LTEp25_relop1 = '0' ELSE
      p25mA_out1;

  
  QuadHandle1a_out1_dtc <= "1111111111" WHEN (QuadHandle1a_out1(18) = '0') AND (QuadHandle1a_out1(17 DOWNTO 8) = "1111111111") ELSE
      "0000000000" WHEN QuadHandle1a_out1(18) = '1' ELSE
      unsigned(QuadHandle1a_out1(17 DOWNTO 8));

  
  QuadHandle2_out1_1 <= QuadHandle1b_out1_dtc WHEN LTEp50_relop1 = '0' ELSE
      QuadHandle1a_out1_dtc;

  CastU16En1_out1 <= QuadHandle2_out1_1;

  CastU16En3_out1_1 <= resize(CastU16En1_out1, 11);

  
  CastU16En2_out1_1 <= "1111111111" WHEN CastU16En3_out1_1(10) /= '0' ELSE
      CastU16En3_out1_1(9 DOWNTO 0);

  -- saturation block maybe optimized away
  -- if the NumDataPoints is a power of 2
  
  Saturation_out1_1 <= to_unsigned(16#0FF#, 10) WHEN CastU16En2_out1_1 > to_unsigned(16#0FF#, 10) ELSE
      CastU16En2_out1_1;

  
  Switch_out1_1 <= CastU16En2_out1_1 WHEN pow2switch_out1_1 = '0' ELSE
      Saturation_out1_1;

  
  Look_Up_Table_k <= to_unsigned(16#00#, 8) WHEN Switch_out1_1 = to_unsigned(16#000#, 10) ELSE
      to_unsigned(16#FF#, 8) WHEN Switch_out1_1 >= to_unsigned(16#0FF#, 10) ELSE
      Switch_out1_1(7 DOWNTO 0);
  Look_Up_Table_out1_2 <= Look_Up_Table_data(to_integer(Look_Up_Table_k));

  PipelineRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_9_0 = '1' THEN
        Look_Up_Table_out1_3 <= Look_Up_Table_out1_2;
      END IF;
    END IF;
  END PROCESS PipelineRegister_process;


  Negate_cast <= resize(Look_Up_Table_out1_3, 19);
  Negate_cast_1 <=  - (Negate_cast);
  Negate_out1_1 <= Negate_cast_1(17 DOWNTO 0);

  
  Cosine <= Negate_out1_1 WHEN RAMDelayBalance_out1_1 = to_unsigned(16#00#, 8) ELSE
      Look_Up_Table_out1_3;

  y <= std_logic_vector(Cosine);

END rtl;

