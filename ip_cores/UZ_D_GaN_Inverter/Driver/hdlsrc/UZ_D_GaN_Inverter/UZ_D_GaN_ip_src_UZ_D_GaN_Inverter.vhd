-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\UZ_D_GaN_Inverter\UZ_D_GaN_ip_src_UZ_D_GaN_Inverter.vhd
-- Created: 2021-04-29 17:19:29
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-08
-- Target subsystem base rate: 1e-08
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- AXI_Gan_Temp_1_freq           ce_out        1e-08
-- AXI_Gan_Temp_1_hightime       ce_out        1e-08
-- AXI_Gan_Temp_1_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_1_dutycyc        ce_out        1e-08
-- AXI_Gan_Temp_2_freq           ce_out        1e-08
-- AXI_Gan_Temp_2_hightime       ce_out        1e-08
-- AXI_Gan_Temp_2_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_2_dutycyc        ce_out        1e-08
-- AXI_Gan_Temp_3_freq           ce_out        1e-08
-- AXI_Gan_Temp_3_hightime       ce_out        1e-08
-- AXI_Gan_Temp_3_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_3_dutycyc        ce_out        1e-08
-- AXI_Gan_Temp_4_freq           ce_out        1e-08
-- AXI_Gan_Temp_4_hightime       ce_out        1e-08
-- AXI_Gan_Temp_4_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_4_dutycyc        ce_out        1e-08
-- AXI_Gan_Temp_5_freq           ce_out        1e-08
-- AXI_Gan_Temp_5_hightime       ce_out        1e-08
-- AXI_Gan_Temp_5_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_5_dutycyc        ce_out        1e-08
-- AXI_Gan_Temp_6_freq           ce_out        1e-08
-- AXI_Gan_Temp_6_hightime       ce_out        1e-08
-- AXI_Gan_Temp_6_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_6_dutycyc        ce_out        1e-08
-- AXI_GaN_FAULT_H1              ce_out        1e-08
-- AXI_GaN_FAULT_L1              ce_out        1e-08
-- AXI_GaN_FAULT_H2              ce_out        1e-08
-- AXI_GaN_FAULT_L2              ce_out        1e-08
-- AXI_GaN_FAULT_H3              ce_out        1e-08
-- AXI_GaN_FAULT_L3              ce_out        1e-08
-- AXI_GaN_OC_H1                 ce_out        1e-08
-- AXI_GaN_OC_L1                 ce_out        1e-08
-- AXI_GaN_OC_H2                 ce_out        1e-08
-- AXI_GaN_OC_L2                 ce_out        1e-08
-- AXI_GaN_OC_H3                 ce_out        1e-08
-- AXI_GaN_OC_L3                 ce_out        1e-08
-- AXI_I_DIAG                    ce_out        1e-08
-- AXI_I1_DIAG                   ce_out        1e-08
-- AXI_I2_DIAG                   ce_out        1e-08
-- AXI_I3_DIAG                   ce_out        1e-08
-- PWM_EN                        ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: UZ_D_GaN_ip_src_UZ_D_GaN_Inverter
-- Source Path: UZ_D_GaN_Inverter/UZ_D_GaN_Inverter
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY UZ_D_GaN_ip_src_UZ_D_GaN_Inverter IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        GaN_Temp1                         :   IN    std_logic;
        GaN_Temp2                         :   IN    std_logic;
        GaN_Temp3                         :   IN    std_logic;
        GaN_Temp4                         :   IN    std_logic;
        GaN_Temp5                         :   IN    std_logic;
        GaN_Temp6                         :   IN    std_logic;
        GaN_FAULT_H1                      :   IN    std_logic;
        GaN_FAULT_L1                      :   IN    std_logic;
        GaN_FAULT_H2                      :   IN    std_logic;
        GaN_FAULT_L2                      :   IN    std_logic;
        GaN_FAULT_H3                      :   IN    std_logic;
        GaN_FAULT_L3                      :   IN    std_logic;
        GaN_OC_H1                         :   IN    std_logic;
        GaN_OC_L1                         :   IN    std_logic;
        GaN_OC_H2                         :   IN    std_logic;
        GaN_OC_L2                         :   IN    std_logic;
        GaN_OC_H3                         :   IN    std_logic;
        GaN_OC_L3                         :   IN    std_logic;
        I_DIAG                            :   IN    std_logic;
        I1_DIAG                           :   IN    std_logic;
        I2_DIAG                           :   IN    std_logic;
        I3_DIAG                           :   IN    std_logic;
        AXI_PWM_Enable                    :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        AXI_Gan_Temp_1_freq               :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_1_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_1_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_1_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_Gan_Temp_2_freq               :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_2_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_2_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_2_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_Gan_Temp_3_freq               :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_3_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_3_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_3_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_Gan_Temp_4_freq               :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_4_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_4_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_4_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_Gan_Temp_5_freq               :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_5_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_5_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_5_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_Gan_Temp_6_freq               :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_6_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_6_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_6_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_GaN_FAULT_H1                  :   OUT   std_logic;
        AXI_GaN_FAULT_L1                  :   OUT   std_logic;
        AXI_GaN_FAULT_H2                  :   OUT   std_logic;
        AXI_GaN_FAULT_L2                  :   OUT   std_logic;
        AXI_GaN_FAULT_H3                  :   OUT   std_logic;
        AXI_GaN_FAULT_L3                  :   OUT   std_logic;
        AXI_GaN_OC_H1                     :   OUT   std_logic;
        AXI_GaN_OC_L1                     :   OUT   std_logic;
        AXI_GaN_OC_H2                     :   OUT   std_logic;
        AXI_GaN_OC_L2                     :   OUT   std_logic;
        AXI_GaN_OC_H3                     :   OUT   std_logic;
        AXI_GaN_OC_L3                     :   OUT   std_logic;
        AXI_I_DIAG                        :   OUT   std_logic;
        AXI_I1_DIAG                       :   OUT   std_logic;
        AXI_I2_DIAG                       :   OUT   std_logic;
        AXI_I3_DIAG                       :   OUT   std_logic;
        PWM_EN                            :   OUT   std_logic
        );
END UZ_D_GaN_ip_src_UZ_D_GaN_Inverter;


ARCHITECTURE rtl OF UZ_D_GaN_ip_src_UZ_D_GaN_Inverter IS

  -- Component Declarations
  COMPONENT UZ_D_GaN_ip_src_PWMdutycycFreqDetection
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          PWMin                           :   IN    std_logic;
          AXI_freq                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          AXI_hightime                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          AXI_lowtime                     :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          AXI_dutycyc                     :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En24
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : UZ_D_GaN_ip_src_PWMdutycycFreqDetection
    USE ENTITY work.UZ_D_GaN_ip_src_PWMdutycycFreqDetection(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL AXI_freq                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_hightime                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_lowtime                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_dutycyc                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_freq_1                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_hightime_1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_lowtime_1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_dutycyc_1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_freq_2                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_hightime_2                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_lowtime_2                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_dutycyc_2                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_freq_3                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_hightime_3                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_lowtime_3                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_dutycyc_3                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_freq_4                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_hightime_4                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_lowtime_4                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_dutycyc_4                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_freq_5                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_hightime_5                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_lowtime_5                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI_dutycyc_5                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Delay_out1                       : std_logic;
  SIGNAL Delay1_out1                      : std_logic;
  SIGNAL Delay2_out1                      : std_logic;
  SIGNAL Delay3_out1                      : std_logic;
  SIGNAL Delay4_out1                      : std_logic;
  SIGNAL Delay5_out1                      : std_logic;
  SIGNAL Delay6_out1                      : std_logic;
  SIGNAL Delay7_out1                      : std_logic;
  SIGNAL Delay8_out1                      : std_logic;
  SIGNAL Delay9_out1                      : std_logic;
  SIGNAL Delay10_out1                     : std_logic;
  SIGNAL Delay11_out1                     : std_logic;
  SIGNAL Delay12_out1                     : std_logic;
  SIGNAL Delay13_out1                     : std_logic;
  SIGNAL Delay14_out1                     : std_logic;
  SIGNAL Delay15_out1                     : std_logic;
  SIGNAL Delay16_out1                     : std_logic;

BEGIN
  u_PWMdutycycFreqDetection : UZ_D_GaN_ip_src_PWMdutycycFreqDetection
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              PWMin => GaN_Temp1,
              AXI_freq => AXI_freq,  -- uint32
              AXI_hightime => AXI_hightime,  -- uint32
              AXI_lowtime => AXI_lowtime,  -- uint32
              AXI_dutycyc => AXI_dutycyc  -- sfix32_En24
              );

  u_PWMdutycycFreqDetection1 : UZ_D_GaN_ip_src_PWMdutycycFreqDetection
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              PWMin => GaN_Temp2,
              AXI_freq => AXI_freq_1,  -- uint32
              AXI_hightime => AXI_hightime_1,  -- uint32
              AXI_lowtime => AXI_lowtime_1,  -- uint32
              AXI_dutycyc => AXI_dutycyc_1  -- sfix32_En24
              );

  u_PWMdutycycFreqDetection2 : UZ_D_GaN_ip_src_PWMdutycycFreqDetection
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              PWMin => GaN_Temp3,
              AXI_freq => AXI_freq_2,  -- uint32
              AXI_hightime => AXI_hightime_2,  -- uint32
              AXI_lowtime => AXI_lowtime_2,  -- uint32
              AXI_dutycyc => AXI_dutycyc_2  -- sfix32_En24
              );

  u_PWMdutycycFreqDetection3 : UZ_D_GaN_ip_src_PWMdutycycFreqDetection
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              PWMin => GaN_Temp4,
              AXI_freq => AXI_freq_3,  -- uint32
              AXI_hightime => AXI_hightime_3,  -- uint32
              AXI_lowtime => AXI_lowtime_3,  -- uint32
              AXI_dutycyc => AXI_dutycyc_3  -- sfix32_En24
              );

  u_PWMdutycycFreqDetection4 : UZ_D_GaN_ip_src_PWMdutycycFreqDetection
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              PWMin => GaN_Temp5,
              AXI_freq => AXI_freq_4,  -- uint32
              AXI_hightime => AXI_hightime_4,  -- uint32
              AXI_lowtime => AXI_lowtime_4,  -- uint32
              AXI_dutycyc => AXI_dutycyc_4  -- sfix32_En24
              );

  u_PWMdutycycFreqDetection5 : UZ_D_GaN_ip_src_PWMdutycycFreqDetection
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              PWMin => GaN_Temp6,
              AXI_freq => AXI_freq_5,  -- uint32
              AXI_hightime => AXI_hightime_5,  -- uint32
              AXI_lowtime => AXI_lowtime_5,  -- uint32
              AXI_dutycyc => AXI_dutycyc_5  -- sfix32_En24
              );

  enb <= clk_enable;

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay_out1 <= GaN_FAULT_H1;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay1_out1 <= GaN_FAULT_L1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay2_out1 <= GaN_FAULT_H2;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay3_out1 <= GaN_FAULT_L2;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay4_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay4_out1 <= GaN_FAULT_H3;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  Delay5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay5_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay5_out1 <= GaN_FAULT_L3;
      END IF;
    END IF;
  END PROCESS Delay5_process;


  Delay6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay6_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay6_out1 <= GaN_OC_H1;
      END IF;
    END IF;
  END PROCESS Delay6_process;


  Delay7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay7_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay7_out1 <= GaN_OC_L1;
      END IF;
    END IF;
  END PROCESS Delay7_process;


  Delay8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay8_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay8_out1 <= GaN_OC_H2;
      END IF;
    END IF;
  END PROCESS Delay8_process;


  Delay9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay9_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay9_out1 <= GaN_OC_L2;
      END IF;
    END IF;
  END PROCESS Delay9_process;


  Delay10_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay10_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay10_out1 <= GaN_OC_H3;
      END IF;
    END IF;
  END PROCESS Delay10_process;


  Delay11_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay11_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay11_out1 <= GaN_OC_L3;
      END IF;
    END IF;
  END PROCESS Delay11_process;


  Delay12_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay12_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay12_out1 <= I_DIAG;
      END IF;
    END IF;
  END PROCESS Delay12_process;


  Delay13_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay13_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay13_out1 <= I1_DIAG;
      END IF;
    END IF;
  END PROCESS Delay13_process;


  Delay14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay14_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay14_out1 <= I2_DIAG;
      END IF;
    END IF;
  END PROCESS Delay14_process;


  Delay15_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay15_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay15_out1 <= I3_DIAG;
      END IF;
    END IF;
  END PROCESS Delay15_process;


  Delay16_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay16_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay16_out1 <= AXI_PWM_Enable;
      END IF;
    END IF;
  END PROCESS Delay16_process;


  ce_out <= clk_enable;

  AXI_Gan_Temp_1_freq <= AXI_freq;

  AXI_Gan_Temp_1_hightime <= AXI_hightime;

  AXI_Gan_Temp_1_lowtime <= AXI_lowtime;

  AXI_Gan_Temp_1_dutycyc <= AXI_dutycyc;

  AXI_Gan_Temp_2_freq <= AXI_freq_1;

  AXI_Gan_Temp_2_hightime <= AXI_hightime_1;

  AXI_Gan_Temp_2_lowtime <= AXI_lowtime_1;

  AXI_Gan_Temp_2_dutycyc <= AXI_dutycyc_1;

  AXI_Gan_Temp_3_freq <= AXI_freq_2;

  AXI_Gan_Temp_3_hightime <= AXI_hightime_2;

  AXI_Gan_Temp_3_lowtime <= AXI_lowtime_2;

  AXI_Gan_Temp_3_dutycyc <= AXI_dutycyc_2;

  AXI_Gan_Temp_4_freq <= AXI_freq_3;

  AXI_Gan_Temp_4_hightime <= AXI_hightime_3;

  AXI_Gan_Temp_4_lowtime <= AXI_lowtime_3;

  AXI_Gan_Temp_4_dutycyc <= AXI_dutycyc_3;

  AXI_Gan_Temp_5_freq <= AXI_freq_4;

  AXI_Gan_Temp_5_hightime <= AXI_hightime_4;

  AXI_Gan_Temp_5_lowtime <= AXI_lowtime_4;

  AXI_Gan_Temp_5_dutycyc <= AXI_dutycyc_4;

  AXI_Gan_Temp_6_freq <= AXI_freq_5;

  AXI_Gan_Temp_6_hightime <= AXI_hightime_5;

  AXI_Gan_Temp_6_lowtime <= AXI_lowtime_5;

  AXI_Gan_Temp_6_dutycyc <= AXI_dutycyc_5;

  AXI_GaN_FAULT_H1 <= Delay_out1;

  AXI_GaN_FAULT_L1 <= Delay1_out1;

  AXI_GaN_FAULT_H2 <= Delay2_out1;

  AXI_GaN_FAULT_L2 <= Delay3_out1;

  AXI_GaN_FAULT_H3 <= Delay4_out1;

  AXI_GaN_FAULT_L3 <= Delay5_out1;

  AXI_GaN_OC_H1 <= Delay6_out1;

  AXI_GaN_OC_L1 <= Delay7_out1;

  AXI_GaN_OC_H2 <= Delay8_out1;

  AXI_GaN_OC_L2 <= Delay9_out1;

  AXI_GaN_OC_H3 <= Delay10_out1;

  AXI_GaN_OC_L3 <= Delay11_out1;

  AXI_I_DIAG <= Delay12_out1;

  AXI_I1_DIAG <= Delay13_out1;

  AXI_I2_DIAG <= Delay14_out1;

  AXI_I3_DIAG <= Delay15_out1;

  PWM_EN <= Delay16_out1;

END rtl;

