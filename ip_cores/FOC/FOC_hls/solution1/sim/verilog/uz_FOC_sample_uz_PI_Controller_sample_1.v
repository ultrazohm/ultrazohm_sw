// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module uz_FOC_sample_uz_PI_Controller_sample_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        self_address0,
        self_ce0,
        self_q0,
        self_2,
        I_rst,
        referenceValue,
        actualValue,
        ext_clamping,
        ap_return
);

parameter    ap_ST_fsm_state1 = 28'd1;
parameter    ap_ST_fsm_state2 = 28'd2;
parameter    ap_ST_fsm_state3 = 28'd4;
parameter    ap_ST_fsm_state4 = 28'd8;
parameter    ap_ST_fsm_state5 = 28'd16;
parameter    ap_ST_fsm_state6 = 28'd32;
parameter    ap_ST_fsm_state7 = 28'd64;
parameter    ap_ST_fsm_state8 = 28'd128;
parameter    ap_ST_fsm_state9 = 28'd256;
parameter    ap_ST_fsm_state10 = 28'd512;
parameter    ap_ST_fsm_state11 = 28'd1024;
parameter    ap_ST_fsm_state12 = 28'd2048;
parameter    ap_ST_fsm_state13 = 28'd4096;
parameter    ap_ST_fsm_state14 = 28'd8192;
parameter    ap_ST_fsm_state15 = 28'd16384;
parameter    ap_ST_fsm_state16 = 28'd32768;
parameter    ap_ST_fsm_state17 = 28'd65536;
parameter    ap_ST_fsm_state18 = 28'd131072;
parameter    ap_ST_fsm_state19 = 28'd262144;
parameter    ap_ST_fsm_state20 = 28'd524288;
parameter    ap_ST_fsm_state21 = 28'd1048576;
parameter    ap_ST_fsm_state22 = 28'd2097152;
parameter    ap_ST_fsm_state23 = 28'd4194304;
parameter    ap_ST_fsm_state24 = 28'd8388608;
parameter    ap_ST_fsm_state25 = 28'd16777216;
parameter    ap_ST_fsm_state26 = 28'd33554432;
parameter    ap_ST_fsm_state27 = 28'd67108864;
parameter    ap_ST_fsm_state28 = 28'd134217728;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] self_address0;
output   self_ce0;
input  [223:0] self_q0;
input  [4:0] self_2;
input  [0:0] I_rst;
input  [31:0] referenceValue;
input  [31:0] actualValue;
input  [0:0] ext_clamping;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[1:0] self_address0;
reg self_ce0;

(* fsm_encoding = "none" *) reg   [27:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] I_sum;
wire   [31:0] grp_fu_192_p2;
reg   [31:0] reg_231;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln44_fu_240_p2;
reg   [0:0] icmp_ln44_reg_1204;
wire   [31:0] grp_fu_185_p2;
reg   [31:0] error_reg_1215;
wire    ap_CS_fsm_state4;
wire   [31:0] trunc_ln44_fu_310_p1;
reg   [31:0] trunc_ln44_reg_1220;
wire   [31:0] bitcast_ln44_fu_314_p1;
wire    ap_CS_fsm_state5;
reg   [31:0] old_I_sum_reg_1230;
wire    ap_CS_fsm_state8;
wire   [5:0] self_2_cast_fu_323_p1;
reg   [5:0] self_2_cast_reg_1235;
wire    ap_CS_fsm_state11;
reg   [31:0] output_before_saturation_reg_1242;
wire   [5:0] add_ln46_fu_326_p2;
reg   [5:0] add_ln46_reg_1251;
reg   [0:0] tmp_17_reg_1261;
wire   [31:0] bitcast_ln46_fu_428_p1;
reg   [31:0] bitcast_ln46_reg_1267;
wire    ap_CS_fsm_state12;
wire   [5:0] add_ln46_2_fu_433_p2;
reg   [5:0] add_ln46_2_reg_1275;
reg   [0:0] tmp_24_reg_1285;
wire   [0:0] or_ln23_fu_500_p2;
reg   [0:0] or_ln23_reg_1291;
wire   [0:0] and_ln23_3_fu_538_p2;
reg   [0:0] and_ln23_3_reg_1296;
wire   [5:0] add_ln43_fu_544_p2;
reg   [5:0] add_ln43_reg_1302;
wire    ap_CS_fsm_state13;
reg   [0:0] tmp_6_reg_1312;
wire   [31:0] trunc_ln46_1_fu_641_p1;
reg   [31:0] trunc_ln46_1_reg_1318;
wire   [0:0] and_ln23_1_fu_677_p2;
reg   [0:0] and_ln23_1_reg_1323;
wire   [0:0] grp_fu_196_p2;
reg   [0:0] tmp_8_reg_1329;
wire   [31:0] trunc_ln43_fu_741_p1;
reg   [31:0] trunc_ln43_reg_1334;
wire    ap_CS_fsm_state14;
wire   [31:0] bitcast_ln46_1_fu_745_p1;
reg   [31:0] bitcast_ln46_1_reg_1339;
wire   [0:0] and_ln25_fu_748_p2;
reg   [0:0] and_ln25_reg_1345;
wire   [31:0] select_ln25_fu_752_p3;
wire   [31:0] bitcast_ln43_fu_760_p1;
wire    ap_CS_fsm_state15;
wire   [31:0] output_4_fu_780_p3;
reg   [31:0] output_4_reg_1360;
wire   [0:0] or_ln35_fu_817_p2;
reg   [0:0] or_ln35_reg_1369;
wire    ap_CS_fsm_state18;
wire   [0:0] I_rst_read_read_fu_116_p2;
wire    ap_CS_fsm_state19;
wire   [31:0] sign_fu_859_p3;
wire   [31:0] sign_1_fu_942_p3;
wire   [0:0] grp_fu_226_p2;
reg   [0:0] tmp_16_reg_1391;
wire   [0:0] icmp_ln31_fu_987_p2;
reg   [0:0] icmp_ln31_reg_1396;
wire   [0:0] icmp_ln31_1_fu_993_p2;
reg   [0:0] icmp_ln31_1_reg_1401;
wire   [0:0] icmp_ln31_2_fu_999_p2;
reg   [0:0] icmp_ln31_2_reg_1406;
wire   [0:0] icmp_ln31_3_fu_1005_p2;
reg   [0:0] icmp_ln31_3_reg_1411;
wire   [0:0] clamping_active_fu_1047_p2;
reg   [0:0] clamping_active_reg_1416;
wire    ap_CS_fsm_state20;
wire   [5:0] add_ln51_fu_1053_p2;
reg   [5:0] add_ln51_reg_1420;
reg   [0:0] tmp_27_reg_1430;
wire   [31:0] trunc_ln51_fu_1150_p1;
reg   [31:0] trunc_ln51_reg_1436;
wire    ap_CS_fsm_state21;
wire   [31:0] bitcast_ln51_fu_1154_p1;
wire    ap_CS_fsm_state22;
reg   [31:0] mul7_reg_1446;
wire    ap_CS_fsm_state24;
wire   [31:0] output_6_fu_1169_p3;
reg   [31:0] output_6_reg_1451;
wire    ap_CS_fsm_state26;
reg   [31:0] ap_phi_mux_mul7_pn_phi_fu_177_p4;
reg   [31:0] mul7_pn_reg_173;
wire    ap_CS_fsm_state25;
wire   [63:0] select_ln44_fu_246_p3;
wire   [63:0] zext_ln46_1_fu_352_p1;
wire   [63:0] zext_ln46_7_fu_458_p1;
wire   [63:0] zext_ln43_1_fu_569_p1;
wire   [63:0] zext_ln51_1_fu_1078_p1;
wire   [31:0] select_ln56_fu_1175_p3;
wire    ap_CS_fsm_state28;
reg   [31:0] grp_fu_185_p0;
reg   [31:0] grp_fu_185_p1;
reg   [31:0] grp_fu_192_p0;
reg   [31:0] grp_fu_192_p1;
reg   [31:0] grp_fu_196_p0;
reg   [31:0] grp_fu_196_p1;
wire    ap_CS_fsm_state16;
reg   [31:0] grp_fu_200_p0;
reg   [31:0] grp_fu_200_p1;
wire   [5:0] select_ln44_2_fu_265_p3;
wire   [5:0] select_ln44_1_fu_258_p3;
wire   [5:0] sub_ln44_fu_272_p2;
wire  signed [6:0] sext_ln44_fu_278_p1;
wire   [6:0] self_2_cast2_fu_255_p1;
wire   [6:0] add_ln44_fu_282_p2;
wire   [9:0] tmp_11_fu_288_p3;
wire  signed [66:0] sext_ln44_1_fu_296_p1;
wire   [223:0] zext_ln44_fu_300_p1;
wire   [223:0] lshr_ln44_fu_304_p2;
wire   [7:0] mul_ln46_fu_336_p0;
wire   [5:0] mul_ln46_fu_336_p1;
wire   [12:0] mul_ln46_fu_336_p2;
wire   [1:0] tmp_15_fu_342_p4;
wire   [2:0] shl_ln46_3_fu_375_p3;
wire   [5:0] zext_ln46_3_fu_382_p1;
wire   [5:0] shl_ln46_2_fu_368_p3;
wire   [5:0] sub_ln46_fu_386_p2;
wire   [6:0] zext_ln46_fu_365_p1;
wire  signed [6:0] sext_ln46_fu_392_p1;
wire   [6:0] add_ln46_1_fu_396_p2;
wire   [9:0] tmp_22_fu_402_p3;
wire  signed [66:0] sext_ln46_1_fu_410_p1;
wire   [223:0] zext_ln46_4_fu_414_p1;
wire   [223:0] lshr_ln46_fu_418_p2;
wire   [31:0] trunc_ln46_fu_424_p1;
wire   [7:0] mul_ln46_1_fu_442_p0;
wire   [5:0] mul_ln46_1_fu_442_p1;
wire   [12:0] mul_ln46_1_fu_442_p2;
wire   [1:0] tmp_23_fu_448_p4;
wire   [31:0] bitcast_ln23_fu_471_p1;
wire   [7:0] tmp_fu_474_p4;
wire   [22:0] trunc_ln23_fu_484_p1;
wire   [0:0] icmp_ln23_1_fu_494_p2;
wire   [0:0] icmp_ln23_fu_488_p2;
wire   [7:0] tmp_4_fu_506_p4;
wire   [22:0] trunc_ln23_2_fu_516_p1;
wire   [0:0] icmp_ln23_5_fu_526_p2;
wire   [0:0] icmp_ln23_4_fu_520_p2;
wire   [0:0] or_ln23_2_fu_532_p2;
wire   [7:0] mul_ln43_fu_553_p0;
wire   [5:0] mul_ln43_fu_553_p1;
wire   [12:0] mul_ln43_fu_553_p2;
wire   [1:0] tmp_3_fu_559_p4;
wire   [2:0] shl_ln46_5_fu_592_p3;
wire   [5:0] zext_ln46_8_fu_599_p1;
wire   [5:0] shl_ln46_4_fu_585_p3;
wire   [5:0] sub_ln46_1_fu_603_p2;
wire   [6:0] zext_ln46_5_fu_582_p1;
wire  signed [6:0] sext_ln46_2_fu_609_p1;
wire   [6:0] add_ln46_3_fu_613_p2;
wire   [9:0] tmp_25_fu_619_p3;
wire  signed [66:0] sext_ln46_3_fu_627_p1;
wire   [223:0] zext_ln46_9_fu_631_p1;
wire   [223:0] lshr_ln46_1_fu_635_p2;
wire   [7:0] tmp_1_fu_645_p4;
wire   [22:0] trunc_ln23_1_fu_655_p1;
wire   [0:0] icmp_ln23_3_fu_665_p2;
wire   [0:0] icmp_ln23_2_fu_659_p2;
wire   [0:0] or_ln23_1_fu_671_p2;
wire   [2:0] shl_ln43_2_fu_692_p3;
wire   [5:0] zext_ln43_3_fu_699_p1;
wire   [5:0] shl_ln43_1_fu_685_p3;
wire   [5:0] sub_ln43_fu_703_p2;
wire   [6:0] zext_ln43_fu_682_p1;
wire  signed [6:0] sext_ln43_fu_709_p1;
wire   [6:0] add_ln43_1_fu_713_p2;
wire   [9:0] tmp_7_fu_719_p3;
wire  signed [66:0] sext_ln43_1_fu_727_p1;
wire   [223:0] zext_ln43_4_fu_731_p1;
wire   [223:0] lshr_ln43_fu_735_p2;
wire   [0:0] grp_fu_200_p2;
wire   [0:0] and_ln23_2_fu_764_p2;
wire   [0:0] and_ln23_4_fu_769_p2;
wire   [0:0] and_ln23_fu_774_p2;
wire   [31:0] bitcast_ln35_fu_788_p1;
wire   [7:0] tmp_9_fu_791_p4;
wire   [22:0] trunc_ln35_fu_801_p1;
wire   [0:0] icmp_ln35_1_fu_811_p2;
wire   [0:0] icmp_ln35_fu_805_p2;
wire   [0:0] and_ln35_fu_823_p2;
wire   [0:0] grp_fu_206_p2;
wire   [0:0] xor_ln35_fu_836_p2;
wire   [0:0] xor_ln35_fu_842_p2;
wire   [0:0] and_ln35_fu_848_p2;
wire   [0:0] and_ln35_1_fu_854_p2;
wire   [31:0] select_ln35_fu_828_p3;
wire   [31:0] bitcast_ln35_1_fu_868_p1;
wire   [7:0] tmp_12_fu_872_p4;
wire   [22:0] trunc_ln35_1_fu_882_p1;
wire   [0:0] icmp_ln35_3_fu_892_p2;
wire   [0:0] icmp_ln35_2_fu_886_p2;
wire   [0:0] or_ln35_1_fu_898_p2;
wire   [0:0] grp_fu_211_p2;
wire   [0:0] and_ln35_2_fu_904_p2;
wire   [0:0] grp_fu_216_p2;
wire   [0:0] grp_fu_221_p2;
wire   [0:0] xor_ln35_fu_918_p2;
wire   [0:0] xor_ln35_fu_924_p2;
wire   [0:0] and_ln35_fu_930_p2;
wire   [0:0] and_ln35_3_fu_936_p2;
wire   [31:0] select_ln35_2_fu_910_p3;
wire   [31:0] bitcast_ln31_fu_951_p1;
wire   [31:0] bitcast_ln31_1_fu_969_p1;
wire   [7:0] tmp_18_fu_955_p4;
wire   [22:0] trunc_ln31_fu_965_p1;
wire   [7:0] tmp_19_fu_973_p4;
wire   [22:0] trunc_ln31_1_fu_983_p1;
wire   [0:0] and_ln31_fu_1011_p2;
wire   [0:0] or_ln31_fu_1021_p2;
wire   [0:0] or_ln31_1_fu_1025_p2;
wire   [0:0] and_ln31_1_fu_1029_p2;
wire   [0:0] and_ln31_2_fu_1035_p2;
wire   [0:0] xor_ln31_fu_1015_p2;
wire   [0:0] output_5_fu_1041_p2;
wire   [7:0] mul_ln51_fu_1062_p0;
wire   [5:0] mul_ln51_fu_1062_p1;
wire   [12:0] mul_ln51_fu_1062_p2;
wire   [1:0] tmp_26_fu_1068_p4;
wire   [2:0] shl_ln51_2_fu_1101_p3;
wire   [5:0] zext_ln51_3_fu_1108_p1;
wire   [5:0] shl_ln51_1_fu_1094_p3;
wire   [5:0] sub_ln51_fu_1112_p2;
wire   [6:0] zext_ln51_fu_1091_p1;
wire  signed [6:0] sext_ln51_fu_1118_p1;
wire   [6:0] add_ln51_1_fu_1122_p2;
wire   [9:0] tmp_28_fu_1128_p3;
wire  signed [66:0] sext_ln51_1_fu_1136_p1;
wire   [223:0] zext_ln51_4_fu_1140_p1;
wire   [223:0] lshr_ln51_fu_1144_p2;
wire   [0:0] and_ln49_fu_1158_p2;
wire   [31:0] output_fu_1163_p3;
reg   [1:0] grp_fu_185_opcode;
reg   [4:0] grp_fu_196_opcode;
reg   [4:0] grp_fu_200_opcode;
reg   [27:0] ap_NS_fsm;
wire   [12:0] mul_ln43_fu_553_p10;
wire   [12:0] mul_ln46_1_fu_442_p10;
wire   [12:0] mul_ln46_fu_336_p10;
wire   [12:0] mul_ln51_fu_1062_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 28'd1;
#0 I_sum = 32'd0;
end

uz_FOC_sample_faddfsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_4_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_185_p0),
    .din1(grp_fu_185_p1),
    .opcode(grp_fu_185_opcode),
    .ce(1'b1),
    .dout(grp_fu_185_p2)
);

uz_FOC_sample_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_192_p0),
    .din1(grp_fu_192_p1),
    .ce(1'b1),
    .dout(grp_fu_192_p2)
);

uz_FOC_sample_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_196_p0),
    .din1(grp_fu_196_p1),
    .ce(1'b1),
    .opcode(grp_fu_196_opcode),
    .dout(grp_fu_196_p2)
);

uz_FOC_sample_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_200_p0),
    .din1(grp_fu_200_p1),
    .ce(1'b1),
    .opcode(grp_fu_200_opcode),
    .dout(grp_fu_200_p2)
);

uz_FOC_sample_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(output_4_reg_1360),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_206_p2)
);

uz_FOC_sample_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_231),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_211_p2)
);

uz_FOC_sample_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_231),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd8),
    .dout(grp_fu_216_p2)
);

uz_FOC_sample_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_231),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_221_p2)
);

uz_FOC_sample_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(output_4_reg_1360),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_226_p2)
);

uz_FOC_sample_mul_8ns_6ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 13 ))
mul_8ns_6ns_13_1_1_U10(
    .din0(mul_ln46_fu_336_p0),
    .din1(mul_ln46_fu_336_p1),
    .dout(mul_ln46_fu_336_p2)
);

uz_FOC_sample_mul_8ns_6ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 13 ))
mul_8ns_6ns_13_1_1_U11(
    .din0(mul_ln46_1_fu_442_p0),
    .din1(mul_ln46_1_fu_442_p1),
    .dout(mul_ln46_1_fu_442_p2)
);

uz_FOC_sample_mul_8ns_6ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 13 ))
mul_8ns_6ns_13_1_1_U12(
    .din0(mul_ln43_fu_553_p0),
    .din1(mul_ln43_fu_553_p1),
    .dout(mul_ln43_fu_553_p2)
);

uz_FOC_sample_mul_8ns_6ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 13 ))
mul_8ns_6ns_13_1_1_U13(
    .din0(mul_ln51_fu_1062_p0),
    .din1(mul_ln51_fu_1062_p1),
    .dout(mul_ln51_fu_1062_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((clamping_active_fu_1047_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        mul7_pn_reg_173 <= 32'd0;
    end else if (((clamping_active_reg_1416 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        mul7_pn_reg_173 <= mul7_reg_1446;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        I_sum <= select_ln56_fu_1175_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln43_reg_1302 <= add_ln43_fu_544_p2;
        and_ln23_1_reg_1323 <= and_ln23_1_fu_677_p2;
        tmp_6_reg_1312 <= mul_ln43_fu_553_p2[32'd11];
        tmp_8_reg_1329 <= grp_fu_196_p2;
        trunc_ln46_1_reg_1318 <= trunc_ln46_1_fu_641_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln46_2_reg_1275 <= add_ln46_2_fu_433_p2;
        and_ln23_3_reg_1296 <= and_ln23_3_fu_538_p2;
        bitcast_ln46_reg_1267 <= bitcast_ln46_fu_428_p1;
        or_ln23_reg_1291 <= or_ln23_fu_500_p2;
        tmp_24_reg_1285 <= mul_ln46_1_fu_442_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln46_reg_1251 <= add_ln46_fu_326_p2;
        output_before_saturation_reg_1242 <= grp_fu_185_p2;
        self_2_cast_reg_1235[4 : 0] <= self_2_cast_fu_323_p1[4 : 0];
        tmp_17_reg_1261 <= mul_ln46_fu_336_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == I_rst_read_read_fu_116_p2) & (clamping_active_fu_1047_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        add_ln51_reg_1420 <= add_ln51_fu_1053_p2;
        tmp_27_reg_1430 <= mul_ln51_fu_1062_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        and_ln25_reg_1345 <= and_ln25_fu_748_p2;
        bitcast_ln46_1_reg_1339 <= bitcast_ln46_1_fu_745_p1;
        trunc_ln43_reg_1334 <= trunc_ln43_fu_741_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        clamping_active_reg_1416 <= clamping_active_fu_1047_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        error_reg_1215 <= grp_fu_185_p2;
        trunc_ln44_reg_1220 <= trunc_ln44_fu_310_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        icmp_ln31_1_reg_1401 <= icmp_ln31_1_fu_993_p2;
        icmp_ln31_2_reg_1406 <= icmp_ln31_2_fu_999_p2;
        icmp_ln31_3_reg_1411 <= icmp_ln31_3_fu_1005_p2;
        icmp_ln31_reg_1396 <= icmp_ln31_fu_987_p2;
        tmp_16_reg_1391 <= grp_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln44_reg_1204 <= icmp_ln44_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == I_rst_read_read_fu_116_p2) & (1'b1 == ap_CS_fsm_state24))) begin
        mul7_reg_1446 <= grp_fu_192_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        old_I_sum_reg_1230 <= I_sum;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        or_ln35_reg_1369 <= or_ln35_fu_817_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        output_4_reg_1360 <= output_4_fu_780_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        output_6_reg_1451 <= output_6_fu_1169_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_231 <= grp_fu_192_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == I_rst_read_read_fu_116_p2) & (1'b1 == ap_CS_fsm_state21))) begin
        trunc_ln51_reg_1436 <= trunc_ln51_fu_1150_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((clamping_active_reg_1416 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        ap_phi_mux_mul7_pn_phi_fu_177_p4 = mul7_reg_1446;
    end else begin
        ap_phi_mux_mul7_pn_phi_fu_177_p4 = mul7_pn_reg_173;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        grp_fu_185_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state8) | ((1'd0 == I_rst_read_read_fu_116_p2) & (1'b1 == ap_CS_fsm_state25)))) begin
        grp_fu_185_opcode = 2'd0;
    end else begin
        grp_fu_185_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_185_p0 = old_I_sum_reg_1230;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_185_p0 = output_before_saturation_reg_1242;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_185_p0 = I_sum;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_185_p0 = referenceValue;
    end else begin
        grp_fu_185_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_185_p1 = ap_phi_mux_mul7_pn_phi_fu_177_p4;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_185_p1 = select_ln25_fu_752_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_185_p1 = reg_231;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_185_p1 = actualValue;
    end else begin
        grp_fu_185_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_192_p0 = reg_231;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_192_p0 = error_reg_1215;
    end else begin
        grp_fu_192_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_192_p1 = bitcast_ln51_fu_1154_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_192_p1 = bitcast_ln43_fu_760_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_192_p1 = bitcast_ln44_fu_314_p1;
    end else begin
        grp_fu_192_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_196_opcode = 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state18) | ((1'd0 == and_ln25_reg_1345) & (1'b1 == ap_CS_fsm_state25)))) begin
        grp_fu_196_opcode = 5'd4;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_196_opcode = 5'd3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_196_opcode = 5'd2;
    end else begin
        grp_fu_196_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_196_p0 = sign_fu_859_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_196_p0 = output_4_reg_1360;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_196_p0 = output_before_saturation_reg_1242;
    end else begin
        grp_fu_196_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_196_p1 = sign_1_fu_942_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_196_p1 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_196_p1 = bitcast_ln46_1_reg_1339;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_196_p1 = bitcast_ln46_fu_428_p1;
    end else begin
        grp_fu_196_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_200_opcode = 5'd8;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_200_opcode = 5'd5;
    end else begin
        grp_fu_200_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_200_p0 = output_4_reg_1360;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_200_p0 = output_before_saturation_reg_1242;
    end else begin
        grp_fu_200_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_200_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_200_p1 = bitcast_ln46_reg_1267;
    end else begin
        grp_fu_200_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        self_address0 = zext_ln51_1_fu_1078_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        self_address0 = zext_ln43_1_fu_569_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        self_address0 = zext_ln46_7_fu_458_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        self_address0 = zext_ln46_1_fu_352_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        self_address0 = select_ln44_fu_246_p3;
    end else begin
        self_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        self_ce0 = 1'b1;
    end else begin
        self_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((clamping_active_fu_1047_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign I_rst_read_read_fu_116_p2 = I_rst;

assign add_ln43_1_fu_713_p2 = ($signed(zext_ln43_fu_682_p1) + $signed(sext_ln43_fu_709_p1));

assign add_ln43_fu_544_p2 = (6'd4 + self_2_cast_reg_1235);

assign add_ln44_fu_282_p2 = ($signed(sext_ln44_fu_278_p1) + $signed(self_2_cast2_fu_255_p1));

assign add_ln46_1_fu_396_p2 = ($signed(zext_ln46_fu_365_p1) + $signed(sext_ln46_fu_392_p1));

assign add_ln46_2_fu_433_p2 = (6'd16 + self_2_cast_reg_1235);

assign add_ln46_3_fu_613_p2 = ($signed(zext_ln46_5_fu_582_p1) + $signed(sext_ln46_2_fu_609_p1));

assign add_ln46_fu_326_p2 = (6'd12 + self_2_cast_fu_323_p1);

assign add_ln51_1_fu_1122_p2 = ($signed(zext_ln51_fu_1091_p1) + $signed(sext_ln51_fu_1118_p1));

assign add_ln51_fu_1053_p2 = (6'd8 + self_2_cast_reg_1235);

assign and_ln23_1_fu_677_p2 = (or_ln23_reg_1291 & or_ln23_1_fu_671_p2);

assign and_ln23_2_fu_764_p2 = (grp_fu_196_p2 & and_ln23_1_reg_1323);

assign and_ln23_3_fu_538_p2 = (or_ln23_fu_500_p2 & or_ln23_2_fu_532_p2);

assign and_ln23_4_fu_769_p2 = (grp_fu_200_p2 & and_ln23_3_reg_1296);

assign and_ln23_fu_774_p2 = (and_ln23_4_fu_769_p2 & and_ln23_2_fu_764_p2);

assign and_ln25_fu_748_p2 = (tmp_8_reg_1329 & and_ln23_3_reg_1296);

assign and_ln31_1_fu_1029_p2 = (or_ln31_fu_1021_p2 & or_ln31_1_fu_1025_p2);

assign and_ln31_2_fu_1035_p2 = (grp_fu_196_p2 & and_ln31_1_fu_1029_p2);

assign and_ln31_fu_1011_p2 = (tmp_16_reg_1391 & or_ln35_reg_1369);

assign and_ln35_1_fu_854_p2 = (or_ln35_reg_1369 & and_ln35_fu_848_p2);

assign and_ln35_2_fu_904_p2 = (or_ln35_1_fu_898_p2 & grp_fu_211_p2);

assign and_ln35_3_fu_936_p2 = (or_ln35_1_fu_898_p2 & and_ln35_fu_930_p2);

assign and_ln35_fu_823_p2 = (or_ln35_reg_1369 & grp_fu_196_p2);

assign and_ln35_fu_848_p2 = (xor_ln35_fu_842_p2 & xor_ln35_fu_836_p2);

assign and_ln35_fu_930_p2 = (xor_ln35_fu_924_p2 & xor_ln35_fu_918_p2);

assign and_ln49_fu_1158_p2 = (grp_fu_196_p2 & and_ln23_1_reg_1323);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_return = output_6_reg_1451;

assign bitcast_ln23_fu_471_p1 = output_before_saturation_reg_1242;

assign bitcast_ln31_1_fu_969_p1 = sign_1_fu_942_p3;

assign bitcast_ln31_fu_951_p1 = sign_fu_859_p3;

assign bitcast_ln35_1_fu_868_p1 = reg_231;

assign bitcast_ln35_fu_788_p1 = output_4_reg_1360;

assign bitcast_ln43_fu_760_p1 = trunc_ln43_reg_1334;

assign bitcast_ln44_fu_314_p1 = trunc_ln44_reg_1220;

assign bitcast_ln46_1_fu_745_p1 = trunc_ln46_1_reg_1318;

assign bitcast_ln46_fu_428_p1 = trunc_ln46_fu_424_p1;

assign bitcast_ln51_fu_1154_p1 = trunc_ln51_reg_1436;

assign clamping_active_fu_1047_p2 = (output_5_fu_1041_p2 | ext_clamping);

assign icmp_ln23_1_fu_494_p2 = ((trunc_ln23_fu_484_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln23_2_fu_659_p2 = ((tmp_1_fu_645_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln23_3_fu_665_p2 = ((trunc_ln23_1_fu_655_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln23_4_fu_520_p2 = ((tmp_4_fu_506_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln23_5_fu_526_p2 = ((trunc_ln23_2_fu_516_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_488_p2 = ((tmp_fu_474_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln31_1_fu_993_p2 = ((trunc_ln31_fu_965_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln31_2_fu_999_p2 = ((tmp_19_fu_973_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln31_3_fu_1005_p2 = ((trunc_ln31_1_fu_983_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_987_p2 = ((tmp_18_fu_955_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln35_1_fu_811_p2 = ((trunc_ln35_fu_801_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln35_2_fu_886_p2 = ((tmp_12_fu_872_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln35_3_fu_892_p2 = ((trunc_ln35_1_fu_882_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_805_p2 = ((tmp_9_fu_791_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_240_p2 = ((self_2 < 5'd28) ? 1'b1 : 1'b0);

assign lshr_ln43_fu_735_p2 = self_q0 >> zext_ln43_4_fu_731_p1;

assign lshr_ln44_fu_304_p2 = self_q0 >> zext_ln44_fu_300_p1;

assign lshr_ln46_1_fu_635_p2 = self_q0 >> zext_ln46_9_fu_631_p1;

assign lshr_ln46_fu_418_p2 = self_q0 >> zext_ln46_4_fu_414_p1;

assign lshr_ln51_fu_1144_p2 = self_q0 >> zext_ln51_4_fu_1140_p1;

assign mul_ln43_fu_553_p0 = 13'd74;

assign mul_ln43_fu_553_p1 = mul_ln43_fu_553_p10;

assign mul_ln43_fu_553_p10 = add_ln43_fu_544_p2;

assign mul_ln46_1_fu_442_p0 = 13'd74;

assign mul_ln46_1_fu_442_p1 = mul_ln46_1_fu_442_p10;

assign mul_ln46_1_fu_442_p10 = add_ln46_2_fu_433_p2;

assign mul_ln46_fu_336_p0 = 13'd74;

assign mul_ln46_fu_336_p1 = mul_ln46_fu_336_p10;

assign mul_ln46_fu_336_p10 = add_ln46_fu_326_p2;

assign mul_ln51_fu_1062_p0 = 13'd74;

assign mul_ln51_fu_1062_p1 = mul_ln51_fu_1062_p10;

assign mul_ln51_fu_1062_p10 = add_ln51_fu_1053_p2;

assign or_ln23_1_fu_671_p2 = (icmp_ln23_3_fu_665_p2 | icmp_ln23_2_fu_659_p2);

assign or_ln23_2_fu_532_p2 = (icmp_ln23_5_fu_526_p2 | icmp_ln23_4_fu_520_p2);

assign or_ln23_fu_500_p2 = (icmp_ln23_fu_488_p2 | icmp_ln23_1_fu_494_p2);

assign or_ln31_1_fu_1025_p2 = (icmp_ln31_3_reg_1411 | icmp_ln31_2_reg_1406);

assign or_ln31_fu_1021_p2 = (icmp_ln31_reg_1396 | icmp_ln31_1_reg_1401);

assign or_ln35_1_fu_898_p2 = (icmp_ln35_3_fu_892_p2 | icmp_ln35_2_fu_886_p2);

assign or_ln35_fu_817_p2 = (icmp_ln35_fu_805_p2 | icmp_ln35_1_fu_811_p2);

assign output_4_fu_780_p3 = ((and_ln23_fu_774_p2[0:0] === 1'b1) ? 32'd0 : grp_fu_185_p2);

assign output_5_fu_1041_p2 = (xor_ln31_fu_1015_p2 & and_ln31_2_fu_1035_p2);

assign output_6_fu_1169_p3 = ((and_ln25_reg_1345[0:0] === 1'b1) ? bitcast_ln46_reg_1267 : output_fu_1163_p3);

assign output_fu_1163_p3 = ((and_ln49_fu_1158_p2[0:0] === 1'b1) ? bitcast_ln46_1_reg_1339 : output_before_saturation_reg_1242);

assign select_ln25_fu_752_p3 = ((and_ln25_fu_748_p2[0:0] === 1'b1) ? bitcast_ln46_reg_1267 : bitcast_ln46_1_fu_745_p1);

assign select_ln35_2_fu_910_p3 = ((and_ln35_2_fu_904_p2[0:0] === 1'b1) ? 32'd3212836864 : 32'd1065353216);

assign select_ln35_fu_828_p3 = ((and_ln35_fu_823_p2[0:0] === 1'b1) ? 32'd3212836864 : 32'd1065353216);

assign select_ln44_1_fu_258_p3 = ((icmp_ln44_reg_1204[0:0] === 1'b1) ? 6'd0 : 6'd32);

assign select_ln44_2_fu_265_p3 = ((icmp_ln44_reg_1204[0:0] === 1'b1) ? 6'd0 : 6'd4);

assign select_ln44_fu_246_p3 = ((icmp_ln44_fu_240_p2[0:0] === 1'b1) ? 64'd0 : 64'd1);

assign select_ln56_fu_1175_p3 = ((I_rst[0:0] === 1'b1) ? 32'd0 : grp_fu_185_p2);

assign self_2_cast2_fu_255_p1 = self_2;

assign self_2_cast_fu_323_p1 = self_2;

assign sext_ln43_1_fu_727_p1 = $signed(tmp_7_fu_719_p3);

assign sext_ln43_fu_709_p1 = $signed(sub_ln43_fu_703_p2);

assign sext_ln44_1_fu_296_p1 = $signed(tmp_11_fu_288_p3);

assign sext_ln44_fu_278_p1 = $signed(sub_ln44_fu_272_p2);

assign sext_ln46_1_fu_410_p1 = $signed(tmp_22_fu_402_p3);

assign sext_ln46_2_fu_609_p1 = $signed(sub_ln46_1_fu_603_p2);

assign sext_ln46_3_fu_627_p1 = $signed(tmp_25_fu_619_p3);

assign sext_ln46_fu_392_p1 = $signed(sub_ln46_fu_386_p2);

assign sext_ln51_1_fu_1136_p1 = $signed(tmp_28_fu_1128_p3);

assign sext_ln51_fu_1118_p1 = $signed(sub_ln51_fu_1112_p2);

assign shl_ln43_1_fu_685_p3 = {{tmp_6_reg_1312}, {5'd0}};

assign shl_ln43_2_fu_692_p3 = {{tmp_6_reg_1312}, {2'd0}};

assign shl_ln46_2_fu_368_p3 = {{tmp_17_reg_1261}, {5'd0}};

assign shl_ln46_3_fu_375_p3 = {{tmp_17_reg_1261}, {2'd0}};

assign shl_ln46_4_fu_585_p3 = {{tmp_24_reg_1285}, {5'd0}};

assign shl_ln46_5_fu_592_p3 = {{tmp_24_reg_1285}, {2'd0}};

assign shl_ln51_1_fu_1094_p3 = {{tmp_27_reg_1430}, {5'd0}};

assign shl_ln51_2_fu_1101_p3 = {{tmp_27_reg_1430}, {2'd0}};

assign sign_1_fu_942_p3 = ((and_ln35_3_fu_936_p2[0:0] === 1'b1) ? select_ln35_2_fu_910_p3 : 32'd0);

assign sign_fu_859_p3 = ((and_ln35_1_fu_854_p2[0:0] === 1'b1) ? select_ln35_fu_828_p3 : 32'd0);

assign sub_ln43_fu_703_p2 = (zext_ln43_3_fu_699_p1 - shl_ln43_1_fu_685_p3);

assign sub_ln44_fu_272_p2 = (select_ln44_2_fu_265_p3 - select_ln44_1_fu_258_p3);

assign sub_ln46_1_fu_603_p2 = (zext_ln46_8_fu_599_p1 - shl_ln46_4_fu_585_p3);

assign sub_ln46_fu_386_p2 = (zext_ln46_3_fu_382_p1 - shl_ln46_2_fu_368_p3);

assign sub_ln51_fu_1112_p2 = (zext_ln51_3_fu_1108_p1 - shl_ln51_1_fu_1094_p3);

assign tmp_11_fu_288_p3 = {{add_ln44_fu_282_p2}, {3'd0}};

assign tmp_12_fu_872_p4 = {{bitcast_ln35_1_fu_868_p1[30:23]}};

assign tmp_15_fu_342_p4 = {{mul_ln46_fu_336_p2[12:11]}};

assign tmp_18_fu_955_p4 = {{bitcast_ln31_fu_951_p1[30:23]}};

assign tmp_19_fu_973_p4 = {{bitcast_ln31_1_fu_969_p1[30:23]}};

assign tmp_1_fu_645_p4 = {{lshr_ln46_1_fu_635_p2[30:23]}};

assign tmp_22_fu_402_p3 = {{add_ln46_1_fu_396_p2}, {3'd0}};

assign tmp_23_fu_448_p4 = {{mul_ln46_1_fu_442_p2[12:11]}};

assign tmp_25_fu_619_p3 = {{add_ln46_3_fu_613_p2}, {3'd0}};

assign tmp_26_fu_1068_p4 = {{mul_ln51_fu_1062_p2[12:11]}};

assign tmp_28_fu_1128_p3 = {{add_ln51_1_fu_1122_p2}, {3'd0}};

assign tmp_3_fu_559_p4 = {{mul_ln43_fu_553_p2[12:11]}};

assign tmp_4_fu_506_p4 = {{lshr_ln46_fu_418_p2[30:23]}};

assign tmp_7_fu_719_p3 = {{add_ln43_1_fu_713_p2}, {3'd0}};

assign tmp_9_fu_791_p4 = {{bitcast_ln35_fu_788_p1[30:23]}};

assign tmp_fu_474_p4 = {{bitcast_ln23_fu_471_p1[30:23]}};

assign trunc_ln23_1_fu_655_p1 = lshr_ln46_1_fu_635_p2[22:0];

assign trunc_ln23_2_fu_516_p1 = lshr_ln46_fu_418_p2[22:0];

assign trunc_ln23_fu_484_p1 = bitcast_ln23_fu_471_p1[22:0];

assign trunc_ln31_1_fu_983_p1 = bitcast_ln31_1_fu_969_p1[22:0];

assign trunc_ln31_fu_965_p1 = bitcast_ln31_fu_951_p1[22:0];

assign trunc_ln35_1_fu_882_p1 = bitcast_ln35_1_fu_868_p1[22:0];

assign trunc_ln35_fu_801_p1 = bitcast_ln35_fu_788_p1[22:0];

assign trunc_ln43_fu_741_p1 = lshr_ln43_fu_735_p2[31:0];

assign trunc_ln44_fu_310_p1 = lshr_ln44_fu_304_p2[31:0];

assign trunc_ln46_1_fu_641_p1 = lshr_ln46_1_fu_635_p2[31:0];

assign trunc_ln46_fu_424_p1 = lshr_ln46_fu_418_p2[31:0];

assign trunc_ln51_fu_1150_p1 = lshr_ln51_fu_1144_p2[31:0];

assign xor_ln31_fu_1015_p2 = (1'd1 ^ and_ln31_fu_1011_p2);

assign xor_ln35_fu_836_p2 = (grp_fu_200_p2 ^ 1'd1);

assign xor_ln35_fu_842_p2 = (grp_fu_206_p2 ^ 1'd1);

assign xor_ln35_fu_918_p2 = (grp_fu_216_p2 ^ 1'd1);

assign xor_ln35_fu_924_p2 = (grp_fu_221_p2 ^ 1'd1);

assign zext_ln43_1_fu_569_p1 = tmp_3_fu_559_p4;

assign zext_ln43_3_fu_699_p1 = shl_ln43_2_fu_692_p3;

assign zext_ln43_4_fu_731_p1 = $unsigned(sext_ln43_1_fu_727_p1);

assign zext_ln43_fu_682_p1 = add_ln43_reg_1302;

assign zext_ln44_fu_300_p1 = $unsigned(sext_ln44_1_fu_296_p1);

assign zext_ln46_1_fu_352_p1 = tmp_15_fu_342_p4;

assign zext_ln46_3_fu_382_p1 = shl_ln46_3_fu_375_p3;

assign zext_ln46_4_fu_414_p1 = $unsigned(sext_ln46_1_fu_410_p1);

assign zext_ln46_5_fu_582_p1 = add_ln46_2_reg_1275;

assign zext_ln46_7_fu_458_p1 = tmp_23_fu_448_p4;

assign zext_ln46_8_fu_599_p1 = shl_ln46_5_fu_592_p3;

assign zext_ln46_9_fu_631_p1 = $unsigned(sext_ln46_3_fu_627_p1);

assign zext_ln46_fu_365_p1 = add_ln46_reg_1251;

assign zext_ln51_1_fu_1078_p1 = tmp_26_fu_1068_p4;

assign zext_ln51_3_fu_1108_p1 = shl_ln51_2_fu_1101_p3;

assign zext_ln51_4_fu_1140_p1 = $unsigned(sext_ln51_1_fu_1136_p1);

assign zext_ln51_fu_1091_p1 = add_ln51_reg_1420;

always @ (posedge ap_clk) begin
    self_2_cast_reg_1235[5] <= 1'b0;
end

endmodule //uz_FOC_sample_uz_PI_Controller_sample_1
