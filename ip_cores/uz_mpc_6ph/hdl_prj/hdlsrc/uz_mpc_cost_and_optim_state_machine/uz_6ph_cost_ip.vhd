-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\uz_mpc_cost_and_optim_state_machine\uz_6ph_cost_ip.vhd
-- Created: 2022-10-04 11:23:04
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_6ph_cost_ip
-- Source Path: uz_6ph_cost_ip
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY uz_6ph_cost_ip IS
  PORT( IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESETN                     :   IN    std_logic;  -- ufix1
        id_pred_pu                        :   IN    std_logic_vector(26 DOWNTO 0);  -- ufix27
        iq_pred_pu                        :   IN    std_logic_vector(26 DOWNTO 0);  -- ufix27
        ix_pred_pu                        :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        iy_pred_pu                        :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        index                             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        trigger_prediciton_done           :   IN    std_logic;  -- ufix1
        AXI4_Lite_ACLK                    :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARESETN                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_AWADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_AWVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_WDATA                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_WSTRB                   :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Lite_WVALID                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_BREADY                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_ARVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_RREADY                  :   IN    std_logic;  -- ufix1
        opt_index                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        G0                                :   OUT   std_logic;  -- ufix1
        G1                                :   OUT   std_logic;  -- ufix1
        G2                                :   OUT   std_logic;  -- ufix1
        G3                                :   OUT   std_logic;  -- ufix1
        G4                                :   OUT   std_logic;  -- ufix1
        G5                                :   OUT   std_logic;  -- ufix1
        G6                                :   OUT   std_logic;  -- ufix1
        G7                                :   OUT   std_logic;  -- ufix1
        G8                                :   OUT   std_logic;  -- ufix1
        G9                                :   OUT   std_logic;  -- ufix1
        G10                               :   OUT   std_logic;  -- ufix1
        G11                               :   OUT   std_logic;  -- ufix1
        opt_done                          :   OUT   std_logic;  -- ufix1
        costs                             :   OUT   std_logic_vector(26 DOWNTO 0);  -- ufix27
        AXI4_Lite_AWREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_WREADY                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_BRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_BVALID                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_ARREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_RDATA                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_RRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_RVALID                  :   OUT   std_logic  -- ufix1
        );
END uz_6ph_cost_ip;


ARCHITECTURE rtl OF uz_6ph_cost_ip IS

  -- Component Declarations
  COMPONENT uz_6ph_cost_ip_reset_sync
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset_in                        :   IN    std_logic;  -- ufix1
          reset_out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT uz_6ph_cost_ip_axi_lite
    PORT( reset                           :   IN    std_logic;
          AXI4_Lite_ACLK                  :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARESETN               :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_AWVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_WDATA                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_WSTRB                 :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_Lite_WVALID                :   IN    std_logic;  -- ufix1
          AXI4_Lite_BREADY                :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_ARVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_RREADY                :   IN    std_logic;  -- ufix1
          read_ip_timestamp               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_AWREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_WREADY                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_BRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_BVALID                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_ARREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_RDATA                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_RRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_RVALID                :   OUT   std_logic;  -- ufix1
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          write_id_ref_pu_AXI             :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          write_iq_ref_pu_AXI             :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          write_ix_ref_pu_AXI             :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          write_iy_ref_pu_AXI             :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          write_max_current_pu_AXI        :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En15
          write_lambda_d_AXI              :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
          write_lambda_q_AXI              :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
          write_lambda_x_AXI              :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
          write_lambda_y_AXI              :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
          write_lambda_u_AXI              :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
          reset_internal                  :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  COMPONENT uz_6ph_cost_ip_dut
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          dut_enable                      :   IN    std_logic;  -- ufix1
          id_ref_pu_AXI                   :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          iq_ref_pu_AXI                   :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          ix_ref_pu_AXI                   :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          iy_ref_pu_AXI                   :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          id_pred_pu                      :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En16
          iq_pred_pu                      :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En16
          ix_pred_pu                      :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          iy_pred_pu                      :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          max_current_pu_AXI              :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En15
          index                           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          lambda_d_AXI                    :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
          lambda_q_AXI                    :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
          lambda_x_AXI                    :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
          lambda_y_AXI                    :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
          lambda_u_AXI                    :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En17
          trigger_prediciton_done         :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          opt_index                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          G0                              :   OUT   std_logic;  -- ufix1
          G1                              :   OUT   std_logic;  -- ufix1
          G2                              :   OUT   std_logic;  -- ufix1
          G3                              :   OUT   std_logic;  -- ufix1
          G4                              :   OUT   std_logic;  -- ufix1
          G5                              :   OUT   std_logic;  -- ufix1
          G6                              :   OUT   std_logic;  -- ufix1
          G7                              :   OUT   std_logic;  -- ufix1
          G8                              :   OUT   std_logic;  -- ufix1
          G9                              :   OUT   std_logic;  -- ufix1
          G10                             :   OUT   std_logic;  -- ufix1
          G11                             :   OUT   std_logic;  -- ufix1
          opt_done                        :   OUT   std_logic;  -- ufix1
          costs                           :   OUT   std_logic_vector(26 DOWNTO 0)  -- ufix27_En24
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : uz_6ph_cost_ip_reset_sync
    USE ENTITY work.uz_6ph_cost_ip_reset_sync(rtl);

  FOR ALL : uz_6ph_cost_ip_axi_lite
    USE ENTITY work.uz_6ph_cost_ip_axi_lite(rtl);

  FOR ALL : uz_6ph_cost_ip_dut
    USE ENTITY work.uz_6ph_cost_ip_dut(rtl);

  -- Signals
  SIGNAL reset                            : std_logic;
  SIGNAL ip_timestamp                     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL reset_cm                         : std_logic;  -- ufix1
  SIGNAL reset_internal                   : std_logic;  -- ufix1
  SIGNAL reset_before_sync                : std_logic;  -- ufix1
  SIGNAL AXI4_Lite_BRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_Lite_RDATA_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_RRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL write_axi_enable                 : std_logic;  -- ufix1
  SIGNAL write_id_ref_pu_AXI              : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_iq_ref_pu_AXI              : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_ix_ref_pu_AXI              : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_iy_ref_pu_AXI              : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_max_current_pu_AXI         : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_lambda_d_AXI               : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_lambda_q_AXI               : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_lambda_x_AXI               : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_lambda_y_AXI               : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL write_lambda_u_AXI               : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL id_pred_pu_unsigned              : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL id_pred_pu_sig                   : signed(26 DOWNTO 0);  -- sfix27_En16
  SIGNAL iq_pred_pu_unsigned              : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL iq_pred_pu_sig                   : signed(26 DOWNTO 0);  -- sfix27_En16
  SIGNAL ix_pred_pu_unsigned              : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL ix_pred_pu_sig                   : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL iy_pred_pu_unsigned              : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL iy_pred_pu_sig                   : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL opt_index_sig                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL G0_sig                           : std_logic;  -- ufix1
  SIGNAL G1_sig                           : std_logic;  -- ufix1
  SIGNAL G2_sig                           : std_logic;  -- ufix1
  SIGNAL G3_sig                           : std_logic;  -- ufix1
  SIGNAL G4_sig                           : std_logic;  -- ufix1
  SIGNAL G5_sig                           : std_logic;  -- ufix1
  SIGNAL G6_sig                           : std_logic;  -- ufix1
  SIGNAL G7_sig                           : std_logic;  -- ufix1
  SIGNAL G8_sig                           : std_logic;  -- ufix1
  SIGNAL G9_sig                           : std_logic;  -- ufix1
  SIGNAL G10_sig                          : std_logic;  -- ufix1
  SIGNAL G11_sig                          : std_logic;  -- ufix1
  SIGNAL opt_done_sig                     : std_logic;  -- ufix1
  SIGNAL costs_sig                        : std_logic_vector(26 DOWNTO 0);  -- ufix27
  SIGNAL costs_sig_unsigned               : unsigned(26 DOWNTO 0);  -- ufix27_En24
  SIGNAL costs_tmp                        : unsigned(26 DOWNTO 0);  -- ufix27

BEGIN
  u_uz_6ph_cost_ip_reset_sync_inst : uz_6ph_cost_ip_reset_sync
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset_in => reset_before_sync,  -- ufix1
              reset_out => reset
              );

  u_uz_6ph_cost_ip_axi_lite_inst : uz_6ph_cost_ip_axi_lite
    PORT MAP( reset => reset,
              AXI4_Lite_ACLK => AXI4_Lite_ACLK,  -- ufix1
              AXI4_Lite_ARESETN => AXI4_Lite_ARESETN,  -- ufix1
              AXI4_Lite_AWADDR => AXI4_Lite_AWADDR,  -- ufix16
              AXI4_Lite_AWVALID => AXI4_Lite_AWVALID,  -- ufix1
              AXI4_Lite_WDATA => AXI4_Lite_WDATA,  -- ufix32
              AXI4_Lite_WSTRB => AXI4_Lite_WSTRB,  -- ufix4
              AXI4_Lite_WVALID => AXI4_Lite_WVALID,  -- ufix1
              AXI4_Lite_BREADY => AXI4_Lite_BREADY,  -- ufix1
              AXI4_Lite_ARADDR => AXI4_Lite_ARADDR,  -- ufix16
              AXI4_Lite_ARVALID => AXI4_Lite_ARVALID,  -- ufix1
              AXI4_Lite_RREADY => AXI4_Lite_RREADY,  -- ufix1
              read_ip_timestamp => std_logic_vector(ip_timestamp),  -- ufix32
              AXI4_Lite_AWREADY => AXI4_Lite_AWREADY,  -- ufix1
              AXI4_Lite_WREADY => AXI4_Lite_WREADY,  -- ufix1
              AXI4_Lite_BRESP => AXI4_Lite_BRESP_tmp,  -- ufix2
              AXI4_Lite_BVALID => AXI4_Lite_BVALID,  -- ufix1
              AXI4_Lite_ARREADY => AXI4_Lite_ARREADY,  -- ufix1
              AXI4_Lite_RDATA => AXI4_Lite_RDATA_tmp,  -- ufix32
              AXI4_Lite_RRESP => AXI4_Lite_RRESP_tmp,  -- ufix2
              AXI4_Lite_RVALID => AXI4_Lite_RVALID,  -- ufix1
              write_axi_enable => write_axi_enable,  -- ufix1
              write_id_ref_pu_AXI => write_id_ref_pu_AXI,  -- sfix18_En11
              write_iq_ref_pu_AXI => write_iq_ref_pu_AXI,  -- sfix18_En11
              write_ix_ref_pu_AXI => write_ix_ref_pu_AXI,  -- sfix18_En11
              write_iy_ref_pu_AXI => write_iy_ref_pu_AXI,  -- sfix18_En11
              write_max_current_pu_AXI => write_max_current_pu_AXI,  -- ufix18_En15
              write_lambda_d_AXI => write_lambda_d_AXI,  -- ufix18_En17
              write_lambda_q_AXI => write_lambda_q_AXI,  -- ufix18_En17
              write_lambda_x_AXI => write_lambda_x_AXI,  -- ufix18_En17
              write_lambda_y_AXI => write_lambda_y_AXI,  -- ufix18_En17
              write_lambda_u_AXI => write_lambda_u_AXI,  -- ufix18_En17
              reset_internal => reset_internal  -- ufix1
              );

  u_uz_6ph_cost_ip_dut_inst : uz_6ph_cost_ip_dut
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset => reset,
              dut_enable => write_axi_enable,  -- ufix1
              id_ref_pu_AXI => write_id_ref_pu_AXI,  -- sfix18_En11
              iq_ref_pu_AXI => write_iq_ref_pu_AXI,  -- sfix18_En11
              ix_ref_pu_AXI => write_ix_ref_pu_AXI,  -- sfix18_En11
              iy_ref_pu_AXI => write_iy_ref_pu_AXI,  -- sfix18_En11
              id_pred_pu => std_logic_vector(id_pred_pu_sig),  -- sfix27_En16
              iq_pred_pu => std_logic_vector(iq_pred_pu_sig),  -- sfix27_En16
              ix_pred_pu => std_logic_vector(ix_pred_pu_sig),  -- sfix18_En11
              iy_pred_pu => std_logic_vector(iy_pred_pu_sig),  -- sfix18_En11
              max_current_pu_AXI => write_max_current_pu_AXI,  -- ufix18_En15
              index => index,  -- ufix32
              lambda_d_AXI => write_lambda_d_AXI,  -- ufix18_En17
              lambda_q_AXI => write_lambda_q_AXI,  -- ufix18_En17
              lambda_x_AXI => write_lambda_x_AXI,  -- ufix18_En17
              lambda_y_AXI => write_lambda_y_AXI,  -- ufix18_En17
              lambda_u_AXI => write_lambda_u_AXI,  -- ufix18_En17
              trigger_prediciton_done => trigger_prediciton_done,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              opt_index => opt_index_sig,  -- ufix32
              G0 => G0_sig,  -- ufix1
              G1 => G1_sig,  -- ufix1
              G2 => G2_sig,  -- ufix1
              G3 => G3_sig,  -- ufix1
              G4 => G4_sig,  -- ufix1
              G5 => G5_sig,  -- ufix1
              G6 => G6_sig,  -- ufix1
              G7 => G7_sig,  -- ufix1
              G8 => G8_sig,  -- ufix1
              G9 => G9_sig,  -- ufix1
              G10 => G10_sig,  -- ufix1
              G11 => G11_sig,  -- ufix1
              opt_done => opt_done_sig,  -- ufix1
              costs => costs_sig  -- ufix27_En24
              );

  ip_timestamp <= unsigned'(X"83BA8D23");

  reset_cm <=  NOT IPCORE_RESETN;

  reset_before_sync <= reset_cm OR reset_internal;

  id_pred_pu_unsigned <= unsigned(id_pred_pu);

  id_pred_pu_sig <= signed(id_pred_pu_unsigned);

  iq_pred_pu_unsigned <= unsigned(iq_pred_pu);

  iq_pred_pu_sig <= signed(iq_pred_pu_unsigned);

  ix_pred_pu_unsigned <= unsigned(ix_pred_pu);

  ix_pred_pu_sig <= signed(ix_pred_pu_unsigned);

  iy_pred_pu_unsigned <= unsigned(iy_pred_pu);

  iy_pred_pu_sig <= signed(iy_pred_pu_unsigned);

  costs_sig_unsigned <= unsigned(costs_sig);

  costs_tmp <= costs_sig_unsigned;

  costs <= std_logic_vector(costs_tmp);

  opt_index <= opt_index_sig;

  G0 <= G0_sig;

  G1 <= G1_sig;

  G2 <= G2_sig;

  G3 <= G3_sig;

  G4 <= G4_sig;

  G5 <= G5_sig;

  G6 <= G6_sig;

  G7 <= G7_sig;

  G8 <= G8_sig;

  G9 <= G9_sig;

  G10 <= G10_sig;

  G11 <= G11_sig;

  opt_done <= opt_done_sig;

  AXI4_Lite_BRESP <= AXI4_Lite_BRESP_tmp;

  AXI4_Lite_RDATA <= AXI4_Lite_RDATA_tmp;

  AXI4_Lite_RRESP <= AXI4_Lite_RRESP_tmp;

END rtl;

