-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\uz_mpc_cost_and_optim_state_machine\uz_6_ph_voltages_ip_src_Subsystem.vhd
-- Created: 2022-10-04 11:16:03
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_6_ph_voltages_ip_src_Subsystem
-- Source Path: uz_mpc_cost_and_optim_state_machine/uz_6ph_mpc_pu_voltages_vsd/Subsystem
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY uz_6_ph_voltages_ip_src_Subsystem IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        Set                               :   IN    std_logic;
        Reset_1                           :   IN    std_logic;
        Q                                 :   OUT   std_logic
        );
END uz_6_ph_voltages_ip_src_Subsystem;


ARCHITECTURE rtl OF uz_6_ph_voltages_ip_src_Subsystem IS

  -- Signals
  SIGNAL Constant1_out1                   : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL Data_Type_Conversion1_out1       : std_logic;
  SIGNAL Data_Type_Conversion2_out1       : std_logic;
  SIGNAL Logical_Operator_out1            : std_logic;
  SIGNAL Unit_Delay_out1                  : std_logic;
  SIGNAL Logical_Operator5_out1           : std_logic;
  SIGNAL Logical_Operator4_out1           : std_logic;
  SIGNAL Switch1_out1                     : std_logic;
  SIGNAL Logical_Operator2_out1           : std_logic;
  SIGNAL Logical_Operator1_out1           : std_logic;

BEGIN
  Constant1_out1 <= to_unsigned(0, 32);

  
  switch_compare_1 <= '1' WHEN Constant1_out1 > to_unsigned(1, 32) ELSE
      '0';

  
  Data_Type_Conversion1_out1 <= '1' WHEN Set /= '0' ELSE
      '0';

  
  Data_Type_Conversion2_out1 <= '1' WHEN Reset_1 /= '0' ELSE
      '0';

  Logical_Operator_out1 <=  NOT Data_Type_Conversion2_out1;

  Logical_Operator5_out1 <= Logical_Operator_out1 AND Unit_Delay_out1;

  Logical_Operator4_out1 <= Data_Type_Conversion1_out1 OR Logical_Operator5_out1;

  Unit_Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Unit_Delay_out1 <= '0';
      ELSIF enb = '1' THEN
        Unit_Delay_out1 <= Switch1_out1;
      END IF;
    END IF;
  END PROCESS Unit_Delay_process;


  Logical_Operator2_out1 <= Data_Type_Conversion1_out1 OR Unit_Delay_out1;

  Logical_Operator1_out1 <= Logical_Operator2_out1 AND Logical_Operator_out1;

  
  Switch1_out1 <= Logical_Operator1_out1 WHEN switch_compare_1 = '0' ELSE
      Logical_Operator4_out1;

  Q <= Switch1_out1;

END rtl;

