-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\VSD_and_Park_transformation_6Phase\hdlsrc\VSD_and_Park_transformation_6Phase\VSD_and_Park_transformation_dut.vhd
-- Created: 2022-08-17 10:05:53
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: VSD_and_Park_transformation_dut
-- Source Path: VSD_and_Park_transformation/VSD_and_Park_transformation_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY VSD_and_Park_transformation_dut IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        i_a1                              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_b1                              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_c1                              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_a2                              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_b2                              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_c2                              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        theta_el                          :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En20
        theta_el_offset                   :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En20
        curent_valid_in                   :   IN    std_logic;  -- ufix1
        ce_out                            :   OUT   std_logic;  -- ufix1
        i_alpha                           :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_alpha_axi                       :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_beta                            :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_beta_axi                        :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_d                               :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_d_axi                           :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_q                               :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_q_axi                           :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_x                               :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_x_axi                           :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_y                               :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_y_axi                           :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_0_plus                          :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_0_plus_axi                      :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_0_minus                         :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_0_minus_axi                     :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        done                              :   OUT   std_logic;  -- ufix1
        i_a1_axi                          :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_b1_axi                          :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_c1_axi                          :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_a2_axi                          :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_b2_axi                          :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
        i_c2_axi                          :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En11
        );
END VSD_and_Park_transformation_dut;


ARCHITECTURE rtl OF VSD_and_Park_transformation_dut IS

  -- Component Declarations
  COMPONENT VSD_and_Park_transformation_src_vsd_and_park_tra
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          i_a1                            :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_b1                            :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_c1                            :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_a2                            :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_b2                            :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_c2                            :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          theta_el                        :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En20
          theta_el_offset                 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En20
          curent_valid_in                 :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          i_alpha                         :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_alpha_axi                     :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_beta                          :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_beta_axi                      :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_d                             :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_d_axi                         :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_q                             :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_q_axi                         :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_x                             :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_x_axi                         :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_y                             :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_y_axi                         :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_0_plus                        :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_0_plus_axi                    :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_0_minus                       :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_0_minus_axi                   :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          done                            :   OUT   std_logic;  -- ufix1
          i_a1_axi                        :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_b1_axi                        :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_c1_axi                        :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_a2_axi                        :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_b2_axi                        :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_c2_axi                        :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En11
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : VSD_and_Park_transformation_src_vsd_and_park_tra
    USE ENTITY work.VSD_and_Park_transformation_src_vsd_and_park_tra(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL curent_valid_in_sig              : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL i_alpha_sig                      : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_alpha_axi_sig                  : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_beta_sig                       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_beta_axi_sig                   : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_d_sig                          : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_d_axi_sig                      : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_q_sig                          : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_q_axi_sig                      : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_x_sig                          : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_x_axi_sig                      : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_y_sig                          : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_y_axi_sig                      : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_0_plus_sig                     : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_0_plus_axi_sig                 : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_0_minus_sig                    : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_0_minus_axi_sig                : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL done_sig                         : std_logic;  -- ufix1
  SIGNAL i_a1_axi_sig                     : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_b1_axi_sig                     : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_c1_axi_sig                     : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_a2_axi_sig                     : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_b2_axi_sig                     : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_c2_axi_sig                     : std_logic_vector(17 DOWNTO 0);  -- ufix18

BEGIN
  u_VSD_and_Park_transformation_src_vsd_and_park_tra : VSD_and_Park_transformation_src_vsd_and_park_tra
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset_x => reset_x,
              i_a1 => i_a1,  -- sfix18_En11
              i_b1 => i_b1,  -- sfix18_En11
              i_c1 => i_c1,  -- sfix18_En11
              i_a2 => i_a2,  -- sfix18_En11
              i_b2 => i_b2,  -- sfix18_En11
              i_c2 => i_c2,  -- sfix18_En11
              theta_el => theta_el,  -- sfix24_En20
              theta_el_offset => theta_el_offset,  -- sfix24_En20
              curent_valid_in => curent_valid_in_sig,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              i_alpha => i_alpha_sig,  -- sfix18_En11
              i_alpha_axi => i_alpha_axi_sig,  -- sfix18_En11
              i_beta => i_beta_sig,  -- sfix18_En11
              i_beta_axi => i_beta_axi_sig,  -- sfix18_En11
              i_d => i_d_sig,  -- sfix18_En11
              i_d_axi => i_d_axi_sig,  -- sfix18_En11
              i_q => i_q_sig,  -- sfix18_En11
              i_q_axi => i_q_axi_sig,  -- sfix18_En11
              i_x => i_x_sig,  -- sfix18_En11
              i_x_axi => i_x_axi_sig,  -- sfix18_En11
              i_y => i_y_sig,  -- sfix18_En11
              i_y_axi => i_y_axi_sig,  -- sfix18_En11
              i_0_plus => i_0_plus_sig,  -- sfix18_En11
              i_0_plus_axi => i_0_plus_axi_sig,  -- sfix18_En11
              i_0_minus => i_0_minus_sig,  -- sfix18_En11
              i_0_minus_axi => i_0_minus_axi_sig,  -- sfix18_En11
              done => done_sig,  -- ufix1
              i_a1_axi => i_a1_axi_sig,  -- sfix18_En11
              i_b1_axi => i_b1_axi_sig,  -- sfix18_En11
              i_c1_axi => i_c1_axi_sig,  -- sfix18_En11
              i_a2_axi => i_a2_axi_sig,  -- sfix18_En11
              i_b2_axi => i_b2_axi_sig,  -- sfix18_En11
              i_c2_axi => i_c2_axi_sig  -- sfix18_En11
              );

  curent_valid_in_sig <= curent_valid_in;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  i_alpha <= i_alpha_sig;

  i_alpha_axi <= i_alpha_axi_sig;

  i_beta <= i_beta_sig;

  i_beta_axi <= i_beta_axi_sig;

  i_d <= i_d_sig;

  i_d_axi <= i_d_axi_sig;

  i_q <= i_q_sig;

  i_q_axi <= i_q_axi_sig;

  i_x <= i_x_sig;

  i_x_axi <= i_x_axi_sig;

  i_y <= i_y_sig;

  i_y_axi <= i_y_axi_sig;

  i_0_plus <= i_0_plus_sig;

  i_0_plus_axi <= i_0_plus_axi_sig;

  i_0_minus <= i_0_minus_sig;

  i_0_minus_axi <= i_0_minus_axi_sig;

  done <= done_sig;

  i_a1_axi <= i_a1_axi_sig;

  i_b1_axi <= i_b1_axi_sig;

  i_c1_axi <= i_c1_axi_sig;

  i_a2_axi <= i_a2_axi_sig;

  i_b2_axi <= i_b2_axi_sig;

  i_c2_axi <= i_c2_axi_sig;

END rtl;

