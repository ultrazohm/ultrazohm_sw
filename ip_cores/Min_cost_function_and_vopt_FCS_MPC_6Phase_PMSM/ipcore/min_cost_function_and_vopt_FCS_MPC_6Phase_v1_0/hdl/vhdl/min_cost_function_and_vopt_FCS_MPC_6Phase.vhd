-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\Min_cost_function_and_vopt_FCS_MPC_6Phase_PMSM\hdlsrc\min_cost_function_and_vopt_FCS_MPC_6Phase_PMSM\min_cost_function_and_vopt_FCS_MPC_6Phase.vhd
-- Created: 2022-09-01 09:59:21
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: min_cost_function_and_vopt_FCS_MPC_6Phase
-- Source Path: min_cost_function_and_vopt_FCS_MPC_6Phase
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY min_cost_function_and_vopt_FCS_MPC_6Phase IS
  PORT( IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESETN                     :   IN    std_logic;  -- ufix1
        J_in                              :   IN    std_logic_vector(19 DOWNTO 0);  -- ufix20
        d_phase_voltage_per_switchimng_state :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        q_phase_voltage_per_switchimng_state :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        x_phase_voltage_per_switchimng_state :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        y_phase_voltage_per_switchimng_state :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        Index_in                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        valid_in                          :   IN    std_logic;  -- ufix1
        AXI4_Lite_ACLK                    :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARESETN                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_AWADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_AWVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_WDATA                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_WSTRB                   :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Lite_WVALID                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_BREADY                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_ARVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_RREADY                  :   IN    std_logic;  -- ufix1
        Index_out                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        last_applied_optimal_voltage_ud   :   OUT   std_logic_vector(23 DOWNTO 0);  -- ufix24
        last_applied_optimal_voltage_uq   :   OUT   std_logic_vector(23 DOWNTO 0);  -- ufix24
        last_applied_optimal_voltage_ux   :   OUT   std_logic_vector(23 DOWNTO 0);  -- ufix24
        last_applied_optimal_voltage_uy   :   OUT   std_logic_vector(23 DOWNTO 0);  -- ufix24
        done                              :   OUT   std_logic;  -- ufix1
        done_complete                     :   OUT   std_logic;  -- ufix1
        AXI4_Lite_AWREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_WREADY                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_BRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_BVALID                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_ARREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_RDATA                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_RRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_RVALID                  :   OUT   std_logic  -- ufix1
        );
END min_cost_function_and_vopt_FCS_MPC_6Phase;


ARCHITECTURE rtl OF min_cost_function_and_vopt_FCS_MPC_6Phase IS

  -- Component Declarations
  COMPONENT min_cost_function_and_vopt_FCS_MPC_6Phase_reset_sync
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset_in                        :   IN    std_logic;  -- ufix1
          reset_out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT min_cost_function_and_vopt_FCS_MPC_6Phase_axi_lite
    PORT( reset                           :   IN    std_logic;
          AXI4_Lite_ACLK                  :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARESETN               :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_AWVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_WDATA                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_WSTRB                 :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_Lite_WVALID                :   IN    std_logic;  -- ufix1
          AXI4_Lite_BREADY                :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_ARVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_RREADY                :   IN    std_logic;  -- ufix1
          read_ip_timestamp               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          read_last_applied_optimal_voltage_uy_AXI :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          read_last_applied_optimal_voltage_ux_AXI :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          read_last_applied_optimal_voltage_uq_AXI :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          read_last_applied_optimal_voltage_ud_AXI :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          read_done_complete_AXI          :   IN    std_logic;  -- ufix1
          read_Index_out_AXI              :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32
          AXI4_Lite_AWREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_WREADY                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_BRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_BVALID                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_ARREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_RDATA                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_RRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_RVALID                :   OUT   std_logic;  -- ufix1
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          write_use_AXI                   :   OUT   std_logic;  -- ufix1
          write_J_in_AXI                  :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
          write_Index_in_AXI              :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32
          write_d_phase_voltage_per_switchimng_state_AXI :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          write_q_phase_voltage_per_switchimng_state_AXI :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          write_x_phase_voltage_per_switchimng_state_AXI :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          write_y_phase_voltage_per_switchimng_state_AXI :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          write_valid_in_AXI              :   OUT   std_logic;  -- ufix1
          reset_internal                  :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  COMPONENT min_cost_function_and_vopt_FCS_MPC_6Phase_dut
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          dut_enable                      :   IN    std_logic;  -- ufix1
          J_in                            :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
          d_phase_voltage_per_switchimng_state :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          q_phase_voltage_per_switchimng_state :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          x_phase_voltage_per_switchimng_state :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          y_phase_voltage_per_switchimng_state :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          Index_in                        :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32
          use_AXI                         :   IN    std_logic;  -- ufix1
          J_in_AXI                        :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
          Index_in_AXI                    :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32
          d_phase_voltage_per_switchimng_state_AXI :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          q_phase_voltage_per_switchimng_state_AXI :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          x_phase_voltage_per_switchimng_state_AXI :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          y_phase_voltage_per_switchimng_state_AXI :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          valid_in_AXI                    :   IN    std_logic;  -- ufix1
          valid_in                        :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          Index_out                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32
          last_applied_optimal_voltage_ud :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          last_applied_optimal_voltage_uq :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          last_applied_optimal_voltage_ux :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          last_applied_optimal_voltage_uy :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          last_applied_optimal_voltage_uy_AXI :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          last_applied_optimal_voltage_ux_AXI :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          last_applied_optimal_voltage_uq_AXI :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          last_applied_optimal_voltage_ud_AXI :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          Index_out_AXI                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32
          done                            :   OUT   std_logic;  -- ufix1
          done_complete                   :   OUT   std_logic;  -- ufix1
          done_complete_AXI               :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : min_cost_function_and_vopt_FCS_MPC_6Phase_reset_sync
    USE ENTITY work.min_cost_function_and_vopt_FCS_MPC_6Phase_reset_sync(rtl);

  FOR ALL : min_cost_function_and_vopt_FCS_MPC_6Phase_axi_lite
    USE ENTITY work.min_cost_function_and_vopt_FCS_MPC_6Phase_axi_lite(rtl);

  FOR ALL : min_cost_function_and_vopt_FCS_MPC_6Phase_dut
    USE ENTITY work.min_cost_function_and_vopt_FCS_MPC_6Phase_dut(rtl);

  -- Signals
  SIGNAL reset                            : std_logic;
  SIGNAL ip_timestamp                     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL reset_cm                         : std_logic;  -- ufix1
  SIGNAL J_in_unsigned                    : unsigned(19 DOWNTO 0);  -- ufix20
  SIGNAL J_in_sig                         : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL d_phase_voltage_per_switchimng_state_unsigned : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL d_phase_voltage_per_switchimng_state_sig : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL q_phase_voltage_per_switchimng_state_unsigned : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL q_phase_voltage_per_switchimng_state_sig : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL x_phase_voltage_per_switchimng_state_unsigned : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL x_phase_voltage_per_switchimng_state_sig : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL y_phase_voltage_per_switchimng_state_unsigned : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL y_phase_voltage_per_switchimng_state_sig : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Index_in_unsigned                : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL Index_in_sig                     : signed(31 DOWNTO 0);  -- sfix32
  SIGNAL reset_internal                   : std_logic;  -- ufix1
  SIGNAL reset_before_sync                : std_logic;  -- ufix1
  SIGNAL last_applied_optimal_voltage_uy_AXI_sig : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL last_applied_optimal_voltage_ux_AXI_sig : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL last_applied_optimal_voltage_uq_AXI_sig : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL last_applied_optimal_voltage_ud_AXI_sig : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL done_complete_AXI_sig            : std_logic;  -- ufix1
  SIGNAL Index_out_AXI_sig                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_BRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_Lite_RDATA_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_RRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL write_axi_enable                 : std_logic;  -- ufix1
  SIGNAL write_use_AXI                    : std_logic;  -- ufix1
  SIGNAL write_J_in_AXI                   : std_logic_vector(19 DOWNTO 0);  -- ufix20
  SIGNAL write_Index_in_AXI               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_d_phase_voltage_per_switchimng_state_AXI : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL write_q_phase_voltage_per_switchimng_state_AXI : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL write_x_phase_voltage_per_switchimng_state_AXI : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL write_y_phase_voltage_per_switchimng_state_AXI : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL write_valid_in_AXI               : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL Index_out_sig                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL last_applied_optimal_voltage_ud_sig : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL last_applied_optimal_voltage_uq_sig : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL last_applied_optimal_voltage_ux_sig : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL last_applied_optimal_voltage_uy_sig : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL done_sig                         : std_logic;  -- ufix1
  SIGNAL done_complete_sig                : std_logic;  -- ufix1
  SIGNAL Index_out_sig_signed             : signed(31 DOWNTO 0);  -- sfix32
  SIGNAL Index_out_tmp                    : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL last_applied_optimal_voltage_ud_sig_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL last_applied_optimal_voltage_ud_tmp : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL last_applied_optimal_voltage_uq_sig_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL last_applied_optimal_voltage_uq_tmp : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL last_applied_optimal_voltage_ux_sig_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL last_applied_optimal_voltage_ux_tmp : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL last_applied_optimal_voltage_uy_sig_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL last_applied_optimal_voltage_uy_tmp : unsigned(23 DOWNTO 0);  -- ufix24

BEGIN
  u_min_cost_function_and_vopt_FCS_MPC_6Phase_reset_sync_inst : min_cost_function_and_vopt_FCS_MPC_6Phase_reset_sync
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset_in => reset_before_sync,  -- ufix1
              reset_out => reset
              );

  u_min_cost_function_and_vopt_FCS_MPC_6Phase_axi_lite_inst : min_cost_function_and_vopt_FCS_MPC_6Phase_axi_lite
    PORT MAP( reset => reset,
              AXI4_Lite_ACLK => AXI4_Lite_ACLK,  -- ufix1
              AXI4_Lite_ARESETN => AXI4_Lite_ARESETN,  -- ufix1
              AXI4_Lite_AWADDR => AXI4_Lite_AWADDR,  -- ufix16
              AXI4_Lite_AWVALID => AXI4_Lite_AWVALID,  -- ufix1
              AXI4_Lite_WDATA => AXI4_Lite_WDATA,  -- ufix32
              AXI4_Lite_WSTRB => AXI4_Lite_WSTRB,  -- ufix4
              AXI4_Lite_WVALID => AXI4_Lite_WVALID,  -- ufix1
              AXI4_Lite_BREADY => AXI4_Lite_BREADY,  -- ufix1
              AXI4_Lite_ARADDR => AXI4_Lite_ARADDR,  -- ufix16
              AXI4_Lite_ARVALID => AXI4_Lite_ARVALID,  -- ufix1
              AXI4_Lite_RREADY => AXI4_Lite_RREADY,  -- ufix1
              read_ip_timestamp => std_logic_vector(ip_timestamp),  -- ufix32
              read_last_applied_optimal_voltage_uy_AXI => last_applied_optimal_voltage_uy_AXI_sig,  -- sfix24_En11
              read_last_applied_optimal_voltage_ux_AXI => last_applied_optimal_voltage_ux_AXI_sig,  -- sfix24_En11
              read_last_applied_optimal_voltage_uq_AXI => last_applied_optimal_voltage_uq_AXI_sig,  -- sfix24_En11
              read_last_applied_optimal_voltage_ud_AXI => last_applied_optimal_voltage_ud_AXI_sig,  -- sfix24_En11
              read_done_complete_AXI => done_complete_AXI_sig,  -- ufix1
              read_Index_out_AXI => Index_out_AXI_sig,  -- sfix32
              AXI4_Lite_AWREADY => AXI4_Lite_AWREADY,  -- ufix1
              AXI4_Lite_WREADY => AXI4_Lite_WREADY,  -- ufix1
              AXI4_Lite_BRESP => AXI4_Lite_BRESP_tmp,  -- ufix2
              AXI4_Lite_BVALID => AXI4_Lite_BVALID,  -- ufix1
              AXI4_Lite_ARREADY => AXI4_Lite_ARREADY,  -- ufix1
              AXI4_Lite_RDATA => AXI4_Lite_RDATA_tmp,  -- ufix32
              AXI4_Lite_RRESP => AXI4_Lite_RRESP_tmp,  -- ufix2
              AXI4_Lite_RVALID => AXI4_Lite_RVALID,  -- ufix1
              write_axi_enable => write_axi_enable,  -- ufix1
              write_use_AXI => write_use_AXI,  -- ufix1
              write_J_in_AXI => write_J_in_AXI,  -- sfix20_En11
              write_Index_in_AXI => write_Index_in_AXI,  -- sfix32
              write_d_phase_voltage_per_switchimng_state_AXI => write_d_phase_voltage_per_switchimng_state_AXI,  -- sfix24_En11
              write_q_phase_voltage_per_switchimng_state_AXI => write_q_phase_voltage_per_switchimng_state_AXI,  -- sfix24_En11
              write_x_phase_voltage_per_switchimng_state_AXI => write_x_phase_voltage_per_switchimng_state_AXI,  -- sfix24_En11
              write_y_phase_voltage_per_switchimng_state_AXI => write_y_phase_voltage_per_switchimng_state_AXI,  -- sfix24_En11
              write_valid_in_AXI => write_valid_in_AXI,  -- ufix1
              reset_internal => reset_internal  -- ufix1
              );

  u_min_cost_function_and_vopt_FCS_MPC_6Phase_dut_inst : min_cost_function_and_vopt_FCS_MPC_6Phase_dut
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset => reset,
              dut_enable => write_axi_enable,  -- ufix1
              J_in => std_logic_vector(J_in_sig),  -- sfix20_En11
              d_phase_voltage_per_switchimng_state => std_logic_vector(d_phase_voltage_per_switchimng_state_sig),  -- sfix24_En11
              q_phase_voltage_per_switchimng_state => std_logic_vector(q_phase_voltage_per_switchimng_state_sig),  -- sfix24_En11
              x_phase_voltage_per_switchimng_state => std_logic_vector(x_phase_voltage_per_switchimng_state_sig),  -- sfix24_En11
              y_phase_voltage_per_switchimng_state => std_logic_vector(y_phase_voltage_per_switchimng_state_sig),  -- sfix24_En11
              Index_in => std_logic_vector(Index_in_sig),  -- sfix32
              use_AXI => write_use_AXI,  -- ufix1
              J_in_AXI => write_J_in_AXI,  -- sfix20_En11
              Index_in_AXI => write_Index_in_AXI,  -- sfix32
              d_phase_voltage_per_switchimng_state_AXI => write_d_phase_voltage_per_switchimng_state_AXI,  -- sfix24_En11
              q_phase_voltage_per_switchimng_state_AXI => write_q_phase_voltage_per_switchimng_state_AXI,  -- sfix24_En11
              x_phase_voltage_per_switchimng_state_AXI => write_x_phase_voltage_per_switchimng_state_AXI,  -- sfix24_En11
              y_phase_voltage_per_switchimng_state_AXI => write_y_phase_voltage_per_switchimng_state_AXI,  -- sfix24_En11
              valid_in_AXI => write_valid_in_AXI,  -- ufix1
              valid_in => valid_in,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              Index_out => Index_out_sig,  -- sfix32
              last_applied_optimal_voltage_ud => last_applied_optimal_voltage_ud_sig,  -- sfix24_En11
              last_applied_optimal_voltage_uq => last_applied_optimal_voltage_uq_sig,  -- sfix24_En11
              last_applied_optimal_voltage_ux => last_applied_optimal_voltage_ux_sig,  -- sfix24_En11
              last_applied_optimal_voltage_uy => last_applied_optimal_voltage_uy_sig,  -- sfix24_En11
              last_applied_optimal_voltage_uy_AXI => last_applied_optimal_voltage_uy_AXI_sig,  -- sfix24_En11
              last_applied_optimal_voltage_ux_AXI => last_applied_optimal_voltage_ux_AXI_sig,  -- sfix24_En11
              last_applied_optimal_voltage_uq_AXI => last_applied_optimal_voltage_uq_AXI_sig,  -- sfix24_En11
              last_applied_optimal_voltage_ud_AXI => last_applied_optimal_voltage_ud_AXI_sig,  -- sfix24_En11
              Index_out_AXI => Index_out_AXI_sig,  -- sfix32
              done => done_sig,  -- ufix1
              done_complete => done_complete_sig,  -- ufix1
              done_complete_AXI => done_complete_AXI_sig  -- ufix1
              );

  ip_timestamp <= unsigned'(X"83AAD50F");

  reset_cm <=  NOT IPCORE_RESETN;

  J_in_unsigned <= unsigned(J_in);

  J_in_sig <= signed(J_in_unsigned);

  d_phase_voltage_per_switchimng_state_unsigned <= unsigned(d_phase_voltage_per_switchimng_state);

  d_phase_voltage_per_switchimng_state_sig <= signed(d_phase_voltage_per_switchimng_state_unsigned);

  q_phase_voltage_per_switchimng_state_unsigned <= unsigned(q_phase_voltage_per_switchimng_state);

  q_phase_voltage_per_switchimng_state_sig <= signed(q_phase_voltage_per_switchimng_state_unsigned);

  x_phase_voltage_per_switchimng_state_unsigned <= unsigned(x_phase_voltage_per_switchimng_state);

  x_phase_voltage_per_switchimng_state_sig <= signed(x_phase_voltage_per_switchimng_state_unsigned);

  y_phase_voltage_per_switchimng_state_unsigned <= unsigned(y_phase_voltage_per_switchimng_state);

  y_phase_voltage_per_switchimng_state_sig <= signed(y_phase_voltage_per_switchimng_state_unsigned);

  Index_in_unsigned <= unsigned(Index_in);

  Index_in_sig <= signed(Index_in_unsigned);

  reset_before_sync <= reset_cm OR reset_internal;

  Index_out_sig_signed <= signed(Index_out_sig);

  Index_out_tmp <= unsigned(Index_out_sig_signed);

  Index_out <= std_logic_vector(Index_out_tmp);

  last_applied_optimal_voltage_ud_sig_signed <= signed(last_applied_optimal_voltage_ud_sig);

  last_applied_optimal_voltage_ud_tmp <= unsigned(last_applied_optimal_voltage_ud_sig_signed);

  last_applied_optimal_voltage_ud <= std_logic_vector(last_applied_optimal_voltage_ud_tmp);

  last_applied_optimal_voltage_uq_sig_signed <= signed(last_applied_optimal_voltage_uq_sig);

  last_applied_optimal_voltage_uq_tmp <= unsigned(last_applied_optimal_voltage_uq_sig_signed);

  last_applied_optimal_voltage_uq <= std_logic_vector(last_applied_optimal_voltage_uq_tmp);

  last_applied_optimal_voltage_ux_sig_signed <= signed(last_applied_optimal_voltage_ux_sig);

  last_applied_optimal_voltage_ux_tmp <= unsigned(last_applied_optimal_voltage_ux_sig_signed);

  last_applied_optimal_voltage_ux <= std_logic_vector(last_applied_optimal_voltage_ux_tmp);

  last_applied_optimal_voltage_uy_sig_signed <= signed(last_applied_optimal_voltage_uy_sig);

  last_applied_optimal_voltage_uy_tmp <= unsigned(last_applied_optimal_voltage_uy_sig_signed);

  last_applied_optimal_voltage_uy <= std_logic_vector(last_applied_optimal_voltage_uy_tmp);

  done <= done_sig;

  done_complete <= done_complete_sig;

  AXI4_Lite_BRESP <= AXI4_Lite_BRESP_tmp;

  AXI4_Lite_RDATA <= AXI4_Lite_RDATA_tmp;

  AXI4_Lite_RRESP <= AXI4_Lite_RRESP_tmp;

END rtl;

