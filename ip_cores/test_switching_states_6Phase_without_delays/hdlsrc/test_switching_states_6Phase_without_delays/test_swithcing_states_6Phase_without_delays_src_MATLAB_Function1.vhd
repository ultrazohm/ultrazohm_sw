-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\test_switching_states_6Phase_without_delays\hdlsrc\test_switching_states_6Phase_without_delays\test_swithcing_states_6Phase_without_delays_src_MATLAB_Function1.vhd
-- Created: 2022-10-14 16:22:04
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: test_swithcing_states_6Phase_without_delays_src_MATLAB_Function1
-- Source Path: test_switching_states_6Phase_without_delays/HDL_DUT2/MATLAB Function1
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.test_swithcing_states_6Phase_without_delays_src_HDL_DUT2_pkg.ALL;

ENTITY test_swithcing_states_6Phase_without_delays_src_MATLAB_Function1 IS
  PORT( I                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        next_switching_state              :   OUT   std_logic_vector(0 TO 11)  -- boolean [12]
        );
END test_swithcing_states_6Phase_without_delays_src_MATLAB_Function1;


ARCHITECTURE rtl OF test_swithcing_states_6Phase_without_delays_src_MATLAB_Function1 IS

  -- Constants
  CONSTANT nc                             : matrix_of_signed8(0 TO 63, 0 TO 11) := 
    (( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ), ( to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8) ), ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ),
     ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ), ( to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8) ), ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ),
     ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ), ( to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8) ), ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ),
     ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ), ( to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8) ), ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ),
     ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ), ( to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8) ), ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ),
     ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ), ( to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8) ), ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ),
     ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ), ( to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8) ), ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ),
     ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ), ( to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8) ), ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ),
     ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ), ( to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8) ), ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ),
     ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ), ( to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8) ), ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ),
     ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8) ), ( to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8) ), ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ),
     ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ), ( to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8) ), ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ),
     ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ), ( to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8) ), ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ),
     ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ), ( to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8) ), ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ),
     ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ), ( to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8) ), ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ),
     ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ), ( to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8) ), ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ),
     ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ), ( to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8) ), ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ),
     ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ), ( to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8) ), ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ),
     ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ), ( to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8) ), ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ),
     ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ), ( to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8) ), ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ),
     ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ), ( to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8) ), ( to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ),
     ( to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8),
     to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8), to_signed(16#01#, 8),
     to_signed(16#00#, 8), to_signed(16#01#, 8), to_signed(16#00#, 8) ));  -- int8 [64x12]

  -- Signals
  SIGNAL I_signed                         : signed(31 DOWNTO 0);  -- int32

BEGIN
  I_signed <= signed(I);

  MATLAB_Function1_output : PROCESS (I_signed)
    VARIABLE I1 : signed(31 DOWNTO 0);
  BEGIN
    I1 := I_signed;
    -- Possible switching states of the 6-Phase 2-level inverter
    -- Initial condition
    IF I_signed = to_signed(16#00000000#, 32) THEN 
      I1 := to_signed(16#00000001#, 32);
    END IF;
    -- Output switching state

    FOR t_0 IN 0 TO 11 LOOP
      IF nc(to_integer(I1 - 1), t_0) /= to_signed(16#00000000#, 8) THEN 
        next_switching_state(t_0) <= '1';
      ELSE 
        next_switching_state(t_0) <= '0';
      END IF;
    END LOOP;

  END PROCESS MATLAB_Function1_output;


END rtl;

