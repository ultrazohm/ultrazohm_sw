// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module BGD_scal_float_16u_unsigned_int_37 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        l_weightGradient_dout,
        l_weightGradient_empty_n,
        l_weightGradient_read,
        l_weightGradientScal_din,
        l_weightGradientScal_full_n,
        l_weightGradientScal_write,
        p_weightSize_dout,
        p_weightSize_empty_n,
        p_weightSize_read,
        l_multiplicator_loc_dout,
        l_multiplicator_loc_empty_n,
        l_multiplicator_loc_read,
        p_weightSize_out_din,
        p_weightSize_out_full_n,
        p_weightSize_out_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] l_weightGradient_dout;
input   l_weightGradient_empty_n;
output   l_weightGradient_read;
output  [511:0] l_weightGradientScal_din;
input   l_weightGradientScal_full_n;
output   l_weightGradientScal_write;
input  [31:0] p_weightSize_dout;
input   p_weightSize_empty_n;
output   p_weightSize_read;
input  [31:0] l_multiplicator_loc_dout;
input   l_multiplicator_loc_empty_n;
output   l_multiplicator_loc_read;
output  [31:0] p_weightSize_out_din;
input   p_weightSize_out_full_n;
output   p_weightSize_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg l_weightGradient_read;
reg l_weightGradientScal_write;
reg p_weightSize_read;
reg l_multiplicator_loc_read;
reg p_weightSize_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    l_weightGradient_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln59_reg_611;
reg    l_weightGradientScal_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] icmp_ln59_reg_611_pp0_iter3_reg;
reg    p_weightSize_blk_n;
reg    l_multiplicator_loc_blk_n;
reg    p_weightSize_out_blk_n;
reg   [27:0] i_reg_155;
reg   [31:0] l_multiplicator_loc_read_reg_586;
reg    ap_block_state1;
reg   [27:0] trunc_ln_reg_606;
wire   [0:0] icmp_ln59_fu_240_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln59_reg_611_pp0_iter1_reg;
reg   [0:0] icmp_ln59_reg_611_pp0_iter2_reg;
wire   [27:0] i_3_fu_245_p2;
reg    ap_enable_reg_pp0_iter0;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_166_p0;
wire   [31:0] grp_fu_170_p0;
wire   [31:0] grp_fu_174_p0;
wire   [31:0] grp_fu_178_p0;
wire   [31:0] grp_fu_182_p0;
wire   [31:0] grp_fu_186_p0;
wire   [31:0] grp_fu_190_p0;
wire   [31:0] grp_fu_194_p0;
wire   [31:0] grp_fu_198_p0;
wire   [31:0] grp_fu_202_p0;
wire   [31:0] grp_fu_206_p0;
wire   [31:0] grp_fu_210_p0;
wire   [31:0] grp_fu_214_p0;
wire   [31:0] grp_fu_218_p0;
wire   [31:0] grp_fu_222_p0;
wire   [31:0] grp_fu_226_p0;
wire   [31:0] trunc_ln674_fu_251_p1;
wire   [31:0] p_Result_1_i_i_fu_260_p4;
wire   [31:0] p_Result_2_i_i_fu_275_p4;
wire   [31:0] p_Result_3_i_i_fu_290_p4;
wire   [31:0] p_Result_4_i_i_fu_305_p4;
wire   [31:0] p_Result_5_i_i_fu_320_p4;
wire   [31:0] p_Result_6_i_i_fu_335_p4;
wire   [31:0] p_Result_7_i_i_fu_350_p4;
wire   [31:0] p_Result_8_i_i_fu_365_p4;
wire   [31:0] p_Result_9_i_i_fu_380_p4;
wire   [31:0] p_Result_i_i_fu_395_p4;
wire   [31:0] p_Result_10_i_i_fu_410_p4;
wire   [31:0] p_Result_11_i_i_fu_425_p4;
wire   [31:0] p_Result_12_i_i_fu_440_p4;
wire   [31:0] p_Result_13_i_i_fu_455_p4;
wire   [31:0] p_Result_14_i_i_fu_470_p4;
wire   [31:0] grp_fu_166_p2;
wire   [31:0] grp_fu_170_p2;
wire   [31:0] grp_fu_174_p2;
wire   [31:0] grp_fu_178_p2;
wire   [31:0] grp_fu_182_p2;
wire   [31:0] grp_fu_186_p2;
wire   [31:0] grp_fu_190_p2;
wire   [31:0] grp_fu_194_p2;
wire   [31:0] grp_fu_198_p2;
wire   [31:0] grp_fu_202_p2;
wire   [31:0] grp_fu_206_p2;
wire   [31:0] grp_fu_210_p2;
wire   [31:0] grp_fu_214_p2;
wire   [31:0] grp_fu_218_p2;
wire   [31:0] grp_fu_222_p2;
wire   [31:0] grp_fu_226_p2;
wire   [31:0] l_v_60_fu_545_p1;
wire   [31:0] l_v_59_fu_541_p1;
wire   [31:0] l_v_58_fu_537_p1;
wire   [31:0] l_v_57_fu_533_p1;
wire   [31:0] l_v_56_fu_529_p1;
wire   [31:0] l_v_55_fu_525_p1;
wire   [31:0] l_v_54_fu_521_p1;
wire   [31:0] l_v_53_fu_517_p1;
wire   [31:0] l_v_52_fu_513_p1;
wire   [31:0] l_v_51_fu_509_p1;
wire   [31:0] l_v_50_fu_505_p1;
wire   [31:0] l_v_49_fu_501_p1;
wire   [31:0] l_v_48_fu_497_p1;
wire   [31:0] l_v_47_fu_493_p1;
wire   [31:0] l_v_46_fu_489_p1;
wire   [31:0] l_v_fu_485_p1;
reg    grp_fu_166_ce;
reg    grp_fu_170_ce;
reg    grp_fu_174_ce;
reg    grp_fu_178_ce;
reg    grp_fu_182_ce;
reg    grp_fu_186_ce;
reg    grp_fu_190_ce;
reg    grp_fu_194_ce;
reg    grp_fu_198_ce;
reg    grp_fu_202_ce;
reg    grp_fu_206_ce;
reg    grp_fu_210_ce;
reg    grp_fu_214_ce;
reg    grp_fu_218_ce;
reg    grp_fu_222_ce;
reg    grp_fu_226_ce;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U475(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_166_p0),
    .din1(l_multiplicator_loc_read_reg_586),
    .ce(grp_fu_166_ce),
    .dout(grp_fu_166_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U476(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_170_p0),
    .din1(l_multiplicator_loc_read_reg_586),
    .ce(grp_fu_170_ce),
    .dout(grp_fu_170_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U477(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_174_p0),
    .din1(l_multiplicator_loc_read_reg_586),
    .ce(grp_fu_174_ce),
    .dout(grp_fu_174_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U478(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_178_p0),
    .din1(l_multiplicator_loc_read_reg_586),
    .ce(grp_fu_178_ce),
    .dout(grp_fu_178_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U479(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_182_p0),
    .din1(l_multiplicator_loc_read_reg_586),
    .ce(grp_fu_182_ce),
    .dout(grp_fu_182_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U480(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_186_p0),
    .din1(l_multiplicator_loc_read_reg_586),
    .ce(grp_fu_186_ce),
    .dout(grp_fu_186_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U481(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_190_p0),
    .din1(l_multiplicator_loc_read_reg_586),
    .ce(grp_fu_190_ce),
    .dout(grp_fu_190_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U482(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_194_p0),
    .din1(l_multiplicator_loc_read_reg_586),
    .ce(grp_fu_194_ce),
    .dout(grp_fu_194_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U483(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_198_p0),
    .din1(l_multiplicator_loc_read_reg_586),
    .ce(grp_fu_198_ce),
    .dout(grp_fu_198_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U484(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_202_p0),
    .din1(l_multiplicator_loc_read_reg_586),
    .ce(grp_fu_202_ce),
    .dout(grp_fu_202_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U485(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_206_p0),
    .din1(l_multiplicator_loc_read_reg_586),
    .ce(grp_fu_206_ce),
    .dout(grp_fu_206_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U486(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_210_p0),
    .din1(l_multiplicator_loc_read_reg_586),
    .ce(grp_fu_210_ce),
    .dout(grp_fu_210_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U487(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_214_p0),
    .din1(l_multiplicator_loc_read_reg_586),
    .ce(grp_fu_214_ce),
    .dout(grp_fu_214_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U488(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_218_p0),
    .din1(l_multiplicator_loc_read_reg_586),
    .ce(grp_fu_218_ce),
    .dout(grp_fu_218_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U489(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_222_p0),
    .din1(l_multiplicator_loc_read_reg_586),
    .ce(grp_fu_222_ce),
    .dout(grp_fu_222_p2)
);

BGD_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U490(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_226_p0),
    .din1(l_multiplicator_loc_read_reg_586),
    .ce(grp_fu_226_ce),
    .dout(grp_fu_226_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (p_weightSize_out_full_n == 1'b0) | (l_multiplicator_loc_empty_n == 1'b0) | (p_weightSize_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((ap_start == 1'b0) | (p_weightSize_out_full_n == 1'b0) | (l_multiplicator_loc_empty_n == 1'b0) | (p_weightSize_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln59_fu_240_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_reg_155 <= i_3_fu_245_p2;
    end else if ((~((ap_start == 1'b0) | (p_weightSize_out_full_n == 1'b0) | (l_multiplicator_loc_empty_n == 1'b0) | (p_weightSize_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_155 <= 28'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln59_reg_611 <= icmp_ln59_fu_240_p2;
        icmp_ln59_reg_611_pp0_iter1_reg <= icmp_ln59_reg_611;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln59_reg_611_pp0_iter2_reg <= icmp_ln59_reg_611_pp0_iter1_reg;
        icmp_ln59_reg_611_pp0_iter3_reg <= icmp_ln59_reg_611_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (p_weightSize_out_full_n == 1'b0) | (l_multiplicator_loc_empty_n == 1'b0) | (p_weightSize_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        l_multiplicator_loc_read_reg_586 <= l_multiplicator_loc_dout;
        trunc_ln_reg_606 <= {{p_weightSize_dout[31:4]}};
    end
end

always @ (*) begin
    if ((icmp_ln59_fu_240_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_166_ce = 1'b1;
    end else begin
        grp_fu_166_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_170_ce = 1'b1;
    end else begin
        grp_fu_170_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_174_ce = 1'b1;
    end else begin
        grp_fu_174_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_178_ce = 1'b1;
    end else begin
        grp_fu_178_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_182_ce = 1'b1;
    end else begin
        grp_fu_182_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_186_ce = 1'b1;
    end else begin
        grp_fu_186_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_190_ce = 1'b1;
    end else begin
        grp_fu_190_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_194_ce = 1'b1;
    end else begin
        grp_fu_194_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_198_ce = 1'b1;
    end else begin
        grp_fu_198_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_202_ce = 1'b1;
    end else begin
        grp_fu_202_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_206_ce = 1'b1;
    end else begin
        grp_fu_206_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_210_ce = 1'b1;
    end else begin
        grp_fu_210_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_214_ce = 1'b1;
    end else begin
        grp_fu_214_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_218_ce = 1'b1;
    end else begin
        grp_fu_218_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_222_ce = 1'b1;
    end else begin
        grp_fu_222_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_226_ce = 1'b1;
    end else begin
        grp_fu_226_ce = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        l_multiplicator_loc_blk_n = l_multiplicator_loc_empty_n;
    end else begin
        l_multiplicator_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (p_weightSize_out_full_n == 1'b0) | (l_multiplicator_loc_empty_n == 1'b0) | (p_weightSize_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        l_multiplicator_loc_read = 1'b1;
    end else begin
        l_multiplicator_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln59_reg_611_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        l_weightGradientScal_blk_n = l_weightGradientScal_full_n;
    end else begin
        l_weightGradientScal_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln59_reg_611_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        l_weightGradientScal_write = 1'b1;
    end else begin
        l_weightGradientScal_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln59_reg_611 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        l_weightGradient_blk_n = l_weightGradient_empty_n;
    end else begin
        l_weightGradient_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln59_reg_611 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        l_weightGradient_read = 1'b1;
    end else begin
        l_weightGradient_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_weightSize_blk_n = p_weightSize_empty_n;
    end else begin
        p_weightSize_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_weightSize_out_blk_n = p_weightSize_out_full_n;
    end else begin
        p_weightSize_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (p_weightSize_out_full_n == 1'b0) | (l_multiplicator_loc_empty_n == 1'b0) | (p_weightSize_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_weightSize_out_write = 1'b1;
    end else begin
        p_weightSize_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (p_weightSize_out_full_n == 1'b0) | (l_multiplicator_loc_empty_n == 1'b0) | (p_weightSize_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_weightSize_read = 1'b1;
    end else begin
        p_weightSize_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (p_weightSize_out_full_n == 1'b0) | (l_multiplicator_loc_empty_n == 1'b0) | (p_weightSize_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln59_fu_240_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)) | ((icmp_ln59_fu_240_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln59_reg_611_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (l_weightGradientScal_full_n == 1'b0)) | ((icmp_ln59_reg_611 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (l_weightGradient_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln59_reg_611_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (l_weightGradientScal_full_n == 1'b0)) | ((icmp_ln59_reg_611 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (l_weightGradient_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln59_reg_611_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (l_weightGradientScal_full_n == 1'b0)) | ((icmp_ln59_reg_611 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (l_weightGradient_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (p_weightSize_out_full_n == 1'b0) | (l_multiplicator_loc_empty_n == 1'b0) | (p_weightSize_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln59_reg_611 == 1'd0) & (l_weightGradient_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = ((icmp_ln59_reg_611_pp0_iter3_reg == 1'd0) & (l_weightGradientScal_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_166_p0 = trunc_ln674_fu_251_p1;

assign grp_fu_170_p0 = p_Result_1_i_i_fu_260_p4;

assign grp_fu_174_p0 = p_Result_2_i_i_fu_275_p4;

assign grp_fu_178_p0 = p_Result_3_i_i_fu_290_p4;

assign grp_fu_182_p0 = p_Result_4_i_i_fu_305_p4;

assign grp_fu_186_p0 = p_Result_5_i_i_fu_320_p4;

assign grp_fu_190_p0 = p_Result_6_i_i_fu_335_p4;

assign grp_fu_194_p0 = p_Result_7_i_i_fu_350_p4;

assign grp_fu_198_p0 = p_Result_8_i_i_fu_365_p4;

assign grp_fu_202_p0 = p_Result_9_i_i_fu_380_p4;

assign grp_fu_206_p0 = p_Result_i_i_fu_395_p4;

assign grp_fu_210_p0 = p_Result_10_i_i_fu_410_p4;

assign grp_fu_214_p0 = p_Result_11_i_i_fu_425_p4;

assign grp_fu_218_p0 = p_Result_12_i_i_fu_440_p4;

assign grp_fu_222_p0 = p_Result_13_i_i_fu_455_p4;

assign grp_fu_226_p0 = p_Result_14_i_i_fu_470_p4;

assign i_3_fu_245_p2 = (i_reg_155 + 28'd1);

assign icmp_ln59_fu_240_p2 = ((i_reg_155 == trunc_ln_reg_606) ? 1'b1 : 1'b0);

assign l_v_46_fu_489_p1 = grp_fu_170_p2;

assign l_v_47_fu_493_p1 = grp_fu_174_p2;

assign l_v_48_fu_497_p1 = grp_fu_178_p2;

assign l_v_49_fu_501_p1 = grp_fu_182_p2;

assign l_v_50_fu_505_p1 = grp_fu_186_p2;

assign l_v_51_fu_509_p1 = grp_fu_190_p2;

assign l_v_52_fu_513_p1 = grp_fu_194_p2;

assign l_v_53_fu_517_p1 = grp_fu_198_p2;

assign l_v_54_fu_521_p1 = grp_fu_202_p2;

assign l_v_55_fu_525_p1 = grp_fu_206_p2;

assign l_v_56_fu_529_p1 = grp_fu_210_p2;

assign l_v_57_fu_533_p1 = grp_fu_214_p2;

assign l_v_58_fu_537_p1 = grp_fu_218_p2;

assign l_v_59_fu_541_p1 = grp_fu_222_p2;

assign l_v_60_fu_545_p1 = grp_fu_226_p2;

assign l_v_fu_485_p1 = grp_fu_166_p2;

assign l_weightGradientScal_din = {{{{{{{{{{{{{{{{l_v_60_fu_545_p1}, {l_v_59_fu_541_p1}}, {l_v_58_fu_537_p1}}, {l_v_57_fu_533_p1}}, {l_v_56_fu_529_p1}}, {l_v_55_fu_525_p1}}, {l_v_54_fu_521_p1}}, {l_v_53_fu_517_p1}}, {l_v_52_fu_513_p1}}, {l_v_51_fu_509_p1}}, {l_v_50_fu_505_p1}}, {l_v_49_fu_501_p1}}, {l_v_48_fu_497_p1}}, {l_v_47_fu_493_p1}}, {l_v_46_fu_489_p1}}, {l_v_fu_485_p1}};

assign p_Result_10_i_i_fu_410_p4 = {{l_weightGradient_dout[383:352]}};

assign p_Result_11_i_i_fu_425_p4 = {{l_weightGradient_dout[415:384]}};

assign p_Result_12_i_i_fu_440_p4 = {{l_weightGradient_dout[447:416]}};

assign p_Result_13_i_i_fu_455_p4 = {{l_weightGradient_dout[479:448]}};

assign p_Result_14_i_i_fu_470_p4 = {{l_weightGradient_dout[511:480]}};

assign p_Result_1_i_i_fu_260_p4 = {{l_weightGradient_dout[63:32]}};

assign p_Result_2_i_i_fu_275_p4 = {{l_weightGradient_dout[95:64]}};

assign p_Result_3_i_i_fu_290_p4 = {{l_weightGradient_dout[127:96]}};

assign p_Result_4_i_i_fu_305_p4 = {{l_weightGradient_dout[159:128]}};

assign p_Result_5_i_i_fu_320_p4 = {{l_weightGradient_dout[191:160]}};

assign p_Result_6_i_i_fu_335_p4 = {{l_weightGradient_dout[223:192]}};

assign p_Result_7_i_i_fu_350_p4 = {{l_weightGradient_dout[255:224]}};

assign p_Result_8_i_i_fu_365_p4 = {{l_weightGradient_dout[287:256]}};

assign p_Result_9_i_i_fu_380_p4 = {{l_weightGradient_dout[319:288]}};

assign p_Result_i_i_fu_395_p4 = {{l_weightGradient_dout[351:320]}};

assign p_weightSize_out_din = p_weightSize_dout;

assign trunc_ln674_fu_251_p1 = l_weightGradient_dout[31:0];

endmodule //BGD_scal_float_16u_unsigned_int_37
