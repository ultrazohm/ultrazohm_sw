-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\test_delay_compensation\hdlsrc\parallel_delay_compensation_6phase\test2_parallel_delay_compensation_6Phase.vhd
-- Created: 2022-10-10 12:10:32
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: test2_parallel_delay_compensation_6Phase
-- Source Path: test2_parallel_delay_compensation_6Phase
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY test2_parallel_delay_compensation_6Phase IS
  PORT( IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESETN                     :   IN    std_logic;  -- ufix1
        id_measured                       :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        iq_measured                       :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        ix_measured                       :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        iy_measured                       :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        last_applied_optimal_voltages_in  :   IN    std_logic_vector(95 DOWNTO 0);  -- ufix96
        omega_m_measured                  :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        valid_in_ADC                      :   IN    std_logic;  -- ufix1
        valid_in                          :   IN    std_logic;  -- ufix1
        AXI4_Lite_ACLK                    :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARESETN                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_AWADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_AWVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_WDATA                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_WSTRB                   :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Lite_WVALID                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_BREADY                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_ARVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_RREADY                  :   IN    std_logic;  -- ufix1
        id_k_1                            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        iq_k_1                            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        ix_k_1                            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        iy_k_1                            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        done                              :   OUT   std_logic;  -- ufix1
        AXI4_Lite_AWREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_WREADY                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_BRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_BVALID                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_ARREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_RDATA                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_RRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_RVALID                  :   OUT   std_logic  -- ufix1
        );
END test2_parallel_delay_compensation_6Phase;


ARCHITECTURE rtl OF test2_parallel_delay_compensation_6Phase IS

  -- Component Declarations
  COMPONENT test2_parallel_delay_compensation_6Phase_reset_sync
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset_in                        :   IN    std_logic;  -- ufix1
          reset_out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT test2_parallel_delay_compensation_6Phase_axi_lite
    PORT( reset                           :   IN    std_logic;
          AXI4_Lite_ACLK                  :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARESETN               :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_AWVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_WDATA                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_WSTRB                 :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_Lite_WVALID                :   IN    std_logic;  -- ufix1
          AXI4_Lite_BREADY                :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_ARVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_RREADY                :   IN    std_logic;  -- ufix1
          read_ip_timestamp               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          read_id_k_1_AXI                 :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          read_iq_k_1_AXI                 :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          read_ix_k_1_AXI                 :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          read_iy_k_1_AXI                 :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          AXI4_Lite_AWREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_WREADY                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_BRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_BVALID                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_ARREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_RDATA                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_RRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_RVALID                :   OUT   std_logic;  -- ufix1
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          write_psiPM_AXI                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Lq_AXI                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Ld_AXI                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Rs_AXI                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_SampleTime_div_Ld_AXI     :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_pole_pairs_AXI            :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_SampleTime_div_Lq_AXI     :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_SampleTime_div_Lx_AXI     :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_SampleTime_div_Ly_AXI     :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          reset_internal                  :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  COMPONENT test2_parallel_delay_compensation_6Phase_dut
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          dut_enable                      :   IN    std_logic;  -- ufix1
          id_measured                     :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          iq_measured                     :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          ix_measured                     :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          iy_measured                     :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          psiPM_AXI                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Lq_AXI                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Ld_AXI                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Rs_AXI                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          SampleTime_div_Ld_AXI           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          SampleTime_div_Lq_AXI           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          SampleTime_div_Lx_AXI           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          SampleTime_div_Ly_AXI           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          last_applied_optimal_voltages_in_0 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          last_applied_optimal_voltages_in_1 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          last_applied_optimal_voltages_in_2 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          last_applied_optimal_voltages_in_3 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          pole_pairs_AXI                  :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          omega_m_measured                :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          valid_in_ADC                    :   IN    std_logic;  -- ufix1
          valid_in                        :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          id_k_1                          :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          iq_k_1                          :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          ix_k_1                          :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          iy_k_1                          :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          done                            :   OUT   std_logic;  -- ufix1
          id_k_1_AXI                      :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          iq_k_1_AXI                      :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          ix_k_1_AXI                      :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          iy_k_1_AXI                      :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En11
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : test2_parallel_delay_compensation_6Phase_reset_sync
    USE ENTITY work.test2_parallel_delay_compensation_6Phase_reset_sync(rtl);

  FOR ALL : test2_parallel_delay_compensation_6Phase_axi_lite
    USE ENTITY work.test2_parallel_delay_compensation_6Phase_axi_lite(rtl);

  FOR ALL : test2_parallel_delay_compensation_6Phase_dut
    USE ENTITY work.test2_parallel_delay_compensation_6Phase_dut(rtl);

  -- Signals
  SIGNAL reset                            : std_logic;
  SIGNAL ip_timestamp                     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL reset_cm                         : std_logic;  -- ufix1
  SIGNAL id_measured_unsigned             : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL id_measured_sig                  : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL iq_measured_unsigned             : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL iq_measured_sig                  : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL ix_measured_unsigned             : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL ix_measured_sig                  : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL iy_measured_unsigned             : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL iy_measured_sig                  : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL last_applied_optimal_voltages_in_unsigned : unsigned(95 DOWNTO 0);  -- ufix96
  SIGNAL last_applied_optimal_voltages_in_slice : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL last_applied_optimal_voltages_in_0_sig : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL last_applied_optimal_voltages_in_slice_1 : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL last_applied_optimal_voltages_in_1_sig : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL last_applied_optimal_voltages_in_slice_2 : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL last_applied_optimal_voltages_in_2_sig : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL last_applied_optimal_voltages_in_slice_3 : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL last_applied_optimal_voltages_in_3_sig : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL omega_m_measured_unsigned        : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL omega_m_measured_sig             : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL reset_internal                   : std_logic;  -- ufix1
  SIGNAL reset_before_sync                : std_logic;  -- ufix1
  SIGNAL id_k_1_AXI_sig                   : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL iq_k_1_AXI_sig                   : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL ix_k_1_AXI_sig                   : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL iy_k_1_AXI_sig                   : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL AXI4_Lite_BRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_Lite_RDATA_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_RRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL write_axi_enable                 : std_logic;  -- ufix1
  SIGNAL write_psiPM_AXI                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Lq_AXI                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Ld_AXI                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Rs_AXI                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_SampleTime_div_Ld_AXI      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_pole_pairs_AXI             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_SampleTime_div_Lq_AXI      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_SampleTime_div_Lx_AXI      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_SampleTime_div_Ly_AXI      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL id_k_1_sig                       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL iq_k_1_sig                       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL ix_k_1_sig                       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL iy_k_1_sig                       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL done_sig                         : std_logic;  -- ufix1
  SIGNAL id_k_1_sig_signed                : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL id_k_1_tmp                       : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL iq_k_1_sig_signed                : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL iq_k_1_tmp                       : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL ix_k_1_sig_signed                : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL ix_k_1_tmp                       : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL iy_k_1_sig_signed                : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL iy_k_1_tmp                       : unsigned(17 DOWNTO 0);  -- ufix18

BEGIN
  u_test2_parallel_delay_compensation_6Phase_reset_sync_inst : test2_parallel_delay_compensation_6Phase_reset_sync
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset_in => reset_before_sync,  -- ufix1
              reset_out => reset
              );

  u_test2_parallel_delay_compensation_6Phase_axi_lite_inst : test2_parallel_delay_compensation_6Phase_axi_lite
    PORT MAP( reset => reset,
              AXI4_Lite_ACLK => AXI4_Lite_ACLK,  -- ufix1
              AXI4_Lite_ARESETN => AXI4_Lite_ARESETN,  -- ufix1
              AXI4_Lite_AWADDR => AXI4_Lite_AWADDR,  -- ufix16
              AXI4_Lite_AWVALID => AXI4_Lite_AWVALID,  -- ufix1
              AXI4_Lite_WDATA => AXI4_Lite_WDATA,  -- ufix32
              AXI4_Lite_WSTRB => AXI4_Lite_WSTRB,  -- ufix4
              AXI4_Lite_WVALID => AXI4_Lite_WVALID,  -- ufix1
              AXI4_Lite_BREADY => AXI4_Lite_BREADY,  -- ufix1
              AXI4_Lite_ARADDR => AXI4_Lite_ARADDR,  -- ufix16
              AXI4_Lite_ARVALID => AXI4_Lite_ARVALID,  -- ufix1
              AXI4_Lite_RREADY => AXI4_Lite_RREADY,  -- ufix1
              read_ip_timestamp => std_logic_vector(ip_timestamp),  -- ufix32
              read_id_k_1_AXI => id_k_1_AXI_sig,  -- sfix18_En11
              read_iq_k_1_AXI => iq_k_1_AXI_sig,  -- sfix18_En11
              read_ix_k_1_AXI => ix_k_1_AXI_sig,  -- sfix18_En11
              read_iy_k_1_AXI => iy_k_1_AXI_sig,  -- sfix18_En11
              AXI4_Lite_AWREADY => AXI4_Lite_AWREADY,  -- ufix1
              AXI4_Lite_WREADY => AXI4_Lite_WREADY,  -- ufix1
              AXI4_Lite_BRESP => AXI4_Lite_BRESP_tmp,  -- ufix2
              AXI4_Lite_BVALID => AXI4_Lite_BVALID,  -- ufix1
              AXI4_Lite_ARREADY => AXI4_Lite_ARREADY,  -- ufix1
              AXI4_Lite_RDATA => AXI4_Lite_RDATA_tmp,  -- ufix32
              AXI4_Lite_RRESP => AXI4_Lite_RRESP_tmp,  -- ufix2
              AXI4_Lite_RVALID => AXI4_Lite_RVALID,  -- ufix1
              write_axi_enable => write_axi_enable,  -- ufix1
              write_psiPM_AXI => write_psiPM_AXI,  -- ufix32
              write_Lq_AXI => write_Lq_AXI,  -- ufix32
              write_Ld_AXI => write_Ld_AXI,  -- ufix32
              write_Rs_AXI => write_Rs_AXI,  -- ufix32
              write_SampleTime_div_Ld_AXI => write_SampleTime_div_Ld_AXI,  -- ufix32
              write_pole_pairs_AXI => write_pole_pairs_AXI,  -- ufix32
              write_SampleTime_div_Lq_AXI => write_SampleTime_div_Lq_AXI,  -- ufix32
              write_SampleTime_div_Lx_AXI => write_SampleTime_div_Lx_AXI,  -- ufix32
              write_SampleTime_div_Ly_AXI => write_SampleTime_div_Ly_AXI,  -- ufix32
              reset_internal => reset_internal  -- ufix1
              );

  u_test2_parallel_delay_compensation_6Phase_dut_inst : test2_parallel_delay_compensation_6Phase_dut
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset => reset,
              dut_enable => write_axi_enable,  -- ufix1
              id_measured => std_logic_vector(id_measured_sig),  -- sfix18_En11
              iq_measured => std_logic_vector(iq_measured_sig),  -- sfix18_En11
              ix_measured => std_logic_vector(ix_measured_sig),  -- sfix18_En11
              iy_measured => std_logic_vector(iy_measured_sig),  -- sfix18_En11
              psiPM_AXI => write_psiPM_AXI,  -- ufix32
              Lq_AXI => write_Lq_AXI,  -- ufix32
              Ld_AXI => write_Ld_AXI,  -- ufix32
              Rs_AXI => write_Rs_AXI,  -- ufix32
              SampleTime_div_Ld_AXI => write_SampleTime_div_Ld_AXI,  -- ufix32
              SampleTime_div_Lq_AXI => write_SampleTime_div_Lq_AXI,  -- ufix32
              SampleTime_div_Lx_AXI => write_SampleTime_div_Lx_AXI,  -- ufix32
              SampleTime_div_Ly_AXI => write_SampleTime_div_Ly_AXI,  -- ufix32
              last_applied_optimal_voltages_in_0 => std_logic_vector(last_applied_optimal_voltages_in_0_sig),  -- sfix24_En11
              last_applied_optimal_voltages_in_1 => std_logic_vector(last_applied_optimal_voltages_in_1_sig),  -- sfix24_En11
              last_applied_optimal_voltages_in_2 => std_logic_vector(last_applied_optimal_voltages_in_2_sig),  -- sfix24_En11
              last_applied_optimal_voltages_in_3 => std_logic_vector(last_applied_optimal_voltages_in_3_sig),  -- sfix24_En11
              pole_pairs_AXI => write_pole_pairs_AXI,  -- ufix32
              omega_m_measured => std_logic_vector(omega_m_measured_sig),  -- sfix24_En11
              valid_in_ADC => valid_in_ADC,  -- ufix1
              valid_in => valid_in,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              id_k_1 => id_k_1_sig,  -- sfix18_En11
              iq_k_1 => iq_k_1_sig,  -- sfix18_En11
              ix_k_1 => ix_k_1_sig,  -- sfix18_En11
              iy_k_1 => iy_k_1_sig,  -- sfix18_En11
              done => done_sig,  -- ufix1
              id_k_1_AXI => id_k_1_AXI_sig,  -- sfix18_En11
              iq_k_1_AXI => iq_k_1_AXI_sig,  -- sfix18_En11
              ix_k_1_AXI => ix_k_1_AXI_sig,  -- sfix18_En11
              iy_k_1_AXI => iy_k_1_AXI_sig  -- sfix18_En11
              );

  ip_timestamp <= unsigned'(X"83BB77DA");

  reset_cm <=  NOT IPCORE_RESETN;

  id_measured_unsigned <= unsigned(id_measured);

  id_measured_sig <= signed(id_measured_unsigned);

  iq_measured_unsigned <= unsigned(iq_measured);

  iq_measured_sig <= signed(iq_measured_unsigned);

  ix_measured_unsigned <= unsigned(ix_measured);

  ix_measured_sig <= signed(ix_measured_unsigned);

  iy_measured_unsigned <= unsigned(iy_measured);

  iy_measured_sig <= signed(iy_measured_unsigned);

  last_applied_optimal_voltages_in_unsigned <= unsigned(last_applied_optimal_voltages_in);

  last_applied_optimal_voltages_in_slice <= last_applied_optimal_voltages_in_unsigned(23 DOWNTO 0);

  last_applied_optimal_voltages_in_0_sig <= signed(last_applied_optimal_voltages_in_slice);

  last_applied_optimal_voltages_in_slice_1 <= last_applied_optimal_voltages_in_unsigned(47 DOWNTO 24);

  last_applied_optimal_voltages_in_1_sig <= signed(last_applied_optimal_voltages_in_slice_1);

  last_applied_optimal_voltages_in_slice_2 <= last_applied_optimal_voltages_in_unsigned(71 DOWNTO 48);

  last_applied_optimal_voltages_in_2_sig <= signed(last_applied_optimal_voltages_in_slice_2);

  last_applied_optimal_voltages_in_slice_3 <= last_applied_optimal_voltages_in_unsigned(95 DOWNTO 72);

  last_applied_optimal_voltages_in_3_sig <= signed(last_applied_optimal_voltages_in_slice_3);

  omega_m_measured_unsigned <= unsigned(omega_m_measured);

  omega_m_measured_sig <= signed(omega_m_measured_unsigned);

  reset_before_sync <= reset_cm OR reset_internal;

  id_k_1_sig_signed <= signed(id_k_1_sig);

  id_k_1_tmp <= unsigned(id_k_1_sig_signed);

  id_k_1 <= std_logic_vector(id_k_1_tmp);

  iq_k_1_sig_signed <= signed(iq_k_1_sig);

  iq_k_1_tmp <= unsigned(iq_k_1_sig_signed);

  iq_k_1 <= std_logic_vector(iq_k_1_tmp);

  ix_k_1_sig_signed <= signed(ix_k_1_sig);

  ix_k_1_tmp <= unsigned(ix_k_1_sig_signed);

  ix_k_1 <= std_logic_vector(ix_k_1_tmp);

  iy_k_1_sig_signed <= signed(iy_k_1_sig);

  iy_k_1_tmp <= unsigned(iy_k_1_sig_signed);

  iy_k_1 <= std_logic_vector(iy_k_1_tmp);

  done <= done_sig;

  AXI4_Lite_BRESP <= AXI4_Lite_BRESP_tmp;

  AXI4_Lite_RDATA <= AXI4_Lite_RDATA_tmp;

  AXI4_Lite_RRESP <= AXI4_Lite_RRESP_tmp;

END rtl;

