-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\inc_enc_v26\IncEnc_src_OS_factor_logic.vhd
-- Created: 2023-02-22 14:14:55
-- 
-- Generated by MATLAB 9.13 and HDL Coder 4.0
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: IncEnc_src_OS_factor_logic
-- Source Path: inc_enc_v26/IncEnc_V25/speed/OS_factor_logic
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.IncEnc_src_IncEnc_V25_pac.ALL;

ENTITY IncEnc_src_OS_factor_logic IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_5987_0                      :   IN    std_logic;
        new_transisiton                   :   IN    std_logic_vector(0 TO 3);  -- boolean [4]
        Allow_ToCheckOversampling         :   IN    std_logic;
        state_edges                       :   IN    vector_of_std_logic_vector16(0 TO 3);  -- int16 [4]
        omega                             :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        OverSamplOmega                    :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        oversampling_adjusted             :   OUT   vector_of_std_logic_vector16(0 TO 3);  -- uint16 [4]
        oversampling_state                :   OUT   std_logic_vector(15 DOWNTO 0)  -- uint16
        );
END IncEnc_src_OS_factor_logic;


ARCHITECTURE rtl OF IncEnc_src_OS_factor_logic IS

  -- Component Declarations
  COMPONENT IncEnc_src_oversample_factor
    PORT( AllowCheckOverSampl             :   IN    std_logic;
          ReadBack_Omega                  :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          OverSamplOmega                  :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          state                           :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          InternalOmega                   :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          state_Out                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- uint16
          InternalOmega_Out               :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En11
          );
  END COMPONENT;

  COMPONENT IncEnc_src_align_oversamples
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb_1_5987_0                    :   IN    std_logic;
          oversampling_factor             :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          new_transition                  :   IN    std_logic_vector(0 TO 3);  -- boolean [4]
          states                          :   IN    vector_of_std_logic_vector16(0 TO 3);  -- int16 [4]
          delay_output                    :   OUT   std_logic_vector(0 TO 3)  -- boolean [4]
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : IncEnc_src_oversample_factor
    USE ENTITY work.IncEnc_src_oversample_factor(rtl);

  FOR ALL : IncEnc_src_align_oversamples
    USE ENTITY work.IncEnc_src_align_oversamples(rtl);

  -- Signals
  SIGNAL omega_signed                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Abs_y                            : signed(24 DOWNTO 0);  -- sfix25_En11
  SIGNAL Abs_cast                         : signed(24 DOWNTO 0);  -- sfix25_En11
  SIGNAL Abs_out1                         : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL InternalOmega_Out                : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL InternalOmega_Out_signed         : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay6_out1                      : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay7_out1                      : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL state_Out                        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL state_Out_unsigned               : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL delay_output                     : std_logic_vector(0 TO 3);  -- boolean [4]
  SIGNAL Delay1_out1                      : std_logic_vector(0 TO 3);  -- boolean [4]
  SIGNAL Sum_sub_cast                     : vector_of_unsigned16(0 TO 3);  -- ufix16 [4]
  SIGNAL Sum_out1                         : vector_of_unsigned16(0 TO 3);  -- uint16 [4]

BEGIN
  u_oversample_factor : IncEnc_src_oversample_factor
    PORT MAP( AllowCheckOverSampl => Allow_ToCheckOversampling,
              ReadBack_Omega => std_logic_vector(Abs_out1),  -- sfix24_En11
              OverSamplOmega => OverSamplOmega,  -- sfix24_En11
              state => std_logic_vector(Delay7_out1),  -- uint16
              InternalOmega => std_logic_vector(Delay6_out1),  -- sfix24_En11
              state_Out => state_Out,  -- uint16
              InternalOmega_Out => InternalOmega_Out  -- sfix24_En11
              );

  u_align_oversamples : IncEnc_src_align_oversamples
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb_1_5987_0 => enb_1_5987_0,
              oversampling_factor => std_logic_vector(Delay7_out1),  -- uint16
              new_transition => new_transisiton,  -- boolean [4]
              states => state_edges,  -- int16 [4]
              delay_output => delay_output  -- boolean [4]
              );

  omega_signed <= signed(omega);

  Abs_cast <= resize(omega_signed, 25);
  
  Abs_y <=  - (Abs_cast) WHEN omega_signed < to_signed(16#000000#, 24) ELSE
      resize(omega_signed, 25);
  Abs_out1 <= Abs_y(23 DOWNTO 0);

  InternalOmega_Out_signed <= signed(InternalOmega_Out);

  Delay6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay6_out1 <= to_signed(16#000000#, 24);
      ELSIF enb_1_5987_0 = '1' THEN
        Delay6_out1 <= InternalOmega_Out_signed;
      END IF;
    END IF;
  END PROCESS Delay6_process;


  state_Out_unsigned <= unsigned(state_Out);

  Delay7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay7_out1 <= to_unsigned(16#0001#, 16);
      ELSIF enb_1_5987_0 = '1' THEN
        Delay7_out1 <= state_Out_unsigned;
      END IF;
    END IF;
  END PROCESS Delay7_process;


  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay1_out1 <= (OTHERS => '0');
      ELSIF enb_1_5987_0 = '1' THEN
        Delay1_out1 <= delay_output;
      END IF;
    END IF;
  END PROCESS Delay1_process;



  Sum_out1_gen: FOR t_0 IN 0 TO 3 GENERATE
    Sum_sub_cast(t_0) <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & Delay1_out1(t_0);
    Sum_out1(t_0) <= Delay7_out1 - Sum_sub_cast(t_0);
  END GENERATE Sum_out1_gen;


  outputgen: FOR k IN 0 TO 3 GENERATE
    oversampling_adjusted(k) <= std_logic_vector(Sum_out1(k));
  END GENERATE;

  oversampling_state <= std_logic_vector(Delay7_out1);

END rtl;

