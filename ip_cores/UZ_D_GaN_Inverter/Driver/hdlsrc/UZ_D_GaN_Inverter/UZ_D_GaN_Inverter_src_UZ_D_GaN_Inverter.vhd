-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\UZ_D_GaN_Inverter\UZ_D_GaN_Inverter_src_UZ_D_GaN_Inverter.vhd
-- Created: 2021-05-03 14:36:56
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-08
-- Target subsystem base rate: 1e-08
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- AXI_Gan_Temp_1_freq           ce_out        1e-08
-- AXI_Gan_Temp_1_hightime       ce_out        1e-08
-- AXI_Gan_Temp_1_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_1_dutycyc        ce_out        1e-08
-- AXI_Gan_Temp_2_freq           ce_out        1e-08
-- AXI_Gan_Temp_2_hightime       ce_out        1e-08
-- AXI_Gan_Temp_2_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_2_dutycyc        ce_out        1e-08
-- AXI_Gan_Temp_3_freq           ce_out        1e-08
-- AXI_Gan_Temp_3_hightime       ce_out        1e-08
-- AXI_Gan_Temp_3_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_3_dutycyc        ce_out        1e-08
-- AXI_Gan_Temp_4_freq           ce_out        1e-08
-- AXI_Gan_Temp_4_hightime       ce_out        1e-08
-- AXI_Gan_Temp_4_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_4_dutycyc        ce_out        1e-08
-- AXI_Gan_Temp_5_freq           ce_out        1e-08
-- AXI_Gan_Temp_5_hightime       ce_out        1e-08
-- AXI_Gan_Temp_5_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_5_dutycyc        ce_out        1e-08
-- AXI_Gan_Temp_6_freq           ce_out        1e-08
-- AXI_Gan_Temp_6_hightime       ce_out        1e-08
-- AXI_Gan_Temp_6_lowtime        ce_out        1e-08
-- AXI_Gan_Temp_6_dutycyc        ce_out        1e-08
-- AXI_GaN_FAULT_H1              ce_out        1e-08
-- AXI_GaN_FAULT_L1              ce_out        1e-08
-- AXI_GaN_FAULT_H2              ce_out        1e-08
-- AXI_GaN_FAULT_L2              ce_out        1e-08
-- AXI_GaN_FAULT_H3              ce_out        1e-08
-- AXI_GaN_FAULT_L3              ce_out        1e-08
-- AXI_GaN_OC_H1                 ce_out        1e-08
-- AXI_GaN_OC_L1                 ce_out        1e-08
-- AXI_GaN_OC_H2                 ce_out        1e-08
-- AXI_GaN_OC_L2                 ce_out        1e-08
-- AXI_GaN_OC_H3                 ce_out        1e-08
-- AXI_GaN_OC_L3                 ce_out        1e-08
-- AXI_I_DIAG                    ce_out        1e-08
-- AXI_I1_DIAG                   ce_out        1e-08
-- AXI_I2_DIAG                   ce_out        1e-08
-- AXI_I3_DIAG                   ce_out        1e-08
-- PWM_EN                        ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: UZ_D_GaN_Inverter_src_UZ_D_GaN_Inverter
-- Source Path: UZ_D_GaN_Inverter/UZ_D_GaN_Inverter
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.UZ_D_GaN_Inverter_src_UZ_D_GaN_Inverter_pkg.ALL;

ENTITY UZ_D_GaN_Inverter_src_UZ_D_GaN_Inverter IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        GaN_Temp1                         :   IN    std_logic;
        GaN_Temp2                         :   IN    std_logic;
        GaN_Temp3                         :   IN    std_logic;
        GaN_Temp4                         :   IN    std_logic;
        GaN_Temp5                         :   IN    std_logic;
        GaN_Temp6                         :   IN    std_logic;
        GaN_FAULT_H1                      :   IN    std_logic;
        GaN_FAULT_L1                      :   IN    std_logic;
        GaN_FAULT_H2                      :   IN    std_logic;
        GaN_FAULT_L2                      :   IN    std_logic;
        GaN_FAULT_H3                      :   IN    std_logic;
        GaN_FAULT_L3                      :   IN    std_logic;
        GaN_OC_H1                         :   IN    std_logic;
        GaN_OC_L1                         :   IN    std_logic;
        GaN_OC_H2                         :   IN    std_logic;
        GaN_OC_L2                         :   IN    std_logic;
        GaN_OC_H3                         :   IN    std_logic;
        GaN_OC_L3                         :   IN    std_logic;
        I_DIAG                            :   IN    std_logic;
        I1_DIAG                           :   IN    std_logic;
        I2_DIAG                           :   IN    std_logic;
        I3_DIAG                           :   IN    std_logic;
        AXI_PWM_Enable                    :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        AXI_Gan_Temp_1_freq               :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_1_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_1_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_1_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_Gan_Temp_2_freq               :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_2_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_2_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_2_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_Gan_Temp_3_freq               :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_3_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_3_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_3_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_Gan_Temp_4_freq               :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_4_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_4_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_4_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_Gan_Temp_5_freq               :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_5_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_5_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_5_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_Gan_Temp_6_freq               :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_6_hightime           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_6_lowtime            :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        AXI_Gan_Temp_6_dutycyc            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        AXI_GaN_FAULT_H1                  :   OUT   std_logic;
        AXI_GaN_FAULT_L1                  :   OUT   std_logic;
        AXI_GaN_FAULT_H2                  :   OUT   std_logic;
        AXI_GaN_FAULT_L2                  :   OUT   std_logic;
        AXI_GaN_FAULT_H3                  :   OUT   std_logic;
        AXI_GaN_FAULT_L3                  :   OUT   std_logic;
        AXI_GaN_OC_H1                     :   OUT   std_logic;
        AXI_GaN_OC_L1                     :   OUT   std_logic;
        AXI_GaN_OC_H2                     :   OUT   std_logic;
        AXI_GaN_OC_L2                     :   OUT   std_logic;
        AXI_GaN_OC_H3                     :   OUT   std_logic;
        AXI_GaN_OC_L3                     :   OUT   std_logic;
        AXI_I_DIAG                        :   OUT   std_logic;
        AXI_I1_DIAG                       :   OUT   std_logic;
        AXI_I2_DIAG                       :   OUT   std_logic;
        AXI_I3_DIAG                       :   OUT   std_logic;
        PWM_EN                            :   OUT   std_logic
        );
END UZ_D_GaN_Inverter_src_UZ_D_GaN_Inverter;


ARCHITECTURE rtl OF UZ_D_GaN_Inverter_src_UZ_D_GaN_Inverter IS

  -- Component Declarations
  COMPONENT UZ_D_GaN_Inverter_src_For_Each_Subsystem
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          PWMin                           :   IN    std_logic;
          AXI_freq                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          AXI_hightime                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          AXI_lowtime                     :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          AXI_dutycyc                     :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En24
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : UZ_D_GaN_Inverter_src_For_Each_Subsystem
    USE ENTITY work.UZ_D_GaN_Inverter_src_For_Each_Subsystem(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL Mux_out1                         : std_logic_vector(0 TO 5);  -- boolean [6]
  SIGNAL For_Each_Subsystem_out1          : vector_of_std_logic_vector32(0 TO 5);  -- ufix32 [6]
  SIGNAL For_Each_Subsystem_out2          : vector_of_std_logic_vector32(0 TO 5);  -- ufix32 [6]
  SIGNAL For_Each_Subsystem_out3          : vector_of_std_logic_vector32(0 TO 5);  -- ufix32 [6]
  SIGNAL For_Each_Subsystem_out4          : vector_of_std_logic_vector32(0 TO 5);  -- ufix32 [6]
  SIGNAL Delay_out1                       : std_logic;
  SIGNAL Delay1_out1                      : std_logic;
  SIGNAL Delay2_out1                      : std_logic;
  SIGNAL Delay3_out1                      : std_logic;
  SIGNAL Delay4_out1                      : std_logic;
  SIGNAL Delay5_out1                      : std_logic;
  SIGNAL Delay6_out1                      : std_logic;
  SIGNAL Delay7_out1                      : std_logic;
  SIGNAL Delay8_out1                      : std_logic;
  SIGNAL Delay9_out1                      : std_logic;
  SIGNAL Delay10_out1                     : std_logic;
  SIGNAL Delay11_out1                     : std_logic;
  SIGNAL Delay12_out1                     : std_logic;
  SIGNAL Delay13_out1                     : std_logic;
  SIGNAL Delay14_out1                     : std_logic;
  SIGNAL Delay15_out1                     : std_logic;
  SIGNAL Delay16_out1                     : std_logic;

BEGIN
  Mux_out1(0) <= GaN_Temp1;
  Mux_out1(1) <= GaN_Temp2;
  Mux_out1(2) <= GaN_Temp3;
  Mux_out1(3) <= GaN_Temp4;
  Mux_out1(4) <= GaN_Temp5;
  Mux_out1(5) <= GaN_Temp6;

  GEN_LABEL: FOR k IN 0 TO 5 GENERATE
    u_For_Each_Subsystem : UZ_D_GaN_Inverter_src_For_Each_Subsystem
      PORT MAP( clk => clk,
                reset => reset,
                enb => clk_enable,
                PWMin => Mux_out1(k),
                AXI_freq => For_Each_Subsystem_out1(k),  -- uint32
                AXI_hightime => For_Each_Subsystem_out2(k),  -- uint32
                AXI_lowtime => For_Each_Subsystem_out3(k),  -- uint32
                AXI_dutycyc => For_Each_Subsystem_out4(k)  -- sfix32_En24
                );
  END GENERATE;

  enb <= clk_enable;

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay_out1 <= GaN_FAULT_H1;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay1_out1 <= GaN_FAULT_L1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay2_out1 <= GaN_FAULT_H2;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay3_out1 <= GaN_FAULT_L2;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay4_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay4_out1 <= GaN_FAULT_H3;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  Delay5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay5_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay5_out1 <= GaN_FAULT_L3;
      END IF;
    END IF;
  END PROCESS Delay5_process;


  Delay6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay6_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay6_out1 <= GaN_OC_H1;
      END IF;
    END IF;
  END PROCESS Delay6_process;


  Delay7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay7_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay7_out1 <= GaN_OC_L1;
      END IF;
    END IF;
  END PROCESS Delay7_process;


  Delay8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay8_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay8_out1 <= GaN_OC_H2;
      END IF;
    END IF;
  END PROCESS Delay8_process;


  Delay9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay9_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay9_out1 <= GaN_OC_L2;
      END IF;
    END IF;
  END PROCESS Delay9_process;


  Delay10_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay10_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay10_out1 <= GaN_OC_H3;
      END IF;
    END IF;
  END PROCESS Delay10_process;


  Delay11_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay11_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay11_out1 <= GaN_OC_L3;
      END IF;
    END IF;
  END PROCESS Delay11_process;


  Delay12_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay12_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay12_out1 <= I_DIAG;
      END IF;
    END IF;
  END PROCESS Delay12_process;


  Delay13_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay13_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay13_out1 <= I1_DIAG;
      END IF;
    END IF;
  END PROCESS Delay13_process;


  Delay14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay14_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay14_out1 <= I2_DIAG;
      END IF;
    END IF;
  END PROCESS Delay14_process;


  Delay15_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay15_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay15_out1 <= I3_DIAG;
      END IF;
    END IF;
  END PROCESS Delay15_process;


  Delay16_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay16_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay16_out1 <= AXI_PWM_Enable;
      END IF;
    END IF;
  END PROCESS Delay16_process;


  ce_out <= clk_enable;

  AXI_Gan_Temp_1_freq <= For_Each_Subsystem_out1(0);

  AXI_Gan_Temp_1_hightime <= For_Each_Subsystem_out2(0);

  AXI_Gan_Temp_1_lowtime <= For_Each_Subsystem_out3(0);

  AXI_Gan_Temp_1_dutycyc <= For_Each_Subsystem_out4(0);

  AXI_Gan_Temp_2_freq <= For_Each_Subsystem_out1(1);

  AXI_Gan_Temp_2_hightime <= For_Each_Subsystem_out2(1);

  AXI_Gan_Temp_2_lowtime <= For_Each_Subsystem_out3(1);

  AXI_Gan_Temp_2_dutycyc <= For_Each_Subsystem_out4(1);

  AXI_Gan_Temp_3_freq <= For_Each_Subsystem_out1(2);

  AXI_Gan_Temp_3_hightime <= For_Each_Subsystem_out2(2);

  AXI_Gan_Temp_3_lowtime <= For_Each_Subsystem_out3(2);

  AXI_Gan_Temp_3_dutycyc <= For_Each_Subsystem_out4(2);

  AXI_Gan_Temp_4_freq <= For_Each_Subsystem_out1(3);

  AXI_Gan_Temp_4_hightime <= For_Each_Subsystem_out2(3);

  AXI_Gan_Temp_4_lowtime <= For_Each_Subsystem_out3(3);

  AXI_Gan_Temp_4_dutycyc <= For_Each_Subsystem_out4(3);

  AXI_Gan_Temp_5_freq <= For_Each_Subsystem_out1(4);

  AXI_Gan_Temp_5_hightime <= For_Each_Subsystem_out2(4);

  AXI_Gan_Temp_5_lowtime <= For_Each_Subsystem_out3(4);

  AXI_Gan_Temp_5_dutycyc <= For_Each_Subsystem_out4(4);

  AXI_Gan_Temp_6_freq <= For_Each_Subsystem_out1(5);

  AXI_Gan_Temp_6_hightime <= For_Each_Subsystem_out2(5);

  AXI_Gan_Temp_6_lowtime <= For_Each_Subsystem_out3(5);

  AXI_Gan_Temp_6_dutycyc <= For_Each_Subsystem_out4(5);

  AXI_GaN_FAULT_H1 <= Delay_out1;

  AXI_GaN_FAULT_L1 <= Delay1_out1;

  AXI_GaN_FAULT_H2 <= Delay2_out1;

  AXI_GaN_FAULT_L2 <= Delay3_out1;

  AXI_GaN_FAULT_H3 <= Delay4_out1;

  AXI_GaN_FAULT_L3 <= Delay5_out1;

  AXI_GaN_OC_H1 <= Delay6_out1;

  AXI_GaN_OC_L1 <= Delay7_out1;

  AXI_GaN_OC_H2 <= Delay8_out1;

  AXI_GaN_OC_L2 <= Delay9_out1;

  AXI_GaN_OC_H3 <= Delay10_out1;

  AXI_GaN_OC_L3 <= Delay11_out1;

  AXI_I_DIAG <= Delay12_out1;

  AXI_I1_DIAG <= Delay13_out1;

  AXI_I2_DIAG <= Delay14_out1;

  AXI_I3_DIAG <= Delay15_out1;

  PWM_EN <= Delay16_out1;

END rtl;

