// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module BGD_accumulate_float_16u_235 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_values_dout,
        p_values_empty_n,
        p_values_read,
        p_accumulator_address0,
        p_accumulator_ce0,
        p_accumulator_we0,
        p_accumulator_d0,
        p_accumulator_q0,
        p_accumulator_address1,
        p_accumulator_ce1,
        p_accumulator_we1,
        p_accumulator_d1,
        p_accumulator_q1,
        p_weightGradientAvg_offset_dout,
        p_weightGradientAvg_offset_empty_n,
        p_weightGradientAvg_offset_read,
        mul_ln468_loc_dout,
        mul_ln468_loc_empty_n,
        mul_ln468_loc_read,
        p_initZero_dout,
        p_initZero_empty_n,
        p_initZero_read
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_state5 = 25'd16;
parameter    ap_ST_fsm_state6 = 25'd32;
parameter    ap_ST_fsm_state7 = 25'd64;
parameter    ap_ST_fsm_state8 = 25'd128;
parameter    ap_ST_fsm_state9 = 25'd256;
parameter    ap_ST_fsm_state10 = 25'd512;
parameter    ap_ST_fsm_state11 = 25'd1024;
parameter    ap_ST_fsm_state12 = 25'd2048;
parameter    ap_ST_fsm_state13 = 25'd4096;
parameter    ap_ST_fsm_state14 = 25'd8192;
parameter    ap_ST_fsm_state15 = 25'd16384;
parameter    ap_ST_fsm_state16 = 25'd32768;
parameter    ap_ST_fsm_state17 = 25'd65536;
parameter    ap_ST_fsm_state18 = 25'd131072;
parameter    ap_ST_fsm_state19 = 25'd262144;
parameter    ap_ST_fsm_state20 = 25'd524288;
parameter    ap_ST_fsm_state21 = 25'd1048576;
parameter    ap_ST_fsm_state22 = 25'd2097152;
parameter    ap_ST_fsm_state23 = 25'd4194304;
parameter    ap_ST_fsm_state24 = 25'd8388608;
parameter    ap_ST_fsm_state25 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] p_values_dout;
input   p_values_empty_n;
output   p_values_read;
output  [13:0] p_accumulator_address0;
output   p_accumulator_ce0;
output   p_accumulator_we0;
output  [31:0] p_accumulator_d0;
input  [31:0] p_accumulator_q0;
output  [13:0] p_accumulator_address1;
output   p_accumulator_ce1;
output   p_accumulator_we1;
output  [31:0] p_accumulator_d1;
input  [31:0] p_accumulator_q1;
input  [13:0] p_weightGradientAvg_offset_dout;
input   p_weightGradientAvg_offset_empty_n;
output   p_weightGradientAvg_offset_read;
input  [31:0] mul_ln468_loc_dout;
input   mul_ln468_loc_empty_n;
output   mul_ln468_loc_read;
input  [0:0] p_initZero_dout;
input   p_initZero_empty_n;
output   p_initZero_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_values_read;
reg[13:0] p_accumulator_address0;
reg p_accumulator_ce0;
reg p_accumulator_we0;
reg[31:0] p_accumulator_d0;
reg[13:0] p_accumulator_address1;
reg p_accumulator_ce1;
reg p_accumulator_we1;
reg p_weightGradientAvg_offset_read;
reg mul_ln468_loc_read;
reg p_initZero_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_values_blk_n;
wire    ap_CS_fsm_state3;
reg    p_weightGradientAvg_offset_blk_n;
reg    mul_ln468_loc_blk_n;
reg    p_initZero_blk_n;
reg   [31:0] reg_336;
reg   [0:0] p_initZero_read_reg_918;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire   [31:0] grp_fu_328_p2;
reg   [31:0] reg_341;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
reg   [31:0] reg_347;
wire   [31:0] grp_fu_332_p2;
reg   [31:0] reg_352;
reg   [31:0] reg_357;
wire    ap_CS_fsm_state4;
reg   [13:0] p_weightGradientAvg_offset_read_reg_898;
reg    ap_block_state1;
reg   [27:0] trunc_ln_reg_924;
wire   [27:0] add_ln397_fu_428_p2;
reg   [27:0] add_ln397_reg_932;
wire    ap_CS_fsm_state2;
wire   [13:0] tmp_s_fu_438_p3;
reg   [13:0] tmp_s_reg_937;
wire   [0:0] icmp_ln397_fu_423_p2;
reg   [13:0] p_accumulator_addr_reg_956;
wire   [31:0] trunc_ln674_fu_456_p1;
reg   [31:0] trunc_ln674_reg_961;
reg   [31:0] p_Result_i_i_reg_966;
reg   [31:0] p_Result_85_i_i_reg_971;
reg   [31:0] p_Result_86_i_i_reg_976;
reg   [31:0] p_Result_87_i_i_reg_981;
reg   [31:0] p_Result_88_i_i_reg_986;
reg   [31:0] p_Result_89_i_i_reg_991;
reg   [31:0] p_Result_90_i_i_reg_996;
reg   [31:0] p_Result_91_i_i_reg_1001;
reg   [31:0] p_Result_92_i_i_reg_1006;
reg   [31:0] p_Result_93_i_i_reg_1011;
reg   [31:0] p_Result_94_i_i_reg_1016;
reg   [31:0] p_Result_95_i_i_reg_1021;
reg   [31:0] p_Result_96_i_i_reg_1026;
reg   [31:0] p_Result_97_i_i_reg_1031;
reg   [31:0] p_Result_98_i_i_reg_1036;
wire   [31:0] bitcast_ln101_fu_610_p1;
reg   [13:0] p_accumulator_addr_16_reg_1046;
wire    ap_CS_fsm_state10;
reg   [13:0] p_accumulator_addr_17_reg_1051;
reg   [13:0] p_accumulator_addr_18_reg_1056;
reg   [13:0] p_accumulator_addr_19_reg_1062;
wire   [31:0] bitcast_ln101_106_fu_674_p1;
wire   [31:0] bitcast_ln101_107_fu_678_p1;
reg   [13:0] p_accumulator_addr_20_reg_1078;
reg   [13:0] p_accumulator_addr_21_reg_1084;
wire   [31:0] bitcast_ln101_108_fu_712_p1;
wire   [31:0] bitcast_ln101_109_fu_716_p1;
reg   [13:0] p_accumulator_addr_22_reg_1100;
reg   [13:0] p_accumulator_addr_23_reg_1106;
wire   [31:0] bitcast_ln101_110_fu_750_p1;
wire   [31:0] bitcast_ln101_111_fu_754_p1;
reg   [13:0] p_accumulator_addr_24_reg_1122;
reg   [13:0] p_accumulator_addr_25_reg_1128;
wire   [31:0] bitcast_ln101_112_fu_788_p1;
wire   [31:0] bitcast_ln101_113_fu_792_p1;
reg   [13:0] p_accumulator_addr_26_reg_1149;
reg   [13:0] p_accumulator_addr_27_reg_1155;
wire   [31:0] bitcast_ln101_114_fu_826_p1;
wire   [31:0] bitcast_ln101_115_fu_830_p1;
reg   [13:0] p_accumulator_addr_28_reg_1171;
reg   [13:0] p_accumulator_addr_29_reg_1177;
wire   [13:0] add_ln404_15_fu_869_p2;
reg   [13:0] add_ln404_15_reg_1183;
wire   [31:0] bitcast_ln101_116_fu_874_p1;
wire   [31:0] bitcast_ln101_117_fu_878_p1;
reg   [13:0] p_accumulator_addr_30_reg_1198;
wire   [31:0] bitcast_ln101_118_fu_886_p1;
wire   [31:0] bitcast_ln101_119_fu_890_p1;
wire   [31:0] bitcast_ln101_120_fu_894_p1;
reg   [27:0] i_reg_317;
wire    ap_CS_fsm_state24;
wire   [63:0] zext_ln404_fu_451_p1;
wire   [63:0] zext_ln404_16_fu_624_p1;
wire   [63:0] zext_ln404_17_fu_639_p1;
wire   [63:0] zext_ln404_18_fu_654_p1;
wire   [63:0] zext_ln404_19_fu_669_p1;
wire   [63:0] zext_ln404_20_fu_692_p1;
wire   [63:0] zext_ln404_21_fu_707_p1;
wire   [63:0] zext_ln404_22_fu_730_p1;
wire   [63:0] zext_ln404_23_fu_745_p1;
wire   [63:0] zext_ln404_24_fu_768_p1;
wire   [63:0] zext_ln404_25_fu_783_p1;
wire   [63:0] zext_ln404_26_fu_806_p1;
wire   [63:0] zext_ln404_27_fu_821_p1;
wire   [63:0] zext_ln404_28_fu_844_p1;
wire   [63:0] zext_ln404_29_fu_859_p1;
wire   [63:0] zext_ln404_30_fu_882_p1;
wire    ap_CS_fsm_state9;
wire   [31:0] grp_fu_328_p0;
reg   [31:0] grp_fu_328_p1;
wire   [31:0] grp_fu_332_p0;
reg   [31:0] grp_fu_332_p1;
wire   [9:0] empty_fu_434_p1;
wire   [13:0] add_ln404_fu_446_p2;
wire   [13:0] or_ln404_fu_614_p2;
wire   [13:0] add_ln404_1_fu_619_p2;
wire   [13:0] or_ln404_15_fu_629_p2;
wire   [13:0] add_ln404_2_fu_634_p2;
wire   [13:0] or_ln404_16_fu_644_p2;
wire   [13:0] add_ln404_3_fu_649_p2;
wire   [13:0] or_ln404_17_fu_659_p2;
wire   [13:0] add_ln404_4_fu_664_p2;
wire   [13:0] or_ln404_18_fu_682_p2;
wire   [13:0] add_ln404_5_fu_687_p2;
wire   [13:0] or_ln404_19_fu_697_p2;
wire   [13:0] add_ln404_6_fu_702_p2;
wire   [13:0] or_ln404_20_fu_720_p2;
wire   [13:0] add_ln404_7_fu_725_p2;
wire   [13:0] or_ln404_21_fu_735_p2;
wire   [13:0] add_ln404_8_fu_740_p2;
wire   [13:0] or_ln404_22_fu_758_p2;
wire   [13:0] add_ln404_9_fu_763_p2;
wire   [13:0] or_ln404_23_fu_773_p2;
wire   [13:0] add_ln404_10_fu_778_p2;
wire   [13:0] or_ln404_24_fu_796_p2;
wire   [13:0] add_ln404_11_fu_801_p2;
wire   [13:0] or_ln404_25_fu_811_p2;
wire   [13:0] add_ln404_12_fu_816_p2;
wire   [13:0] or_ln404_26_fu_834_p2;
wire   [13:0] add_ln404_13_fu_839_p2;
wire   [13:0] or_ln404_27_fu_849_p2;
wire   [13:0] add_ln404_14_fu_854_p2;
wire   [13:0] or_ln404_28_fu_864_p2;
wire    ap_CS_fsm_state25;
reg   [24:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 25'd1;
end

BGD_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_328_p0),
    .din1(grp_fu_328_p1),
    .ce(1'b1),
    .dout(grp_fu_328_p2)
);

BGD_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_332_p0),
    .din1(grp_fu_332_p1),
    .ce(1'b1),
    .dout(grp_fu_332_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_initZero_empty_n == 1'b0) | (mul_ln468_loc_empty_n == 1'b0) | (p_weightGradientAvg_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_317 <= 28'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        i_reg_317 <= add_ln397_reg_932;
    end
end

always @ (posedge ap_clk) begin
    if (((p_initZero_read_reg_918 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        reg_336 <= p_accumulator_q1;
    end else if ((((p_initZero_read_reg_918 == 1'd0) & (p_values_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((p_initZero_read_reg_918 == 1'd0) & (1'b1 == ap_CS_fsm_state18)) | ((p_initZero_read_reg_918 == 1'd0) & (1'b1 == ap_CS_fsm_state17)) | ((p_initZero_read_reg_918 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((p_initZero_read_reg_918 == 1'd0) & (1'b1 == ap_CS_fsm_state15)) | ((p_initZero_read_reg_918 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((p_initZero_read_reg_918 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((p_initZero_read_reg_918 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        reg_336 <= p_accumulator_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((p_initZero_read_reg_918 == 1'd0) & (1'b1 == ap_CS_fsm_state17)) | ((p_initZero_read_reg_918 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((p_initZero_read_reg_918 == 1'd0) & (1'b1 == ap_CS_fsm_state15)) | ((p_initZero_read_reg_918 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((p_initZero_read_reg_918 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((p_initZero_read_reg_918 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        reg_347 <= p_accumulator_q1;
    end else if (((p_initZero_read_reg_918 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        reg_347 <= p_accumulator_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln397_reg_932 <= add_ln397_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln404_15_reg_1183 <= add_ln404_15_fu_869_p2;
        p_accumulator_addr_28_reg_1171 <= zext_ln404_28_fu_844_p1;
        p_accumulator_addr_29_reg_1177 <= zext_ln404_29_fu_859_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((p_values_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        p_Result_85_i_i_reg_971 <= {{p_values_dout[95:64]}};
        p_Result_86_i_i_reg_976 <= {{p_values_dout[127:96]}};
        p_Result_87_i_i_reg_981 <= {{p_values_dout[159:128]}};
        p_Result_88_i_i_reg_986 <= {{p_values_dout[191:160]}};
        p_Result_89_i_i_reg_991 <= {{p_values_dout[223:192]}};
        p_Result_90_i_i_reg_996 <= {{p_values_dout[255:224]}};
        p_Result_91_i_i_reg_1001 <= {{p_values_dout[287:256]}};
        p_Result_92_i_i_reg_1006 <= {{p_values_dout[319:288]}};
        p_Result_93_i_i_reg_1011 <= {{p_values_dout[351:320]}};
        p_Result_94_i_i_reg_1016 <= {{p_values_dout[383:352]}};
        p_Result_95_i_i_reg_1021 <= {{p_values_dout[415:384]}};
        p_Result_96_i_i_reg_1026 <= {{p_values_dout[447:416]}};
        p_Result_97_i_i_reg_1031 <= {{p_values_dout[479:448]}};
        p_Result_98_i_i_reg_1036 <= {{p_values_dout[511:480]}};
        p_Result_i_i_reg_966 <= {{p_values_dout[63:32]}};
        trunc_ln674_reg_961 <= trunc_ln674_fu_456_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        p_accumulator_addr_16_reg_1046 <= zext_ln404_16_fu_624_p1;
        p_accumulator_addr_17_reg_1051 <= zext_ln404_17_fu_639_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        p_accumulator_addr_18_reg_1056 <= zext_ln404_18_fu_654_p1;
        p_accumulator_addr_19_reg_1062 <= zext_ln404_19_fu_669_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_accumulator_addr_20_reg_1078 <= zext_ln404_20_fu_692_p1;
        p_accumulator_addr_21_reg_1084 <= zext_ln404_21_fu_707_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_accumulator_addr_22_reg_1100 <= zext_ln404_22_fu_730_p1;
        p_accumulator_addr_23_reg_1106 <= zext_ln404_23_fu_745_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        p_accumulator_addr_24_reg_1122 <= zext_ln404_24_fu_768_p1;
        p_accumulator_addr_25_reg_1128 <= zext_ln404_25_fu_783_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        p_accumulator_addr_26_reg_1149 <= zext_ln404_26_fu_806_p1;
        p_accumulator_addr_27_reg_1155 <= zext_ln404_27_fu_821_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        p_accumulator_addr_30_reg_1198 <= zext_ln404_30_fu_882_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_fu_423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_accumulator_addr_reg_956 <= zext_ln404_fu_451_p1;
        tmp_s_reg_937[13 : 4] <= tmp_s_fu_438_p3[13 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_initZero_empty_n == 1'b0) | (mul_ln468_loc_empty_n == 1'b0) | (p_weightGradientAvg_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_initZero_read_reg_918 <= p_initZero_dout;
        p_weightGradientAvg_offset_read_reg_898 <= p_weightGradientAvg_offset_dout;
        trunc_ln_reg_924 <= {{mul_ln468_loc_dout[31:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_341 <= grp_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_352 <= grp_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_357 <= grp_fu_332_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_328_p1 = bitcast_ln101_120_fu_894_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_328_p1 = bitcast_ln101_118_fu_886_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_328_p1 = bitcast_ln101_116_fu_874_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_328_p1 = bitcast_ln101_114_fu_826_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_328_p1 = bitcast_ln101_112_fu_788_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_328_p1 = bitcast_ln101_110_fu_750_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_328_p1 = bitcast_ln101_108_fu_712_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_328_p1 = bitcast_ln101_106_fu_674_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_328_p1 = bitcast_ln101_fu_610_p1;
    end else begin
        grp_fu_328_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_332_p1 = bitcast_ln101_119_fu_890_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_332_p1 = bitcast_ln101_117_fu_878_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_332_p1 = bitcast_ln101_115_fu_830_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_332_p1 = bitcast_ln101_113_fu_792_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_332_p1 = bitcast_ln101_111_fu_754_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_332_p1 = bitcast_ln101_109_fu_716_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_332_p1 = bitcast_ln101_107_fu_678_p1;
    end else begin
        grp_fu_332_p1 = 'bx;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        mul_ln468_loc_blk_n = mul_ln468_loc_empty_n;
    end else begin
        mul_ln468_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_initZero_empty_n == 1'b0) | (mul_ln468_loc_empty_n == 1'b0) | (p_weightGradientAvg_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        mul_ln468_loc_read = 1'b1;
    end else begin
        mul_ln468_loc_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        p_accumulator_address0 = p_accumulator_addr_29_reg_1177;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        p_accumulator_address0 = p_accumulator_addr_27_reg_1155;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        p_accumulator_address0 = p_accumulator_addr_25_reg_1128;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        p_accumulator_address0 = p_accumulator_addr_23_reg_1106;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        p_accumulator_address0 = p_accumulator_addr_21_reg_1084;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        p_accumulator_address0 = p_accumulator_addr_19_reg_1062;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        p_accumulator_address0 = p_accumulator_addr_17_reg_1051;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        p_accumulator_address0 = zext_ln404_30_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        p_accumulator_address0 = zext_ln404_28_fu_844_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        p_accumulator_address0 = zext_ln404_26_fu_806_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        p_accumulator_address0 = zext_ln404_24_fu_768_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        p_accumulator_address0 = zext_ln404_22_fu_730_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        p_accumulator_address0 = zext_ln404_20_fu_692_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        p_accumulator_address0 = zext_ln404_18_fu_654_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_accumulator_address0 = zext_ln404_17_fu_639_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        p_accumulator_address0 = p_accumulator_addr_reg_956;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_accumulator_address0 = zext_ln404_fu_451_p1;
    end else begin
        p_accumulator_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        p_accumulator_address1 = p_accumulator_addr_30_reg_1198;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        p_accumulator_address1 = p_accumulator_addr_28_reg_1171;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        p_accumulator_address1 = p_accumulator_addr_26_reg_1149;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        p_accumulator_address1 = p_accumulator_addr_24_reg_1122;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        p_accumulator_address1 = p_accumulator_addr_22_reg_1100;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        p_accumulator_address1 = p_accumulator_addr_20_reg_1078;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        p_accumulator_address1 = p_accumulator_addr_18_reg_1056;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        p_accumulator_address1 = p_accumulator_addr_16_reg_1046;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        p_accumulator_address1 = zext_ln404_29_fu_859_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        p_accumulator_address1 = zext_ln404_27_fu_821_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        p_accumulator_address1 = zext_ln404_25_fu_783_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        p_accumulator_address1 = zext_ln404_23_fu_745_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        p_accumulator_address1 = zext_ln404_21_fu_707_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        p_accumulator_address1 = zext_ln404_19_fu_669_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_accumulator_address1 = zext_ln404_16_fu_624_p1;
    end else begin
        p_accumulator_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        p_accumulator_ce0 = 1'b1;
    end else begin
        p_accumulator_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        p_accumulator_ce1 = 1'b1;
    end else begin
        p_accumulator_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19))) begin
        p_accumulator_d0 = reg_357;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18))) begin
        p_accumulator_d0 = reg_352;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        p_accumulator_d0 = reg_341;
    end else begin
        p_accumulator_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        p_accumulator_we0 = 1'b1;
    end else begin
        p_accumulator_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        p_accumulator_we1 = 1'b1;
    end else begin
        p_accumulator_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_initZero_blk_n = p_initZero_empty_n;
    end else begin
        p_initZero_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_initZero_empty_n == 1'b0) | (mul_ln468_loc_empty_n == 1'b0) | (p_weightGradientAvg_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_initZero_read = 1'b1;
    end else begin
        p_initZero_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_values_blk_n = p_values_empty_n;
    end else begin
        p_values_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((p_values_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        p_values_read = 1'b1;
    end else begin
        p_values_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_weightGradientAvg_offset_blk_n = p_weightGradientAvg_offset_empty_n;
    end else begin
        p_weightGradientAvg_offset_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_initZero_empty_n == 1'b0) | (mul_ln468_loc_empty_n == 1'b0) | (p_weightGradientAvg_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_weightGradientAvg_offset_read = 1'b1;
    end else begin
        p_weightGradientAvg_offset_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_initZero_empty_n == 1'b0) | (mul_ln468_loc_empty_n == 1'b0) | (p_weightGradientAvg_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln397_fu_423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((p_values_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln397_fu_428_p2 = (i_reg_317 + 28'd1);

assign add_ln404_10_fu_778_p2 = (p_weightGradientAvg_offset_read_reg_898 + or_ln404_23_fu_773_p2);

assign add_ln404_11_fu_801_p2 = (p_weightGradientAvg_offset_read_reg_898 + or_ln404_24_fu_796_p2);

assign add_ln404_12_fu_816_p2 = (p_weightGradientAvg_offset_read_reg_898 + or_ln404_25_fu_811_p2);

assign add_ln404_13_fu_839_p2 = (p_weightGradientAvg_offset_read_reg_898 + or_ln404_26_fu_834_p2);

assign add_ln404_14_fu_854_p2 = (p_weightGradientAvg_offset_read_reg_898 + or_ln404_27_fu_849_p2);

assign add_ln404_15_fu_869_p2 = (p_weightGradientAvg_offset_read_reg_898 + or_ln404_28_fu_864_p2);

assign add_ln404_1_fu_619_p2 = (p_weightGradientAvg_offset_read_reg_898 + or_ln404_fu_614_p2);

assign add_ln404_2_fu_634_p2 = (p_weightGradientAvg_offset_read_reg_898 + or_ln404_15_fu_629_p2);

assign add_ln404_3_fu_649_p2 = (p_weightGradientAvg_offset_read_reg_898 + or_ln404_16_fu_644_p2);

assign add_ln404_4_fu_664_p2 = (p_weightGradientAvg_offset_read_reg_898 + or_ln404_17_fu_659_p2);

assign add_ln404_5_fu_687_p2 = (p_weightGradientAvg_offset_read_reg_898 + or_ln404_18_fu_682_p2);

assign add_ln404_6_fu_702_p2 = (p_weightGradientAvg_offset_read_reg_898 + or_ln404_19_fu_697_p2);

assign add_ln404_7_fu_725_p2 = (p_weightGradientAvg_offset_read_reg_898 + or_ln404_20_fu_720_p2);

assign add_ln404_8_fu_740_p2 = (p_weightGradientAvg_offset_read_reg_898 + or_ln404_21_fu_735_p2);

assign add_ln404_9_fu_763_p2 = (p_weightGradientAvg_offset_read_reg_898 + or_ln404_22_fu_758_p2);

assign add_ln404_fu_446_p2 = (p_weightGradientAvg_offset_read_reg_898 + tmp_s_fu_438_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((p_initZero_empty_n == 1'b0) | (mul_ln468_loc_empty_n == 1'b0) | (p_weightGradientAvg_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign bitcast_ln101_106_fu_674_p1 = p_Result_i_i_reg_966;

assign bitcast_ln101_107_fu_678_p1 = p_Result_85_i_i_reg_971;

assign bitcast_ln101_108_fu_712_p1 = p_Result_86_i_i_reg_976;

assign bitcast_ln101_109_fu_716_p1 = p_Result_87_i_i_reg_981;

assign bitcast_ln101_110_fu_750_p1 = p_Result_88_i_i_reg_986;

assign bitcast_ln101_111_fu_754_p1 = p_Result_89_i_i_reg_991;

assign bitcast_ln101_112_fu_788_p1 = p_Result_90_i_i_reg_996;

assign bitcast_ln101_113_fu_792_p1 = p_Result_91_i_i_reg_1001;

assign bitcast_ln101_114_fu_826_p1 = p_Result_92_i_i_reg_1006;

assign bitcast_ln101_115_fu_830_p1 = p_Result_93_i_i_reg_1011;

assign bitcast_ln101_116_fu_874_p1 = p_Result_94_i_i_reg_1016;

assign bitcast_ln101_117_fu_878_p1 = p_Result_95_i_i_reg_1021;

assign bitcast_ln101_118_fu_886_p1 = p_Result_96_i_i_reg_1026;

assign bitcast_ln101_119_fu_890_p1 = p_Result_97_i_i_reg_1031;

assign bitcast_ln101_120_fu_894_p1 = p_Result_98_i_i_reg_1036;

assign bitcast_ln101_fu_610_p1 = trunc_ln674_reg_961;

assign empty_fu_434_p1 = i_reg_317[9:0];

assign grp_fu_328_p0 = ((p_initZero_read_reg_918[0:0] === 1'b1) ? 32'd0 : reg_336);

assign grp_fu_332_p0 = ((p_initZero_read_reg_918[0:0] === 1'b1) ? 32'd0 : reg_347);

assign icmp_ln397_fu_423_p2 = ((i_reg_317 == trunc_ln_reg_924) ? 1'b1 : 1'b0);

assign or_ln404_15_fu_629_p2 = (tmp_s_reg_937 | 14'd2);

assign or_ln404_16_fu_644_p2 = (tmp_s_reg_937 | 14'd3);

assign or_ln404_17_fu_659_p2 = (tmp_s_reg_937 | 14'd4);

assign or_ln404_18_fu_682_p2 = (tmp_s_reg_937 | 14'd5);

assign or_ln404_19_fu_697_p2 = (tmp_s_reg_937 | 14'd6);

assign or_ln404_20_fu_720_p2 = (tmp_s_reg_937 | 14'd7);

assign or_ln404_21_fu_735_p2 = (tmp_s_reg_937 | 14'd8);

assign or_ln404_22_fu_758_p2 = (tmp_s_reg_937 | 14'd9);

assign or_ln404_23_fu_773_p2 = (tmp_s_reg_937 | 14'd10);

assign or_ln404_24_fu_796_p2 = (tmp_s_reg_937 | 14'd11);

assign or_ln404_25_fu_811_p2 = (tmp_s_reg_937 | 14'd12);

assign or_ln404_26_fu_834_p2 = (tmp_s_reg_937 | 14'd13);

assign or_ln404_27_fu_849_p2 = (tmp_s_reg_937 | 14'd14);

assign or_ln404_28_fu_864_p2 = (tmp_s_reg_937 | 14'd15);

assign or_ln404_fu_614_p2 = (tmp_s_reg_937 | 14'd1);

assign p_accumulator_d1 = reg_341;

assign tmp_s_fu_438_p3 = {{empty_fu_434_p1}, {4'd0}};

assign trunc_ln674_fu_456_p1 = p_values_dout[31:0];

assign zext_ln404_16_fu_624_p1 = add_ln404_1_fu_619_p2;

assign zext_ln404_17_fu_639_p1 = add_ln404_2_fu_634_p2;

assign zext_ln404_18_fu_654_p1 = add_ln404_3_fu_649_p2;

assign zext_ln404_19_fu_669_p1 = add_ln404_4_fu_664_p2;

assign zext_ln404_20_fu_692_p1 = add_ln404_5_fu_687_p2;

assign zext_ln404_21_fu_707_p1 = add_ln404_6_fu_702_p2;

assign zext_ln404_22_fu_730_p1 = add_ln404_7_fu_725_p2;

assign zext_ln404_23_fu_745_p1 = add_ln404_8_fu_740_p2;

assign zext_ln404_24_fu_768_p1 = add_ln404_9_fu_763_p2;

assign zext_ln404_25_fu_783_p1 = add_ln404_10_fu_778_p2;

assign zext_ln404_26_fu_806_p1 = add_ln404_11_fu_801_p2;

assign zext_ln404_27_fu_821_p1 = add_ln404_12_fu_816_p2;

assign zext_ln404_28_fu_844_p1 = add_ln404_13_fu_839_p2;

assign zext_ln404_29_fu_859_p1 = add_ln404_14_fu_854_p2;

assign zext_ln404_30_fu_882_p1 = add_ln404_15_reg_1183;

assign zext_ln404_fu_451_p1 = add_ln404_fu_446_p2;

always @ (posedge ap_clk) begin
    tmp_s_reg_937[3:0] <= 4'b0000;
end

endmodule //BGD_accumulate_float_16u_235
