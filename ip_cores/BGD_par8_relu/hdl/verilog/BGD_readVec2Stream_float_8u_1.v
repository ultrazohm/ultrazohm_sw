// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module BGD_readVec2Stream_float_8u_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_out_din,
        p_out_full_n,
        p_out_write,
        p_n_dout,
        p_n_empty_n,
        p_n_read,
        bramWeightGradientAvg_address0,
        bramWeightGradientAvg_ce0,
        bramWeightGradientAvg_q0,
        bramWeightGradientAvg_address1,
        bramWeightGradientAvg_ce1,
        bramWeightGradientAvg_q1
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_pp0_stage1 = 6'd4;
parameter    ap_ST_fsm_pp0_stage2 = 6'd8;
parameter    ap_ST_fsm_pp0_stage3 = 6'd16;
parameter    ap_ST_fsm_state7 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [255:0] p_out_din;
input   p_out_full_n;
output   p_out_write;
input  [31:0] p_n_dout;
input   p_n_empty_n;
output   p_n_read;
output  [15:0] bramWeightGradientAvg_address0;
output   bramWeightGradientAvg_ce0;
input  [31:0] bramWeightGradientAvg_q0;
output  [15:0] bramWeightGradientAvg_address1;
output   bramWeightGradientAvg_ce1;
input  [31:0] bramWeightGradientAvg_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_out_write;
reg p_n_read;
reg[15:0] bramWeightGradientAvg_address0;
reg bramWeightGradientAvg_ce0;
reg[15:0] bramWeightGradientAvg_address1;
reg bramWeightGradientAvg_ce1;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_out_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln111_reg_328;
reg    p_n_blk_n;
reg   [28:0] i_reg_156;
reg   [28:0] trunc_ln_reg_323;
reg    ap_block_state1;
wire   [0:0] icmp_ln111_fu_177_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state6_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [28:0] add_ln111_fu_182_p2;
reg   [28:0] add_ln111_reg_332;
reg    ap_enable_reg_pp0_iter0;
wire   [15:0] tmp_4_fu_192_p3;
reg   [15:0] tmp_4_reg_337;
reg   [31:0] bramWeightGradientAvg_load_reg_357;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] bramWeightGradientAvg_load_1_reg_362;
reg   [31:0] bramWeightGradientAvg_load_2_reg_377;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] bramWeightGradientAvg_load_3_reg_382;
reg   [31:0] bramWeightGradientAvg_load_4_reg_397;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] bramWeightGradientAvg_load_5_reg_402;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage3_subdone;
reg   [28:0] ap_phi_mux_i_phi_fu_160_p4;
wire   [63:0] zext_ln116_fu_200_p1;
wire   [63:0] zext_ln116_1_fu_211_p1;
wire   [63:0] zext_ln116_2_fu_221_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln116_3_fu_231_p1;
wire   [63:0] zext_ln116_4_fu_241_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln116_5_fu_251_p1;
wire   [63:0] zext_ln116_6_fu_261_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln116_7_fu_271_p1;
reg    ap_block_pp0_stage0_01001;
wire   [12:0] empty_fu_188_p1;
wire   [15:0] or_ln116_fu_205_p2;
wire   [15:0] or_ln116_1_fu_216_p2;
wire   [15:0] or_ln116_2_fu_226_p2;
wire   [15:0] or_ln116_3_fu_236_p2;
wire   [15:0] or_ln116_4_fu_246_p2;
wire   [15:0] or_ln116_5_fu_256_p2;
wire   [15:0] or_ln116_6_fu_266_p2;
wire   [31:0] l_v_42_fu_298_p1;
wire   [31:0] l_v_41_fu_294_p1;
wire   [31:0] l_v_40_fu_291_p1;
wire   [31:0] l_v_39_fu_288_p1;
wire   [31:0] l_v_38_fu_285_p1;
wire   [31:0] l_v_37_fu_282_p1;
wire   [31:0] l_v_36_fu_279_p1;
wire   [31:0] l_v_fu_276_p1;
wire    ap_CS_fsm_state7;
reg   [5:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((p_n_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((p_n_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_n_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_156 <= 29'd0;
    end else if (((icmp_ln111_reg_328 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_156 <= add_ln111_reg_332;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln111_reg_332 <= add_ln111_fu_182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_328 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bramWeightGradientAvg_load_1_reg_362 <= bramWeightGradientAvg_q0;
        bramWeightGradientAvg_load_reg_357 <= bramWeightGradientAvg_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_328 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        bramWeightGradientAvg_load_2_reg_377 <= bramWeightGradientAvg_q1;
        bramWeightGradientAvg_load_3_reg_382 <= bramWeightGradientAvg_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_328 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        bramWeightGradientAvg_load_4_reg_397 <= bramWeightGradientAvg_q1;
        bramWeightGradientAvg_load_5_reg_402 <= bramWeightGradientAvg_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln111_reg_328 <= icmp_ln111_fu_177_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_fu_177_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_4_reg_337[15 : 3] <= tmp_4_fu_192_p3[15 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_n_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        trunc_ln_reg_323 <= {{p_n_dout[31:3]}};
    end
end

always @ (*) begin
    if ((icmp_ln111_fu_177_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln111_reg_328 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_160_p4 = add_ln111_reg_332;
    end else begin
        ap_phi_mux_i_phi_fu_160_p4 = i_reg_156;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            bramWeightGradientAvg_address0 = zext_ln116_7_fu_271_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            bramWeightGradientAvg_address0 = zext_ln116_5_fu_251_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            bramWeightGradientAvg_address0 = zext_ln116_3_fu_231_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            bramWeightGradientAvg_address0 = zext_ln116_1_fu_211_p1;
        end else begin
            bramWeightGradientAvg_address0 = 'bx;
        end
    end else begin
        bramWeightGradientAvg_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            bramWeightGradientAvg_address1 = zext_ln116_6_fu_261_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            bramWeightGradientAvg_address1 = zext_ln116_4_fu_241_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            bramWeightGradientAvg_address1 = zext_ln116_2_fu_221_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            bramWeightGradientAvg_address1 = zext_ln116_fu_200_p1;
        end else begin
            bramWeightGradientAvg_address1 = 'bx;
        end
    end else begin
        bramWeightGradientAvg_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        bramWeightGradientAvg_ce0 = 1'b1;
    end else begin
        bramWeightGradientAvg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        bramWeightGradientAvg_ce1 = 1'b1;
    end else begin
        bramWeightGradientAvg_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_n_blk_n = p_n_empty_n;
    end else begin
        p_n_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_n_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_n_read = 1'b1;
    end else begin
        p_n_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln111_reg_328 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out_blk_n = p_out_full_n;
    end else begin
        p_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln111_reg_328 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out_write = 1'b1;
    end else begin
        p_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_n_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_fu_177_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_fu_177_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln111_fu_182_p2 = (ap_phi_mux_i_phi_fu_160_p4 + 29'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((icmp_ln111_reg_328 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (p_out_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln111_reg_328 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (p_out_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln111_reg_328 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (p_out_full_n == 1'b0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((p_n_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter1 = ((icmp_ln111_reg_328 == 1'd0) & (p_out_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign empty_fu_188_p1 = ap_phi_mux_i_phi_fu_160_p4[12:0];

assign icmp_ln111_fu_177_p2 = ((ap_phi_mux_i_phi_fu_160_p4 == trunc_ln_reg_323) ? 1'b1 : 1'b0);

assign l_v_36_fu_279_p1 = bramWeightGradientAvg_load_1_reg_362;

assign l_v_37_fu_282_p1 = bramWeightGradientAvg_load_2_reg_377;

assign l_v_38_fu_285_p1 = bramWeightGradientAvg_load_3_reg_382;

assign l_v_39_fu_288_p1 = bramWeightGradientAvg_load_4_reg_397;

assign l_v_40_fu_291_p1 = bramWeightGradientAvg_load_5_reg_402;

assign l_v_41_fu_294_p1 = bramWeightGradientAvg_q1;

assign l_v_42_fu_298_p1 = bramWeightGradientAvg_q0;

assign l_v_fu_276_p1 = bramWeightGradientAvg_load_reg_357;

assign or_ln116_1_fu_216_p2 = (tmp_4_reg_337 | 16'd2);

assign or_ln116_2_fu_226_p2 = (tmp_4_reg_337 | 16'd3);

assign or_ln116_3_fu_236_p2 = (tmp_4_reg_337 | 16'd4);

assign or_ln116_4_fu_246_p2 = (tmp_4_reg_337 | 16'd5);

assign or_ln116_5_fu_256_p2 = (tmp_4_reg_337 | 16'd6);

assign or_ln116_6_fu_266_p2 = (tmp_4_reg_337 | 16'd7);

assign or_ln116_fu_205_p2 = (tmp_4_fu_192_p3 | 16'd1);

assign p_out_din = {{{{{{{{l_v_42_fu_298_p1}, {l_v_41_fu_294_p1}}, {l_v_40_fu_291_p1}}, {l_v_39_fu_288_p1}}, {l_v_38_fu_285_p1}}, {l_v_37_fu_282_p1}}, {l_v_36_fu_279_p1}}, {l_v_fu_276_p1}};

assign tmp_4_fu_192_p3 = {{empty_fu_188_p1}, {3'd0}};

assign zext_ln116_1_fu_211_p1 = or_ln116_fu_205_p2;

assign zext_ln116_2_fu_221_p1 = or_ln116_1_fu_216_p2;

assign zext_ln116_3_fu_231_p1 = or_ln116_2_fu_226_p2;

assign zext_ln116_4_fu_241_p1 = or_ln116_3_fu_236_p2;

assign zext_ln116_5_fu_251_p1 = or_ln116_4_fu_246_p2;

assign zext_ln116_6_fu_261_p1 = or_ln116_5_fu_256_p2;

assign zext_ln116_7_fu_271_p1 = or_ln116_6_fu_266_p2;

assign zext_ln116_fu_200_p1 = tmp_4_fu_192_p3;

always @ (posedge ap_clk) begin
    tmp_4_reg_337[2:0] <= 3'b000;
end

endmodule //BGD_readVec2Stream_float_8u_1
