SLStudio.Utils.RemoveHighlighting(get_param('mux_axi', 'handle'));
SLStudio.Utils.RemoveHighlighting(get_param('gm_mux_axi', 'handle'));
annotate_port('gm_mux_axi/mux_axi/Subsystem1', 1, 1, '');
annotate_port('gm_mux_axi/mux_axi/Multiport Switch', 0, 1, '');
annotate_port('gm_mux_axi/mux_axi/Subsystem1/Detect Fall Nonpositive2', 1, 1, '');
annotate_port('mux_axi/mux_axi/Subsystem1/Detect Fall Nonpositive2', 1, 1, '');
annotate_port('gm_mux_axi/mux_axi/Subsystem1/Detect Rise Positive', 0, 1, '');
annotate_port('gm_mux_axi/mux_axi/Subsystem1/Detect Rise Positive', 1, 1, '');
annotate_port('mux_axi/mux_axi/Subsystem1/Detect Rise Positive', 1, 1, '');
annotate_port('gm_mux_axi/mux_axi/Subsystem1/Delay', 1, 1, '');
annotate_port('mux_axi/mux_axi/Subsystem1/Delay', 1, 1, '');
annotate_port('gm_mux_axi/mux_axi/Subsystem1/PipelineDelay', 1, 1, '');
annotate_port('gm_mux_axi/mux_axi/Subsystem1/PipelineDelay', 1, 1, '');
annotate_port('mux_axi/mux_axi/Subsystem1/PipelineDelay', 1, 1, '');
annotate_port('gm_mux_axi/mux_axi/Subsystem1/Detect Rise Positive/FixPt Relational Operator', 0, 1, '');
annotate_port('gm_mux_axi/mux_axi/Subsystem1/Detect Rise Positive/Positive', 0, 1, '');
