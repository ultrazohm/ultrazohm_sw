// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module BGD_accumulate_float_8u_33 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_values_dout,
        p_values_empty_n,
        p_values_read,
        p_accumulator_address0,
        p_accumulator_ce0,
        p_accumulator_we0,
        p_accumulator_d0,
        p_accumulator_q0,
        p_accumulator_address1,
        p_accumulator_ce1,
        p_accumulator_we1,
        p_accumulator_d1,
        p_accumulator_q1,
        p_size_dout,
        p_size_empty_n,
        p_size_read
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_pp0_stage0 = 10'd2;
parameter    ap_ST_fsm_pp0_stage1 = 10'd4;
parameter    ap_ST_fsm_pp0_stage2 = 10'd8;
parameter    ap_ST_fsm_pp0_stage3 = 10'd16;
parameter    ap_ST_fsm_pp0_stage4 = 10'd32;
parameter    ap_ST_fsm_pp0_stage5 = 10'd64;
parameter    ap_ST_fsm_pp0_stage6 = 10'd128;
parameter    ap_ST_fsm_pp0_stage7 = 10'd256;
parameter    ap_ST_fsm_state18 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [255:0] p_values_dout;
input   p_values_empty_n;
output   p_values_read;
output  [8:0] p_accumulator_address0;
output   p_accumulator_ce0;
output   p_accumulator_we0;
output  [31:0] p_accumulator_d0;
input  [31:0] p_accumulator_q0;
output  [8:0] p_accumulator_address1;
output   p_accumulator_ce1;
output   p_accumulator_we1;
output  [31:0] p_accumulator_d1;
input  [31:0] p_accumulator_q1;
input  [31:0] p_size_dout;
input   p_size_empty_n;
output   p_size_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_values_read;
reg[8:0] p_accumulator_address0;
reg p_accumulator_ce0;
reg p_accumulator_we0;
reg[31:0] p_accumulator_d0;
reg[8:0] p_accumulator_address1;
reg p_accumulator_ce1;
reg p_accumulator_we1;
reg[31:0] p_accumulator_d1;
reg p_size_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_values_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln409_reg_429;
reg    p_size_blk_n;
reg   [28:0] i_reg_183;
wire   [31:0] grp_fu_194_p2;
reg   [31:0] reg_198;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_state16_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_state17_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage4;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state14_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] icmp_ln409_reg_429_pp0_iter1_reg;
reg   [31:0] reg_204;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_state15_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
reg   [28:0] trunc_ln_reg_424;
reg    ap_block_state1;
wire   [0:0] icmp_ln409_fu_219_p2;
wire   [28:0] add_ln409_fu_224_p2;
reg   [28:0] add_ln409_reg_433;
wire   [8:0] tmp_9_fu_234_p3;
reg   [8:0] tmp_9_reg_438;
reg   [8:0] p_accumulator_addr_reg_448;
reg   [8:0] p_accumulator_addr_1_reg_453;
reg   [8:0] p_accumulator_addr_1_reg_453_pp0_iter1_reg;
wire   [31:0] trunc_ln674_fu_258_p1;
reg   [31:0] trunc_ln674_reg_459;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state11_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] p_Result_i_reg_464;
reg   [31:0] p_Result_48_i_reg_469;
reg   [31:0] p_Result_49_i_reg_474;
reg   [31:0] p_Result_50_i_reg_479;
reg   [31:0] p_Result_51_i_reg_484;
reg   [31:0] p_Result_52_i_reg_489;
reg   [31:0] p_Result_53_i_reg_494;
reg   [31:0] p_accumulator_load_reg_499;
reg   [31:0] p_accumulator_load_1_reg_504;
reg   [8:0] p_accumulator_addr_2_reg_509;
reg   [8:0] p_accumulator_addr_2_reg_509_pp0_iter1_reg;
reg   [8:0] p_accumulator_addr_3_reg_515;
reg   [8:0] p_accumulator_addr_3_reg_515_pp0_iter1_reg;
wire   [31:0] bitcast_ln101_fu_352_p1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state12_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] p_accumulator_load_2_reg_526;
reg   [31:0] p_accumulator_load_3_reg_531;
reg   [8:0] p_accumulator_addr_4_reg_536;
reg   [8:0] p_accumulator_addr_4_reg_536_pp0_iter1_reg;
reg   [8:0] p_accumulator_addr_5_reg_542;
reg   [8:0] p_accumulator_addr_5_reg_542_pp0_iter1_reg;
wire   [31:0] bitcast_ln101_44_fu_376_p1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state13_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] p_accumulator_load_4_reg_553;
reg   [31:0] p_accumulator_load_5_reg_558;
reg   [8:0] p_accumulator_addr_6_reg_563;
reg   [8:0] p_accumulator_addr_6_reg_563_pp0_iter1_reg;
reg   [8:0] p_accumulator_addr_7_reg_569;
reg   [8:0] p_accumulator_addr_7_reg_569_pp0_iter1_reg;
wire   [31:0] bitcast_ln101_45_fu_400_p1;
reg   [31:0] p_accumulator_load_6_reg_579;
reg   [31:0] p_accumulator_load_7_reg_584;
wire   [31:0] bitcast_ln101_46_fu_404_p1;
wire   [31:0] bitcast_ln101_47_fu_408_p1;
wire   [31:0] bitcast_ln101_48_fu_412_p1;
wire   [31:0] bitcast_ln101_49_fu_416_p1;
wire   [31:0] bitcast_ln101_50_fu_420_p1;
reg   [31:0] add3_3_i_reg_614;
reg   [31:0] add3_4_i_reg_619;
reg   [31:0] add3_5_i_reg_624;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage7_subdone;
reg   [28:0] ap_phi_mux_i_phi_fu_187_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln416_fu_242_p1;
wire   [63:0] zext_ln416_1_fu_253_p1;
wire   [63:0] zext_ln416_2_fu_337_p1;
wire   [63:0] zext_ln416_3_fu_347_p1;
wire   [63:0] zext_ln416_4_fu_361_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln416_5_fu_371_p1;
wire   [63:0] zext_ln416_6_fu_385_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln416_7_fu_395_p1;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
reg   [31:0] grp_fu_194_p0;
reg   [31:0] grp_fu_194_p1;
wire   [5:0] empty_fu_230_p1;
wire   [8:0] or_ln416_fu_247_p2;
wire   [8:0] or_ln416_1_fu_332_p2;
wire   [8:0] or_ln416_2_fu_342_p2;
wire   [8:0] or_ln416_3_fu_356_p2;
wire   [8:0] or_ln416_4_fu_366_p2;
wire   [8:0] or_ln416_5_fu_380_p2;
wire   [8:0] or_ln416_6_fu_390_p2;
reg    grp_fu_194_ce;
wire    ap_CS_fsm_state18;
reg   [9:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

BGD_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U463(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_194_p0),
    .din1(grp_fu_194_p1),
    .ce(grp_fu_194_ce),
    .dout(grp_fu_194_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((p_size_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((p_size_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_size_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_183 <= 29'd0;
    end else if (((icmp_ln409_reg_429 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_reg_183 <= add_ln409_reg_433;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln409_reg_429_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        add3_3_i_reg_614 <= grp_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln409_reg_429_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        add3_4_i_reg_619 <= grp_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln409_reg_429_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        add3_5_i_reg_624 <= grp_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln409_reg_433 <= add_ln409_fu_224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln409_reg_429 <= icmp_ln409_fu_219_p2;
        icmp_ln409_reg_429_pp0_iter1_reg <= icmp_ln409_reg_429;
        p_accumulator_addr_1_reg_453_pp0_iter1_reg[8 : 3] <= p_accumulator_addr_1_reg_453[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_reg_429 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_Result_48_i_reg_469 <= {{p_values_dout[95:64]}};
        p_Result_49_i_reg_474 <= {{p_values_dout[127:96]}};
        p_Result_50_i_reg_479 <= {{p_values_dout[159:128]}};
        p_Result_51_i_reg_484 <= {{p_values_dout[191:160]}};
        p_Result_52_i_reg_489 <= {{p_values_dout[223:192]}};
        p_Result_53_i_reg_494 <= {{p_values_dout[255:224]}};
        p_Result_i_reg_464 <= {{p_values_dout[63:32]}};
        p_accumulator_addr_2_reg_509[8 : 3] <= zext_ln416_2_fu_337_p1[8 : 3];
        p_accumulator_addr_3_reg_515[8 : 3] <= zext_ln416_3_fu_347_p1[8 : 3];
        trunc_ln674_reg_459 <= trunc_ln674_fu_258_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln409_fu_219_p2 == 1'd0))) begin
        p_accumulator_addr_1_reg_453[8 : 3] <= zext_ln416_1_fu_253_p1[8 : 3];
        p_accumulator_addr_reg_448[8 : 3] <= zext_ln416_fu_242_p1[8 : 3];
        tmp_9_reg_438[8 : 3] <= tmp_9_fu_234_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_accumulator_addr_2_reg_509_pp0_iter1_reg[8 : 3] <= p_accumulator_addr_2_reg_509[8 : 3];
        p_accumulator_addr_3_reg_515_pp0_iter1_reg[8 : 3] <= p_accumulator_addr_3_reg_515[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_reg_429 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_accumulator_addr_4_reg_536[8 : 3] <= zext_ln416_4_fu_361_p1[8 : 3];
        p_accumulator_addr_5_reg_542[8 : 3] <= zext_ln416_5_fu_371_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_accumulator_addr_4_reg_536_pp0_iter1_reg[8 : 3] <= p_accumulator_addr_4_reg_536[8 : 3];
        p_accumulator_addr_5_reg_542_pp0_iter1_reg[8 : 3] <= p_accumulator_addr_5_reg_542[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_reg_429 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_accumulator_addr_6_reg_563[8 : 3] <= zext_ln416_6_fu_385_p1[8 : 3];
        p_accumulator_addr_7_reg_569[8 : 3] <= zext_ln416_7_fu_395_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_accumulator_addr_6_reg_563_pp0_iter1_reg[8 : 3] <= p_accumulator_addr_6_reg_563[8 : 3];
        p_accumulator_addr_7_reg_569_pp0_iter1_reg[8 : 3] <= p_accumulator_addr_7_reg_569[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_reg_429 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_accumulator_load_1_reg_504 <= p_accumulator_q0;
        p_accumulator_load_reg_499 <= p_accumulator_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_reg_429 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_accumulator_load_2_reg_526 <= p_accumulator_q1;
        p_accumulator_load_3_reg_531 <= p_accumulator_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_reg_429 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_accumulator_load_4_reg_553 <= p_accumulator_q1;
        p_accumulator_load_5_reg_558 <= p_accumulator_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_reg_429 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        p_accumulator_load_6_reg_579 <= p_accumulator_q1;
        p_accumulator_load_7_reg_584 <= p_accumulator_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln409_reg_429 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln409_reg_429 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln409_reg_429_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_198 <= grp_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln409_reg_429 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln409_reg_429_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_204 <= grp_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_size_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        trunc_ln_reg_424 <= {{p_size_dout[31:3]}};
    end
end

always @ (*) begin
    if ((icmp_ln409_fu_219_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln409_reg_429 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_phi_fu_187_p4 = add_ln409_reg_433;
    end else begin
        ap_phi_mux_i_phi_fu_187_p4 = i_reg_183;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_194_ce = 1'b1;
    end else begin
        grp_fu_194_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_194_p0 = p_accumulator_load_7_reg_584;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_194_p0 = p_accumulator_load_6_reg_579;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_194_p0 = p_accumulator_load_5_reg_558;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_194_p0 = p_accumulator_load_4_reg_553;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_194_p0 = p_accumulator_load_3_reg_531;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_194_p0 = p_accumulator_load_2_reg_526;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_194_p0 = p_accumulator_load_1_reg_504;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_194_p0 = p_accumulator_load_reg_499;
    end else begin
        grp_fu_194_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_194_p1 = bitcast_ln101_50_fu_420_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_194_p1 = bitcast_ln101_49_fu_416_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_194_p1 = bitcast_ln101_48_fu_412_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_194_p1 = bitcast_ln101_47_fu_408_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_194_p1 = bitcast_ln101_46_fu_404_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_194_p1 = bitcast_ln101_45_fu_400_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_194_p1 = bitcast_ln101_44_fu_376_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_194_p1 = bitcast_ln101_fu_352_p1;
    end else begin
        grp_fu_194_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_accumulator_address0 = p_accumulator_addr_7_reg_569_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_accumulator_address0 = p_accumulator_addr_6_reg_563_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_accumulator_address0 = p_accumulator_addr_4_reg_536_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_accumulator_address0 = p_accumulator_addr_2_reg_509_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_accumulator_address0 = zext_ln416_7_fu_395_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_accumulator_address0 = zext_ln416_5_fu_371_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_accumulator_address0 = zext_ln416_3_fu_347_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_accumulator_address0 = zext_ln416_1_fu_253_p1;
    end else begin
        p_accumulator_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_accumulator_address1 = p_accumulator_addr_5_reg_542_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_accumulator_address1 = p_accumulator_addr_3_reg_515_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_accumulator_address1 = p_accumulator_addr_1_reg_453_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        p_accumulator_address1 = p_accumulator_addr_reg_448;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_accumulator_address1 = zext_ln416_6_fu_385_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_accumulator_address1 = zext_ln416_4_fu_361_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_accumulator_address1 = zext_ln416_2_fu_337_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_accumulator_address1 = zext_ln416_fu_242_p1;
    end else begin
        p_accumulator_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        p_accumulator_ce0 = 1'b1;
    end else begin
        p_accumulator_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        p_accumulator_ce1 = 1'b1;
    end else begin
        p_accumulator_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_accumulator_d0 = reg_198;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_accumulator_d0 = add3_4_i_reg_619;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        p_accumulator_d0 = reg_204;
    end else begin
        p_accumulator_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_accumulator_d1 = add3_5_i_reg_624;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_accumulator_d1 = add3_3_i_reg_614;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        p_accumulator_d1 = reg_198;
    end else begin
        p_accumulator_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln409_reg_429_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln409_reg_429_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln409_reg_429_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln409_reg_429_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        p_accumulator_we0 = 1'b1;
    end else begin
        p_accumulator_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln409_reg_429_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln409_reg_429 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln409_reg_429_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln409_reg_429_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        p_accumulator_we1 = 1'b1;
    end else begin
        p_accumulator_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_size_blk_n = p_size_empty_n;
    end else begin
        p_size_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_size_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_size_read = 1'b1;
    end else begin
        p_size_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln409_reg_429 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_values_blk_n = p_values_empty_n;
    end else begin
        p_values_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln409_reg_429 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_values_read = 1'b1;
    end else begin
        p_values_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_size_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln409_fu_219_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln409_fu_219_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((~((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1)) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln409_fu_224_p2 = (ap_phi_mux_i_phi_fu_187_p4 + 29'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((icmp_ln409_reg_429 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (p_values_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((icmp_ln409_reg_429 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (p_values_empty_n == 1'b0));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((p_size_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((icmp_ln409_reg_429 == 1'd0) & (p_values_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln101_44_fu_376_p1 = p_Result_i_reg_464;

assign bitcast_ln101_45_fu_400_p1 = p_Result_48_i_reg_469;

assign bitcast_ln101_46_fu_404_p1 = p_Result_49_i_reg_474;

assign bitcast_ln101_47_fu_408_p1 = p_Result_50_i_reg_479;

assign bitcast_ln101_48_fu_412_p1 = p_Result_51_i_reg_484;

assign bitcast_ln101_49_fu_416_p1 = p_Result_52_i_reg_489;

assign bitcast_ln101_50_fu_420_p1 = p_Result_53_i_reg_494;

assign bitcast_ln101_fu_352_p1 = trunc_ln674_reg_459;

assign empty_fu_230_p1 = ap_phi_mux_i_phi_fu_187_p4[5:0];

assign icmp_ln409_fu_219_p2 = ((ap_phi_mux_i_phi_fu_187_p4 == trunc_ln_reg_424) ? 1'b1 : 1'b0);

assign or_ln416_1_fu_332_p2 = (tmp_9_reg_438 | 9'd2);

assign or_ln416_2_fu_342_p2 = (tmp_9_reg_438 | 9'd3);

assign or_ln416_3_fu_356_p2 = (tmp_9_reg_438 | 9'd4);

assign or_ln416_4_fu_366_p2 = (tmp_9_reg_438 | 9'd5);

assign or_ln416_5_fu_380_p2 = (tmp_9_reg_438 | 9'd6);

assign or_ln416_6_fu_390_p2 = (tmp_9_reg_438 | 9'd7);

assign or_ln416_fu_247_p2 = (tmp_9_fu_234_p3 | 9'd1);

assign tmp_9_fu_234_p3 = {{empty_fu_230_p1}, {3'd0}};

assign trunc_ln674_fu_258_p1 = p_values_dout[31:0];

assign zext_ln416_1_fu_253_p1 = or_ln416_fu_247_p2;

assign zext_ln416_2_fu_337_p1 = or_ln416_1_fu_332_p2;

assign zext_ln416_3_fu_347_p1 = or_ln416_2_fu_342_p2;

assign zext_ln416_4_fu_361_p1 = or_ln416_3_fu_356_p2;

assign zext_ln416_5_fu_371_p1 = or_ln416_4_fu_366_p2;

assign zext_ln416_6_fu_385_p1 = or_ln416_5_fu_380_p2;

assign zext_ln416_7_fu_395_p1 = or_ln416_6_fu_390_p2;

assign zext_ln416_fu_242_p1 = tmp_9_fu_234_p3;

always @ (posedge ap_clk) begin
    tmp_9_reg_438[2:0] <= 3'b000;
    p_accumulator_addr_reg_448[2:0] <= 3'b000;
    p_accumulator_addr_1_reg_453[2:0] <= 3'b001;
    p_accumulator_addr_1_reg_453_pp0_iter1_reg[2:0] <= 3'b001;
    p_accumulator_addr_2_reg_509[2:0] <= 3'b010;
    p_accumulator_addr_2_reg_509_pp0_iter1_reg[2:0] <= 3'b010;
    p_accumulator_addr_3_reg_515[2:0] <= 3'b011;
    p_accumulator_addr_3_reg_515_pp0_iter1_reg[2:0] <= 3'b011;
    p_accumulator_addr_4_reg_536[2:0] <= 3'b100;
    p_accumulator_addr_4_reg_536_pp0_iter1_reg[2:0] <= 3'b100;
    p_accumulator_addr_5_reg_542[2:0] <= 3'b101;
    p_accumulator_addr_5_reg_542_pp0_iter1_reg[2:0] <= 3'b101;
    p_accumulator_addr_6_reg_563[2:0] <= 3'b110;
    p_accumulator_addr_6_reg_563_pp0_iter1_reg[2:0] <= 3'b110;
    p_accumulator_addr_7_reg_569[2:0] <= 3'b111;
    p_accumulator_addr_7_reg_569_pp0_iter1_reg[2:0] <= 3'b111;
end

endmodule //BGD_accumulate_float_8u_33
