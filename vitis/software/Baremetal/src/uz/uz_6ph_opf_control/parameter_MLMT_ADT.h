#ifndef PARAMETER_MLMT_ADT_H
#define PARAMETER_MLMT_ADT_H



/*
header-file for the parameter of ML- and MT-Control strategy for
open phase faults in asymmetric dual three-phase machines
*/


struct kparameter{
    float k1;
    float k2;
    float k3;
    float k4;
    float k5;
    float k6;
    float k7;
    float k8;
};

typedef struct kparameter kparameter;

int get_index_OPF_2(int p1, int p2);
int get_index_OPF_3(int p1, int p2, int p3);
kparameter get_k_parameter(int p1, int p2, int p3, int num_OPF, int N1N2, int ML, float* a, int* error);


//////////////////////////////////////////////////////////////////////////////////////////////////////
const kparameter k_1OPF_2N_ML[6] = {
	{ -1.000000 , 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ -0.250000 , 0.433010, -0.433010, 0.750000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ -0.250000 , -0.433010, 0.433010, 0.750000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 0.750000 , 0.433010, -0.433010, -0.250000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 0.750000 , -0.433010, 0.433010, -0.250000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 0.000000 , 0.000000, 0.000000, -1.000000, 0.000000, 0.000000, 0.000000, 0.000000 }
};
const float a_1OPF_2N_ML[6] = { 0.554700, 0.554700, 0.554700, 0.554700, 0.554700, 0.554700};


const kparameter k_1OPF_2N_MT[6] = {
	{ -1.000000 , 0.000000, 0.000000, -1.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 0.500000 , 0.866030, -0.866030, 0.500000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 0.500000 , -0.866030, 0.866030, 0.500000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 0.500000 , 0.866030, -0.866030, 0.500000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 0.500000 , -0.866030, 0.866030, 0.500000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ -1.000000 , 0.000000, 0.000000, -1.000000, 0.000000, 0.000000, 0.000000, 0.000000 }
};
const float a_1OPF_2N_MT[6] = { 0.577350, 0.577350, 0.577350, 0.577350, 0.577350, 0.577350};


const kparameter k_2OPF_2N[15] = {
	{ -1.000000 , 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ -1.000000 , 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ -1.000000 , 0.000000, -3.464100, -1.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ -1.000000 , 0.000000, 3.464100, -1.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ -1.000000 , 0.000000, 0.000000, -1.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ -1.000000 , 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 0.500000 , 0.866030, -0.866030, 0.500000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 2.000000 , -1.732050, -1.732050, 2.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ -1.000000 , 3.464100, 0.000000, -1.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 2.000000 , 1.732050, 1.732050, 2.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 0.500000 , -0.866030, 0.866030, 0.500000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ -1.000000 , -3.464100, 0.000000, -1.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 1.000000 , 0.000000, 0.000000, -1.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 1.000000 , 0.000000, 0.000000, -1.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 1.000000 , 0.000000, 0.000000, -1.000000, 0.000000, 0.000000, 0.000000, 0.000000 }
};
const float a_2OPF_2N[15] = { 0.500000, 0.500000, 0.288675, 0.288675, 0.577351, 0.500000, 0.577350, 0.288675, 0.288675, 0.288675, 0.577350, 0.288675, 0.500000, 0.500001, 0.500000};


const kparameter k_3OPF_2N[2] = {
	{ -1.000000 , 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 0.999990 , 0.000000, 0.000000, -0.999990, 0.000000, 0.000000, 0.000000, 0.000000 }
};
const float a_3OPF_2N[2] = { 0.500000, 0.500001};


const kparameter k_1OPF_1N_ML[6] = {
	{ -0.666820 , 0.000480, -0.002870, -0.001440, -0.333180, -0.000480, 0.333180, 0.000480 },
	{ -0.166450 , 0.289070, -0.289170, 0.499500, 0.166350, -0.288910, -0.166350, 0.288910 },
	{ -0.166580 , -0.288880, 0.288640, 0.500000, 0.166740, 0.288570, -0.166740, -0.288570 },
	{ 0.500190 , 0.289220, -0.287740, -0.166980, 0.288980, 0.166040, -0.288980, -0.166040 },
	{ 0.499690 , -0.288170, 0.288310, -0.167820, -0.289120, 0.166530, 0.289120, -0.166530 },
	{ 0.003220 , -0.001720, -0.004520, -0.669750, 0.004520, -0.330250, -0.004520, 0.330250 }
};
const float a_1OPF_1N_ML[6] = { 0.542257, 0.541780, 0.541819, 0.541659, 0.541670, 0.542072};


const kparameter k_2OPF_1N_ML[15] = {
	{ -0.833480 , 0.288740, -0.288420, 0.499890, -0.166520, -0.288740, 0.166520, 0.288740 },
	{ -0.833420 , -0.288700, 0.288520, 0.499960, -0.166580, 0.288700, 0.166580, -0.288700 },
	{ -0.992460 , -0.090120, -3.466120, -0.975850, -0.007540, 0.090120, 0.007540, -0.090120 },
	{ -0.177490 , -0.220420, 0.394440, -0.177390, -0.822510, 0.220420, 0.822510, -0.220420 },
	{ -0.749680 , 0.250970, 0.250320, -0.749030, -0.250320, -0.250970, 0.250320, 0.250970 },
	{ -0.333390 , 0.000260, 0.000000, 1.000000, 0.333300, 0.000130, -0.333300, -0.000130 },
	{ 0.374730 , 0.899330, -0.398500, 0.375710, 0.342250, -0.090980, -0.342250, 0.090980 },
	{ 1.952220 , -1.793020, -1.779830, 1.939030, -0.065260, -0.083280, 0.065260, 0.083280 },
	{ -0.176870 , 0.393700, -0.220560, -0.177290, 0.220560, -0.822710, -0.220560, 0.822710 },
	{ 0.354510 , 0.086410, 0.086560, 0.354360, 0.602290, 0.602340, -0.602290, -0.602340 },
	{ 0.375200 , -0.398800, 0.899460, 0.374810, -0.091360, 0.342030, 0.091360, -0.342030 },
	{ -0.976640 , -3.472780, -0.087200, -0.967620, 0.087200, -0.032380, -0.087200, 0.032380 },
	{ 1.000000 , 0.000000, 0.000000, -0.333360, 0.000000, 0.333320, 0.000000, -0.333320 },
	{ 0.500030 , 0.289060, -0.288660, -0.833110, 0.288660, -0.166890, -0.288660, 0.166890 },
	{ 0.499400 , -0.288760, 0.289020, -0.833280, -0.289020, -0.166720, 0.289020, 0.166720 }
};
const float a_2OPF_1N_ML[15] = { 0.493160, 0.493219, 0.284537, 0.481952, 0.526924, 0.493167, 0.526942, 0.284383, 0.482021, 0.482049, 0.527005, 0.285153, 0.493198, 0.493145, 0.493153};


const kparameter k_1OPF_1N_MT[6] = {
	{ -0.641110 , -0.208910, -0.754240, -0.295480, -0.358890, 0.208910, 0.358890, -0.208910 },
	{ 0.297470 , -0.212340, -0.750800, 0.643090, -0.001470, -0.415260, 0.001470, 0.415260 },
	{ -0.174810 , -1.023460, 0.060320, 0.170830, 0.360360, 0.206350, -0.360360, -0.206350 },
	{ 0.170830 , 0.060320, -1.023460, -0.174800, 0.206350, 0.360360, -0.206350, -0.360360 },
	{ 0.643150 , -0.750600, -0.212220, 0.297360, -0.415160, -0.001360, 0.415160, 0.001360 },
	{ -0.295480 , -0.754230, -0.208900, -0.641110, 0.208900, -0.358890, -0.208900, 0.358890 }
};
const float a_1OPF_1N_MT[6] = { 0.694444, 0.694443, 0.694444, 0.694444, 0.694398, 0.694444};


const kparameter k_2OPF_1N_MT[15] = {
	{ -0.535290 , 0.268580, -0.804910, 0.534810, -0.464710, -0.268580, 0.464720, 0.268570 },
	{ -1.000200 , -0.534990, -0.000340, 0.073370, 0.000200, 0.534990, -0.000200, -0.534990 },
	{ -1.000000 , 0.000000, -3.464100, -1.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 0.000000 , -0.267950, -0.267940, 0.000000, -1.000000, 0.267950, 1.000000, -0.267950 },
	{ -1.000000 , 0.000000, 0.000000, -1.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ -0.078840 , -0.533980, 0.000000, 1.000000, 0.460580, -0.266990, -0.460580, 0.266990 },
	{ 0.500000 , 0.866030, -0.866030, 0.500000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 2.000000 , -1.732050, -1.732050, 2.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 0.000000 , -0.267950, -0.267950, 0.000000, 0.267950, -1.000000, -0.267950, 1.000000 },
	{ 0.000000 , -0.267940, -0.267950, 0.000000, 0.732050, 0.732050, -0.732050, -0.732050 },
	{ 0.500000 , -0.866030, 0.866030, 0.500000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ -1.000000 , -3.464100, 0.000000, -1.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 1.000000 , 0.000000, -0.534990, -0.075160, -0.267500, 0.462420, 0.267500, -0.462420 },
	{ 0.071860 , 0.000000, -0.535860, -1.000000, 0.535860, 0.000000, -0.535860, 0.000000 },
	{ 0.543660 , -0.796040, 0.263470, -0.540410, -0.263470, -0.459590, 0.263470, 0.459590 }
};
const float a_2OPF_1N_MT[15] = { 0.557675, 0.557664, 0.288675, 0.557676, 0.577350, 0.557672, 0.577350, 0.288675, 0.557677, 0.557677, 0.577350, 0.288675, 0.557677, 0.557675, 0.557668};


const kparameter k_3OPF_1N[20] = {
	{ -1.000000 , 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 1.365510 , 1.365740, -4.097200, -1.365590, -2.365420, -1.365740, 2.365220, 1.365630 },
	{ 0.732050 , -1.000000, -2.999990, 2.732040, -1.732050, 0.999990, 1.732050, -1.000000 },
	{ -1.000000 , 0.732050, 0.000000, -0.267950, 0.000000, -0.732050, 0.000000, 0.732050 },
	{ -2.732040 , -1.000000, -2.999980, -0.732050, 1.732040, 1.000000, -1.732050, -1.000000 },
	{ -0.366020 , -0.366030, 1.098080, 0.366020, -0.633980, 0.366030, 0.633970, -0.366020 },
	{ -1.000010 , -2.731990, 0.000000, -3.731940, 0.000000, 2.731990, 0.000000, -2.731950 },
	{ 1.000000 , 0.000000, -4.000000, -0.999950, -2.000000, 0.000020, 2.000000, -0.000030 },
	{ -3.731980 , -0.000230, -2.732010, -1.000130, 2.731990, 0.000220, -2.732010, -0.000140 },
	{ -0.267950 , 0.000000, 0.732050, -1.000000, -0.732050, 0.000000, 0.732050, 0.000000 },
	{ 0.267950 , 0.732050, 0.000000, 1.000000, 0.633980, 0.366030, -0.633970, -0.366020 },
	{ 3.731970 , -2.732010, 0.000000, 1.000000, 2.365980, -1.366000, -2.365960, 1.366000 },
	{ -0.999990 , -4.000000, 0.000000, 1.000000, 0.000000, -2.000000, 0.000000, 2.000000 },
	{ 1.000010 , 0.000010, -2.732010, 3.731960, -1.365990, 2.365970, 1.366000, -2.365990 },
	{ 0.366030 , 1.098080, -0.366020, -0.366020, 0.366030, -0.633970, -0.366030, 0.633970 },
	{ 2.732040 , -2.999990, -0.999990, 0.732050, 1.000000, -1.732050, -0.999990, 1.732050 },
	{ 1.000000 , 0.000000, 0.732050, 0.267950, 0.366020, 0.633970, -0.366030, -0.633970 },
	{ -0.732070 , -2.999950, -1.000010, -2.732020, 1.000000, 1.732040, -1.000010, -1.732020 },
	{ -1.366010 , -4.098050, 1.366020, 1.366010, -1.366010, -2.366000, 1.366020, 2.366010 },
	{ 1.000000 , 0.000000, 0.000000, -1.000000, 0.000000, 0.000000, 0.000000, 0.000000 }
};
const float a_3OPF_1N[20] = { 0.500000, 0.122035, 0.149430, 0.408248, 0.149430, 0.408249, 0.122011, 0.149430, 0.122010, 0.408249, 0.408249, 0.122011, 0.149429, 0.122011, 0.408248, 0.149430, 0.408249, 0.149430, 0.122009, 0.500000};






///////////////////////////////////////////////////////////

kparameter get_k_parameter(int p1, int p2, int p3, int num_OPF, int N1N2, int ML, float* a, int* error){

//check input values
kparameter k = {0};
int i = 0;
*error = 0;

// check parameter:

if(num_OPF == 0){
	*a = 1.0f;
	return k;
}

if(N1N2 == 2){
    if(num_OPF == 1){
            if(ML){
                k = k_1OPF_2N_ML[p1-1];
                *a = a_1OPF_2N_ML[p1-1];
            }
            else{   //MT
                k = k_1OPF_2N_MT[p1-1];
                *a = a_1OPF_2N_MT[p1-1];
            }
    }
    else if(num_OPF == 2){
    	i = get_index_OPF_2(p1, p2);
        k = k_2OPF_2N[i];
        *a = a_2OPF_2N[i];
    }
    else if(num_OPF == 3){
        if( (p1 == 1) && (p2 == 2) && (p3 == 3) ){
            k = k_3OPF_2N[0];
            *a = a_3OPF_2N[0];
        }
        else if( (p1 == 4) && (p2 == 5) && (p3 == 6) ){
            k = k_3OPF_2N[1];
            *a = a_3OPF_2N[1];
        }
    }
    else{
        //error
    	*error = -1;
    }
}
else if( N1N2 ==1){
    if( num_OPF == 1){
            if(ML){
                k = k_1OPF_1N_ML[p1-1];
                *a = a_1OPF_1N_ML[p1-1];
            }
            else{   //MT
                k = k_1OPF_1N_MT[p1-1];
                *a = a_1OPF_1N_MT[p1-1];
            }
    }
    else if(num_OPF == 2){
            if(ML){
            	i =get_index_OPF_2(p1, p2);
                k = k_2OPF_1N_ML[i];
                *a = a_2OPF_1N_ML[i];
            }
            else{   //MT
            	i = get_index_OPF_2(p1, p2);
                k = k_2OPF_1N_MT[i];
                *a = a_2OPF_1N_MT[i];
            }
    }
    else if(num_OPF == 3){
    			i = get_index_OPF_3(p1,p2,p3);
                k = k_3OPF_1N[i];
                *a = a_3OPF_1N[i];
    }
    else{
        //error
    	*error = -1;
    }
}
return k;
}


int get_index_OPF_2(int p1, int p2){
    int index = 0;

        if(p1 == 1){
             if(p2 == 2){
                    index = 0;   // 1-2
            }
            else if (p2 == 3){
                    index = 1;   // 1-3
            }
            else if(p2 == 4){
                    index = 2;   // 1-4
            }
            else if(p2 == 5){
                    index = 3;   // 1-5
            }
            else if(p2 == 6){
                    index = 4;   // 1-6
            }
        }
        else if(p1 == 2){
            if(p2 == 3){
                    index = 5;   // 2-3
            }
            else if(p2 == 4){
                    index = 6;   // 2-4
            }
            else if(p2 == 5){
                    index = 7;   // 2-5
            }
            else if(p2 == 6){
                    index = 8;   // 2-6
            }
        }
        else if(p1 == 3){
            if(p2 == 4){
                    index = 9;   // 3-4
            }
            else if(p2 == 5){
                    index = 10;  // 3-5
            }
            else if (p2 == 6){
                    index = 11;  // 3-6
            }
        }
        else if(p1 == 4){
            if(p2 == 5){
                    index = 12;  // 4-5
            }
            else if(p2 == 6){
                    index = 13;  // 4-6
            }
        }
        else if (p1 == 5 && p2 == 6){   // 5-6
                    index = 14;
        }
    return index;
}

int get_index_OPF_3(int p1, int p2, int p3){
    int index = 0;

        if(p1 == 1){
             if(p2 == 2){
                    if(p3 == 3){
                            index = 0;   // 1-2-3
                    }
                    else if(p3 == 4){
                            index = 1;   // 1-2-4
                    }
                    else if(p3 == 5){
                            index = 2;   // 1-2-5
                    }
                    else if(p3 == 6){
                            index = 3;   // 1-2-6
                    }
            }
            else if (p2 == 3){
                    if(p3 == 4){
                            index = 4;   // 1-3-4
                    }
                    else if(p3 == 5){
                            index = 5;   // 1-3-5
                    }
                    else if(p3 == 6){
                            index = 6;   // 1-3-6
                    }
            }
            else if(p2 == 4){
                    if(p3 == 5){
                            index = 7;   // 1-4-5
                    }
                    else if(p3 == 6){
                            index = 8;   // 1-4-6
                    }
            }
            else if((p2 == 5) && (p3 == 6)){
                            index = 9;  // 1-5-6
            }
        }
        else if(p1 == 2){
            if(p2 == 3){
                    if(p3 == 4){
                            index = 10;   // 2-3-4
                    }
                    else if(p3 == 5){
                            index = 11;   // 2-3-5
                    }
                    else if(p3 == 6){
                            index = 12;   // 2-3-6
                    }
            }
            else if(p2 == 4){
                    if(p3 == 5){
                            index = 13;   // 2-4-5
                    }
                    else if(p3 == 6){
                            index = 14;   // 2-4-6
                    }
            }
            else if((p2 == 5)&& (p3 == 6) ){
                            index = 15;   // 2-5-6
            }
        }
        else if(p1 == 3){
            if(p2 == 4){
                    if(p3 == 5){
                            index = 16;  // 3-4-5
                    }
                    else if (p3 == 6){
                            index = 17;  // 3-4-6
                    }
            }
            else if((p2 == 5) && (p3 == 6) ){
                            index = 18;  // 3-5-6
            }
        }
        else if((p1 == 4) && (p2 == 5) && (p3 == 6) ) {
            if(p2 == 5){
                            index = 19;  // 4-5-6
            }
        }
    return index;
}
#endif // PARAMETER_MLMT_ADT_H
