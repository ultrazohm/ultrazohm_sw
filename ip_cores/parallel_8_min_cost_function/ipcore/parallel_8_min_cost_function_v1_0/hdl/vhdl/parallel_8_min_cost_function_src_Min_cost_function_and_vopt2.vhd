-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\parallel_8_min_cost_function\hdlsrc\parallel_8_min_cost_function\parallel_8_min_cost_function_src_Min_cost_function_and_vopt2.vhd
-- Created: 2022-10-20 09:10:52
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-08
-- Target subsystem base rate: 1e-08
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- done                          ce_out        1e-08
-- done_complete                 ce_out        1e-08
-- J_AXI                         ce_out        1e-08
-- Index                         ce_out        1e-08
-- voltages_0                    ce_out        1e-08
-- voltages_1                    ce_out        1e-08
-- voltages_2                    ce_out        1e-08
-- voltages_3                    ce_out        1e-08
-- Index_AXI                     ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: parallel_8_min_cost_function_src_Min_cost_function_and_vopt2
-- Source Path: parallel_8_min_cost_function/Min_cost_function_and_vopt2
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.parallel_8_min_cost_function_src_Min_cost_function_and_vopt2_pkg.ALL;

ENTITY parallel_8_min_cost_function_src_Min_cost_function_and_vopt2 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        Index_in                          :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        valid_in                          :   IN    std_logic;
        J_in_0                            :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        J_in_1                            :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        J_in_2                            :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        J_in_3                            :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        J_in_4                            :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        J_in_5                            :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        J_in_6                            :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        J_in_7                            :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        phase_voltages_per_switching_state_in_0 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_1 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_2 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_3 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_4 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_5 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_6 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_7 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_8 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_9 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_10 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_11 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_12 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_13 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_14 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_15 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_16 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_17 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_18 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_19 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_20 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_21 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_22 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_23 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_24 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_25 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_26 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_27 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_28 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_29 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_30 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        phase_voltages_per_switching_state_in_31 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        ce_out                            :   OUT   std_logic;
        done                              :   OUT   std_logic;
        done_complete                     :   OUT   std_logic;
        J_AXI                             :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
        Index                             :   OUT   std_logic_vector(31 DOWNTO 0);  -- int32
        voltages_0                        :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        voltages_1                        :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        voltages_2                        :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        voltages_3                        :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
        Index_AXI                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- int32
        );
END parallel_8_min_cost_function_src_Min_cost_function_and_vopt2;


ARCHITECTURE rtl OF parallel_8_min_cost_function_src_Min_cost_function_and_vopt2 IS

  -- Component Declarations
  COMPONENT parallel_8_min_cost_function_src_Detect_Rise_Positive
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          U                               :   IN    std_logic;
          Y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT parallel_8_min_cost_function_src_Compare_To_Constant
    PORT( u                               :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT parallel_8_min_cost_function_src_Compare_To_Constant1
    PORT( u                               :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33
          y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT parallel_8_min_cost_function_src_Compare_To_Constant2
    PORT( u                               :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33
          y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT parallel_8_min_cost_function_src_Compare_To_Constant3
    PORT( u                               :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33
          y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT parallel_8_min_cost_function_src_Compare_To_Constant4
    PORT( u                               :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33
          y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT parallel_8_min_cost_function_src_Compare_To_Constant5
    PORT( u                               :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33
          y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT parallel_8_min_cost_function_src_Compare_To_Constant6
    PORT( u                               :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33
          y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT parallel_8_min_cost_function_src_Compare_To_Constant7
    PORT( u                               :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33
          y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT parallel_8_min_cost_function_src_Detect_Rise_Positive1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          U                               :   IN    std_logic;
          Y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT parallel_8_min_cost_function_src_MATLAB_Function
    PORT( J_1                             :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
          Index_1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          voltages_1                      :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
          J_2                             :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
          Index_2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          voltages_2                      :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
          J_3                             :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
          Index_3                         :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          voltages_3                      :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
          J_4                             :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
          Index_4                         :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          voltages_4                      :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
          J_5                             :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
          Index_5                         :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          voltages_5                      :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
          J_6                             :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
          Index_6                         :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          voltages_6                      :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
          J_7                             :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
          Index_7                         :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          voltages_7                      :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
          J_8                             :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
          Index_8                         :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          voltages_8                      :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
          min                             :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
          J_default                       :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
          voltages_default                :   IN    vector_of_std_logic_vector24(0 TO 3);  -- sfix24_En11 [4]
          J                               :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En11
          Index                           :   OUT   std_logic_vector(31 DOWNTO 0);  -- int32
          voltages                        :   OUT   vector_of_std_logic_vector24(0 TO 3)  -- sfix24_En11 [4]
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : parallel_8_min_cost_function_src_Detect_Rise_Positive
    USE ENTITY work.parallel_8_min_cost_function_src_Detect_Rise_Positive(rtl);

  FOR ALL : parallel_8_min_cost_function_src_Compare_To_Constant
    USE ENTITY work.parallel_8_min_cost_function_src_Compare_To_Constant(rtl);

  FOR ALL : parallel_8_min_cost_function_src_Compare_To_Constant1
    USE ENTITY work.parallel_8_min_cost_function_src_Compare_To_Constant1(rtl);

  FOR ALL : parallel_8_min_cost_function_src_Compare_To_Constant2
    USE ENTITY work.parallel_8_min_cost_function_src_Compare_To_Constant2(rtl);

  FOR ALL : parallel_8_min_cost_function_src_Compare_To_Constant3
    USE ENTITY work.parallel_8_min_cost_function_src_Compare_To_Constant3(rtl);

  FOR ALL : parallel_8_min_cost_function_src_Compare_To_Constant4
    USE ENTITY work.parallel_8_min_cost_function_src_Compare_To_Constant4(rtl);

  FOR ALL : parallel_8_min_cost_function_src_Compare_To_Constant5
    USE ENTITY work.parallel_8_min_cost_function_src_Compare_To_Constant5(rtl);

  FOR ALL : parallel_8_min_cost_function_src_Compare_To_Constant6
    USE ENTITY work.parallel_8_min_cost_function_src_Compare_To_Constant6(rtl);

  FOR ALL : parallel_8_min_cost_function_src_Compare_To_Constant7
    USE ENTITY work.parallel_8_min_cost_function_src_Compare_To_Constant7(rtl);

  FOR ALL : parallel_8_min_cost_function_src_Detect_Rise_Positive1
    USE ENTITY work.parallel_8_min_cost_function_src_Detect_Rise_Positive1(rtl);

  FOR ALL : parallel_8_min_cost_function_src_MATLAB_Function
    USE ENTITY work.parallel_8_min_cost_function_src_MATLAB_Function(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL Constant1_out1                   : signed(31 DOWNTO 0);  -- int32
  SIGNAL End_Cycle                        : std_logic;
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL Index_in_signed                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL Switch_on1_out1                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL Delay18_out1                     : signed(31 DOWNTO 0);  -- int32
  SIGNAL Relational_Operator1_relop1      : std_logic;
  SIGNAL End_Cycle_1                      : std_logic;
  SIGNAL Logical_Operator_out1            : std_logic;
  SIGNAL switch_compare_1_1               : std_logic;
  SIGNAL Constant2_out1                   : std_logic;
  SIGNAL Switch7_out1                     : std_logic;
  SIGNAL switch_compare_1_2               : std_logic;
  SIGNAL End_Cycle_2                      : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Switch_on4_out1                  : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay17_out1                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Compare_To_Constant_out1         : std_logic;
  SIGNAL switch_compare_1_3               : std_logic;
  SIGNAL Constant_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay_out1                       : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Switch_out1                      : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Relational_Operator_relop1       : std_logic;
  SIGNAL switch_compare_1_4               : std_logic;
  SIGNAL Switch1_out1                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_5               : std_logic;
  SIGNAL Switch2_out1                     : signed(31 DOWNTO 0);  -- int32
  SIGNAL Delay1_out1                      : signed(31 DOWNTO 0);  -- int32
  SIGNAL switch_compare_1_6               : std_logic;
  SIGNAL switch_compare_1_7               : std_logic;
  SIGNAL End_Cycle_3                      : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on2_out1                  : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay19_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch3_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay2_out1                      : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_8               : std_logic;
  SIGNAL switch_compare_1_9               : std_logic;
  SIGNAL End_Cycle_4                      : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on3_out1                  : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay20_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch4_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay3_out1                      : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_10              : std_logic;
  SIGNAL switch_compare_1_11              : std_logic;
  SIGNAL End_Cycle_5                      : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on5_out1                  : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay21_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch5_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay4_out1                      : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_12              : std_logic;
  SIGNAL switch_compare_1_13              : std_logic;
  SIGNAL End_Cycle_6                      : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on6_out1                  : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay22_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch6_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay5_out1                      : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Mux_out1                         : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL Mux_out1_1                       : vector_of_std_logic_vector24(0 TO 3);  -- ufix24 [4]
  SIGNAL switch_compare_1_14              : std_logic;
  SIGNAL End_Cycle_7                      : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Switch_on10_out1                 : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay34_out1                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_15              : std_logic;
  SIGNAL Constant18_out1                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL Add_out1                         : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Switch_on7_out1                  : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Delay35_out1                     : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Compare_To_Constant1_out1        : std_logic;
  SIGNAL switch_compare_1_16              : std_logic;
  SIGNAL Constant3_out1                   : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay25_out1                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Switch8_out1                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Relational_Operator2_relop1      : std_logic;
  SIGNAL switch_compare_1_17              : std_logic;
  SIGNAL Switch9_out1                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_18              : std_logic;
  SIGNAL Switch_on7_out1_dtc              : signed(31 DOWNTO 0);  -- int32
  SIGNAL Switch10_out1                    : signed(31 DOWNTO 0);  -- int32
  SIGNAL Delay26_out1                     : signed(31 DOWNTO 0);  -- int32
  SIGNAL switch_compare_1_19              : std_logic;
  SIGNAL switch_compare_1_20              : std_logic;
  SIGNAL End_Cycle_8                      : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on8_out1                  : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay36_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch11_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay37_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_21              : std_logic;
  SIGNAL switch_compare_1_22              : std_logic;
  SIGNAL End_Cycle_9                      : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on9_out1                  : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay38_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch12_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay41_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_23              : std_logic;
  SIGNAL switch_compare_1_24              : std_logic;
  SIGNAL End_Cycle_10                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on11_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay39_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch13_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay42_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_25              : std_logic;
  SIGNAL switch_compare_1_26              : std_logic;
  SIGNAL End_Cycle_11                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on12_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay40_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch14_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay43_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Mux1_out1                        : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL Mux1_out1_1                      : vector_of_std_logic_vector24(0 TO 3);  -- ufix24 [4]
  SIGNAL switch_compare_1_27              : std_logic;
  SIGNAL End_Cycle_12                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Switch_on14_out1                 : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay58_out1                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_28              : std_logic;
  SIGNAL Constant19_out1                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL Add1_out1                        : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Switch_on17_out1                 : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Delay59_out1                     : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Compare_To_Constant2_out1        : std_logic;
  SIGNAL switch_compare_1_29              : std_logic;
  SIGNAL Constant4_out1                   : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay49_out1                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Switch20_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Relational_Operator3_relop1      : std_logic;
  SIGNAL switch_compare_1_30              : std_logic;
  SIGNAL Switch21_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_31              : std_logic;
  SIGNAL Switch_on17_out1_dtc             : signed(31 DOWNTO 0);  -- int32
  SIGNAL Switch15_out1                    : signed(31 DOWNTO 0);  -- int32
  SIGNAL Delay50_out1                     : signed(31 DOWNTO 0);  -- int32
  SIGNAL switch_compare_1_32              : std_logic;
  SIGNAL switch_compare_1_33              : std_logic;
  SIGNAL End_Cycle_13                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on18_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay60_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch16_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay61_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_34              : std_logic;
  SIGNAL switch_compare_1_35              : std_logic;
  SIGNAL End_Cycle_14                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on19_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay62_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch17_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay65_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_36              : std_logic;
  SIGNAL switch_compare_1_37              : std_logic;
  SIGNAL End_Cycle_15                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on15_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay63_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch18_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay66_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_38              : std_logic;
  SIGNAL switch_compare_1_39              : std_logic;
  SIGNAL End_Cycle_16                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on16_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay64_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch19_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay67_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Mux2_out1                        : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL Mux2_out1_1                      : vector_of_std_logic_vector24(0 TO 3);  -- ufix24 [4]
  SIGNAL switch_compare_1_40              : std_logic;
  SIGNAL End_Cycle_17                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Switch_on20_out1                 : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay81_out1                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_41              : std_logic;
  SIGNAL Constant20_out1                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL Add2_out1                        : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Switch_on23_out1                 : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Delay82_out1                     : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Compare_To_Constant3_out1        : std_logic;
  SIGNAL switch_compare_1_42              : std_logic;
  SIGNAL Constant5_out1                   : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay72_out1                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Switch27_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Relational_Operator4_relop1      : std_logic;
  SIGNAL switch_compare_1_43              : std_logic;
  SIGNAL Switch28_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_44              : std_logic;
  SIGNAL Switch_on23_out1_dtc             : signed(31 DOWNTO 0);  -- int32
  SIGNAL Switch22_out1                    : signed(31 DOWNTO 0);  -- int32
  SIGNAL Delay73_out1                     : signed(31 DOWNTO 0);  -- int32
  SIGNAL switch_compare_1_45              : std_logic;
  SIGNAL switch_compare_1_46              : std_logic;
  SIGNAL End_Cycle_18                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on24_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay83_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch23_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay84_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_47              : std_logic;
  SIGNAL switch_compare_1_48              : std_logic;
  SIGNAL End_Cycle_19                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on25_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay85_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch24_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay88_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_49              : std_logic;
  SIGNAL switch_compare_1_50              : std_logic;
  SIGNAL End_Cycle_20                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on21_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay86_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch25_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay89_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_51              : std_logic;
  SIGNAL switch_compare_1_52              : std_logic;
  SIGNAL End_Cycle_21                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on22_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay87_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch26_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay90_out1                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Mux3_out1                        : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL Mux3_out1_1                      : vector_of_std_logic_vector24(0 TO 3);  -- ufix24 [4]
  SIGNAL switch_compare_1_53              : std_logic;
  SIGNAL End_Cycle_22                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Switch_on26_out1                 : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay104_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_54              : std_logic;
  SIGNAL Constant21_out1                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL Add3_out1                        : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Switch_on29_out1                 : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Delay105_out1                    : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Compare_To_Constant4_out1        : std_logic;
  SIGNAL switch_compare_1_55              : std_logic;
  SIGNAL Constant6_out1                   : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay95_out1                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Switch34_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Relational_Operator5_relop1      : std_logic;
  SIGNAL switch_compare_1_56              : std_logic;
  SIGNAL Switch35_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_57              : std_logic;
  SIGNAL Switch_on29_out1_dtc             : signed(31 DOWNTO 0);  -- int32
  SIGNAL Switch29_out1                    : signed(31 DOWNTO 0);  -- int32
  SIGNAL Delay96_out1                     : signed(31 DOWNTO 0);  -- int32
  SIGNAL switch_compare_1_58              : std_logic;
  SIGNAL switch_compare_1_59              : std_logic;
  SIGNAL End_Cycle_23                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on30_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay106_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch30_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay107_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_60              : std_logic;
  SIGNAL switch_compare_1_61              : std_logic;
  SIGNAL End_Cycle_24                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on31_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay108_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch31_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay111_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_62              : std_logic;
  SIGNAL switch_compare_1_63              : std_logic;
  SIGNAL End_Cycle_25                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on27_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay109_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch32_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay112_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_64              : std_logic;
  SIGNAL switch_compare_1_65              : std_logic;
  SIGNAL End_Cycle_26                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on28_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay110_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch33_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay113_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Mux4_out1                        : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL Mux4_out1_1                      : vector_of_std_logic_vector24(0 TO 3);  -- ufix24 [4]
  SIGNAL switch_compare_1_66              : std_logic;
  SIGNAL End_Cycle_27                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Switch_on32_out1                 : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay127_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_67              : std_logic;
  SIGNAL Constant22_out1                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL Add4_out1                        : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Switch_on35_out1                 : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Delay128_out1                    : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Compare_To_Constant5_out1        : std_logic;
  SIGNAL switch_compare_1_68              : std_logic;
  SIGNAL Constant7_out1                   : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay118_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Switch41_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Relational_Operator6_relop1      : std_logic;
  SIGNAL switch_compare_1_69              : std_logic;
  SIGNAL Switch42_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_70              : std_logic;
  SIGNAL Switch_on35_out1_dtc             : signed(31 DOWNTO 0);  -- int32
  SIGNAL Switch36_out1                    : signed(31 DOWNTO 0);  -- int32
  SIGNAL Delay119_out1                    : signed(31 DOWNTO 0);  -- int32
  SIGNAL switch_compare_1_71              : std_logic;
  SIGNAL switch_compare_1_72              : std_logic;
  SIGNAL End_Cycle_28                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on36_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay129_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch37_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay130_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_73              : std_logic;
  SIGNAL switch_compare_1_74              : std_logic;
  SIGNAL End_Cycle_29                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on37_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay131_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch38_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay134_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_75              : std_logic;
  SIGNAL switch_compare_1_76              : std_logic;
  SIGNAL End_Cycle_30                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on33_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay132_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch39_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay135_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_77              : std_logic;
  SIGNAL switch_compare_1_78              : std_logic;
  SIGNAL End_Cycle_31                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on34_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay133_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch40_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay136_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Mux5_out1                        : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL Mux5_out1_1                      : vector_of_std_logic_vector24(0 TO 3);  -- ufix24 [4]
  SIGNAL switch_compare_1_79              : std_logic;
  SIGNAL End_Cycle_32                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Switch_on38_out1                 : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay150_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_80              : std_logic;
  SIGNAL Constant23_out1                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL Add5_out1                        : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Switch_on41_out1                 : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Delay151_out1                    : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Compare_To_Constant6_out1        : std_logic;
  SIGNAL switch_compare_1_81              : std_logic;
  SIGNAL Constant8_out1                   : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay141_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Switch48_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Relational_Operator7_relop1      : std_logic;
  SIGNAL switch_compare_1_82              : std_logic;
  SIGNAL Switch49_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_83              : std_logic;
  SIGNAL Switch_on41_out1_dtc             : signed(31 DOWNTO 0);  -- int32
  SIGNAL Switch43_out1                    : signed(31 DOWNTO 0);  -- int32
  SIGNAL Delay142_out1                    : signed(31 DOWNTO 0);  -- int32
  SIGNAL switch_compare_1_84              : std_logic;
  SIGNAL switch_compare_1_85              : std_logic;
  SIGNAL End_Cycle_33                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on42_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay152_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch44_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay153_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_86              : std_logic;
  SIGNAL switch_compare_1_87              : std_logic;
  SIGNAL End_Cycle_34                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on43_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay154_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch45_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay157_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_88              : std_logic;
  SIGNAL switch_compare_1_89              : std_logic;
  SIGNAL End_Cycle_35                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on39_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay155_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch46_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay158_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_90              : std_logic;
  SIGNAL switch_compare_1_91              : std_logic;
  SIGNAL End_Cycle_36                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on40_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay156_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch47_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay159_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Mux6_out1                        : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL Mux6_out1_1                      : vector_of_std_logic_vector24(0 TO 3);  -- ufix24 [4]
  SIGNAL switch_compare_1_92              : std_logic;
  SIGNAL End_Cycle_37                     : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Switch_on44_out1                 : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay173_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_93              : std_logic;
  SIGNAL Constant24_out1                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL Add6_out1                        : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Switch_on47_out1                 : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Delay174_out1                    : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Compare_To_Constant7_out1        : std_logic;
  SIGNAL switch_compare_1_94              : std_logic;
  SIGNAL Constant9_out1                   : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay164_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Switch55_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Relational_Operator8_relop1      : std_logic;
  SIGNAL switch_compare_1_95              : std_logic;
  SIGNAL Switch56_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_96              : std_logic;
  SIGNAL Switch_on47_out1_dtc             : signed(31 DOWNTO 0);  -- int32
  SIGNAL Switch50_out1                    : signed(31 DOWNTO 0);  -- int32
  SIGNAL Delay165_out1                    : signed(31 DOWNTO 0);  -- int32
  SIGNAL switch_compare_1_97              : std_logic;
  SIGNAL switch_compare_1_98              : std_logic;
  SIGNAL End_Cycle_38                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on48_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay175_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch51_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay176_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_99              : std_logic;
  SIGNAL switch_compare_1_100             : std_logic;
  SIGNAL End_Cycle_39                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on49_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay177_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch52_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay180_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_101             : std_logic;
  SIGNAL switch_compare_1_102             : std_logic;
  SIGNAL End_Cycle_40                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on45_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay178_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch53_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay181_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL switch_compare_1_103             : std_logic;
  SIGNAL switch_compare_1_104             : std_logic;
  SIGNAL End_Cycle_41                     : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch_on46_out1                 : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay179_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Switch54_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL Delay182_out1                    : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL End_Cycle_42                     : std_logic;
  SIGNAL switch_compare_1_105             : std_logic;
  SIGNAL Switch_on98_out1                 : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay371_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_106             : std_logic;
  SIGNAL Switch_on99_out1                 : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay372_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL MinMax_stage1_1_val              : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_107             : std_logic;
  SIGNAL Switch_on100_out1                : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay373_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_108             : std_logic;
  SIGNAL Switch_on101_out1                : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay374_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_109             : std_logic;
  SIGNAL Switch_on104_out1                : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay375_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_110             : std_logic;
  SIGNAL Switch_on105_out1                : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay376_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL MinMax_stage1_3_val              : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_111             : std_logic;
  SIGNAL Switch_on102_out1                : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay377_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL switch_compare_1_112             : std_logic;
  SIGNAL Switch_on103_out1                : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Delay378_out1                    : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Mux7_out1                        : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL Mux7_out1_1                      : vector_of_std_logic_vector24(0 TO 3);  -- ufix24 [4]
  SIGNAL MinMax_stage1_2_val              : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL MinMax_stage2_1_val              : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL MinMax_stage1_4_val              : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL MinMax_stage2_2_val              : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL MinMax_stage3_val                : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Constant33_out1                  : signed(19 DOWNTO 0);  -- sfix20_En11
  SIGNAL Constant34_out1                  : vector_of_signed24(0 TO 3);  -- sfix24_En11 [4]
  SIGNAL Constant34_out1_1                : vector_of_std_logic_vector24(0 TO 3);  -- ufix24 [4]
  SIGNAL J                                : std_logic_vector(19 DOWNTO 0);  -- ufix20
  SIGNAL Index_tmp                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL voltages                         : vector_of_std_logic_vector24(0 TO 3);  -- ufix24 [4]

BEGIN
  u_Detect_Rise_Positive : parallel_8_min_cost_function_src_Detect_Rise_Positive
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              U => valid_in,
              Y => End_Cycle
              );

  u_Compare_To_Constant : parallel_8_min_cost_function_src_Compare_To_Constant
    PORT MAP( u => std_logic_vector(Switch_on1_out1),  -- int32
              y => Compare_To_Constant_out1
              );

  u_Compare_To_Constant1 : parallel_8_min_cost_function_src_Compare_To_Constant1
    PORT MAP( u => std_logic_vector(Switch_on7_out1),  -- sfix33
              y => Compare_To_Constant1_out1
              );

  u_Compare_To_Constant2 : parallel_8_min_cost_function_src_Compare_To_Constant2
    PORT MAP( u => std_logic_vector(Switch_on17_out1),  -- sfix33
              y => Compare_To_Constant2_out1
              );

  u_Compare_To_Constant3 : parallel_8_min_cost_function_src_Compare_To_Constant3
    PORT MAP( u => std_logic_vector(Switch_on23_out1),  -- sfix33
              y => Compare_To_Constant3_out1
              );

  u_Compare_To_Constant4 : parallel_8_min_cost_function_src_Compare_To_Constant4
    PORT MAP( u => std_logic_vector(Switch_on29_out1),  -- sfix33
              y => Compare_To_Constant4_out1
              );

  u_Compare_To_Constant5 : parallel_8_min_cost_function_src_Compare_To_Constant5
    PORT MAP( u => std_logic_vector(Switch_on35_out1),  -- sfix33
              y => Compare_To_Constant5_out1
              );

  u_Compare_To_Constant6 : parallel_8_min_cost_function_src_Compare_To_Constant6
    PORT MAP( u => std_logic_vector(Switch_on41_out1),  -- sfix33
              y => Compare_To_Constant6_out1
              );

  u_Compare_To_Constant7 : parallel_8_min_cost_function_src_Compare_To_Constant7
    PORT MAP( u => std_logic_vector(Switch_on47_out1),  -- sfix33
              y => Compare_To_Constant7_out1
              );

  u_Detect_Rise_Positive1 : parallel_8_min_cost_function_src_Detect_Rise_Positive1
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              U => Relational_Operator1_relop1,
              Y => End_Cycle_42
              );

  u_MATLAB_Function : parallel_8_min_cost_function_src_MATLAB_Function
    PORT MAP( J_1 => std_logic_vector(Delay_out1),  -- sfix20_En11
              Index_1 => std_logic_vector(Switch2_out1),  -- int32
              voltages_1 => Mux_out1_1,  -- sfix24_En11 [4]
              J_2 => std_logic_vector(Delay25_out1),  -- sfix20_En11
              Index_2 => std_logic_vector(Switch10_out1),  -- int32
              voltages_2 => Mux1_out1_1,  -- sfix24_En11 [4]
              J_3 => std_logic_vector(Delay49_out1),  -- sfix20_En11
              Index_3 => std_logic_vector(Switch15_out1),  -- int32
              voltages_3 => Mux2_out1_1,  -- sfix24_En11 [4]
              J_4 => std_logic_vector(Delay72_out1),  -- sfix20_En11
              Index_4 => std_logic_vector(Switch22_out1),  -- int32
              voltages_4 => Mux3_out1_1,  -- sfix24_En11 [4]
              J_5 => std_logic_vector(Delay95_out1),  -- sfix20_En11
              Index_5 => std_logic_vector(Switch29_out1),  -- int32
              voltages_5 => Mux4_out1_1,  -- sfix24_En11 [4]
              J_6 => std_logic_vector(Delay118_out1),  -- sfix20_En11
              Index_6 => std_logic_vector(Switch36_out1),  -- int32
              voltages_6 => Mux5_out1_1,  -- sfix24_En11 [4]
              J_7 => std_logic_vector(Delay141_out1),  -- sfix20_En11
              Index_7 => std_logic_vector(Switch43_out1),  -- int32
              voltages_7 => Mux6_out1_1,  -- sfix24_En11 [4]
              J_8 => std_logic_vector(Delay164_out1),  -- sfix20_En11
              Index_8 => std_logic_vector(Switch50_out1),  -- int32
              voltages_8 => Mux7_out1_1,  -- sfix24_En11 [4]
              min => std_logic_vector(MinMax_stage3_val),  -- sfix20_En11
              J_default => std_logic_vector(Constant33_out1),  -- sfix20_En11
              voltages_default => Constant34_out1_1,  -- sfix24_En11 [4]
              J => J,  -- sfix20_En11
              Index => Index_tmp,  -- int32
              voltages => voltages  -- sfix24_En11 [4]
              );

  Constant1_out1 <= to_signed(8, 32);

  
  switch_compare_1 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  enb <= clk_enable;

  Index_in_signed <= signed(Index_in);

  Delay18_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay18_out1 <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        Delay18_out1 <= Switch_on1_out1;
      END IF;
    END IF;
  END PROCESS Delay18_process;


  
  Switch_on1_out1 <= Delay18_out1 WHEN switch_compare_1 = '0' ELSE
      Index_in_signed;

  
  Relational_Operator1_relop1 <= '1' WHEN Constant1_out1 = Switch_on1_out1 ELSE
      '0';

  End_Cycle_1 <= Relational_Operator1_relop1;

  Logical_Operator_out1 <= End_Cycle_1 AND End_Cycle;

  
  switch_compare_1_1 <= '1' WHEN Logical_Operator_out1 > '0' ELSE
      '0';

  Constant2_out1 <= '0';

  
  Switch7_out1 <= End_Cycle WHEN switch_compare_1_1 = '0' ELSE
      Constant2_out1;

  
  switch_compare_1_2 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_2 <= signed(J_in_0);

  Delay17_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay17_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay17_out1 <= Switch_on4_out1;
      END IF;
    END IF;
  END PROCESS Delay17_process;


  
  Switch_on4_out1 <= Delay17_out1 WHEN switch_compare_1_2 = '0' ELSE
      End_Cycle_2;

  
  switch_compare_1_3 <= '1' WHEN Compare_To_Constant_out1 > '0' ELSE
      '0';

  Constant_out1 <= to_signed(16#7D000#, 20);

  
  Switch_out1 <= Delay_out1 WHEN switch_compare_1_3 = '0' ELSE
      Constant_out1;

  
  Relational_Operator_relop1 <= '1' WHEN Switch_on4_out1 <= Switch_out1 ELSE
      '0';

  
  switch_compare_1_4 <= '1' WHEN Relational_Operator_relop1 > '0' ELSE
      '0';

  
  Switch1_out1 <= Delay_out1 WHEN switch_compare_1_4 = '0' ELSE
      Switch_on4_out1;

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay_out1 <= Switch1_out1;
      END IF;
    END IF;
  END PROCESS Delay_process;


  
  switch_compare_1_5 <= '1' WHEN Relational_Operator_relop1 > '0' ELSE
      '0';

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1 <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        Delay1_out1 <= Switch2_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  
  Switch2_out1 <= Delay1_out1 WHEN switch_compare_1_5 = '0' ELSE
      Switch_on1_out1;

  
  switch_compare_1_6 <= '1' WHEN Relational_Operator_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_7 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_3 <= signed(phase_voltages_per_switching_state_in_0);

  Delay19_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay19_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay19_out1 <= Switch_on2_out1;
      END IF;
    END IF;
  END PROCESS Delay19_process;


  
  Switch_on2_out1 <= Delay19_out1 WHEN switch_compare_1_7 = '0' ELSE
      End_Cycle_3;

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay2_out1 <= Switch3_out1;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  
  Switch3_out1 <= Delay2_out1 WHEN switch_compare_1_6 = '0' ELSE
      Switch_on2_out1;

  
  switch_compare_1_8 <= '1' WHEN Relational_Operator_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_9 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_4 <= signed(phase_voltages_per_switching_state_in_1);

  Delay20_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay20_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay20_out1 <= Switch_on3_out1;
      END IF;
    END IF;
  END PROCESS Delay20_process;


  
  Switch_on3_out1 <= Delay20_out1 WHEN switch_compare_1_9 = '0' ELSE
      End_Cycle_4;

  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay3_out1 <= Switch4_out1;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  
  Switch4_out1 <= Delay3_out1 WHEN switch_compare_1_8 = '0' ELSE
      Switch_on3_out1;

  
  switch_compare_1_10 <= '1' WHEN Relational_Operator_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_11 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_5 <= signed(phase_voltages_per_switching_state_in_2);

  Delay21_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay21_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay21_out1 <= Switch_on5_out1;
      END IF;
    END IF;
  END PROCESS Delay21_process;


  
  Switch_on5_out1 <= Delay21_out1 WHEN switch_compare_1_11 = '0' ELSE
      End_Cycle_5;

  Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay4_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay4_out1 <= Switch5_out1;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  
  Switch5_out1 <= Delay4_out1 WHEN switch_compare_1_10 = '0' ELSE
      Switch_on5_out1;

  
  switch_compare_1_12 <= '1' WHEN Relational_Operator_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_13 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_6 <= signed(phase_voltages_per_switching_state_in_3);

  Delay22_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay22_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay22_out1 <= Switch_on6_out1;
      END IF;
    END IF;
  END PROCESS Delay22_process;


  
  Switch_on6_out1 <= Delay22_out1 WHEN switch_compare_1_13 = '0' ELSE
      End_Cycle_6;

  Delay5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay5_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay5_out1 <= Switch6_out1;
      END IF;
    END IF;
  END PROCESS Delay5_process;


  
  Switch6_out1 <= Delay5_out1 WHEN switch_compare_1_12 = '0' ELSE
      Switch_on6_out1;

  Mux_out1(0) <= Switch3_out1;
  Mux_out1(1) <= Switch4_out1;
  Mux_out1(2) <= Switch5_out1;
  Mux_out1(3) <= Switch6_out1;

  outputgen8: FOR k IN 0 TO 3 GENERATE
    Mux_out1_1(k) <= std_logic_vector(Mux_out1(k));
  END GENERATE;

  
  switch_compare_1_14 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_7 <= signed(J_in_1);

  Delay34_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay34_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay34_out1 <= Switch_on10_out1;
      END IF;
    END IF;
  END PROCESS Delay34_process;


  
  Switch_on10_out1 <= Delay34_out1 WHEN switch_compare_1_14 = '0' ELSE
      End_Cycle_7;

  
  switch_compare_1_15 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  Constant18_out1 <= to_signed(8, 32);

  Add_out1 <= resize(Index_in_signed, 33) + resize(Constant18_out1, 33);

  Delay35_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay35_out1 <= to_signed(0, 33);
      ELSIF enb = '1' THEN
        Delay35_out1 <= Switch_on7_out1;
      END IF;
    END IF;
  END PROCESS Delay35_process;


  
  Switch_on7_out1 <= Delay35_out1 WHEN switch_compare_1_15 = '0' ELSE
      Add_out1;

  
  switch_compare_1_16 <= '1' WHEN Compare_To_Constant1_out1 > '0' ELSE
      '0';

  Constant3_out1 <= to_signed(16#7D000#, 20);

  
  Switch8_out1 <= Delay25_out1 WHEN switch_compare_1_16 = '0' ELSE
      Constant3_out1;

  
  Relational_Operator2_relop1 <= '1' WHEN Switch_on10_out1 <= Switch8_out1 ELSE
      '0';

  
  switch_compare_1_17 <= '1' WHEN Relational_Operator2_relop1 > '0' ELSE
      '0';

  
  Switch9_out1 <= Delay25_out1 WHEN switch_compare_1_17 = '0' ELSE
      Switch_on10_out1;

  Delay25_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay25_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay25_out1 <= Switch9_out1;
      END IF;
    END IF;
  END PROCESS Delay25_process;


  
  switch_compare_1_18 <= '1' WHEN Relational_Operator2_relop1 > '0' ELSE
      '0';

  Switch_on7_out1_dtc <= Switch_on7_out1(31 DOWNTO 0);

  Delay26_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay26_out1 <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        Delay26_out1 <= Switch10_out1;
      END IF;
    END IF;
  END PROCESS Delay26_process;


  
  Switch10_out1 <= Delay26_out1 WHEN switch_compare_1_18 = '0' ELSE
      Switch_on7_out1_dtc;

  
  switch_compare_1_19 <= '1' WHEN Relational_Operator2_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_20 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_8 <= signed(phase_voltages_per_switching_state_in_4);

  Delay36_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay36_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay36_out1 <= Switch_on8_out1;
      END IF;
    END IF;
  END PROCESS Delay36_process;


  
  Switch_on8_out1 <= Delay36_out1 WHEN switch_compare_1_20 = '0' ELSE
      End_Cycle_8;

  Delay37_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay37_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay37_out1 <= Switch11_out1;
      END IF;
    END IF;
  END PROCESS Delay37_process;


  
  Switch11_out1 <= Delay37_out1 WHEN switch_compare_1_19 = '0' ELSE
      Switch_on8_out1;

  
  switch_compare_1_21 <= '1' WHEN Relational_Operator2_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_22 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_9 <= signed(phase_voltages_per_switching_state_in_5);

  Delay38_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay38_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay38_out1 <= Switch_on9_out1;
      END IF;
    END IF;
  END PROCESS Delay38_process;


  
  Switch_on9_out1 <= Delay38_out1 WHEN switch_compare_1_22 = '0' ELSE
      End_Cycle_9;

  Delay41_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay41_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay41_out1 <= Switch12_out1;
      END IF;
    END IF;
  END PROCESS Delay41_process;


  
  Switch12_out1 <= Delay41_out1 WHEN switch_compare_1_21 = '0' ELSE
      Switch_on9_out1;

  
  switch_compare_1_23 <= '1' WHEN Relational_Operator2_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_24 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_10 <= signed(phase_voltages_per_switching_state_in_6);

  Delay39_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay39_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay39_out1 <= Switch_on11_out1;
      END IF;
    END IF;
  END PROCESS Delay39_process;


  
  Switch_on11_out1 <= Delay39_out1 WHEN switch_compare_1_24 = '0' ELSE
      End_Cycle_10;

  Delay42_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay42_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay42_out1 <= Switch13_out1;
      END IF;
    END IF;
  END PROCESS Delay42_process;


  
  Switch13_out1 <= Delay42_out1 WHEN switch_compare_1_23 = '0' ELSE
      Switch_on11_out1;

  
  switch_compare_1_25 <= '1' WHEN Relational_Operator2_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_26 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_11 <= signed(phase_voltages_per_switching_state_in_7);

  Delay40_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay40_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay40_out1 <= Switch_on12_out1;
      END IF;
    END IF;
  END PROCESS Delay40_process;


  
  Switch_on12_out1 <= Delay40_out1 WHEN switch_compare_1_26 = '0' ELSE
      End_Cycle_11;

  Delay43_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay43_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay43_out1 <= Switch14_out1;
      END IF;
    END IF;
  END PROCESS Delay43_process;


  
  Switch14_out1 <= Delay43_out1 WHEN switch_compare_1_25 = '0' ELSE
      Switch_on12_out1;

  Mux1_out1(0) <= Switch11_out1;
  Mux1_out1(1) <= Switch12_out1;
  Mux1_out1(2) <= Switch13_out1;
  Mux1_out1(3) <= Switch14_out1;

  outputgen7: FOR k IN 0 TO 3 GENERATE
    Mux1_out1_1(k) <= std_logic_vector(Mux1_out1(k));
  END GENERATE;

  
  switch_compare_1_27 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_12 <= signed(J_in_2);

  Delay58_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay58_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay58_out1 <= Switch_on14_out1;
      END IF;
    END IF;
  END PROCESS Delay58_process;


  
  Switch_on14_out1 <= Delay58_out1 WHEN switch_compare_1_27 = '0' ELSE
      End_Cycle_12;

  
  switch_compare_1_28 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  Constant19_out1 <= to_signed(16, 32);

  Add1_out1 <= resize(Index_in_signed, 33) + resize(Constant19_out1, 33);

  Delay59_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay59_out1 <= to_signed(0, 33);
      ELSIF enb = '1' THEN
        Delay59_out1 <= Switch_on17_out1;
      END IF;
    END IF;
  END PROCESS Delay59_process;


  
  Switch_on17_out1 <= Delay59_out1 WHEN switch_compare_1_28 = '0' ELSE
      Add1_out1;

  
  switch_compare_1_29 <= '1' WHEN Compare_To_Constant2_out1 > '0' ELSE
      '0';

  Constant4_out1 <= to_signed(16#7D000#, 20);

  
  Switch20_out1 <= Delay49_out1 WHEN switch_compare_1_29 = '0' ELSE
      Constant4_out1;

  
  Relational_Operator3_relop1 <= '1' WHEN Switch_on14_out1 <= Switch20_out1 ELSE
      '0';

  
  switch_compare_1_30 <= '1' WHEN Relational_Operator3_relop1 > '0' ELSE
      '0';

  
  Switch21_out1 <= Delay49_out1 WHEN switch_compare_1_30 = '0' ELSE
      Switch_on14_out1;

  Delay49_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay49_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay49_out1 <= Switch21_out1;
      END IF;
    END IF;
  END PROCESS Delay49_process;


  
  switch_compare_1_31 <= '1' WHEN Relational_Operator3_relop1 > '0' ELSE
      '0';

  Switch_on17_out1_dtc <= Switch_on17_out1(31 DOWNTO 0);

  Delay50_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay50_out1 <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        Delay50_out1 <= Switch15_out1;
      END IF;
    END IF;
  END PROCESS Delay50_process;


  
  Switch15_out1 <= Delay50_out1 WHEN switch_compare_1_31 = '0' ELSE
      Switch_on17_out1_dtc;

  
  switch_compare_1_32 <= '1' WHEN Relational_Operator3_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_33 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_13 <= signed(phase_voltages_per_switching_state_in_8);

  Delay60_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay60_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay60_out1 <= Switch_on18_out1;
      END IF;
    END IF;
  END PROCESS Delay60_process;


  
  Switch_on18_out1 <= Delay60_out1 WHEN switch_compare_1_33 = '0' ELSE
      End_Cycle_13;

  Delay61_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay61_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay61_out1 <= Switch16_out1;
      END IF;
    END IF;
  END PROCESS Delay61_process;


  
  Switch16_out1 <= Delay61_out1 WHEN switch_compare_1_32 = '0' ELSE
      Switch_on18_out1;

  
  switch_compare_1_34 <= '1' WHEN Relational_Operator3_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_35 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_14 <= signed(phase_voltages_per_switching_state_in_9);

  Delay62_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay62_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay62_out1 <= Switch_on19_out1;
      END IF;
    END IF;
  END PROCESS Delay62_process;


  
  Switch_on19_out1 <= Delay62_out1 WHEN switch_compare_1_35 = '0' ELSE
      End_Cycle_14;

  Delay65_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay65_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay65_out1 <= Switch17_out1;
      END IF;
    END IF;
  END PROCESS Delay65_process;


  
  Switch17_out1 <= Delay65_out1 WHEN switch_compare_1_34 = '0' ELSE
      Switch_on19_out1;

  
  switch_compare_1_36 <= '1' WHEN Relational_Operator3_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_37 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_15 <= signed(phase_voltages_per_switching_state_in_10);

  Delay63_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay63_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay63_out1 <= Switch_on15_out1;
      END IF;
    END IF;
  END PROCESS Delay63_process;


  
  Switch_on15_out1 <= Delay63_out1 WHEN switch_compare_1_37 = '0' ELSE
      End_Cycle_15;

  Delay66_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay66_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay66_out1 <= Switch18_out1;
      END IF;
    END IF;
  END PROCESS Delay66_process;


  
  Switch18_out1 <= Delay66_out1 WHEN switch_compare_1_36 = '0' ELSE
      Switch_on15_out1;

  
  switch_compare_1_38 <= '1' WHEN Relational_Operator3_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_39 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_16 <= signed(phase_voltages_per_switching_state_in_11);

  Delay64_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay64_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay64_out1 <= Switch_on16_out1;
      END IF;
    END IF;
  END PROCESS Delay64_process;


  
  Switch_on16_out1 <= Delay64_out1 WHEN switch_compare_1_39 = '0' ELSE
      End_Cycle_16;

  Delay67_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay67_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay67_out1 <= Switch19_out1;
      END IF;
    END IF;
  END PROCESS Delay67_process;


  
  Switch19_out1 <= Delay67_out1 WHEN switch_compare_1_38 = '0' ELSE
      Switch_on16_out1;

  Mux2_out1(0) <= Switch16_out1;
  Mux2_out1(1) <= Switch17_out1;
  Mux2_out1(2) <= Switch18_out1;
  Mux2_out1(3) <= Switch19_out1;

  outputgen6: FOR k IN 0 TO 3 GENERATE
    Mux2_out1_1(k) <= std_logic_vector(Mux2_out1(k));
  END GENERATE;

  
  switch_compare_1_40 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_17 <= signed(J_in_3);

  Delay81_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay81_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay81_out1 <= Switch_on20_out1;
      END IF;
    END IF;
  END PROCESS Delay81_process;


  
  Switch_on20_out1 <= Delay81_out1 WHEN switch_compare_1_40 = '0' ELSE
      End_Cycle_17;

  
  switch_compare_1_41 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  Constant20_out1 <= to_signed(24, 32);

  Add2_out1 <= resize(Index_in_signed, 33) + resize(Constant20_out1, 33);

  Delay82_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay82_out1 <= to_signed(0, 33);
      ELSIF enb = '1' THEN
        Delay82_out1 <= Switch_on23_out1;
      END IF;
    END IF;
  END PROCESS Delay82_process;


  
  Switch_on23_out1 <= Delay82_out1 WHEN switch_compare_1_41 = '0' ELSE
      Add2_out1;

  
  switch_compare_1_42 <= '1' WHEN Compare_To_Constant3_out1 > '0' ELSE
      '0';

  Constant5_out1 <= to_signed(16#7D000#, 20);

  
  Switch27_out1 <= Delay72_out1 WHEN switch_compare_1_42 = '0' ELSE
      Constant5_out1;

  
  Relational_Operator4_relop1 <= '1' WHEN Switch_on20_out1 <= Switch27_out1 ELSE
      '0';

  
  switch_compare_1_43 <= '1' WHEN Relational_Operator4_relop1 > '0' ELSE
      '0';

  
  Switch28_out1 <= Delay72_out1 WHEN switch_compare_1_43 = '0' ELSE
      Switch_on20_out1;

  Delay72_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay72_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay72_out1 <= Switch28_out1;
      END IF;
    END IF;
  END PROCESS Delay72_process;


  
  switch_compare_1_44 <= '1' WHEN Relational_Operator4_relop1 > '0' ELSE
      '0';

  Switch_on23_out1_dtc <= Switch_on23_out1(31 DOWNTO 0);

  Delay73_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay73_out1 <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        Delay73_out1 <= Switch22_out1;
      END IF;
    END IF;
  END PROCESS Delay73_process;


  
  Switch22_out1 <= Delay73_out1 WHEN switch_compare_1_44 = '0' ELSE
      Switch_on23_out1_dtc;

  
  switch_compare_1_45 <= '1' WHEN Relational_Operator4_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_46 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_18 <= signed(phase_voltages_per_switching_state_in_12);

  Delay83_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay83_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay83_out1 <= Switch_on24_out1;
      END IF;
    END IF;
  END PROCESS Delay83_process;


  
  Switch_on24_out1 <= Delay83_out1 WHEN switch_compare_1_46 = '0' ELSE
      End_Cycle_18;

  Delay84_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay84_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay84_out1 <= Switch23_out1;
      END IF;
    END IF;
  END PROCESS Delay84_process;


  
  Switch23_out1 <= Delay84_out1 WHEN switch_compare_1_45 = '0' ELSE
      Switch_on24_out1;

  
  switch_compare_1_47 <= '1' WHEN Relational_Operator4_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_48 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_19 <= signed(phase_voltages_per_switching_state_in_13);

  Delay85_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay85_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay85_out1 <= Switch_on25_out1;
      END IF;
    END IF;
  END PROCESS Delay85_process;


  
  Switch_on25_out1 <= Delay85_out1 WHEN switch_compare_1_48 = '0' ELSE
      End_Cycle_19;

  Delay88_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay88_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay88_out1 <= Switch24_out1;
      END IF;
    END IF;
  END PROCESS Delay88_process;


  
  Switch24_out1 <= Delay88_out1 WHEN switch_compare_1_47 = '0' ELSE
      Switch_on25_out1;

  
  switch_compare_1_49 <= '1' WHEN Relational_Operator4_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_50 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_20 <= signed(phase_voltages_per_switching_state_in_14);

  Delay86_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay86_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay86_out1 <= Switch_on21_out1;
      END IF;
    END IF;
  END PROCESS Delay86_process;


  
  Switch_on21_out1 <= Delay86_out1 WHEN switch_compare_1_50 = '0' ELSE
      End_Cycle_20;

  Delay89_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay89_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay89_out1 <= Switch25_out1;
      END IF;
    END IF;
  END PROCESS Delay89_process;


  
  Switch25_out1 <= Delay89_out1 WHEN switch_compare_1_49 = '0' ELSE
      Switch_on21_out1;

  
  switch_compare_1_51 <= '1' WHEN Relational_Operator4_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_52 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_21 <= signed(phase_voltages_per_switching_state_in_15);

  Delay87_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay87_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay87_out1 <= Switch_on22_out1;
      END IF;
    END IF;
  END PROCESS Delay87_process;


  
  Switch_on22_out1 <= Delay87_out1 WHEN switch_compare_1_52 = '0' ELSE
      End_Cycle_21;

  Delay90_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay90_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay90_out1 <= Switch26_out1;
      END IF;
    END IF;
  END PROCESS Delay90_process;


  
  Switch26_out1 <= Delay90_out1 WHEN switch_compare_1_51 = '0' ELSE
      Switch_on22_out1;

  Mux3_out1(0) <= Switch23_out1;
  Mux3_out1(1) <= Switch24_out1;
  Mux3_out1(2) <= Switch25_out1;
  Mux3_out1(3) <= Switch26_out1;

  outputgen5: FOR k IN 0 TO 3 GENERATE
    Mux3_out1_1(k) <= std_logic_vector(Mux3_out1(k));
  END GENERATE;

  
  switch_compare_1_53 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_22 <= signed(J_in_4);

  Delay104_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay104_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay104_out1 <= Switch_on26_out1;
      END IF;
    END IF;
  END PROCESS Delay104_process;


  
  Switch_on26_out1 <= Delay104_out1 WHEN switch_compare_1_53 = '0' ELSE
      End_Cycle_22;

  
  switch_compare_1_54 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  Constant21_out1 <= to_signed(32, 32);

  Add3_out1 <= resize(Index_in_signed, 33) + resize(Constant21_out1, 33);

  Delay105_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay105_out1 <= to_signed(0, 33);
      ELSIF enb = '1' THEN
        Delay105_out1 <= Switch_on29_out1;
      END IF;
    END IF;
  END PROCESS Delay105_process;


  
  Switch_on29_out1 <= Delay105_out1 WHEN switch_compare_1_54 = '0' ELSE
      Add3_out1;

  
  switch_compare_1_55 <= '1' WHEN Compare_To_Constant4_out1 > '0' ELSE
      '0';

  Constant6_out1 <= to_signed(16#7D000#, 20);

  
  Switch34_out1 <= Delay95_out1 WHEN switch_compare_1_55 = '0' ELSE
      Constant6_out1;

  
  Relational_Operator5_relop1 <= '1' WHEN Switch_on26_out1 <= Switch34_out1 ELSE
      '0';

  
  switch_compare_1_56 <= '1' WHEN Relational_Operator5_relop1 > '0' ELSE
      '0';

  
  Switch35_out1 <= Delay95_out1 WHEN switch_compare_1_56 = '0' ELSE
      Switch_on26_out1;

  Delay95_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay95_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay95_out1 <= Switch35_out1;
      END IF;
    END IF;
  END PROCESS Delay95_process;


  
  switch_compare_1_57 <= '1' WHEN Relational_Operator5_relop1 > '0' ELSE
      '0';

  Switch_on29_out1_dtc <= Switch_on29_out1(31 DOWNTO 0);

  Delay96_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay96_out1 <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        Delay96_out1 <= Switch29_out1;
      END IF;
    END IF;
  END PROCESS Delay96_process;


  
  Switch29_out1 <= Delay96_out1 WHEN switch_compare_1_57 = '0' ELSE
      Switch_on29_out1_dtc;

  
  switch_compare_1_58 <= '1' WHEN Relational_Operator5_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_59 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_23 <= signed(phase_voltages_per_switching_state_in_16);

  Delay106_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay106_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay106_out1 <= Switch_on30_out1;
      END IF;
    END IF;
  END PROCESS Delay106_process;


  
  Switch_on30_out1 <= Delay106_out1 WHEN switch_compare_1_59 = '0' ELSE
      End_Cycle_23;

  Delay107_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay107_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay107_out1 <= Switch30_out1;
      END IF;
    END IF;
  END PROCESS Delay107_process;


  
  Switch30_out1 <= Delay107_out1 WHEN switch_compare_1_58 = '0' ELSE
      Switch_on30_out1;

  
  switch_compare_1_60 <= '1' WHEN Relational_Operator5_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_61 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_24 <= signed(phase_voltages_per_switching_state_in_17);

  Delay108_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay108_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay108_out1 <= Switch_on31_out1;
      END IF;
    END IF;
  END PROCESS Delay108_process;


  
  Switch_on31_out1 <= Delay108_out1 WHEN switch_compare_1_61 = '0' ELSE
      End_Cycle_24;

  Delay111_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay111_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay111_out1 <= Switch31_out1;
      END IF;
    END IF;
  END PROCESS Delay111_process;


  
  Switch31_out1 <= Delay111_out1 WHEN switch_compare_1_60 = '0' ELSE
      Switch_on31_out1;

  
  switch_compare_1_62 <= '1' WHEN Relational_Operator5_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_63 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_25 <= signed(phase_voltages_per_switching_state_in_18);

  Delay109_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay109_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay109_out1 <= Switch_on27_out1;
      END IF;
    END IF;
  END PROCESS Delay109_process;


  
  Switch_on27_out1 <= Delay109_out1 WHEN switch_compare_1_63 = '0' ELSE
      End_Cycle_25;

  Delay112_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay112_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay112_out1 <= Switch32_out1;
      END IF;
    END IF;
  END PROCESS Delay112_process;


  
  Switch32_out1 <= Delay112_out1 WHEN switch_compare_1_62 = '0' ELSE
      Switch_on27_out1;

  
  switch_compare_1_64 <= '1' WHEN Relational_Operator5_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_65 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_26 <= signed(phase_voltages_per_switching_state_in_19);

  Delay110_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay110_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay110_out1 <= Switch_on28_out1;
      END IF;
    END IF;
  END PROCESS Delay110_process;


  
  Switch_on28_out1 <= Delay110_out1 WHEN switch_compare_1_65 = '0' ELSE
      End_Cycle_26;

  Delay113_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay113_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay113_out1 <= Switch33_out1;
      END IF;
    END IF;
  END PROCESS Delay113_process;


  
  Switch33_out1 <= Delay113_out1 WHEN switch_compare_1_64 = '0' ELSE
      Switch_on28_out1;

  Mux4_out1(0) <= Switch30_out1;
  Mux4_out1(1) <= Switch31_out1;
  Mux4_out1(2) <= Switch32_out1;
  Mux4_out1(3) <= Switch33_out1;

  outputgen4: FOR k IN 0 TO 3 GENERATE
    Mux4_out1_1(k) <= std_logic_vector(Mux4_out1(k));
  END GENERATE;

  
  switch_compare_1_66 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_27 <= signed(J_in_5);

  Delay127_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay127_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay127_out1 <= Switch_on32_out1;
      END IF;
    END IF;
  END PROCESS Delay127_process;


  
  Switch_on32_out1 <= Delay127_out1 WHEN switch_compare_1_66 = '0' ELSE
      End_Cycle_27;

  
  switch_compare_1_67 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  Constant22_out1 <= to_signed(40, 32);

  Add4_out1 <= resize(Index_in_signed, 33) + resize(Constant22_out1, 33);

  Delay128_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay128_out1 <= to_signed(0, 33);
      ELSIF enb = '1' THEN
        Delay128_out1 <= Switch_on35_out1;
      END IF;
    END IF;
  END PROCESS Delay128_process;


  
  Switch_on35_out1 <= Delay128_out1 WHEN switch_compare_1_67 = '0' ELSE
      Add4_out1;

  
  switch_compare_1_68 <= '1' WHEN Compare_To_Constant5_out1 > '0' ELSE
      '0';

  Constant7_out1 <= to_signed(16#7D000#, 20);

  
  Switch41_out1 <= Delay118_out1 WHEN switch_compare_1_68 = '0' ELSE
      Constant7_out1;

  
  Relational_Operator6_relop1 <= '1' WHEN Switch_on32_out1 <= Switch41_out1 ELSE
      '0';

  
  switch_compare_1_69 <= '1' WHEN Relational_Operator6_relop1 > '0' ELSE
      '0';

  
  Switch42_out1 <= Delay118_out1 WHEN switch_compare_1_69 = '0' ELSE
      Switch_on32_out1;

  Delay118_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay118_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay118_out1 <= Switch42_out1;
      END IF;
    END IF;
  END PROCESS Delay118_process;


  
  switch_compare_1_70 <= '1' WHEN Relational_Operator6_relop1 > '0' ELSE
      '0';

  Switch_on35_out1_dtc <= Switch_on35_out1(31 DOWNTO 0);

  Delay119_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay119_out1 <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        Delay119_out1 <= Switch36_out1;
      END IF;
    END IF;
  END PROCESS Delay119_process;


  
  Switch36_out1 <= Delay119_out1 WHEN switch_compare_1_70 = '0' ELSE
      Switch_on35_out1_dtc;

  
  switch_compare_1_71 <= '1' WHEN Relational_Operator6_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_72 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_28 <= signed(phase_voltages_per_switching_state_in_20);

  Delay129_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay129_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay129_out1 <= Switch_on36_out1;
      END IF;
    END IF;
  END PROCESS Delay129_process;


  
  Switch_on36_out1 <= Delay129_out1 WHEN switch_compare_1_72 = '0' ELSE
      End_Cycle_28;

  Delay130_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay130_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay130_out1 <= Switch37_out1;
      END IF;
    END IF;
  END PROCESS Delay130_process;


  
  Switch37_out1 <= Delay130_out1 WHEN switch_compare_1_71 = '0' ELSE
      Switch_on36_out1;

  
  switch_compare_1_73 <= '1' WHEN Relational_Operator6_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_74 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_29 <= signed(phase_voltages_per_switching_state_in_21);

  Delay131_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay131_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay131_out1 <= Switch_on37_out1;
      END IF;
    END IF;
  END PROCESS Delay131_process;


  
  Switch_on37_out1 <= Delay131_out1 WHEN switch_compare_1_74 = '0' ELSE
      End_Cycle_29;

  Delay134_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay134_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay134_out1 <= Switch38_out1;
      END IF;
    END IF;
  END PROCESS Delay134_process;


  
  Switch38_out1 <= Delay134_out1 WHEN switch_compare_1_73 = '0' ELSE
      Switch_on37_out1;

  
  switch_compare_1_75 <= '1' WHEN Relational_Operator6_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_76 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_30 <= signed(phase_voltages_per_switching_state_in_22);

  Delay132_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay132_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay132_out1 <= Switch_on33_out1;
      END IF;
    END IF;
  END PROCESS Delay132_process;


  
  Switch_on33_out1 <= Delay132_out1 WHEN switch_compare_1_76 = '0' ELSE
      End_Cycle_30;

  Delay135_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay135_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay135_out1 <= Switch39_out1;
      END IF;
    END IF;
  END PROCESS Delay135_process;


  
  Switch39_out1 <= Delay135_out1 WHEN switch_compare_1_75 = '0' ELSE
      Switch_on33_out1;

  
  switch_compare_1_77 <= '1' WHEN Relational_Operator6_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_78 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_31 <= signed(phase_voltages_per_switching_state_in_23);

  Delay133_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay133_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay133_out1 <= Switch_on34_out1;
      END IF;
    END IF;
  END PROCESS Delay133_process;


  
  Switch_on34_out1 <= Delay133_out1 WHEN switch_compare_1_78 = '0' ELSE
      End_Cycle_31;

  Delay136_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay136_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay136_out1 <= Switch40_out1;
      END IF;
    END IF;
  END PROCESS Delay136_process;


  
  Switch40_out1 <= Delay136_out1 WHEN switch_compare_1_77 = '0' ELSE
      Switch_on34_out1;

  Mux5_out1(0) <= Switch37_out1;
  Mux5_out1(1) <= Switch38_out1;
  Mux5_out1(2) <= Switch39_out1;
  Mux5_out1(3) <= Switch40_out1;

  outputgen3: FOR k IN 0 TO 3 GENERATE
    Mux5_out1_1(k) <= std_logic_vector(Mux5_out1(k));
  END GENERATE;

  
  switch_compare_1_79 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_32 <= signed(J_in_6);

  Delay150_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay150_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay150_out1 <= Switch_on38_out1;
      END IF;
    END IF;
  END PROCESS Delay150_process;


  
  Switch_on38_out1 <= Delay150_out1 WHEN switch_compare_1_79 = '0' ELSE
      End_Cycle_32;

  
  switch_compare_1_80 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  Constant23_out1 <= to_signed(48, 32);

  Add5_out1 <= resize(Index_in_signed, 33) + resize(Constant23_out1, 33);

  Delay151_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay151_out1 <= to_signed(0, 33);
      ELSIF enb = '1' THEN
        Delay151_out1 <= Switch_on41_out1;
      END IF;
    END IF;
  END PROCESS Delay151_process;


  
  Switch_on41_out1 <= Delay151_out1 WHEN switch_compare_1_80 = '0' ELSE
      Add5_out1;

  
  switch_compare_1_81 <= '1' WHEN Compare_To_Constant6_out1 > '0' ELSE
      '0';

  Constant8_out1 <= to_signed(16#7D000#, 20);

  
  Switch48_out1 <= Delay141_out1 WHEN switch_compare_1_81 = '0' ELSE
      Constant8_out1;

  
  Relational_Operator7_relop1 <= '1' WHEN Switch_on38_out1 <= Switch48_out1 ELSE
      '0';

  
  switch_compare_1_82 <= '1' WHEN Relational_Operator7_relop1 > '0' ELSE
      '0';

  
  Switch49_out1 <= Delay141_out1 WHEN switch_compare_1_82 = '0' ELSE
      Switch_on38_out1;

  Delay141_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay141_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay141_out1 <= Switch49_out1;
      END IF;
    END IF;
  END PROCESS Delay141_process;


  
  switch_compare_1_83 <= '1' WHEN Relational_Operator7_relop1 > '0' ELSE
      '0';

  Switch_on41_out1_dtc <= Switch_on41_out1(31 DOWNTO 0);

  Delay142_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay142_out1 <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        Delay142_out1 <= Switch43_out1;
      END IF;
    END IF;
  END PROCESS Delay142_process;


  
  Switch43_out1 <= Delay142_out1 WHEN switch_compare_1_83 = '0' ELSE
      Switch_on41_out1_dtc;

  
  switch_compare_1_84 <= '1' WHEN Relational_Operator7_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_85 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_33 <= signed(phase_voltages_per_switching_state_in_24);

  Delay152_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay152_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay152_out1 <= Switch_on42_out1;
      END IF;
    END IF;
  END PROCESS Delay152_process;


  
  Switch_on42_out1 <= Delay152_out1 WHEN switch_compare_1_85 = '0' ELSE
      End_Cycle_33;

  Delay153_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay153_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay153_out1 <= Switch44_out1;
      END IF;
    END IF;
  END PROCESS Delay153_process;


  
  Switch44_out1 <= Delay153_out1 WHEN switch_compare_1_84 = '0' ELSE
      Switch_on42_out1;

  
  switch_compare_1_86 <= '1' WHEN Relational_Operator7_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_87 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_34 <= signed(phase_voltages_per_switching_state_in_25);

  Delay154_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay154_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay154_out1 <= Switch_on43_out1;
      END IF;
    END IF;
  END PROCESS Delay154_process;


  
  Switch_on43_out1 <= Delay154_out1 WHEN switch_compare_1_87 = '0' ELSE
      End_Cycle_34;

  Delay157_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay157_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay157_out1 <= Switch45_out1;
      END IF;
    END IF;
  END PROCESS Delay157_process;


  
  Switch45_out1 <= Delay157_out1 WHEN switch_compare_1_86 = '0' ELSE
      Switch_on43_out1;

  
  switch_compare_1_88 <= '1' WHEN Relational_Operator7_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_89 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_35 <= signed(phase_voltages_per_switching_state_in_26);

  Delay155_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay155_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay155_out1 <= Switch_on39_out1;
      END IF;
    END IF;
  END PROCESS Delay155_process;


  
  Switch_on39_out1 <= Delay155_out1 WHEN switch_compare_1_89 = '0' ELSE
      End_Cycle_35;

  Delay158_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay158_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay158_out1 <= Switch46_out1;
      END IF;
    END IF;
  END PROCESS Delay158_process;


  
  Switch46_out1 <= Delay158_out1 WHEN switch_compare_1_88 = '0' ELSE
      Switch_on39_out1;

  
  switch_compare_1_90 <= '1' WHEN Relational_Operator7_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_91 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_36 <= signed(phase_voltages_per_switching_state_in_27);

  Delay156_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay156_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay156_out1 <= Switch_on40_out1;
      END IF;
    END IF;
  END PROCESS Delay156_process;


  
  Switch_on40_out1 <= Delay156_out1 WHEN switch_compare_1_91 = '0' ELSE
      End_Cycle_36;

  Delay159_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay159_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay159_out1 <= Switch47_out1;
      END IF;
    END IF;
  END PROCESS Delay159_process;


  
  Switch47_out1 <= Delay159_out1 WHEN switch_compare_1_90 = '0' ELSE
      Switch_on40_out1;

  Mux6_out1(0) <= Switch44_out1;
  Mux6_out1(1) <= Switch45_out1;
  Mux6_out1(2) <= Switch46_out1;
  Mux6_out1(3) <= Switch47_out1;

  outputgen2: FOR k IN 0 TO 3 GENERATE
    Mux6_out1_1(k) <= std_logic_vector(Mux6_out1(k));
  END GENERATE;

  
  switch_compare_1_92 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_37 <= signed(J_in_7);

  Delay173_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay173_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay173_out1 <= Switch_on44_out1;
      END IF;
    END IF;
  END PROCESS Delay173_process;


  
  Switch_on44_out1 <= Delay173_out1 WHEN switch_compare_1_92 = '0' ELSE
      End_Cycle_37;

  
  switch_compare_1_93 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  Constant24_out1 <= to_signed(56, 32);

  Add6_out1 <= resize(Index_in_signed, 33) + resize(Constant24_out1, 33);

  Delay174_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay174_out1 <= to_signed(0, 33);
      ELSIF enb = '1' THEN
        Delay174_out1 <= Switch_on47_out1;
      END IF;
    END IF;
  END PROCESS Delay174_process;


  
  Switch_on47_out1 <= Delay174_out1 WHEN switch_compare_1_93 = '0' ELSE
      Add6_out1;

  
  switch_compare_1_94 <= '1' WHEN Compare_To_Constant7_out1 > '0' ELSE
      '0';

  Constant9_out1 <= to_signed(16#7D000#, 20);

  
  Switch55_out1 <= Delay164_out1 WHEN switch_compare_1_94 = '0' ELSE
      Constant9_out1;

  
  Relational_Operator8_relop1 <= '1' WHEN Switch_on44_out1 <= Switch55_out1 ELSE
      '0';

  
  switch_compare_1_95 <= '1' WHEN Relational_Operator8_relop1 > '0' ELSE
      '0';

  
  Switch56_out1 <= Delay164_out1 WHEN switch_compare_1_95 = '0' ELSE
      Switch_on44_out1;

  Delay164_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay164_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay164_out1 <= Switch56_out1;
      END IF;
    END IF;
  END PROCESS Delay164_process;


  
  switch_compare_1_96 <= '1' WHEN Relational_Operator8_relop1 > '0' ELSE
      '0';

  Switch_on47_out1_dtc <= Switch_on47_out1(31 DOWNTO 0);

  Delay165_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay165_out1 <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        Delay165_out1 <= Switch50_out1;
      END IF;
    END IF;
  END PROCESS Delay165_process;


  
  Switch50_out1 <= Delay165_out1 WHEN switch_compare_1_96 = '0' ELSE
      Switch_on47_out1_dtc;

  
  switch_compare_1_97 <= '1' WHEN Relational_Operator8_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_98 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_38 <= signed(phase_voltages_per_switching_state_in_28);

  Delay175_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay175_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay175_out1 <= Switch_on48_out1;
      END IF;
    END IF;
  END PROCESS Delay175_process;


  
  Switch_on48_out1 <= Delay175_out1 WHEN switch_compare_1_98 = '0' ELSE
      End_Cycle_38;

  Delay176_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay176_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay176_out1 <= Switch51_out1;
      END IF;
    END IF;
  END PROCESS Delay176_process;


  
  Switch51_out1 <= Delay176_out1 WHEN switch_compare_1_97 = '0' ELSE
      Switch_on48_out1;

  
  switch_compare_1_99 <= '1' WHEN Relational_Operator8_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_100 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_39 <= signed(phase_voltages_per_switching_state_in_29);

  Delay177_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay177_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay177_out1 <= Switch_on49_out1;
      END IF;
    END IF;
  END PROCESS Delay177_process;


  
  Switch_on49_out1 <= Delay177_out1 WHEN switch_compare_1_100 = '0' ELSE
      End_Cycle_39;

  Delay180_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay180_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay180_out1 <= Switch52_out1;
      END IF;
    END IF;
  END PROCESS Delay180_process;


  
  Switch52_out1 <= Delay180_out1 WHEN switch_compare_1_99 = '0' ELSE
      Switch_on49_out1;

  
  switch_compare_1_101 <= '1' WHEN Relational_Operator8_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_102 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_40 <= signed(phase_voltages_per_switching_state_in_30);

  Delay178_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay178_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay178_out1 <= Switch_on45_out1;
      END IF;
    END IF;
  END PROCESS Delay178_process;


  
  Switch_on45_out1 <= Delay178_out1 WHEN switch_compare_1_102 = '0' ELSE
      End_Cycle_40;

  Delay181_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay181_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay181_out1 <= Switch53_out1;
      END IF;
    END IF;
  END PROCESS Delay181_process;


  
  Switch53_out1 <= Delay181_out1 WHEN switch_compare_1_101 = '0' ELSE
      Switch_on45_out1;

  
  switch_compare_1_103 <= '1' WHEN Relational_Operator8_relop1 > '0' ELSE
      '0';

  
  switch_compare_1_104 <= '1' WHEN End_Cycle = '1' ELSE
      '0';

  End_Cycle_41 <= signed(phase_voltages_per_switching_state_in_31);

  Delay179_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay179_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay179_out1 <= Switch_on46_out1;
      END IF;
    END IF;
  END PROCESS Delay179_process;


  
  Switch_on46_out1 <= Delay179_out1 WHEN switch_compare_1_104 = '0' ELSE
      End_Cycle_41;

  Delay182_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay182_out1 <= to_signed(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay182_out1 <= Switch54_out1;
      END IF;
    END IF;
  END PROCESS Delay182_process;


  
  Switch54_out1 <= Delay182_out1 WHEN switch_compare_1_103 = '0' ELSE
      Switch_on46_out1;

  
  switch_compare_1_105 <= '1' WHEN End_Cycle_42 = '1' ELSE
      '0';

  Delay371_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay371_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay371_out1 <= Switch_on98_out1;
      END IF;
    END IF;
  END PROCESS Delay371_process;


  
  Switch_on98_out1 <= Delay371_out1 WHEN switch_compare_1_105 = '0' ELSE
      Delay_out1;

  
  switch_compare_1_106 <= '1' WHEN End_Cycle_42 = '1' ELSE
      '0';

  Delay372_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay372_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay372_out1 <= Switch_on99_out1;
      END IF;
    END IF;
  END PROCESS Delay372_process;


  
  Switch_on99_out1 <= Delay372_out1 WHEN switch_compare_1_106 = '0' ELSE
      Delay25_out1;

  ---- Tree min implementation ----
  
  MinMax_stage1_1_val <= Switch_on98_out1 WHEN Switch_on98_out1 <= Switch_on99_out1 ELSE
      Switch_on99_out1;

  
  switch_compare_1_107 <= '1' WHEN End_Cycle_42 = '1' ELSE
      '0';

  Delay373_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay373_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay373_out1 <= Switch_on100_out1;
      END IF;
    END IF;
  END PROCESS Delay373_process;


  
  Switch_on100_out1 <= Delay373_out1 WHEN switch_compare_1_107 = '0' ELSE
      Delay49_out1;

  
  switch_compare_1_108 <= '1' WHEN End_Cycle_42 = '1' ELSE
      '0';

  Delay374_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay374_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay374_out1 <= Switch_on101_out1;
      END IF;
    END IF;
  END PROCESS Delay374_process;


  
  Switch_on101_out1 <= Delay374_out1 WHEN switch_compare_1_108 = '0' ELSE
      Delay72_out1;

  
  switch_compare_1_109 <= '1' WHEN End_Cycle_42 = '1' ELSE
      '0';

  Delay375_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay375_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay375_out1 <= Switch_on104_out1;
      END IF;
    END IF;
  END PROCESS Delay375_process;


  
  Switch_on104_out1 <= Delay375_out1 WHEN switch_compare_1_109 = '0' ELSE
      Delay95_out1;

  
  switch_compare_1_110 <= '1' WHEN End_Cycle_42 = '1' ELSE
      '0';

  Delay376_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay376_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay376_out1 <= Switch_on105_out1;
      END IF;
    END IF;
  END PROCESS Delay376_process;


  
  Switch_on105_out1 <= Delay376_out1 WHEN switch_compare_1_110 = '0' ELSE
      Delay118_out1;

  
  MinMax_stage1_3_val <= Switch_on104_out1 WHEN Switch_on104_out1 <= Switch_on105_out1 ELSE
      Switch_on105_out1;

  
  switch_compare_1_111 <= '1' WHEN End_Cycle_42 = '1' ELSE
      '0';

  Delay377_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay377_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay377_out1 <= Switch_on102_out1;
      END IF;
    END IF;
  END PROCESS Delay377_process;


  
  Switch_on102_out1 <= Delay377_out1 WHEN switch_compare_1_111 = '0' ELSE
      Delay141_out1;

  
  switch_compare_1_112 <= '1' WHEN End_Cycle_42 = '1' ELSE
      '0';

  Delay378_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay378_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay378_out1 <= Switch_on103_out1;
      END IF;
    END IF;
  END PROCESS Delay378_process;


  
  Switch_on103_out1 <= Delay378_out1 WHEN switch_compare_1_112 = '0' ELSE
      Delay164_out1;

  Mux7_out1(0) <= Switch51_out1;
  Mux7_out1(1) <= Switch52_out1;
  Mux7_out1(2) <= Switch53_out1;
  Mux7_out1(3) <= Switch54_out1;

  outputgen1: FOR k IN 0 TO 3 GENERATE
    Mux7_out1_1(k) <= std_logic_vector(Mux7_out1(k));
  END GENERATE;

  
  MinMax_stage1_2_val <= Switch_on100_out1 WHEN Switch_on100_out1 <= Switch_on101_out1 ELSE
      Switch_on101_out1;

  
  MinMax_stage2_1_val <= MinMax_stage1_1_val WHEN MinMax_stage1_1_val <= MinMax_stage1_2_val ELSE
      MinMax_stage1_2_val;

  
  MinMax_stage1_4_val <= Switch_on102_out1 WHEN Switch_on102_out1 <= Switch_on103_out1 ELSE
      Switch_on103_out1;

  
  MinMax_stage2_2_val <= MinMax_stage1_3_val WHEN MinMax_stage1_3_val <= MinMax_stage1_4_val ELSE
      MinMax_stage1_4_val;

  
  MinMax_stage3_val <= MinMax_stage2_1_val WHEN MinMax_stage2_1_val <= MinMax_stage2_2_val ELSE
      MinMax_stage2_2_val;

  Constant33_out1 <= to_signed(16#00000#, 20);

  Constant34_out1(0) <= to_signed(16#000000#, 24);
  Constant34_out1(1) <= to_signed(16#000000#, 24);
  Constant34_out1(2) <= to_signed(16#000000#, 24);
  Constant34_out1(3) <= to_signed(16#000000#, 24);

  outputgen: FOR k IN 0 TO 3 GENERATE
    Constant34_out1_1(k) <= std_logic_vector(Constant34_out1(k));
  END GENERATE;

  ce_out <= clk_enable;

  done <= Switch7_out1;

  done_complete <= Logical_Operator_out1;

  J_AXI <= J;

  Index <= Index_tmp;

  voltages_0 <= voltages(0);

  voltages_1 <= voltages(1);

  voltages_2 <= voltages(2);

  voltages_3 <= voltages(3);

  Index_AXI <= Index_tmp;

END rtl;

