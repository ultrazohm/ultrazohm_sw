-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\Phase_voltages_per_switching_state_FCS_MPC_6Phase_PMSM\hdlsrc\Phase_voltages_per_switching_state_MPC_6Phase\Phase_voltages_per_switching_state_MPC_6Phase.vhd
-- Created: 2022-08-23 13:59:47
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Phase_voltages_per_switching_state_MPC_6Phase
-- Source Path: Phase_voltages_per_switching_state_MPC_6Phase
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Phase_voltages_per_switching_state_MPC_6Phase IS
  PORT( IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESETN                     :   IN    std_logic;  -- ufix1
        theta_el                          :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        Index                             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        valid_in                          :   IN    std_logic;  -- ufix1
        AXI4_Lite_ACLK                    :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARESETN                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_AWADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_AWVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_WDATA                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_WSTRB                   :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Lite_WVALID                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_BREADY                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_ARVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_RREADY                  :   IN    std_logic;  -- ufix1
        d_voltage_per_switching_state     :   OUT   std_logic_vector(23 DOWNTO 0);  -- ufix24
        q_voltage_per_switching_state     :   OUT   std_logic_vector(23 DOWNTO 0);  -- ufix24
        x_voltage_per_switching_state     :   OUT   std_logic_vector(23 DOWNTO 0);  -- ufix24
        y_voltage_per_switching_state     :   OUT   std_logic_vector(23 DOWNTO 0);  -- ufix24
        done                              :   OUT   std_logic;  -- ufix1
        AXI4_Lite_AWREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_WREADY                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_BRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_BVALID                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_ARREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_RDATA                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_RRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_RVALID                  :   OUT   std_logic  -- ufix1
        );
END Phase_voltages_per_switching_state_MPC_6Phase;


ARCHITECTURE rtl OF Phase_voltages_per_switching_state_MPC_6Phase IS

  -- Component Declarations
  COMPONENT Phase_voltages_per_switching_state_MPC_6Phase_reset_sync
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset_in                        :   IN    std_logic;  -- ufix1
          reset_out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Phase_voltages_per_switching_state_MPC_6Phase_axi_lite
    PORT( reset                           :   IN    std_logic;
          AXI4_Lite_ACLK                  :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARESETN               :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_AWVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_WDATA                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_WSTRB                 :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_Lite_WVALID                :   IN    std_logic;  -- ufix1
          AXI4_Lite_BREADY                :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_ARVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_RREADY                :   IN    std_logic;  -- ufix1
          read_ip_timestamp               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          read_d_voltage_per_switching_state_AXI :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          read_q_voltage_per_switching_state_AXI :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          read_x_voltage_per_switching_state_AXI :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          read_y_voltage_per_switching_state_AXI :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          AXI4_Lite_AWREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_WREADY                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_BRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_BVALID                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_ARREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_RDATA                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_RRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_RVALID                :   OUT   std_logic;  -- ufix1
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          write_theta_el_offset_AXI       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_u_dc_link_voltage_AXI     :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_use_AXI                   :   OUT   std_logic;  -- ufix1
          write_theta_el_AXI              :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En20
          write_Index_AXI                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32
          reset_internal                  :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  COMPONENT Phase_voltages_per_switching_state_MPC_6Phase_dut
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          dut_enable                      :   IN    std_logic;  -- ufix1
          theta_el                        :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En20
          theta_el_offset_AXI             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          u_dc_link_voltage_AXI           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Index                           :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32
          use_AXI                         :   IN    std_logic;  -- ufix1
          theta_el_AXI                    :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En20
          Index_AXI                       :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32
          valid_in                        :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          d_voltage_per_switching_state   :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          q_voltage_per_switching_state   :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          x_voltage_per_switching_state   :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          y_voltage_per_switching_state   :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          d_voltage_per_switching_state_AXI :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          q_voltage_per_switching_state_AXI :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          x_voltage_per_switching_state_AXI :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          y_voltage_per_switching_state_AXI :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En11
          done                            :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Phase_voltages_per_switching_state_MPC_6Phase_reset_sync
    USE ENTITY work.Phase_voltages_per_switching_state_MPC_6Phase_reset_sync(rtl);

  FOR ALL : Phase_voltages_per_switching_state_MPC_6Phase_axi_lite
    USE ENTITY work.Phase_voltages_per_switching_state_MPC_6Phase_axi_lite(rtl);

  FOR ALL : Phase_voltages_per_switching_state_MPC_6Phase_dut
    USE ENTITY work.Phase_voltages_per_switching_state_MPC_6Phase_dut(rtl);

  -- Signals
  SIGNAL reset                            : std_logic;
  SIGNAL ip_timestamp                     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL reset_cm                         : std_logic;  -- ufix1
  SIGNAL theta_el_unsigned                : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL theta_el_sig                     : signed(23 DOWNTO 0);  -- sfix24_En20
  SIGNAL Index_unsigned                   : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL Index_sig                        : signed(31 DOWNTO 0);  -- sfix32
  SIGNAL reset_internal                   : std_logic;  -- ufix1
  SIGNAL reset_before_sync                : std_logic;  -- ufix1
  SIGNAL d_voltage_per_switching_state_AXI_sig : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL q_voltage_per_switching_state_AXI_sig : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL x_voltage_per_switching_state_AXI_sig : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL y_voltage_per_switching_state_AXI_sig : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL AXI4_Lite_BRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_Lite_RDATA_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_RRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL write_axi_enable                 : std_logic;  -- ufix1
  SIGNAL write_theta_el_offset_AXI        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_u_dc_link_voltage_AXI      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_use_AXI                    : std_logic;  -- ufix1
  SIGNAL write_theta_el_AXI               : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL write_Index_AXI                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL d_voltage_per_switching_state_sig : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL q_voltage_per_switching_state_sig : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL x_voltage_per_switching_state_sig : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL y_voltage_per_switching_state_sig : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL done_sig                         : std_logic;  -- ufix1
  SIGNAL d_voltage_per_switching_state_sig_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL d_voltage_per_switching_state_tmp : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL q_voltage_per_switching_state_sig_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL q_voltage_per_switching_state_tmp : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL x_voltage_per_switching_state_sig_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL x_voltage_per_switching_state_tmp : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL y_voltage_per_switching_state_sig_signed : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL y_voltage_per_switching_state_tmp : unsigned(23 DOWNTO 0);  -- ufix24

BEGIN
  u_Phase_voltages_per_switching_state_MPC_6Phase_reset_sync_inst : Phase_voltages_per_switching_state_MPC_6Phase_reset_sync
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset_in => reset_before_sync,  -- ufix1
              reset_out => reset
              );

  u_Phase_voltages_per_switching_state_MPC_6Phase_axi_lite_inst : Phase_voltages_per_switching_state_MPC_6Phase_axi_lite
    PORT MAP( reset => reset,
              AXI4_Lite_ACLK => AXI4_Lite_ACLK,  -- ufix1
              AXI4_Lite_ARESETN => AXI4_Lite_ARESETN,  -- ufix1
              AXI4_Lite_AWADDR => AXI4_Lite_AWADDR,  -- ufix16
              AXI4_Lite_AWVALID => AXI4_Lite_AWVALID,  -- ufix1
              AXI4_Lite_WDATA => AXI4_Lite_WDATA,  -- ufix32
              AXI4_Lite_WSTRB => AXI4_Lite_WSTRB,  -- ufix4
              AXI4_Lite_WVALID => AXI4_Lite_WVALID,  -- ufix1
              AXI4_Lite_BREADY => AXI4_Lite_BREADY,  -- ufix1
              AXI4_Lite_ARADDR => AXI4_Lite_ARADDR,  -- ufix16
              AXI4_Lite_ARVALID => AXI4_Lite_ARVALID,  -- ufix1
              AXI4_Lite_RREADY => AXI4_Lite_RREADY,  -- ufix1
              read_ip_timestamp => std_logic_vector(ip_timestamp),  -- ufix32
              read_d_voltage_per_switching_state_AXI => d_voltage_per_switching_state_AXI_sig,  -- sfix24_En11
              read_q_voltage_per_switching_state_AXI => q_voltage_per_switching_state_AXI_sig,  -- sfix24_En11
              read_x_voltage_per_switching_state_AXI => x_voltage_per_switching_state_AXI_sig,  -- sfix24_En11
              read_y_voltage_per_switching_state_AXI => y_voltage_per_switching_state_AXI_sig,  -- sfix24_En11
              AXI4_Lite_AWREADY => AXI4_Lite_AWREADY,  -- ufix1
              AXI4_Lite_WREADY => AXI4_Lite_WREADY,  -- ufix1
              AXI4_Lite_BRESP => AXI4_Lite_BRESP_tmp,  -- ufix2
              AXI4_Lite_BVALID => AXI4_Lite_BVALID,  -- ufix1
              AXI4_Lite_ARREADY => AXI4_Lite_ARREADY,  -- ufix1
              AXI4_Lite_RDATA => AXI4_Lite_RDATA_tmp,  -- ufix32
              AXI4_Lite_RRESP => AXI4_Lite_RRESP_tmp,  -- ufix2
              AXI4_Lite_RVALID => AXI4_Lite_RVALID,  -- ufix1
              write_axi_enable => write_axi_enable,  -- ufix1
              write_theta_el_offset_AXI => write_theta_el_offset_AXI,  -- ufix32
              write_u_dc_link_voltage_AXI => write_u_dc_link_voltage_AXI,  -- ufix32
              write_use_AXI => write_use_AXI,  -- ufix1
              write_theta_el_AXI => write_theta_el_AXI,  -- sfix24_En20
              write_Index_AXI => write_Index_AXI,  -- sfix32
              reset_internal => reset_internal  -- ufix1
              );

  u_Phase_voltages_per_switching_state_MPC_6Phase_dut_inst : Phase_voltages_per_switching_state_MPC_6Phase_dut
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset => reset,
              dut_enable => write_axi_enable,  -- ufix1
              theta_el => std_logic_vector(theta_el_sig),  -- sfix24_En20
              theta_el_offset_AXI => write_theta_el_offset_AXI,  -- ufix32
              u_dc_link_voltage_AXI => write_u_dc_link_voltage_AXI,  -- ufix32
              Index => std_logic_vector(Index_sig),  -- sfix32
              use_AXI => write_use_AXI,  -- ufix1
              theta_el_AXI => write_theta_el_AXI,  -- sfix24_En20
              Index_AXI => write_Index_AXI,  -- sfix32
              valid_in => valid_in,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              d_voltage_per_switching_state => d_voltage_per_switching_state_sig,  -- sfix24_En11
              q_voltage_per_switching_state => q_voltage_per_switching_state_sig,  -- sfix24_En11
              x_voltage_per_switching_state => x_voltage_per_switching_state_sig,  -- sfix24_En11
              y_voltage_per_switching_state => y_voltage_per_switching_state_sig,  -- sfix24_En11
              d_voltage_per_switching_state_AXI => d_voltage_per_switching_state_AXI_sig,  -- sfix24_En11
              q_voltage_per_switching_state_AXI => q_voltage_per_switching_state_AXI_sig,  -- sfix24_En11
              x_voltage_per_switching_state_AXI => x_voltage_per_switching_state_AXI_sig,  -- sfix24_En11
              y_voltage_per_switching_state_AXI => y_voltage_per_switching_state_AXI_sig,  -- sfix24_En11
              done => done_sig  -- ufix1
              );

  ip_timestamp <= unsigned'(X"839EEFBF");

  reset_cm <=  NOT IPCORE_RESETN;

  theta_el_unsigned <= unsigned(theta_el);

  theta_el_sig <= signed(theta_el_unsigned);

  Index_unsigned <= unsigned(Index);

  Index_sig <= signed(Index_unsigned);

  reset_before_sync <= reset_cm OR reset_internal;

  d_voltage_per_switching_state_sig_signed <= signed(d_voltage_per_switching_state_sig);

  d_voltage_per_switching_state_tmp <= unsigned(d_voltage_per_switching_state_sig_signed);

  d_voltage_per_switching_state <= std_logic_vector(d_voltage_per_switching_state_tmp);

  q_voltage_per_switching_state_sig_signed <= signed(q_voltage_per_switching_state_sig);

  q_voltage_per_switching_state_tmp <= unsigned(q_voltage_per_switching_state_sig_signed);

  q_voltage_per_switching_state <= std_logic_vector(q_voltage_per_switching_state_tmp);

  x_voltage_per_switching_state_sig_signed <= signed(x_voltage_per_switching_state_sig);

  x_voltage_per_switching_state_tmp <= unsigned(x_voltage_per_switching_state_sig_signed);

  x_voltage_per_switching_state <= std_logic_vector(x_voltage_per_switching_state_tmp);

  y_voltage_per_switching_state_sig_signed <= signed(y_voltage_per_switching_state_sig);

  y_voltage_per_switching_state_tmp <= unsigned(y_voltage_per_switching_state_sig_signed);

  y_voltage_per_switching_state <= std_logic_vector(y_voltage_per_switching_state_tmp);

  done <= done_sig;

  AXI4_Lite_BRESP <= AXI4_Lite_BRESP_tmp;

  AXI4_Lite_RDATA <= AXI4_Lite_RDATA_tmp;

  AXI4_Lite_RRESP <= AXI4_Lite_RRESP_tmp;

END rtl;

