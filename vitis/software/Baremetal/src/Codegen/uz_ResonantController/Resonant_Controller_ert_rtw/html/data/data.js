var dataJson = {"arch":{"ispc":true,"isunix":false,"ismac":false},"build":"uz_ResonantController_2022/Resonant_Controller","ref":false,"files":[{"name":"Resonant_Controller.c","type":"source","group":"model","path":"C:\\uz_sw\\vitis\\software\\Baremetal\\src\\Codegen\\Resonant_Controller_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: Resonant_Controller.c\r\n *\r\n * Code generated for Simulink model 'Resonant_Controller'.\r\n *\r\n * Model version                  : 4.1\r\n * Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n * C/C++ source code generated on : Wed Sep 14 13:32:43 2022\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-R\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. Traceability\r\n * Validation result: Passed (10), Warnings (2), Error (0)\r\n */\r\n\r\n#include \"Resonant_Controller.h\"\r\n#include <math.h>\r\n#include \"rtwtypes.h\"\r\n#include <string.h>\r\n\r\n/* Model step function */\r\nvoid Resonant_Controller_step(RT_MODEL_Resonant_Controller_T *const\r\n  Resonant_Controller_M)\r\n{\r\n  DW_Resonant_Controller_T *Resonant_Controller_DW =\r\n    Resonant_Controller_M->dwork;\r\n  ExtU_Resonant_Controller_T *Resonant_Controller_U =\r\n    (ExtU_Resonant_Controller_T *) Resonant_Controller_M->inputs;\r\n  ExtY_Resonant_Controller_T *Resonant_Controller_Y =\r\n    (ExtY_Resonant_Controller_T *) Resonant_Controller_M->outputs;\r\n  real_T rtb_Cos;\r\n  real_T rtb_Cos1;\r\n  real_T rtb_Product2;\r\n\r\n  /* Product: '<S1>/Product' incorporates:\r\n   *  Inport: '<Root>/T_sw'\r\n   *  Inport: '<Root>/h'\r\n   *  Inport: '<Root>/omega_el'\r\n   *  Product: '<S1>/Product3'\r\n   */\r\n  rtb_Cos = Resonant_Controller_U->omega_el * Resonant_Controller_U->h *\r\n    Resonant_Controller_U->T_sw;\r\n\r\n  /* Trigonometry: '<S1>/Cos1' incorporates:\r\n   *  Gain: '<S1>/Gain'\r\n   */\r\n  rtb_Cos1 = cos(2.0 * rtb_Cos);\r\n\r\n  /* Delay: '<S1>/Delay' incorporates:\r\n   *  Delay: '<S1>/Delay1'\r\n   *  Delay: '<S1>/Delay2'\r\n   *  Delay: '<S1>/Delay3'\r\n   *  Inport: '<Root>/Reset'\r\n   */\r\n  if (Resonant_Controller_U->Reset != 0.0) {\r\n    Resonant_Controller_DW->Delay_DSTATE = 0.0;\r\n    Resonant_Controller_DW->Delay3_DSTATE = 0.0;\r\n    Resonant_Controller_DW->Delay1_DSTATE = 0.0;\r\n    Resonant_Controller_DW->Delay2_DSTATE = 0.0;\r\n  }\r\n\r\n  /* Product: '<S1>/Product2' incorporates:\r\n   *  Delay: '<S1>/Delay'\r\n   *  Inport: '<Root>/Klim'\r\n   *  Inport: '<Root>/T_sw'\r\n   *  Inport: '<Root>/VR'\r\n   *  Inport: '<Root>/in_m'\r\n   *  Inport: '<Root>/in_ref'\r\n   *  Product: '<S1>/Product1'\r\n   *  Product: '<S1>/Product4'\r\n   *  Sum: '<S1>/Subtract'\r\n   *  Sum: '<S1>/Sum'\r\n   */\r\n  rtb_Product2 = ((Resonant_Controller_U->in_ref - Resonant_Controller_U->in_m)\r\n                  - Resonant_Controller_U->Klim *\r\n                  Resonant_Controller_DW->Delay_DSTATE) *\r\n    Resonant_Controller_U->VR * Resonant_Controller_U->T_sw;\r\n\r\n  /* Trigonometry: '<S1>/Cos' */\r\n  rtb_Cos = cos(rtb_Cos);\r\n\r\n  /* Sum: '<S1>/Sum2' incorporates:\r\n   *  Delay: '<S1>/Delay1'\r\n   *  Delay: '<S1>/Delay2'\r\n   *  Delay: '<S1>/Delay3'\r\n   *  Gain: '<S1>/-a2'\r\n   *  Gain: '<S1>/Gain1'\r\n   *  Gain: '<S1>/Gain2'\r\n   *  Product: '<S1>/-a1'\r\n   *  Product: '<S1>/b0'\r\n   *  Product: '<S1>/b1'\r\n   *  Sum: '<S1>/Sum3'\r\n   */\r\n  rtb_Cos = ((-rtb_Cos * Resonant_Controller_DW->Delay3_DSTATE +\r\n              -Resonant_Controller_DW->Delay1_DSTATE) + 2.0 * rtb_Cos *\r\n             Resonant_Controller_DW->Delay2_DSTATE) + rtb_Cos1 * rtb_Product2;\r\n\r\n  /* MATLAB Function: '<S1>/saturation' incorporates:\r\n   *  Inport: '<Root>/lower_limit'\r\n   *  Inport: '<Root>/upper_limit'\r\n   */\r\n  /* MATLAB Function 'Resonant_Controller/saturation': '<S2>:1' */\r\n  /* '<S2>:1:3' output = input; */\r\n  rtb_Cos1 = rtb_Cos;\r\n\r\n  /* '<S2>:1:5' if (input > upper_limit) */\r\n  if (rtb_Cos > Resonant_Controller_U->upper_limit) {\r\n    /* '<S2>:1:6' output = upper_limit; */\r\n    rtb_Cos1 = Resonant_Controller_U->upper_limit;\r\n  }\r\n\r\n  /* '<S2>:1:9' if (input < lower_limit) */\r\n  if (rtb_Cos < Resonant_Controller_U->lower_limit) {\r\n    /* '<S2>:1:10' output = lower_limit; */\r\n    rtb_Cos1 = Resonant_Controller_U->lower_limit;\r\n  }\r\n\r\n  /* End of MATLAB Function: '<S1>/saturation' */\r\n\r\n  /* Outport: '<Root>/out' */\r\n  Resonant_Controller_Y->out = rtb_Cos1;\r\n\r\n  /* Update for Delay: '<S1>/Delay' incorporates:\r\n   *  Sum: '<S1>/Sum1'\r\n   */\r\n  Resonant_Controller_DW->Delay_DSTATE = rtb_Cos - rtb_Cos1;\r\n\r\n  /* Update for Delay: '<S1>/Delay3' */\r\n  Resonant_Controller_DW->Delay3_DSTATE = rtb_Product2;\r\n\r\n  /* Update for Delay: '<S1>/Delay1' incorporates:\r\n   *  Delay: '<S1>/Delay2'\r\n   */\r\n  Resonant_Controller_DW->Delay1_DSTATE = Resonant_Controller_DW->Delay2_DSTATE;\r\n\r\n  /* Update for Delay: '<S1>/Delay2' */\r\n  Resonant_Controller_DW->Delay2_DSTATE = rtb_Cos;\r\n}\r\n\r\n/* Model initialize function */\r\nvoid Resonant_Controller_initialize(RT_MODEL_Resonant_Controller_T *const\r\n  Resonant_Controller_M)\r\n{\r\n  DW_Resonant_Controller_T *Resonant_Controller_DW =\r\n    Resonant_Controller_M->dwork;\r\n  ExtU_Resonant_Controller_T *Resonant_Controller_U =\r\n    (ExtU_Resonant_Controller_T *) Resonant_Controller_M->inputs;\r\n  ExtY_Resonant_Controller_T *Resonant_Controller_Y =\r\n    (ExtY_Resonant_Controller_T *) Resonant_Controller_M->outputs;\r\n\r\n  /* Registration code */\r\n\r\n  /* states (dwork) */\r\n  (void) memset((void *)Resonant_Controller_DW, 0,\r\n                sizeof(DW_Resonant_Controller_T));\r\n\r\n  /* external inputs */\r\n  (void)memset(Resonant_Controller_U, 0, sizeof(ExtU_Resonant_Controller_T));\r\n\r\n  /* external outputs */\r\n  Resonant_Controller_Y->out = 0.0;\r\n\r\n  /* InitializeConditions for Delay: '<S1>/Delay' */\r\n  Resonant_Controller_DW->Delay_DSTATE = 0.0;\r\n\r\n  /* InitializeConditions for Delay: '<S1>/Delay3' */\r\n  Resonant_Controller_DW->Delay3_DSTATE = 0.0;\r\n\r\n  /* InitializeConditions for Delay: '<S1>/Delay1' */\r\n  Resonant_Controller_DW->Delay1_DSTATE = 0.0;\r\n\r\n  /* InitializeConditions for Delay: '<S1>/Delay2' */\r\n  Resonant_Controller_DW->Delay2_DSTATE = 0.0;\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"Resonant_Controller.h","type":"header","group":"model","path":"C:\\uz_sw\\vitis\\software\\Baremetal\\src\\Codegen\\Resonant_Controller_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: Resonant_Controller.h\r\n *\r\n * Code generated for Simulink model 'Resonant_Controller'.\r\n *\r\n * Model version                  : 4.1\r\n * Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n * C/C++ source code generated on : Wed Sep 14 13:32:43 2022\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-R\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. Traceability\r\n * Validation result: Passed (10), Warnings (2), Error (0)\r\n */\r\n\r\n#ifndef RTW_HEADER_Resonant_Controller_h_\r\n#define RTW_HEADER_Resonant_Controller_h_\r\n#ifndef Resonant_Controller_COMMON_INCLUDES_\r\n#define Resonant_Controller_COMMON_INCLUDES_\r\n#include \"rtwtypes.h\"\r\n#endif                                /* Resonant_Controller_COMMON_INCLUDES_ */\r\n\r\n#include <stddef.h>\r\n#include <string.h>\r\n\r\n/* Model Code Variants */\r\n\r\n/* Macros for accessing real-time model data structure */\r\n#ifndef rtmGetRootDWork\r\n#define rtmGetRootDWork(rtm)           ((rtm)->dwork)\r\n#endif\r\n\r\n#ifndef rtmSetRootDWork\r\n#define rtmSetRootDWork(rtm, val)      ((rtm)->dwork = (val))\r\n#endif\r\n\r\n#ifndef rtmGetU\r\n#define rtmGetU(rtm)                   ((rtm)->inputs)\r\n#endif\r\n\r\n#ifndef rtmSetU\r\n#define rtmSetU(rtm, val)              ((rtm)->inputs = (val))\r\n#endif\r\n\r\n#ifndef rtmGetY\r\n#define rtmGetY(rtm)                   ((rtm)->outputs)\r\n#endif\r\n\r\n#ifndef rtmSetY\r\n#define rtmSetY(rtm, val)              ((rtm)->outputs = (val))\r\n#endif\r\n\r\n/* Forward declaration for rtModel */\r\ntypedef struct tag_RTM_Resonant_Controller_T RT_MODEL_Resonant_Controller_T;\r\n\r\n/* Block signals and states (default storage) for system '<Root>' */\r\ntypedef struct {\r\n  real_T Delay_DSTATE;                 /* '<S1>/Delay' */\r\n  real_T Delay3_DSTATE;                /* '<S1>/Delay3' */\r\n  real_T Delay1_DSTATE;                /* '<S1>/Delay1' */\r\n  real_T Delay2_DSTATE;                /* '<S1>/Delay2' */\r\n} DW_Resonant_Controller_T;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\ntypedef struct {\r\n  real_T in_ref;                       /* '<Root>/in_ref' */\r\n  real_T in_m;                         /* '<Root>/in_m' */\r\n  real_T omega_el;                     /* '<Root>/omega_el' */\r\n  real_T h;                            /* '<Root>/h' */\r\n  real_T T_sw;                         /* '<Root>/T_sw' */\r\n  real_T VR;                           /* '<Root>/VR' */\r\n  real_T Klim;                         /* '<Root>/Klim' */\r\n  real_T upper_limit;                  /* '<Root>/upper_limit' */\r\n  real_T lower_limit;                  /* '<Root>/lower_limit' */\r\n  real_T Reset;                        /* '<Root>/Reset' */\r\n} ExtU_Resonant_Controller_T;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\ntypedef struct {\r\n  real_T out;                          /* '<Root>/out' */\r\n} ExtY_Resonant_Controller_T;\r\n\r\n/* Real-time Model Data Structure */\r\nstruct tag_RTM_Resonant_Controller_T {\r\n  ExtU_Resonant_Controller_T *inputs;\r\n  ExtY_Resonant_Controller_T *outputs;\r\n  DW_Resonant_Controller_T *dwork;\r\n};\r\n\r\n/* Model entry point functions */\r\nextern void Resonant_Controller_initialize(RT_MODEL_Resonant_Controller_T *const\r\n  Resonant_Controller_M);\r\nextern void Resonant_Controller_step(RT_MODEL_Resonant_Controller_T *const\r\n  Resonant_Controller_M);\r\n\r\n/*-\r\n * These blocks were eliminated from the model due to optimizations:\r\n *\r\n * Block '<S1>/a0' : Eliminated nontunable gain of 1\r\n */\r\n\r\n/*-\r\n * The generated code includes comments that allow you to trace directly\r\n * back to the appropriate location in the model.  The basic format\r\n * is <system>/block_name, where system is the system number (uniquely\r\n * assigned by Simulink) and block_name is the name of the block.\r\n *\r\n * Note that this particular code originates from a subsystem build,\r\n * and has its own system numbers different from the parent model.\r\n * Refer to the system hierarchy for this subsystem below, and use the\r\n * MATLAB hilite_system command to trace the generated code back\r\n * to the parent model.  For example,\r\n *\r\n * hilite_system('uz_ResonantController_2022/Resonant_Controller')    - opens subsystem uz_ResonantController_2022/Resonant_Controller\r\n * hilite_system('uz_ResonantController_2022/Resonant_Controller/Kp') - opens and selects block Kp\r\n *\r\n * Here is the system hierarchy for this model\r\n *\r\n * '<Root>' : 'uz_ResonantController_2022'\r\n * '<S1>'   : 'uz_ResonantController_2022/Resonant_Controller'\r\n * '<S2>'   : 'uz_ResonantController_2022/Resonant_Controller/saturation'\r\n */\r\n\r\n/*-\r\n * Requirements for '<Root>': Resonant_Controller\r\n */\r\n#endif                                 /* RTW_HEADER_Resonant_Controller_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtwtypes.h","type":"header","group":"utility","path":"C:\\uz_sw\\vitis\\software\\Baremetal\\src\\Codegen\\Resonant_Controller_ert_rtw","tag":"","groupDisplay":"Utility files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtwtypes.h\r\n *\r\n * Code generated for Simulink model 'Resonant_Controller'.\r\n *\r\n * Model version                  : 4.1\r\n * Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n * C/C++ source code generated on : Wed Sep 14 13:32:43 2022\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-R\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. Traceability\r\n * Validation result: Passed (10), Warnings (2), Error (0)\r\n */\r\n\r\n#ifndef RTWTYPES_H\r\n#define RTWTYPES_H\r\n\r\n/* Logical type definitions */\r\n#if (!defined(__cplusplus))\r\n#ifndef false\r\n#define false                          (0U)\r\n#endif\r\n\r\n#ifndef true\r\n#define true                           (1U)\r\n#endif\r\n#endif\r\n\r\n/*=======================================================================*\r\n * Target hardware information\r\n *   Device type: ARM Compatible->ARM Cortex-R\r\n *   Number of bits:     char:   8    short:   16    int:  32\r\n *                       long:  32    long long:  64\r\n *                       native word size:  32\r\n *   Byte ordering: LittleEndian\r\n *   Signed integer division rounds to: Zero\r\n *   Shift right on a signed integer as arithmetic shift: on\r\n *=======================================================================*/\r\n\r\n/*=======================================================================*\r\n * Fixed width word size data types:                                     *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *   real32_T, real64_T           - 32 and 64 bit floating point numbers *\r\n *=======================================================================*/\r\ntypedef signed char int8_T;\r\ntypedef unsigned char uint8_T;\r\ntypedef short int16_T;\r\ntypedef unsigned short uint16_T;\r\ntypedef int int32_T;\r\ntypedef unsigned int uint32_T;\r\ntypedef long long int64_T;\r\ntypedef unsigned long long uint64_T;\r\ntypedef float real32_T;\r\ntypedef double real64_T;\r\n\r\n/*===========================================================================*\r\n * Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\r\n *                           real_T, time_T, ulong_T, ulonglong_T.           *\r\n *===========================================================================*/\r\ntypedef double real_T;\r\ntypedef double time_T;\r\ntypedef unsigned char boolean_T;\r\ntypedef int int_T;\r\ntypedef unsigned int uint_T;\r\ntypedef unsigned long ulong_T;\r\ntypedef unsigned long long ulonglong_T;\r\ntypedef char char_T;\r\ntypedef unsigned char uchar_T;\r\ntypedef char_T byte_T;\r\n\r\n/*===========================================================================*\r\n * Complex number type definitions                                           *\r\n *===========================================================================*/\r\n#define CREAL_T\r\n\r\ntypedef struct {\r\n  real32_T re;\r\n  real32_T im;\r\n} creal32_T;\r\n\r\ntypedef struct {\r\n  real64_T re;\r\n  real64_T im;\r\n} creal64_T;\r\n\r\ntypedef struct {\r\n  real_T re;\r\n  real_T im;\r\n} creal_T;\r\n\r\n#define CINT8_T\r\n\r\ntypedef struct {\r\n  int8_T re;\r\n  int8_T im;\r\n} cint8_T;\r\n\r\n#define CUINT8_T\r\n\r\ntypedef struct {\r\n  uint8_T re;\r\n  uint8_T im;\r\n} cuint8_T;\r\n\r\n#define CINT16_T\r\n\r\ntypedef struct {\r\n  int16_T re;\r\n  int16_T im;\r\n} cint16_T;\r\n\r\n#define CUINT16_T\r\n\r\ntypedef struct {\r\n  uint16_T re;\r\n  uint16_T im;\r\n} cuint16_T;\r\n\r\n#define CINT32_T\r\n\r\ntypedef struct {\r\n  int32_T re;\r\n  int32_T im;\r\n} cint32_T;\r\n\r\n#define CUINT32_T\r\n\r\ntypedef struct {\r\n  uint32_T re;\r\n  uint32_T im;\r\n} cuint32_T;\r\n\r\n#define CINT64_T\r\n\r\ntypedef struct {\r\n  int64_T re;\r\n  int64_T im;\r\n} cint64_T;\r\n\r\n#define CUINT64_T\r\n\r\ntypedef struct {\r\n  uint64_T re;\r\n  uint64_T im;\r\n} cuint64_T;\r\n\r\n/*=======================================================================*\r\n * Min and Max:                                                          *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *=======================================================================*/\r\n#define MAX_int8_T                     ((int8_T)(127))\r\n#define MIN_int8_T                     ((int8_T)(-128))\r\n#define MAX_uint8_T                    ((uint8_T)(255U))\r\n#define MAX_int16_T                    ((int16_T)(32767))\r\n#define MIN_int16_T                    ((int16_T)(-32768))\r\n#define MAX_uint16_T                   ((uint16_T)(65535U))\r\n#define MAX_int32_T                    ((int32_T)(2147483647))\r\n#define MIN_int32_T                    ((int32_T)(-2147483647-1))\r\n#define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))\r\n#define MAX_int64_T                    ((int64_T)(9223372036854775807LL))\r\n#define MIN_int64_T                    ((int64_T)(-9223372036854775807LL-1LL))\r\n#define MAX_uint64_T                   ((uint64_T)(0xFFFFFFFFFFFFFFFFULL))\r\n\r\n/* Block D-Work pointer type */\r\ntypedef void * pointer_T;\r\n\r\n#endif                                 /* RTWTYPES_H */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtmodel.h","type":"header","group":"interface","path":"C:\\uz_sw\\vitis\\software\\Baremetal\\src\\Codegen\\Resonant_Controller_ert_rtw","tag":"","groupDisplay":"Interface files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtmodel.h\r\n *\r\n * Code generated for Simulink model 'Resonant_Controller'.\r\n *\r\n * Model version                  : 4.1\r\n * Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n * C/C++ source code generated on : Wed Sep 14 13:32:43 2022\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-R\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. Traceability\r\n * Validation result: Passed (10), Warnings (2), Error (0)\r\n */\r\n\r\n#ifndef RTW_HEADER_rtmodel_h_\r\n#define RTW_HEADER_rtmodel_h_\r\n#include \"Resonant_Controller.h\"\r\n\r\n/*\r\n * ROOT_IO_FORMAT: 0 (Individual arguments)\r\n * ROOT_IO_FORMAT: 1 (Structure reference)\r\n * ROOT_IO_FORMAT: 2 (Part of model data structure)\r\n */\r\n#define ROOT_IO_FORMAT                 2\r\n\r\n/* Macros generated for backwards compatibility  */\r\n#ifndef rtmGetErrorStatus\r\n#define rtmGetErrorStatus(rtm)         ((void*) 0)\r\n#endif\r\n\r\n#ifndef rtmSetErrorStatus\r\n#define rtmSetErrorStatus(rtm, val)    ((void) 0)\r\n#endif\r\n\r\n#ifndef rtmGetStopRequested\r\n#define rtmGetStopRequested(rtm)       ((void*) 0)\r\n#endif\r\n#endif                                 /* RTW_HEADER_rtmodel_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"}],"trace":"{\"model\":\"Resonant_Controller\",\"sources\":[\"Resonant_Controller.c\",\"Resonant_Controller.h\"],\"categoricalProps\":[\"ModelElemCategory\",\"StorageClass\"],\"categoricalValues\":[\"InternalData\",\"Default\",\"Inports\",\"Outports\"],\"sidPrefixes\":[\"Resonant_Controller\"],\"fileRecords\":{\"1\":{\"records\":[{\"tk\":[64,3,64,9],\"els\":[\"1:282\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[64,10,64,22],\"els\":[\"1:282\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[64,22,64,23],\"els\":[\"1:282\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[65,3,65,9],\"els\":[\"1:291\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[65,10,65,23],\"els\":[\"1:291\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[65,23,65,24],\"els\":[\"1:291\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[66,3,66,9],\"els\":[\"1:287\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[66,10,66,23],\"els\":[\"1:287\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[66,23,66,24],\"els\":[\"1:287\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[67,3,67,9],\"els\":[\"1:289\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[67,10,67,23],\"els\":[\"1:289\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[67,23,67,24],\"els\":[\"1:289\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[72,3,72,9],\"els\":[\"1:294\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[72,10,72,16],\"els\":[\"1:294\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[72,16,72,17],\"els\":[\"1:294\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[73,3,73,9],\"els\":[\"1:295\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[73,10,73,14],\"els\":[\"1:295\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[73,14,73,15],\"els\":[\"1:295\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[74,3,74,9],\"els\":[\"1:296\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[74,10,74,18],\"els\":[\"1:296\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[74,18,74,19],\"els\":[\"1:296\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[75,3,75,9],\"els\":[\"1:297\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[75,10,75,11],\"els\":[\"1:297\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[75,11,75,12],\"els\":[\"1:297\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[76,3,76,9],\"els\":[\"1:298\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[76,10,76,14],\"els\":[\"1:298\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[76,14,76,15],\"els\":[\"1:298\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[77,3,77,9],\"els\":[\"1:299\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[77,10,77,12],\"els\":[\"1:299\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[77,12,77,13],\"els\":[\"1:299\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[78,3,78,9],\"els\":[\"1:300\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[78,10,78,14],\"els\":[\"1:300\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[78,14,78,15],\"els\":[\"1:300\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[79,3,79,9],\"els\":[\"1:301\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[79,10,79,21],\"els\":[\"1:301\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[79,21,79,22],\"els\":[\"1:301\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[80,3,80,9],\"els\":[\"1:302\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[80,10,80,21],\"els\":[\"1:302\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[80,21,80,22],\"els\":[\"1:302\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[81,3,81,9],\"els\":[\"1:303\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[81,10,81,15],\"els\":[\"1:303\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[81,15,81,16],\"els\":[\"1:303\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[86,3,86,9],\"els\":[\"1:304\"],\"ct\":{\"1\":1,\"0\":3}},{\"tk\":[86,10,86,13],\"els\":[\"1:304\"],\"ct\":{\"1\":1,\"0\":3}},{\"tk\":[86,13,86,14],\"els\":[\"1:304\"],\"ct\":{\"1\":1,\"0\":3}}]},\"0\":{\"records\":[{\"tk\":[47,3,47,10],\"els\":[\"0:231#out:1\"]},{\"tk\":[47,11,47,12],\"els\":[\"0:237\"]},{\"tk\":[47,13,47,34],\"els\":[\"0:296\"]},{\"tk\":[47,36,47,44],\"els\":[\"0:296\"]},{\"tk\":[47,45,47,46],\"els\":[\"0:240\"]},{\"tk\":[47,47,47,68],\"els\":[\"0:297\"]},{\"tk\":[47,70,47,71],\"els\":[\"0:297\"]},{\"tk\":[47,72,47,73],\"els\":[\"0:237\"]},{\"tk\":[48,5,48,26],\"els\":[\"0:298\"]},{\"tk\":[48,28,48,32],\"els\":[\"0:298\"]},{\"tk\":[53,3,53,11],\"els\":[\"0:232#out:1\"]},{\"tk\":[53,12,53,13],\"els\":[\"0:232\"]},{\"tk\":[53,14,53,17],\"els\":[\"0:232\"]},{\"tk\":[53,18,53,21],\"els\":[\"0:233\"]},{\"tk\":[53,22,53,23],\"els\":[\"0:233\"]},{\"tk\":[53,24,53,31],\"els\":[\"0:231#out:1\"]},{\"tk\":[61,3,61,5],\"els\":[\"0:282\",\"0:291\",\"0:287\",\"0:289\"]},{\"tk\":[61,7,61,28],\"els\":[\"0:303\"]},{\"tk\":[61,30,61,35],\"els\":[\"0:303\"]},{\"tk\":[61,36,61,38],\"els\":[\"0:282\"]},{\"tk\":[61,39,61,42],\"els\":[\"0:282\"]},{\"tk\":[62,5,62,27],\"els\":[\"0:282\"]},{\"tk\":[62,29,62,41],\"els\":[\"0:282\"]},{\"tk\":[62,42,62,43],\"els\":[\"0:282\"]},{\"tk\":[62,44,62,47],\"els\":[\"0:282\"]},{\"tk\":[63,5,63,27],\"els\":[\"0:291\"]},{\"tk\":[63,29,63,42],\"els\":[\"0:291\"]},{\"tk\":[63,43,63,44],\"els\":[\"0:291\"]},{\"tk\":[63,45,63,48],\"els\":[\"0:291\"]},{\"tk\":[64,5,64,27],\"els\":[\"0:287\"]},{\"tk\":[64,29,64,42],\"els\":[\"0:287\"]},{\"tk\":[64,43,64,44],\"els\":[\"0:287\"]},{\"tk\":[64,45,64,48],\"els\":[\"0:287\"]},{\"tk\":[65,5,65,27],\"els\":[\"0:289\"]},{\"tk\":[65,29,65,42],\"els\":[\"0:289\"]},{\"tk\":[65,43,65,44],\"els\":[\"0:289\"]},{\"tk\":[65,45,65,48],\"els\":[\"0:289\"]},{\"tk\":[80,3,80,15],\"els\":[\"0:239#out:1\"]},{\"tk\":[80,16,80,17],\"els\":[\"0:239\"]},{\"tk\":[80,20,80,41],\"els\":[\"0:294\"]},{\"tk\":[80,43,80,49],\"els\":[\"0:294\"]},{\"tk\":[80,50,80,51],\"els\":[\"0:251\"]},{\"tk\":[80,52,80,73],\"els\":[\"0:295\"]},{\"tk\":[80,75,80,79],\"els\":[\"0:295\"]},{\"tk\":[81,19,81,20],\"els\":[\"0:263\"]},{\"tk\":[81,21,81,42],\"els\":[\"0:300\"]},{\"tk\":[81,44,81,48],\"els\":[\"0:300\"]},{\"tk\":[81,49,81,50],\"els\":[\"0:265\"]},{\"tk\":[82,19,82,41],\"els\":[\"0:282\"]},{\"tk\":[82,43,82,55],\"els\":[\"0:282\"]},{\"tk\":[82,57,82,58],\"els\":[\"0:238\"]},{\"tk\":[83,5,83,26],\"els\":[\"0:299\"]},{\"tk\":[83,28,83,30],\"els\":[\"0:299\"]},{\"tk\":[83,31,83,32],\"els\":[\"0:239\"]},{\"tk\":[83,33,83,54],\"els\":[\"0:298\"]},{\"tk\":[83,56,83,60],\"els\":[\"0:298\"]},{\"tk\":[86,3,86,10],\"els\":[\"0:231#out:1\"]},{\"tk\":[86,11,86,12],\"els\":[\"0:231\"]},{\"tk\":[86,13,86,16],\"els\":[\"0:231\"]},{\"tk\":[86,17,86,24],\"els\":[\"0:231#out:1\"]},{\"tk\":[100,3,100,10],\"els\":[\"0:231#out:1\"]},{\"tk\":[100,11,100,12],\"els\":[\"0:241\"]},{\"tk\":[100,15,100,16],\"els\":[\"0:235\"]},{\"tk\":[100,16,100,23],\"els\":[\"0:231#out:1\"]},{\"tk\":[100,24,100,25],\"els\":[\"0:249\"]},{\"tk\":[100,26,100,48],\"els\":[\"0:291\"]},{\"tk\":[100,50,100,63],\"els\":[\"0:291\"]},{\"tk\":[100,64,100,65],\"els\":[\"0:242\"]},{\"tk\":[101,15,101,16],\"els\":[\"0:227\"]},{\"tk\":[101,16,101,38],\"els\":[\"0:287\"]},{\"tk\":[101,40,101,53],\"els\":[\"0:287\"]},{\"tk\":[101,55,101,56],\"els\":[\"0:242\"]},{\"tk\":[101,57,101,60],\"els\":[\"0:234\"]},{\"tk\":[101,61,101,62],\"els\":[\"0:234\"]},{\"tk\":[101,63,101,70],\"els\":[\"0:231#out:1\"]},{\"tk\":[101,71,101,72],\"els\":[\"0:226\"]},{\"tk\":[102,14,102,36],\"els\":[\"0:289\"]},{\"tk\":[102,38,102,51],\"els\":[\"0:289\"]},{\"tk\":[102,53,102,54],\"els\":[\"0:241\"]},{\"tk\":[102,55,102,63],\"els\":[\"0:232#out:1\"]},{\"tk\":[102,64,102,65],\"els\":[\"0:248\"]},{\"tk\":[102,66,102,78],\"els\":[\"0:239#out:1\"]},{\"tk\":[110,3,110,11],\"els\":[\"0:232#out:1\"]},{\"tk\":[110,12,110,13],\"els\":[\"0:270:56-70\",\"0:270\",\"0:270::22\"]},{\"tk\":[110,14,110,21],\"els\":[\"0:231#out:1\"]},{\"tk\":[113,3,113,5],\"els\":[\"0:270:73-127\",\"0:270\",\"0:270::22\"]},{\"tk\":[113,7,113,14],\"els\":[\"0:231#out:1\"]},{\"tk\":[113,15,113,16],\"els\":[\"0:270:77-96\",\"0:270\",\"0:270::22\"]},{\"tk\":[113,17,113,38],\"els\":[\"0:301\"]},{\"tk\":[113,40,113,51],\"els\":[\"0:301\"]},{\"tk\":[115,5,115,13],\"els\":[\"0:232#out:1\"]},{\"tk\":[115,14,115,15],\"els\":[\"0:270:102-122\",\"0:270\",\"0:270::22\"]},{\"tk\":[115,16,115,37],\"els\":[\"0:301\"]},{\"tk\":[115,39,115,50],\"els\":[\"0:301\"]},{\"tk\":[119,3,119,5],\"els\":[\"0:270:129-183\",\"0:270\",\"0:270::22\"]},{\"tk\":[119,7,119,14],\"els\":[\"0:231#out:1\"]},{\"tk\":[119,15,119,16],\"els\":[\"0:270:133-152\",\"0:270\",\"0:270::22\"]},{\"tk\":[119,17,119,38],\"els\":[\"0:302\"]},{\"tk\":[119,40,119,51],\"els\":[\"0:302\"]},{\"tk\":[121,5,121,13],\"els\":[\"0:232#out:1\"]},{\"tk\":[121,14,121,15],\"els\":[\"0:270:158-178\",\"0:270\",\"0:270::22\"]},{\"tk\":[121,16,121,37],\"els\":[\"0:302\"]},{\"tk\":[121,39,121,50],\"els\":[\"0:302\"]},{\"tk\":[127,3,127,24],\"els\":[\"0:304\"]},{\"tk\":[127,26,127,29],\"els\":[\"0:304\"]},{\"tk\":[127,30,127,31],\"els\":[\"0:304\"]},{\"tk\":[127,32,127,40],\"els\":[\"0:232#out:1\"]},{\"tk\":[132,3,132,25],\"els\":[\"0:282\"]},{\"tk\":[132,27,132,39],\"els\":[\"0:282\"]},{\"tk\":[132,40,132,41],\"els\":[\"0:282\"]},{\"tk\":[132,42,132,49],\"els\":[\"0:231#out:1\"]},{\"tk\":[132,50,132,51],\"els\":[\"0:264\"]},{\"tk\":[132,52,132,60],\"els\":[\"0:232#out:1\"]},{\"tk\":[135,3,135,25],\"els\":[\"0:291\"]},{\"tk\":[135,27,135,40],\"els\":[\"0:291\"]},{\"tk\":[135,41,135,42],\"els\":[\"0:291\"]},{\"tk\":[135,43,135,55],\"els\":[\"0:239#out:1\"]},{\"tk\":[140,3,140,25],\"els\":[\"0:287\"]},{\"tk\":[140,27,140,40],\"els\":[\"0:287\"]},{\"tk\":[140,41,140,42],\"els\":[\"0:287\"]},{\"tk\":[140,43,140,65],\"els\":[\"0:289\"]},{\"tk\":[140,67,140,80],\"els\":[\"0:289\"]},{\"tk\":[143,3,143,25],\"els\":[\"0:289\"]},{\"tk\":[143,27,143,40],\"els\":[\"0:289\"]},{\"tk\":[143,41,143,42],\"els\":[\"0:289\"]},{\"tk\":[143,43,143,50],\"els\":[\"0:231#out:1\"]},{\"tk\":[167,3,167,24],\"els\":[\"0:304\"]},{\"tk\":[167,26,167,29],\"els\":[\"0:304\"]},{\"tk\":[170,3,170,25],\"els\":[\"0:282\"]},{\"tk\":[170,27,170,39],\"els\":[\"0:282\"]},{\"tk\":[170,40,170,41],\"els\":[\"0:282\"]},{\"tk\":[170,42,170,45],\"els\":[\"0:282\"]},{\"tk\":[173,3,173,25],\"els\":[\"0:291\"]},{\"tk\":[173,27,173,40],\"els\":[\"0:291\"]},{\"tk\":[173,41,173,42],\"els\":[\"0:291\"]},{\"tk\":[173,43,173,46],\"els\":[\"0:291\"]},{\"tk\":[176,3,176,25],\"els\":[\"0:287\"]},{\"tk\":[176,27,176,40],\"els\":[\"0:287\"]},{\"tk\":[176,41,176,42],\"els\":[\"0:287\"]},{\"tk\":[176,43,176,46],\"els\":[\"0:287\"]},{\"tk\":[179,3,179,25],\"els\":[\"0:289\"]},{\"tk\":[179,27,179,40],\"els\":[\"0:289\"]},{\"tk\":[179,41,179,42],\"els\":[\"0:289\"]},{\"tk\":[179,43,179,46],\"els\":[\"0:289\"]}]}}}","blocks":[{"RTWName":"<S1>/in_ref","SIDString":"uz_ResonantController_2022:222"},{"RTWName":"<S1>/in_m","SIDString":"uz_ResonantController_2022:257"},{"RTWName":"<S1>/omega_el","SIDString":"uz_ResonantController_2022:223"},{"RTWName":"<S1>/h","SIDString":"uz_ResonantController_2022:224"},{"RTWName":"<S1>/T_sw","SIDString":"uz_ResonantController_2022:225"},{"RTWName":"<S1>/VR","SIDString":"uz_ResonantController_2022:255"},{"RTWName":"<S1>/Klim","SIDString":"uz_ResonantController_2022:266"},{"RTWName":"<S1>/upper_limit","SIDString":"uz_ResonantController_2022:268"},{"RTWName":"<S1>/lower_limit","SIDString":"uz_ResonantController_2022:269"},{"RTWName":"<S1>/Reset","SIDString":"uz_ResonantController_2022:283"},{"RTWName":"<S1>/-a1","SIDString":"uz_ResonantController_2022:226"},{"RTWName":"<S1>/-a2","SIDString":"uz_ResonantController_2022:227"},{"RTWName":"<S1>/Constant1","SIDString":"uz_ResonantController_2022:228"},{"RTWName":"<S1>/Cos","SIDString":"uz_ResonantController_2022:231"},{"RTWName":"<S1>/Cos1","SIDString":"uz_ResonantController_2022:232"},{"RTWName":"<S1>/Delay","SIDString":"uz_ResonantController_2022:282"},{"RTWName":"<S1>/Delay1","SIDString":"uz_ResonantController_2022:287"},{"RTWName":"<S1>/Delay2","SIDString":"uz_ResonantController_2022:289"},{"RTWName":"<S1>/Delay3","SIDString":"uz_ResonantController_2022:291"},{"RTWName":"<S1>/From","SIDString":"uz_ResonantController_2022:285"},{"RTWName":"<S1>/From1","SIDString":"uz_ResonantController_2022:288"},{"RTWName":"<S1>/From2","SIDString":"uz_ResonantController_2022:290"},{"RTWName":"<S1>/From3","SIDString":"uz_ResonantController_2022:292"},{"RTWName":"<S1>/Gain","SIDString":"uz_ResonantController_2022:233"},{"RTWName":"<S1>/Gain1","SIDString":"uz_ResonantController_2022:234"},{"RTWName":"<S1>/Gain2","SIDString":"uz_ResonantController_2022:235"},{"RTWName":"<S1>/Goto","SIDString":"uz_ResonantController_2022:284"},{"RTWName":"<S1>/Product","SIDString":"uz_ResonantController_2022:237"},{"RTWName":"<S1>/Product1","SIDString":"uz_ResonantController_2022:238"},{"RTWName":"<S1>/Product2","SIDString":"uz_ResonantController_2022:239"},{"RTWName":"<S1>/Product3","SIDString":"uz_ResonantController_2022:240"},{"RTWName":"<S1>/Product4","SIDString":"uz_ResonantController_2022:265"},{"RTWName":"<S1>/Subtract","SIDString":"uz_ResonantController_2022:251"},{"RTWName":"<S1>/Sum","SIDString":"uz_ResonantController_2022:263"},{"RTWName":"<S1>/Sum1","SIDString":"uz_ResonantController_2022:264"},{"RTWName":"<S1>/Sum2","SIDString":"uz_ResonantController_2022:241"},{"RTWName":"<S1>/Sum3","SIDString":"uz_ResonantController_2022:242"},{"RTWName":"<S1>/Sum4","SIDString":"uz_ResonantController_2022:243"},{"RTWName":"<S1>/a0","SIDString":"uz_ResonantController_2022:247"},{"RTWName":"<S1>/b0","SIDString":"uz_ResonantController_2022:248"},{"RTWName":"<S1>/b1","SIDString":"uz_ResonantController_2022:249"},{"RTWName":"<S2>:1","SIDString":"uz_ResonantController_2022:270:1"},{"RTWName":"<S1>/out","SIDString":"uz_ResonantController_2022:250"},{"RTWName":"<Root>/Resonant_Controller","SIDString":"uz_ResonantController_2022:221"},{"RTWName":"<S1>/saturation","SIDString":"uz_ResonantController_2022:270"}],"cm":{"GlobalVarInfo":[],"GlobalConstInfo":[],"FcnInfo":[{"Name":"Resonant_Controller_initialize","UniqueKey":"$Resonant_Controller_initialize","Idx":1,"NumCommentLines":8,"NumTotalLines":34,"NumCodeLines":14,"Callee":{"Name":"memset","Weight":2},"Caller":[],"Stack":12,"HasDefinition":1,"File":["C:\\uz_sw\\vitis\\software\\Baremetal\\src\\Codegen\\Resonant_Controller_ert_rtw\\Resonant_Controller.c"],"IsStatic":0,"Complexity":1,"StackTotal":12,"CalleeIdx":7},{"Name":"Resonant_Controller_step","UniqueKey":"$Resonant_Controller_step","Idx":2,"NumCommentLines":60,"NumTotalLines":117,"NumCodeLines":38,"Callee":{"Name":"cos","Weight":2},"Caller":[],"Stack":36,"HasDefinition":1,"File":["C:\\uz_sw\\vitis\\software\\Baremetal\\src\\Codegen\\Resonant_Controller_ert_rtw\\Resonant_Controller.c"],"IsStatic":0,"Complexity":4,"StackTotal":36,"CalleeIdx":6},{"Name":"byteswap-16.h:__bswap_16","UniqueKey":"$byteswap-16.h:__bswap_16","Idx":3,"NumCommentLines":0,"NumTotalLines":4,"NumCodeLines":1,"Callee":[],"Caller":[],"Stack":0,"HasDefinition":1,"File":["C:\\Program Files\\MATLAB\\R2022a\\polyspace\\verifier\\cxx\\include\\include-libc\\bits\\byteswap-16.h"],"IsStatic":1,"Complexity":1,"StackTotal":0,"CalleeIdx":[]},{"Name":"byteswap.h:__bswap_32","UniqueKey":"$byteswap.h:__bswap_32","Idx":4,"NumCommentLines":0,"NumTotalLines":4,"NumCodeLines":1,"Callee":[],"Caller":[],"Stack":0,"HasDefinition":1,"File":["C:\\Program Files\\MATLAB\\R2022a\\polyspace\\verifier\\cxx\\include\\include-libc\\bits\\byteswap.h"],"IsStatic":1,"Complexity":1,"StackTotal":0,"CalleeIdx":[]},{"Name":"byteswap.h:__bswap_64","UniqueKey":"$byteswap.h:__bswap_64","Idx":5,"NumCommentLines":0,"NumTotalLines":4,"NumCodeLines":1,"Callee":[],"Caller":[],"Stack":0,"HasDefinition":1,"File":["C:\\Program Files\\MATLAB\\R2022a\\polyspace\\verifier\\cxx\\include\\include-libc\\bits\\byteswap.h"],"IsStatic":1,"Complexity":1,"StackTotal":0,"CalleeIdx":[]},{"Name":"cos","UniqueKey":"$cos","Idx":6,"NumCommentLines":0,"NumTotalLines":0,"NumCodeLines":0,"Callee":[],"Caller":{"Name":"Resonant_Controller_step","Weight":2},"Stack":0,"HasDefinition":0,"File":["C:\\Program Files\\MATLAB\\R2022a\\polyspace\\verifier\\cxx\\include\\include-libc\\bits\\mathcalls.h"],"IsStatic":0,"Complexity":0,"StackTotal":0,"CalleeIdx":[]},{"Name":"memset","UniqueKey":"$memset","Idx":7,"NumCommentLines":0,"NumTotalLines":0,"NumCodeLines":0,"Callee":[],"Caller":{"Name":"Resonant_Controller_initialize","Weight":2},"Stack":0,"HasDefinition":0,"File":["C:\\Program Files\\MATLAB\\R2022a\\polyspace\\verifier\\cxx\\include\\include-libc\\string.h"],"IsStatic":0,"Complexity":0,"StackTotal":0,"CalleeIdx":[]}]}};