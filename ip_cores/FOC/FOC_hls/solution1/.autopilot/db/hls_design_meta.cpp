#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_Dout_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_Dout_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_Dout_AWADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_Dout_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_Dout_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_Dout_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_Dout_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_Dout_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_Dout_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_Dout_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_Dout_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_Dout_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_Dout_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_Dout_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_Dout_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_Dout_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_Dout_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_Dout_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_Dout_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_Dout_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_Dout_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_Dout_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_Dout_ARADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_Dout_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_Dout_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_Dout_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_Dout_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_Dout_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_Dout_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_Dout_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_Dout_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_Dout_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_Dout_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_Dout_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_Dout_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_Dout_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_Dout_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_Dout_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_Dout_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_Dout_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_Dout_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_Dout_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_Dout_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_Dout_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_Dout_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("s_axi_Din_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Din_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_Din_AWADDR", 8, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Din_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Din_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_Din_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Din_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Din_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Din_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_Din_ARADDR", 8, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Din_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_Din_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Din_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_Din_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_Din_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_Din_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Din_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_ARADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_BRESP", 2, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "uz_FOC_sample";
