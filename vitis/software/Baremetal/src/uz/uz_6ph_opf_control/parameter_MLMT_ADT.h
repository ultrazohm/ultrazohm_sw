#ifndef PARAMETER_MLMT_ADT_H
#define PARAMETER_MLMT_ADT_H



/*
header-file for the parameter of ML- and MT-Control strategy for
open phase faults in asymmetric dual three-phase machines
*/


struct kparameter{
    float k1;
    float k2;
    float k3;
    float k4;
    float k5;
    float k6;
    float k7;
    float k8;
};

typedef struct kparameter kparameter;

int get_index_OPF_2(int p1, int p2);
int get_index_OPF_3(int p1, int p2, int p3);
kparameter get_k_parameter(int p1, int p2, int p3, int num_OPF, int N1N2, int ML, float* a, int* error);


//////////////////////////////////////////////////////////////////////////////////////////////////////
const kparameter k_1OPF_2N_ML[6] = {
	{ -1.000000 , 0.000000, 0.003160, 0.000007, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ -0.250339 , 0.432829, -0.432817, 0.750106, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ -0.249752 , -0.432951, 0.433156, 0.750036, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ 0.749868 , 0.433182, -0.433242, -0.249707, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ 0.750212 , -0.432462, 0.432646, -0.250955, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ 0.001353 , 0.000055, -0.000000, -1.000000, -0.000000, -0.000000, -0.000000, -0.000000 }
};
const float a_1OPF_2N_ML[6] = { 0.554233, 0.554679, 0.554679, 0.554710, 0.554623, 0.554634};


const kparameter k_1OPF_2N_MT[6] = {
	{ -1.000000 , -0.000000, -0.000000, -0.993959, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ 0.470210 , 0.848824, -0.848826, 0.509931, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ 0.475208 , -0.850897, 0.851712, 0.508734, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ 0.512009 , 0.845221, -0.845225, 0.463966, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ 0.507559 , -0.852934, 0.852932, 0.477325, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ -0.987140 , 0.000000, 0.000000, -1.000000, -0.000000, -0.000000, -0.000000, -0.000000 }
};
const float a_1OPF_2N_MT[6] = { 0.577349, 0.577312, 0.577188, 0.577294, 0.577328, 0.577346};


const kparameter k_2OPF_2N[15] = {
	{ -0.999998 , 0.000001, -0.000000, 0.999999, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ -1.000000 , -0.000000, 0.000000, 1.000000, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ -1.000000 , 0.000000, -3.464102, -1.000000, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ -1.000000 , -0.000000, 3.464102, -1.000000, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ -1.000000 , -0.000000, 0.000000, -1.000000, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ -1.000000 , 0.000000, 0.000000, 1.000000, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ 0.500000 , 0.866025, -0.866025, 0.500000, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ 2.000000 , -1.732051, -1.732051, 2.000000, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ -1.000000 , 3.464102, 0.000000, -1.000000, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ 2.000000 , 1.732051, 1.732051, 2.000000, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ 0.500000 , -0.866025, 0.866025, 0.500000, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ -1.000000 , -3.464102, 0.000000, -1.000000, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ 1.000000 , -0.000000, 0.000000, -1.000000, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ 1.000000 , -0.000000, -0.000000, -1.000000, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ 1.000000 , -0.000000, 0.000000, -1.000000, -0.000000, -0.000000, -0.000000, -0.000000 }
};
const float a_2OPF_2N[15] = { 0.500000, 0.500000, 0.288675, 0.288675, 0.577350, 0.500000, 0.577350, 0.288675, 0.288675, 0.288675, 0.577350, 0.288675, 0.500000, 0.500000, 0.500000};


const kparameter k_3OPF_2N[2] = {
	{ -1.000000 , 0.000000, 0.000000, 1.000000, -0.000000, -0.000000, -0.000000, -0.000000 },
	{ 0.999995 , -0.000000, 0.000001, -0.999994, -0.000000, -0.000000, -0.000000, -0.000000 }
};
const float a_3OPF_2N[2] = { 0.500000, 0.500001};


const kparameter k_1OPF_1N_ML[6] = {
	{ -0.667299 , 0.001163, 0.001459, -0.002816, -0.332701, -0.001163, 0.332701, 0.001163 },
	{ -0.166710 , 0.289897, -0.287089, 0.499189, 0.168019, -0.288766, -0.168019, 0.288766 },
	{ -0.166735 , -0.288963, 0.288448, 0.499928, 0.166829, 0.288594, -0.166829, -0.288594 },
	{ 0.500187 , 0.289220, -0.287740, -0.166981, 0.288981, 0.166038, -0.288981, -0.166038 },
	{ 0.499209 , -0.287775, 0.289765, -0.167781, -0.288815, 0.166889, 0.288815, -0.166889 },
	{ 0.003219 , -0.001715, -0.004516, -0.669753, 0.004516, -0.330247, -0.004516, 0.330247 }
};
const float a_1OPF_1N_ML[6] = { 0.541710, 0.541515, 0.541841, 0.541659, 0.541497, 0.542072};


const kparameter k_2OPF_1N_ML[15] = {
	{ -0.832669 , 0.288987, -0.289825, 0.499460, -0.167331, -0.288987, 0.167331, 0.288987 },
	{ -0.832736 , -0.289669, 0.289709, 0.498278, -0.167264, 0.289669, 0.167264, -0.289669 },
	{ -0.943284 , -0.054484, -3.479298, -0.985401, -0.056716, 0.054485, 0.056716, -0.054485 },
	{ -0.177425 , -0.219813, 0.394210, -0.179646, -0.822575, 0.219813, 0.822575, -0.219813 },
	{ -0.747780 , 0.251349, 0.252220, -0.748651, -0.252220, -0.251349, 0.252220, 0.251349 },
	{ -0.333294 , 0.002322, 0.000000, 1.000000, 0.333353, 0.001161, -0.333353, -0.001161 },
	{ 0.375047 , 0.900572, -0.399696, 0.371071, 0.341377, -0.094383, -0.341377, 0.094383 },
	{ 1.987659 , -1.787586, -1.744388, 1.944465, -0.016855, -0.075862, 0.016856, 0.075862 },
	{ -0.176431 , 0.393821, -0.220675, -0.177321, 0.220675, -0.822679, -0.220675, 0.822679 },
	{ 0.355558 , 0.087529, 0.087608, 0.355479, 0.601908, 0.601937, -0.601908, -0.601937 },
	{ 0.373932 , -0.398691, 0.899805, 0.374778, -0.092288, 0.342113, 0.092289, -0.342113 },
	{ -0.979744 , -3.468940, -0.075595, -0.981937, 0.075595, -0.018063, -0.075595, 0.018063 },
	{ 1.000000 , -0.000000, -0.000087, -0.334460, -0.000044, 0.332770, 0.000044, -0.332770 },
	{ 0.500026 , 0.289064, -0.288660, -0.833109, 0.288660, -0.166891, -0.288660, 0.166891 },
	{ 0.499150 , -0.288546, 0.289166, -0.833408, -0.289166, -0.166592, 0.289166, 0.166592 }
};
const float a_2OPF_1N_ML[15] = { 0.493273, 0.493146, 0.282750, 0.481822, 0.526690, 0.492918, 0.526696, 0.282698, 0.481999, 0.481849, 0.526925, 0.286248, 0.493230, 0.493145, 0.493107};


const kparameter k_1OPF_1N_MT[6] = {
	{ -0.641980 , -0.203667, -0.749948, -0.291711, -0.358020, 0.203667, 0.358020, -0.203667 },
	{ 0.297333 , -0.212224, -0.750458, 0.643240, -0.001249, -0.415075, 0.001249, 0.415075 },
	{ -0.174985 , -1.023206, 0.060478, 0.170874, 0.360132, 0.206441, -0.360132, -0.206440 },
	{ 0.170872 , 0.060493, -1.023217, -0.174952, 0.206437, 0.360135, -0.206437, -0.360135 },
	{ 0.645277 , -0.744314, -0.209233, 0.294720, -0.411816, 0.002765, 0.411816, -0.002765 },
	{ -0.295475 , -0.754235, -0.208902, -0.641112, 0.208902, -0.358887, -0.208902, 0.358888 }
};
const float a_1OPF_1N_MT[6] = { 0.693212, 0.694390, 0.694393, 0.694393, 0.693213, 0.694444};


const kparameter k_2OPF_1N_MT[15] = {
	{ -0.540509 , 0.264529, -0.795861, 0.541823, -0.459491, -0.264529, 0.459491, 0.264529 },
	{ -0.991446 , -0.565298, 0.014816, 0.020876, -0.008554, 0.565298, 0.008554, -0.565298 },
	{ -1.000000 , -0.000000, -3.464102, -1.000001, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ -0.000002 , -0.267948, -0.267941, -0.000002, -0.999998, 0.267949, 0.999998, -0.267949 },
	{ -1.000000 , -0.000000, 0.000000, -1.000000, -0.000000, 0.000000, 0.000000, -0.000000 },
	{ -0.097004 , -0.527201, -0.000000, 1.000000, 0.451498, -0.263601, -0.451498, 0.263601 },
	{ 0.500000 , 0.866025, -0.866025, 0.500000, 0.000000, 0.000000, 0.000000, 0.000000 },
	{ 2.000000 , -1.732052, -1.732051, 2.000001, -0.000000, 0.000000, 0.000000, 0.000001 },
	{ -0.000361 , -0.267867, -0.267852, -0.000022, 0.267852, -0.999978, -0.267852, 0.999978 },
	{ 0.000260 , -0.267457, -0.267689, 0.000492, 0.731956, 0.731871, -0.731955, -0.731871 },
	{ 0.500000 , -0.866025, 0.866025, 0.500000, 0.000000, -0.000000, -0.000000, 0.000000 },
	{ -1.000001 , -3.464102, -0.000000, -1.000000, -0.000000, 0.000000, -0.000000, -0.000000 },
	{ 1.000000 , 0.000001, -0.528116, -0.099971, -0.264057, 0.450014, 0.264058, -0.450014 },
	{ 0.104648 , -0.008222, -0.516932, -1.004747, 0.516932, 0.004748, -0.516932, -0.004747 },
	{ 0.545449 , -0.792216, 0.262435, -0.542614, -0.262435, -0.457386, 0.262435, 0.457386 }
};
const float a_2OPF_1N_MT[15] = { 0.557413, 0.557393, 0.288675, 0.557676, 0.577350, 0.557371, 0.577350, 0.288675, 0.557632, 0.557571, 0.577350, 0.288675, 0.557624, 0.557544, 0.557407};


const kparameter k_3OPF_1N[20] = {
	{ -1.000000 , 0.000000, -0.000000, 1.000000, -0.000000, -0.000000, 0.000000, 0.000000 },
	{ 1.365513 , 1.365738, -4.097203, -1.365591, -2.365422, -1.365743, 2.365222, 1.365630 },
	{ 0.732048 , -0.999997, -2.999995, 2.732041, -1.732047, 0.999994, 1.732049, -0.999996 },
	{ -1.000000 , 0.732051, 0.000000, -0.267949, 0.000000, -0.732051, -0.000000, 0.732051 },
	{ -2.732039 , -0.999999, -2.999980, -0.732047, 1.732039, 0.999997, -1.732049, -1.000001 },
	{ -0.366025 , -0.366026, 1.098077, 0.366023, -0.633975, 0.366027, 0.633974, -0.366024 },
	{ -1.000006 , -2.732007, -0.000004, -3.731976, 0.000001, 2.732000, -0.000001, -2.731984 },
	{ 1.000000 , -0.000009, -3.999997, -0.999945, -2.000000, 0.000016, 1.999999, -0.000028 },
	{ -3.731982 , -0.000226, -2.732008, -1.000133, 2.731989, 0.000215, -2.732007, -0.000140 },
	{ -0.267951 , 0.000000, 0.732052, -0.999998, -0.732050, -0.000001, 0.732052, 0.000000 },
	{ 0.267951 , 0.732053, 0.000000, 0.999999, 0.633976, 0.366026, -0.633973, -0.366022 },
	{ 3.731965 , -2.732013, 0.000002, 1.000000, 2.365977, -1.366002, -2.365960, 1.365996 },
	{ -0.999999 , -4.000000, -0.000000, 1.000000, 0.000000, -2.000000, -0.000000, 2.000000 },
	{ 1.000000 , 0.000000, -2.732027, 3.732033, -1.366005, 2.366010, 1.366012, -2.366016 },
	{ 0.366025 , 1.098076, -0.366025, -0.366025, 0.366026, -0.633974, -0.366025, 0.633975 },
	{ 2.732038 , -2.999994, -0.999993, 0.732047, 0.999999, -1.732051, -0.999993, 1.732048 },
	{ 0.999998 , -0.000001, 0.732052, 0.267951, 0.366023, 0.633972, -0.366025, -0.633974 },
	{ -0.732025 , -2.999977, -0.999981, -2.732035, 0.999994, 1.732047, -0.999986, -1.732038 },
	{ -1.366021 , -4.098063, 1.366023, 1.366017, -1.366021, -2.366013, 1.366023, 2.366017 },
	{ 1.000000 , 0.000000, -0.000000, -1.000000, 0.000000, 0.000000, -0.000000, -0.000000 }
};
const float a_3OPF_1N[20] = { 0.500000, 0.122035, 0.149430, 0.408248, 0.149430, 0.408248, 0.122011, 0.149430, 0.122010, 0.408249, 0.408249, 0.122011, 0.149429, 0.122009, 0.408248, 0.149430, 0.408249, 0.149430, 0.122009, 0.500000};




///////////////////////////////////////////////////////////

kparameter get_k_parameter(int p1, int p2, int p3, int num_OPF, int N1N2, int ML, float* a, int* error){

//check input values
kparameter k = {0};
int i = 0;
*error = 0;

// check parameter:

if(num_OPF == 0){
	*a = 1.0f;
	return k;
}

if(N1N2 == 2){
    if(num_OPF == 1){
            if(ML){
                k = k_1OPF_2N_ML[p1-1];
                *a = a_1OPF_2N_ML[p1-1];
            }
            else{   //MT
                k = k_1OPF_2N_MT[p1-1];
                *a = a_1OPF_2N_MT[p1-1];
            }
    }
    else if(num_OPF == 2){
    	i = get_index_OPF_2(p1, p2);
        k = k_2OPF_2N[i];
        *a = a_2OPF_2N[i];
    }
    else if(num_OPF == 3){
        if( (p1 == 1) && (p2 == 2) && (p3 == 3) ){
            k = k_3OPF_2N[0];
            *a = a_3OPF_2N[0];
        }
        else if( (p1 == 4) && (p2 == 5) && (p3 == 6) ){
            k = k_3OPF_2N[1];
            *a = a_3OPF_2N[1];
        }
    }
    else{
        //error
    	*error = -1;
    }
}
else if( N1N2 ==1){
    if( num_OPF == 1){
            if(ML){
                k = k_1OPF_1N_ML[p1-1];
                *a = a_1OPF_1N_ML[p1-1];
            }
            else{   //MT
                k = k_1OPF_1N_MT[p1-1];
                *a = a_1OPF_1N_MT[p1-1];
            }
    }
    else if(num_OPF == 2){
            if(ML){
            	i =get_index_OPF_2(p1, p2);
                k = k_2OPF_1N_ML[i];
                *a = a_2OPF_1N_ML[i];
            }
            else{   //MT
            	i = get_index_OPF_2(p1, p2);
                k = k_2OPF_1N_MT[i];
                *a = a_2OPF_1N_MT[i];
            }
    }
    else if(num_OPF == 3){
    			i = get_index_OPF_3(p1,p2,p3);
                k = k_3OPF_1N[i];
                *a = a_3OPF_1N[i];
    }
    else{
        //error
    	*error = -1;
    }
}
return k;
}


int get_index_OPF_2(int p1, int p2){
    int index = 0;

        if(p1 == 1){
             if(p2 == 2){
                    index = 0;   // 1-2
            }
            else if (p2 == 3){
                    index = 1;   // 1-3
            }
            else if(p2 == 4){
                    index = 2;   // 1-4
            }
            else if(p2 == 5){
                    index = 3;   // 1-5
            }
            else if(p2 == 6){
                    index = 4;   // 1-6
            }
        }
        else if(p1 == 2){
            if(p2 == 3){
                    index = 5;   // 2-3
            }
            else if(p2 == 4){
                    index = 6;   // 2-4
            }
            else if(p2 == 5){
                    index = 7;   // 2-5
            }
            else if(p2 == 6){
                    index = 8;   // 2-6
            }
        }
        else if(p1 == 3){
            if(p2 == 4){
                    index = 9;   // 3-4
            }
            else if(p2 == 5){
                    index = 10;  // 3-5
            }
            else if (p2 == 6){
                    index = 11;  // 3-6
            }
        }
        else if(p1 == 4){
            if(p2 == 5){
                    index = 12;  // 4-5
            }
            else if(p2 == 6){
                    index = 13;  // 4-6
            }
        }
        else if (p1 == 5 && p2 == 6){   // 5-6
                    index = 14;
        }
    return index;
}

int get_index_OPF_3(int p1, int p2, int p3){
    int index = 0;

        if(p1 == 1){
             if(p2 == 2){
                    if(p3 == 3){
                            index = 0;   // 1-2-3
                    }
                    else if(p3 == 4){
                            index = 1;   // 1-2-4
                    }
                    else if(p3 == 5){
                            index = 2;   // 1-2-5
                    }
                    else if(p3 == 6){
                            index = 3;   // 1-2-6
                    }
            }
            else if (p2 == 3){
                    if(p3 == 4){
                            index = 4;   // 1-3-4
                    }
                    else if(p3 == 5){
                            index = 5;   // 1-3-5
                    }
                    else if(p3 == 6){
                            index = 6;   // 1-3-6
                    }
            }
            else if(p2 == 4){
                    if(p3 == 5){
                            index = 7;   // 1-4-5
                    }
                    else if(p3 == 6){
                            index = 8;   // 1-4-6
                    }
            }
            else if((p2 == 5) && (p3 == 6)){
                            index = 9;  // 1-5-6
            }
        }
        else if(p1 == 2){
            if(p2 == 3){
                    if(p3 == 4){
                            index = 10;   // 2-3-4
                    }
                    else if(p3 == 5){
                            index = 11;   // 2-3-5
                    }
                    else if(p3 == 6){
                            index = 12;   // 2-3-6
                    }
            }
            else if(p2 == 4){
                    if(p3 == 5){
                            index = 13;   // 2-4-5
                    }
                    else if(p3 == 6){
                            index = 14;   // 2-4-6
                    }
            }
            else if((p2 == 5)&& (p3 == 6) ){
                            index = 15;   // 2-5-6
            }
        }
        else if(p1 == 3){
            if(p2 == 4){
                    if(p3 == 5){
                            index = 16;  // 3-4-5
                    }
                    else if (p3 == 6){
                            index = 17;  // 3-4-6
                    }
            }
            else if((p2 == 5) && (p3 == 6) ){
                            index = 18;  // 3-5-6
            }
        }
        else if((p1 == 4) && (p2 == 5) && (p3 == 6) ) {
            if(p2 == 5){
                            index = 19;  // 4-5-6
            }
        }
    return index;
}
#endif // PARAMETER_MLMT_ADT_H
