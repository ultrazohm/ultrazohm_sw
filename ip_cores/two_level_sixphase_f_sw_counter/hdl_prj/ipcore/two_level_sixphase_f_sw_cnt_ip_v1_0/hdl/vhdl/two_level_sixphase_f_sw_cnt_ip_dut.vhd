-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\two_level_sixphase_f_sw_counter\two_level_sixphase_f_sw_cnt_ip_dut.vhd
-- Created: 2023-01-05 11:03:35
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: two_level_sixphase_f_sw_cnt_ip_dut
-- Source Path: two_level_sixphase_f_sw_cnt_ip/two_level_sixphase_f_sw_cnt_ip_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY two_level_sixphase_f_sw_cnt_ip_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        ss_in_0                           :   IN    std_logic;  -- ufix1
        ss_in_1                           :   IN    std_logic;  -- ufix1
        ss_in_2                           :   IN    std_logic;  -- ufix1
        ss_in_3                           :   IN    std_logic;  -- ufix1
        ss_in_4                           :   IN    std_logic;  -- ufix1
        ss_in_5                           :   IN    std_logic;  -- ufix1
        ss_in_6                           :   IN    std_logic;  -- ufix1
        ss_in_7                           :   IN    std_logic;  -- ufix1
        ss_in_8                           :   IN    std_logic;  -- ufix1
        ss_in_9                           :   IN    std_logic;  -- ufix1
        ss_in_10                          :   IN    std_logic;  -- ufix1
        ss_in_11                          :   IN    std_logic;  -- ufix1
        bResetAXI                         :   IN    std_logic;  -- ufix1
        ce_out                            :   OUT   std_logic;  -- ufix1
        switchNumb_AXI                    :   OUT   std_logic_vector(24 DOWNTO 0);  -- ufix25
        switchNumb                        :   OUT   std_logic_vector(24 DOWNTO 0)  -- ufix25
        );
END two_level_sixphase_f_sw_cnt_ip_dut;


ARCHITECTURE rtl OF two_level_sixphase_f_sw_cnt_ip_dut IS

  -- Component Declarations
  COMPONENT two_level_sixphase_f_sw_cnt_ip_src_two_level_sixphase_f_sw_counter
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          ss_in_0                         :   IN    std_logic;  -- ufix1
          ss_in_1                         :   IN    std_logic;  -- ufix1
          ss_in_2                         :   IN    std_logic;  -- ufix1
          ss_in_3                         :   IN    std_logic;  -- ufix1
          ss_in_4                         :   IN    std_logic;  -- ufix1
          ss_in_5                         :   IN    std_logic;  -- ufix1
          ss_in_6                         :   IN    std_logic;  -- ufix1
          ss_in_7                         :   IN    std_logic;  -- ufix1
          ss_in_8                         :   IN    std_logic;  -- ufix1
          ss_in_9                         :   IN    std_logic;  -- ufix1
          ss_in_10                        :   IN    std_logic;  -- ufix1
          ss_in_11                        :   IN    std_logic;  -- ufix1
          bResetAXI                       :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          switchNumb_AXI                  :   OUT   std_logic_vector(24 DOWNTO 0);  -- ufix25
          switchNumb                      :   OUT   std_logic_vector(24 DOWNTO 0)  -- ufix25
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : two_level_sixphase_f_sw_cnt_ip_src_two_level_sixphase_f_sw_counter
    USE ENTITY work.two_level_sixphase_f_sw_cnt_ip_src_two_level_sixphase_f_sw_counter(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL ss_in_0_sig                      : std_logic;  -- ufix1
  SIGNAL ss_in_1_sig                      : std_logic;  -- ufix1
  SIGNAL ss_in_2_sig                      : std_logic;  -- ufix1
  SIGNAL ss_in_3_sig                      : std_logic;  -- ufix1
  SIGNAL ss_in_4_sig                      : std_logic;  -- ufix1
  SIGNAL ss_in_5_sig                      : std_logic;  -- ufix1
  SIGNAL ss_in_6_sig                      : std_logic;  -- ufix1
  SIGNAL ss_in_7_sig                      : std_logic;  -- ufix1
  SIGNAL ss_in_8_sig                      : std_logic;  -- ufix1
  SIGNAL ss_in_9_sig                      : std_logic;  -- ufix1
  SIGNAL ss_in_10_sig                     : std_logic;  -- ufix1
  SIGNAL ss_in_11_sig                     : std_logic;  -- ufix1
  SIGNAL bResetAXI_sig                    : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL switchNumb_AXI_sig               : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL switchNumb_sig                   : std_logic_vector(24 DOWNTO 0);  -- ufix25

BEGIN
  u_two_level_sixphase_f_sw_cnt_ip_src_two_level_sixphase_f_sw_counter : two_level_sixphase_f_sw_cnt_ip_src_two_level_sixphase_f_sw_counter
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              ss_in_0 => ss_in_0_sig,  -- ufix1
              ss_in_1 => ss_in_1_sig,  -- ufix1
              ss_in_2 => ss_in_2_sig,  -- ufix1
              ss_in_3 => ss_in_3_sig,  -- ufix1
              ss_in_4 => ss_in_4_sig,  -- ufix1
              ss_in_5 => ss_in_5_sig,  -- ufix1
              ss_in_6 => ss_in_6_sig,  -- ufix1
              ss_in_7 => ss_in_7_sig,  -- ufix1
              ss_in_8 => ss_in_8_sig,  -- ufix1
              ss_in_9 => ss_in_9_sig,  -- ufix1
              ss_in_10 => ss_in_10_sig,  -- ufix1
              ss_in_11 => ss_in_11_sig,  -- ufix1
              bResetAXI => bResetAXI_sig,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              switchNumb_AXI => switchNumb_AXI_sig,  -- ufix25
              switchNumb => switchNumb_sig  -- ufix25
              );

  ss_in_0_sig <= ss_in_0;

  ss_in_1_sig <= ss_in_1;

  ss_in_2_sig <= ss_in_2;

  ss_in_3_sig <= ss_in_3;

  ss_in_4_sig <= ss_in_4;

  ss_in_5_sig <= ss_in_5;

  ss_in_6_sig <= ss_in_6;

  ss_in_7_sig <= ss_in_7;

  ss_in_8_sig <= ss_in_8;

  ss_in_9_sig <= ss_in_9;

  ss_in_10_sig <= ss_in_10;

  ss_in_11_sig <= ss_in_11;

  bResetAXI_sig <= bResetAXI;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  switchNumb_AXI <= switchNumb_AXI_sig;

  switchNumb <= switchNumb_sig;

END rtl;

