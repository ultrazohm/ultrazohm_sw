// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module BGD_accumulate_float_4u_223 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_values_dout,
        p_values_empty_n,
        p_values_read,
        p_accumulator_address0,
        p_accumulator_ce0,
        p_accumulator_we0,
        p_accumulator_d0,
        p_accumulator_q0,
        p_accumulator_address1,
        p_accumulator_ce1,
        p_accumulator_we1,
        p_accumulator_d1,
        p_accumulator_q1,
        p_weightGradientAvg_offset_dout,
        p_weightGradientAvg_offset_empty_n,
        p_weightGradientAvg_offset_read,
        mul_ln481_loc_dout,
        mul_ln481_loc_empty_n,
        mul_ln481_loc_read,
        p_initZero_dout,
        p_initZero_empty_n,
        p_initZero_read
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_pp0_stage1 = 6'd4;
parameter    ap_ST_fsm_pp0_stage2 = 6'd8;
parameter    ap_ST_fsm_pp0_stage3 = 6'd16;
parameter    ap_ST_fsm_state22 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [127:0] p_values_dout;
input   p_values_empty_n;
output   p_values_read;
output  [15:0] p_accumulator_address0;
output   p_accumulator_ce0;
output   p_accumulator_we0;
output  [31:0] p_accumulator_d0;
input  [31:0] p_accumulator_q0;
output  [15:0] p_accumulator_address1;
output   p_accumulator_ce1;
output   p_accumulator_we1;
output  [31:0] p_accumulator_d1;
input  [31:0] p_accumulator_q1;
input  [15:0] p_weightGradientAvg_offset_dout;
input   p_weightGradientAvg_offset_empty_n;
output   p_weightGradientAvg_offset_read;
input  [31:0] mul_ln481_loc_dout;
input   mul_ln481_loc_empty_n;
output   mul_ln481_loc_read;
input  [0:0] p_initZero_dout;
input   p_initZero_empty_n;
output   p_initZero_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_values_read;
reg[15:0] p_accumulator_address0;
reg p_accumulator_ce0;
reg p_accumulator_we0;
reg[31:0] p_accumulator_d0;
reg[15:0] p_accumulator_address1;
reg p_accumulator_ce1;
reg p_accumulator_we1;
reg p_weightGradientAvg_offset_read;
reg mul_ln481_loc_read;
reg p_initZero_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_values_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln409_reg_353;
reg    p_weightGradientAvg_offset_blk_n;
reg    mul_ln481_loc_blk_n;
reg    p_initZero_blk_n;
reg   [29:0] i_reg_147;
wire   [31:0] grp_fu_158_p2;
reg   [31:0] reg_162;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state12_pp0_stage2_iter2;
wire    ap_block_state16_pp0_stage2_iter3;
wire    ap_block_state20_pp0_stage2_iter4;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln409_reg_353_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state13_pp0_stage3_iter2;
wire    ap_block_state17_pp0_stage3_iter3;
wire    ap_block_state21_pp0_stage3_iter4;
wire    ap_block_pp0_stage3_11001;
reg   [0:0] icmp_ln409_reg_353_pp0_iter3_reg;
reg   [15:0] p_weightGradientAvg_offset_read_reg_332;
reg    ap_block_state1;
reg   [0:0] p_initZero_read_reg_340;
reg   [29:0] trunc_ln_reg_348;
wire   [0:0] icmp_ln409_fu_177_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state10_pp0_stage0_iter2;
wire    ap_block_state14_pp0_stage0_iter3;
wire    ap_block_state18_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln409_reg_353_pp0_iter2_reg;
reg   [0:0] icmp_ln409_reg_353_pp0_iter4_reg;
wire   [29:0] add_ln409_fu_182_p2;
reg   [29:0] add_ln409_reg_357;
wire   [15:0] tmp_s_fu_192_p3;
reg   [15:0] tmp_s_reg_362;
reg   [15:0] tmp_s_reg_362_pp0_iter1_reg;
reg   [15:0] tmp_s_reg_362_pp0_iter2_reg;
reg   [15:0] p_accumulator_addr_reg_369;
reg   [15:0] p_accumulator_addr_reg_369_pp0_iter1_reg;
wire   [31:0] trunc_ln674_fu_210_p1;
reg   [31:0] trunc_ln674_reg_374;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state11_pp0_stage1_iter2;
wire    ap_block_state15_pp0_stage1_iter3;
wire    ap_block_state19_pp0_stage1_iter4;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] p_Result_i_i_reg_379;
reg   [31:0] p_Result_i_i_reg_379_pp0_iter1_reg;
reg   [31:0] p_Result_i_i_reg_379_pp0_iter2_reg;
reg   [31:0] p_Result_18_i_i_reg_384;
reg   [31:0] p_Result_18_i_i_reg_384_pp0_iter1_reg;
reg   [31:0] p_Result_18_i_i_reg_384_pp0_iter2_reg;
reg   [31:0] p_Result_19_i_i_reg_389;
reg   [31:0] p_Result_19_i_i_reg_389_pp0_iter1_reg;
reg   [31:0] p_Result_19_i_i_reg_389_pp0_iter2_reg;
reg   [31:0] p_accumulator_load_reg_394;
wire   [31:0] bitcast_ln101_fu_244_p1;
wire   [31:0] select_ln403_fu_248_p3;
reg   [15:0] p_accumulator_addr_4_reg_409;
reg   [15:0] p_accumulator_addr_4_reg_409_pp0_iter3_reg;
reg   [15:0] p_accumulator_addr_4_reg_409_pp0_iter4_reg;
reg   [31:0] p_accumulator_load_4_reg_415;
reg    ap_enable_reg_pp0_iter2;
reg   [15:0] p_accumulator_addr_5_reg_420;
reg   [15:0] p_accumulator_addr_5_reg_420_pp0_iter3_reg;
reg   [15:0] p_accumulator_addr_5_reg_420_pp0_iter4_reg;
reg   [15:0] p_accumulator_addr_6_reg_426;
reg   [15:0] p_accumulator_addr_6_reg_426_pp0_iter3_reg;
reg   [15:0] p_accumulator_addr_6_reg_426_pp0_iter4_reg;
wire   [31:0] select_ln403_1_fu_300_p3;
reg   [31:0] select_ln403_1_reg_431;
wire   [31:0] select_ln403_2_fu_306_p3;
reg   [31:0] select_ln403_2_reg_436;
wire   [31:0] select_ln403_3_fu_313_p3;
reg   [31:0] select_ln403_3_reg_441;
wire   [31:0] bitcast_ln101_23_fu_320_p1;
wire   [31:0] bitcast_ln101_24_fu_324_p1;
wire   [31:0] bitcast_ln101_25_fu_328_p1;
reg   [31:0] add3_2_i_i_reg_461;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] add3_3_i_i_reg_466;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage3_subdone;
reg   [29:0] ap_phi_mux_i_phi_fu_151_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln416_fu_205_p1;
wire   [63:0] zext_ln416_4_fu_265_p1;
wire   [63:0] zext_ln416_5_fu_280_p1;
wire   [63:0] zext_ln416_6_fu_295_p1;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage2;
reg   [31:0] grp_fu_158_p0;
reg   [31:0] grp_fu_158_p1;
wire   [13:0] empty_fu_188_p1;
wire   [15:0] add_ln416_fu_200_p2;
wire   [15:0] or_ln416_fu_255_p2;
wire   [15:0] add_ln416_1_fu_260_p2;
wire   [15:0] or_ln416_3_fu_270_p2;
wire   [15:0] add_ln416_2_fu_275_p2;
wire   [15:0] or_ln416_4_fu_285_p2;
wire   [15:0] add_ln416_3_fu_290_p2;
reg    grp_fu_158_ce;
wire    ap_CS_fsm_state22;
reg   [5:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0;
reg    ap_predicate_op42_load_state2;
reg    ap_enable_operation_42;
reg    ap_enable_state2_pp0_iter0_stage0;
reg    ap_predicate_op48_load_state3;
reg    ap_enable_operation_48;
reg    ap_enable_state3_pp0_iter0_stage1;
reg    ap_enable_operation_56;
reg    ap_enable_state9_pp0_iter1_stage3;
reg    ap_enable_operation_96;
reg    ap_enable_state20_pp0_iter4_stage2;
reg    ap_enable_operation_97;
reg    ap_enable_operation_100;
reg    ap_enable_state21_pp0_iter4_stage3;
reg    ap_predicate_op61_load_state10;
reg    ap_enable_operation_61;
reg    ap_enable_state10_pp0_iter2_stage0;
reg    ap_predicate_op62_load_state11;
reg    ap_enable_operation_62;
reg    ap_enable_state11_pp0_iter2_stage1;
reg    ap_predicate_op67_load_state11;
reg    ap_enable_operation_67;
reg    ap_predicate_op74_load_state12;
reg    ap_enable_operation_74;
reg    ap_enable_state12_pp0_iter2_stage2;
reg    ap_predicate_op72_load_state11;
reg    ap_enable_operation_72;
reg    ap_predicate_op76_load_state12;
reg    ap_enable_operation_76;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

BGD_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_158_p0),
    .din1(grp_fu_158_p1),
    .ce(grp_fu_158_ce),
    .dout(grp_fu_158_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((p_initZero_empty_n == 1'b0) | (mul_ln481_loc_empty_n == 1'b0) | (p_weightGradientAvg_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((p_initZero_empty_n == 1'b0) | (mul_ln481_loc_empty_n == 1'b0) | (p_weightGradientAvg_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_initZero_empty_n == 1'b0) | (mul_ln481_loc_empty_n == 1'b0) | (p_weightGradientAvg_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_147 <= 30'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln409_reg_353 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_147 <= add_ln409_reg_357;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln409_reg_353_pp0_iter3_reg == 1'd0))) begin
        add3_2_i_i_reg_461 <= grp_fu_158_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln409_reg_353_pp0_iter4_reg == 1'd0))) begin
        add3_3_i_i_reg_466 <= grp_fu_158_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln409_reg_357 <= add_ln409_fu_182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln409_reg_353 <= icmp_ln409_fu_177_p2;
        icmp_ln409_reg_353_pp0_iter1_reg <= icmp_ln409_reg_353;
        icmp_ln409_reg_353_pp0_iter2_reg <= icmp_ln409_reg_353_pp0_iter1_reg;
        icmp_ln409_reg_353_pp0_iter3_reg <= icmp_ln409_reg_353_pp0_iter2_reg;
        icmp_ln409_reg_353_pp0_iter4_reg <= icmp_ln409_reg_353_pp0_iter3_reg;
        p_accumulator_addr_4_reg_409_pp0_iter3_reg <= p_accumulator_addr_4_reg_409;
        p_accumulator_addr_4_reg_409_pp0_iter4_reg <= p_accumulator_addr_4_reg_409_pp0_iter3_reg;
        p_accumulator_addr_reg_369_pp0_iter1_reg <= p_accumulator_addr_reg_369;
        tmp_s_reg_362_pp0_iter1_reg[15 : 2] <= tmp_s_reg_362[15 : 2];
        tmp_s_reg_362_pp0_iter2_reg[15 : 2] <= tmp_s_reg_362_pp0_iter1_reg[15 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_reg_353 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_Result_18_i_i_reg_384 <= {{p_values_dout[95:64]}};
        p_Result_19_i_i_reg_389 <= {{p_values_dout[127:96]}};
        p_Result_i_i_reg_379 <= {{p_values_dout[63:32]}};
        trunc_ln674_reg_374 <= trunc_ln674_fu_210_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_Result_18_i_i_reg_384_pp0_iter1_reg <= p_Result_18_i_i_reg_384;
        p_Result_18_i_i_reg_384_pp0_iter2_reg <= p_Result_18_i_i_reg_384_pp0_iter1_reg;
        p_Result_19_i_i_reg_389_pp0_iter1_reg <= p_Result_19_i_i_reg_389;
        p_Result_19_i_i_reg_389_pp0_iter2_reg <= p_Result_19_i_i_reg_389_pp0_iter1_reg;
        p_Result_i_i_reg_379_pp0_iter1_reg <= p_Result_i_i_reg_379;
        p_Result_i_i_reg_379_pp0_iter2_reg <= p_Result_i_i_reg_379_pp0_iter1_reg;
        p_accumulator_addr_5_reg_420_pp0_iter3_reg <= p_accumulator_addr_5_reg_420;
        p_accumulator_addr_5_reg_420_pp0_iter4_reg <= p_accumulator_addr_5_reg_420_pp0_iter3_reg;
        p_accumulator_addr_6_reg_426_pp0_iter3_reg <= p_accumulator_addr_6_reg_426;
        p_accumulator_addr_6_reg_426_pp0_iter4_reg <= p_accumulator_addr_6_reg_426_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln409_reg_353_pp0_iter1_reg == 1'd0))) begin
        p_accumulator_addr_4_reg_409 <= zext_ln416_4_fu_265_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln409_reg_353_pp0_iter2_reg == 1'd0))) begin
        p_accumulator_addr_5_reg_420 <= zext_ln416_5_fu_280_p1;
        p_accumulator_addr_6_reg_426 <= zext_ln416_6_fu_295_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln409_fu_177_p2 == 1'd0))) begin
        p_accumulator_addr_reg_369 <= zext_ln416_fu_205_p1;
        tmp_s_reg_362[15 : 2] <= tmp_s_fu_192_p3[15 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln409_reg_353_pp0_iter2_reg == 1'd0) & (p_initZero_read_reg_340 == 1'd0))) begin
        p_accumulator_load_4_reg_415 <= p_accumulator_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_reg_353 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (p_initZero_read_reg_340 == 1'd0))) begin
        p_accumulator_load_reg_394 <= p_accumulator_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_initZero_empty_n == 1'b0) | (mul_ln481_loc_empty_n == 1'b0) | (p_weightGradientAvg_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_initZero_read_reg_340 <= p_initZero_dout;
        p_weightGradientAvg_offset_read_reg_332 <= p_weightGradientAvg_offset_dout;
        trunc_ln_reg_348 <= {{mul_ln481_loc_dout[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln409_reg_353_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln409_reg_353_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        reg_162 <= grp_fu_158_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln409_reg_353_pp0_iter2_reg == 1'd0))) begin
        select_ln403_1_reg_431 <= select_ln403_1_fu_300_p3;
        select_ln403_2_reg_436 <= select_ln403_2_fu_306_p3;
        select_ln403_3_reg_441 <= select_ln403_3_fu_313_p3;
    end
end

always @ (*) begin
    if ((icmp_ln409_fu_177_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln409_reg_353 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_151_p4 = add_ln409_reg_357;
    end else begin
        ap_phi_mux_i_phi_fu_151_p4 = i_reg_147;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_158_ce = 1'b1;
    end else begin
        grp_fu_158_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_fu_158_p0 = select_ln403_3_reg_441;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_fu_158_p0 = select_ln403_2_reg_436;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_158_p0 = select_ln403_1_reg_431;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_158_p0 = select_ln403_fu_248_p3;
    end else begin
        grp_fu_158_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_fu_158_p1 = bitcast_ln101_25_fu_328_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_fu_158_p1 = bitcast_ln101_24_fu_324_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_158_p1 = bitcast_ln101_23_fu_320_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_158_p1 = bitcast_ln101_fu_244_p1;
    end else begin
        grp_fu_158_p1 = 'bx;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        mul_ln481_loc_blk_n = mul_ln481_loc_empty_n;
    end else begin
        mul_ln481_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_initZero_empty_n == 1'b0) | (mul_ln481_loc_empty_n == 1'b0) | (p_weightGradientAvg_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        mul_ln481_loc_read = 1'b1;
    end else begin
        mul_ln481_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_accumulator_address0 = p_accumulator_addr_6_reg_426_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_accumulator_address0 = p_accumulator_addr_5_reg_420_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_accumulator_address0 = zext_ln416_6_fu_295_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_accumulator_address0 = zext_ln416_4_fu_265_p1;
    end else begin
        p_accumulator_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_accumulator_address1 = p_accumulator_addr_4_reg_409_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_accumulator_address1 = zext_ln416_5_fu_280_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_accumulator_address1 = p_accumulator_addr_reg_369_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_accumulator_address1 = zext_ln416_fu_205_p1;
    end else begin
        p_accumulator_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        p_accumulator_ce0 = 1'b1;
    end else begin
        p_accumulator_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        p_accumulator_ce1 = 1'b1;
    end else begin
        p_accumulator_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            p_accumulator_d0 = add3_3_i_i_reg_466;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            p_accumulator_d0 = add3_2_i_i_reg_461;
        end else begin
            p_accumulator_d0 = 'bx;
        end
    end else begin
        p_accumulator_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln409_reg_353_pp0_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln409_reg_353_pp0_iter4_reg == 1'd0)))) begin
        p_accumulator_we0 = 1'b1;
    end else begin
        p_accumulator_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln409_reg_353_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln409_reg_353_pp0_iter4_reg == 1'd0)))) begin
        p_accumulator_we1 = 1'b1;
    end else begin
        p_accumulator_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_initZero_blk_n = p_initZero_empty_n;
    end else begin
        p_initZero_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_initZero_empty_n == 1'b0) | (mul_ln481_loc_empty_n == 1'b0) | (p_weightGradientAvg_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_initZero_read = 1'b1;
    end else begin
        p_initZero_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln409_reg_353 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_values_blk_n = p_values_empty_n;
    end else begin
        p_values_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln409_reg_353 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_values_read = 1'b1;
    end else begin
        p_values_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_weightGradientAvg_offset_blk_n = p_weightGradientAvg_offset_empty_n;
    end else begin
        p_weightGradientAvg_offset_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_initZero_empty_n == 1'b0) | (mul_ln481_loc_empty_n == 1'b0) | (p_weightGradientAvg_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_weightGradientAvg_offset_read = 1'b1;
    end else begin
        p_weightGradientAvg_offset_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_initZero_empty_n == 1'b0) | (mul_ln481_loc_empty_n == 1'b0) | (p_weightGradientAvg_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln409_fu_177_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln409_fu_177_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b0)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln409_fu_182_p2 = (ap_phi_mux_i_phi_fu_151_p4 + 30'd1);

assign add_ln416_1_fu_260_p2 = (p_weightGradientAvg_offset_read_reg_332 + or_ln416_fu_255_p2);

assign add_ln416_2_fu_275_p2 = (p_weightGradientAvg_offset_read_reg_332 + or_ln416_3_fu_270_p2);

assign add_ln416_3_fu_290_p2 = (p_weightGradientAvg_offset_read_reg_332 + or_ln416_4_fu_285_p2);

assign add_ln416_fu_200_p2 = (p_weightGradientAvg_offset_read_reg_332 + tmp_s_fu_192_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_pp0 = (((ap_ST_fsm_pp0_stage2 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage2_subdone)) | ((ap_ST_fsm_pp0_stage1 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage1_subdone)) | ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone)) | ((ap_ST_fsm_pp0_stage3 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage3_subdone)));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((icmp_ln409_reg_353 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (p_values_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((icmp_ln409_reg_353 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (p_values_empty_n == 1'b0));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((p_initZero_empty_n == 1'b0) | (mul_ln481_loc_empty_n == 1'b0) | (p_weightGradientAvg_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((icmp_ln409_reg_353 == 1'd0) & (p_values_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_100 = (icmp_ln409_reg_353_pp0_iter4_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_42 = (ap_predicate_op42_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_48 = (ap_predicate_op48_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_56 = (icmp_ln409_reg_353_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_61 = (ap_predicate_op61_load_state10 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_62 = (ap_predicate_op62_load_state11 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_67 = (ap_predicate_op67_load_state11 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_72 = (ap_predicate_op72_load_state11 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_74 = (ap_predicate_op74_load_state12 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_76 = (ap_predicate_op76_load_state12 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_96 = (icmp_ln409_reg_353_pp0_iter4_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_97 = (icmp_ln409_reg_353_pp0_iter4_reg == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state10_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state11_pp0_iter2_stage1 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state12_pp0_iter2_stage2 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_enable_state20_pp0_iter4_stage2 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_enable_state21_pp0_iter4_stage3 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_enable_state2_pp0_iter0_stage0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state3_pp0_iter0_stage1 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state9_pp0_iter1_stage3 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_predicate_op42_load_state2 = ((icmp_ln409_fu_177_p2 == 1'd0) & (p_initZero_read_reg_340 == 1'd0));
end

always @ (*) begin
    ap_predicate_op48_load_state3 = ((icmp_ln409_reg_353 == 1'd0) & (p_initZero_read_reg_340 == 1'd0));
end

always @ (*) begin
    ap_predicate_op61_load_state10 = ((p_initZero_read_reg_340 == 1'd0) & (icmp_ln409_reg_353_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op62_load_state11 = ((icmp_ln409_reg_353_pp0_iter2_reg == 1'd0) & (p_initZero_read_reg_340 == 1'd0));
end

always @ (*) begin
    ap_predicate_op67_load_state11 = ((icmp_ln409_reg_353_pp0_iter2_reg == 1'd0) & (p_initZero_read_reg_340 == 1'd0));
end

always @ (*) begin
    ap_predicate_op72_load_state11 = ((icmp_ln409_reg_353_pp0_iter2_reg == 1'd0) & (p_initZero_read_reg_340 == 1'd0));
end

always @ (*) begin
    ap_predicate_op74_load_state12 = ((icmp_ln409_reg_353_pp0_iter2_reg == 1'd0) & (p_initZero_read_reg_340 == 1'd0));
end

always @ (*) begin
    ap_predicate_op76_load_state12 = ((icmp_ln409_reg_353_pp0_iter2_reg == 1'd0) & (p_initZero_read_reg_340 == 1'd0));
end

assign bitcast_ln101_23_fu_320_p1 = p_Result_i_i_reg_379_pp0_iter2_reg;

assign bitcast_ln101_24_fu_324_p1 = p_Result_18_i_i_reg_384_pp0_iter2_reg;

assign bitcast_ln101_25_fu_328_p1 = p_Result_19_i_i_reg_389_pp0_iter2_reg;

assign bitcast_ln101_fu_244_p1 = trunc_ln674_reg_374;

assign empty_fu_188_p1 = ap_phi_mux_i_phi_fu_151_p4[13:0];

assign icmp_ln409_fu_177_p2 = ((ap_phi_mux_i_phi_fu_151_p4 == trunc_ln_reg_348) ? 1'b1 : 1'b0);

assign or_ln416_3_fu_270_p2 = (tmp_s_reg_362_pp0_iter2_reg | 16'd2);

assign or_ln416_4_fu_285_p2 = (tmp_s_reg_362_pp0_iter2_reg | 16'd3);

assign or_ln416_fu_255_p2 = (tmp_s_reg_362_pp0_iter1_reg | 16'd1);

assign p_accumulator_d1 = reg_162;

assign select_ln403_1_fu_300_p3 = ((p_initZero_read_reg_340[0:0] === 1'b1) ? 32'd0 : p_accumulator_load_4_reg_415);

assign select_ln403_2_fu_306_p3 = ((p_initZero_read_reg_340[0:0] === 1'b1) ? 32'd0 : p_accumulator_q1);

assign select_ln403_3_fu_313_p3 = ((p_initZero_read_reg_340[0:0] === 1'b1) ? 32'd0 : p_accumulator_q0);

assign select_ln403_fu_248_p3 = ((p_initZero_read_reg_340[0:0] === 1'b1) ? 32'd0 : p_accumulator_load_reg_394);

assign tmp_s_fu_192_p3 = {{empty_fu_188_p1}, {2'd0}};

assign trunc_ln674_fu_210_p1 = p_values_dout[31:0];

assign zext_ln416_4_fu_265_p1 = add_ln416_1_fu_260_p2;

assign zext_ln416_5_fu_280_p1 = add_ln416_2_fu_275_p2;

assign zext_ln416_6_fu_295_p1 = add_ln416_3_fu_290_p2;

assign zext_ln416_fu_205_p1 = add_ln416_fu_200_p2;

always @ (posedge ap_clk) begin
    tmp_s_reg_362[1:0] <= 2'b00;
    tmp_s_reg_362_pp0_iter1_reg[1:0] <= 2'b00;
    tmp_s_reg_362_pp0_iter2_reg[1:0] <= 2'b00;
end

endmodule //BGD_accumulate_float_4u_223
