-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\valen\Documents\repos\UZ\ultrazohm_sw\ip_cores\uz_pmsm_model_9ph\hdlprj\hdlsrc\uz_pmsm_model_9ph\uz_pmsm_model_9ph_src_nfp_div_double.vhd
-- Created: 2022-04-15 14:11:16
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_pmsm_model_9ph_src_nfp_div_double
-- Source Path: uz_pmsm_model_9ph/uz_pmsm_model_9ph/nfp_div_double
-- Hierarchy Level: 1
-- 
-- {Latency Strategy = "Zero", Denormal Handling = "on"}
-- {Radix = "2"}
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY uz_pmsm_model_9ph_src_nfp_div_double IS
  PORT( nfp_in1                           :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
        nfp_in2                           :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
        nfp_out                           :   OUT   std_logic_vector(63 DOWNTO 0)  -- ufix64
        );
END uz_pmsm_model_9ph_src_nfp_div_double;


ARCHITECTURE rtl OF uz_pmsm_model_9ph_src_nfp_div_double IS

  -- Signals
  SIGNAL nfp_in1_unsigned                 : unsigned(63 DOWNTO 0);  -- ufix64
  SIGNAL aSign                            : std_logic;  -- ufix1
  SIGNAL aExponent                        : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL aMantissa                        : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL nfp_in2_unsigned                 : unsigned(63 DOWNTO 0);  -- ufix64
  SIGNAL bSign                            : std_logic;  -- ufix1
  SIGNAL bExponent                        : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL bMantissa                        : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL tmp_out1                         : std_logic;  -- ufix1
  SIGNAL aExponent_cfType_Exponent_I_out1 : std_logic;  -- ufix1
  SIGNAL bExponent_cfType_Exponent_I_out1 : std_logic;  -- ufix1
  SIGNAL alphaaExponent_cfType_Exponent_out1 : std_logic;  -- ufix1
  SIGNAL aExponent_0_out1                 : std_logic;  -- ufix1
  SIGNAL aMantissa_0_out1                 : std_logic;  -- ufix1
  SIGNAL alphaaExponent_0_aMantissa_out1  : std_logic;  -- ufix1
  SIGNAL bExponent_0_out1                 : std_logic;  -- ufix1
  SIGNAL bMantissa_0_out1                 : std_logic;  -- ufix1
  SIGNAL alphabExponent_0_bMantissa_out1  : std_logic;  -- ufix1
  SIGNAL C_out1                           : std_logic;  -- ufix1
  SIGNAL alpha1_out1                      : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL alphaExponent_0_cfType_Exp_out1  : std_logic;  -- ufix1
  SIGNAL alpha1_out1_1                    : std_logic;  -- ufix1
  SIGNAL alpha0_out1                      : std_logic;  -- ufix1
  SIGNAL if_Exponent_0_cfType_Exp_out1    : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1                 : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL BitSlice_out1                    : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Bit_Slice13_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1          : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1          : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1          : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_1                : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice16_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_1               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_1               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_2                : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_1        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_1        : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_1        : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice16_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_1               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_2               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_1         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_2               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_2               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_2               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_3                : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_2        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_2        : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_2        : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice7_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice16_out1_2               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_2               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_2               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_3               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_2         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_3               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_3               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_3         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_3               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_4                : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_3        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_3        : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_3        : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice16_out1_3               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_3               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_3         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_3               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_4               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_3         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_3         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_4               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_4               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_4         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_4               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_5                : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_4        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_4        : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_4        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice16_out1_4               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_4               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_4         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_4               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_5               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_4         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_4         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_5               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_5               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_5         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_5               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_6                : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_5        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_5        : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice8_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice7_out1_1                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_1                : std_logic;  -- ufix1
  SIGNAL Constant_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Bit_Slice1_out1_1                : std_logic;  -- ufix1
  SIGNAL Constant1_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch2_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator_out1            : std_logic;  -- ufix1
  SIGNAL Constant2_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch1_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant3_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant4_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator2_out1_1         : std_logic;  -- ufix1
  SIGNAL Switch3_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch4_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant5_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant6_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch6_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant7_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant8_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch8_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator12_out1_5        : std_logic;  -- ufix1
  SIGNAL Switch9_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch10_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator_out1_1          : std_logic;  -- ufix1
  SIGNAL Switch13_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch_out1                      : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_1                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_2                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator3_out1_1         : std_logic;  -- ufix1
  SIGNAL Switch2_out1_1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch1_out1_1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_3                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_4                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch3_out1_1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_5                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch5_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch6_out1_1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL bitsll_mant_a_ia_out1            : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL if_bitget_mant_a_mant_a_WordLen_1_out1 : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL Bit_Concat1_out1_1               : unsigned(56 DOWNTO 0);  -- ufix57
  SIGNAL reinterpretcast_bitconcat_fi_0_out1 : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL alpha3_out1                      : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL alphaExponent_0_cfType_Exp_out1_1 : std_logic;  -- ufix1
  SIGNAL alpha1_out1_2                    : std_logic;  -- ufix1
  SIGNAL alpha0_out1_1                    : std_logic;  -- ufix1
  SIGNAL if_Exponent_0_cfType_Exp_out1_1  : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_2               : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL BitSlice1_out1                   : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_2                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Bit_Slice13_out1_6               : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_6               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_6               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_6         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_6               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_7                : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_6        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_6        : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_6        : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_8                : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice16_out1_5               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_5               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_5         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_5               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_7               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_5         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_5         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_7               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_7               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_7         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_7               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_9                : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_7        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_7        : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_7        : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1_2                : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice16_out1_6               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_6               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_6         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_6               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_8               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_6         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_8               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_8               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_8         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_8               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_10               : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_8        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_8        : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_8        : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice7_out1_2                : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice16_out1_7               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_7               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_7         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_7               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_9               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_7         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_9               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_9               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_9         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_9               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_11               : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_9        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_9        : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_9        : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_2                : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice16_out1_8               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_8               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_8         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_8               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_10              : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_8         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_8         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_10              : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_10              : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_10        : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_10              : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_12               : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_10       : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_10       : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_10       : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_2                : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice16_out1_9               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_9               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_9         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_9               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_11              : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_9         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_11              : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_11              : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_11        : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_11              : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_13               : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_11       : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_11       : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_2                : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice8_out1_3                : std_logic;  -- ufix1
  SIGNAL Bit_Slice7_out1_3                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_3                : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_1                : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_3                : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_3                : std_logic;  -- ufix1
  SIGNAL Constant_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Bit_Slice1_out1_3                : std_logic;  -- ufix1
  SIGNAL Constant1_out1_1                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch2_out1_2                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator_out1_2          : std_logic;  -- ufix1
  SIGNAL Constant2_out1_1                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch1_out1_2                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant3_out1_1                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant4_out1_1                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator2_out1_3         : std_logic;  -- ufix1
  SIGNAL Switch3_out1_2                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch4_out1_1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant5_out1_1                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant6_out1_1                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch6_out1_2                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant7_out1_1                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant8_out1_1                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch8_out1_1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator12_out1_11       : std_logic;  -- ufix1
  SIGNAL Switch9_out1_1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch10_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_6                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_6                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_6                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_6                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_6                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_6                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_6                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_6                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator_out1_3          : std_logic;  -- ufix1
  SIGNAL Switch13_out1_6                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch_out1_1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_7                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_7                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_7                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_7                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_7                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_7                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_7                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_7                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_6                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_6                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_6                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1_6                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1_6                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_6                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_7                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_8                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_8                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_8                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_8                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_8                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_8                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_8                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_8                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_7                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_7                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_7                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1_7                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1_7                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_7                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_8                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator3_out1_3         : std_logic;  -- ufix1
  SIGNAL Switch2_out1_3                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch1_out1_3                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_9                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_9                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_9                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_9                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_9                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_9                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_9                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_9                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_8                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_8                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_8                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1_8                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1_8                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_8                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_9                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_10                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_10               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_10                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_10               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_10               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_10                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_10                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_10               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_9                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_9                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_9                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1_9                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1_9                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_9                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_10                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch3_out1_3                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_11                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_11               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_11                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_11               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_11               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_11                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_11                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_11               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_11                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch5_out1_1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch6_out1_3                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL bitsll_mant_b_ib_out1            : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL if_bitget_mant_b_mant_b_WordLen_1_out1 : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL Bit_Concat3_out1                 : unsigned(56 DOWNTO 0);  -- ufix57
  SIGNAL reinterpretcast_bitconcat_fi_0_out1_1 : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL mant_a_norm_mant_b_norm_relop1   : std_logic;
  SIGNAL bitsll_mant_a_norm_1_out1        : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL if_mant_a_norm_mant_b_norm_1_out1 : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL Bit_Slice1_out1_4                : unsigned(54 DOWNTO 0);  -- ufix55
  SIGNAL Data_Type_Conversion1_out1       : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Unary_Minus2_in0                 : signed(57 DOWNTO 0);  -- sfix58
  SIGNAL Unary_Minus2_out1                : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL Bit_Slice_out1                   : unsigned(54 DOWNTO 0);  -- ufix55
  SIGNAL Data_Type_Conversion_out1        : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1                  : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_1             : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_4          : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1                  : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL if_tmp_0_1_out1                  : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_1                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_2             : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_2                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_5          : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_1                : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL if_tmp_0_1_out1_1                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_2                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_3             : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_3                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_6          : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_2                : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL if_tmp_0_1_out1_2                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_3                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_4             : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_4                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_7          : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_3                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL if_tmp_0_1_out1_3                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_4                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_5             : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_5                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_8          : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL if_tmp_0_1_out1_4                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_5                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_6             : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_6                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_9          : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_5                : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL if_tmp_0_1_out1_5                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_6                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_7             : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_7                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_10         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_6                : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL if_tmp_0_1_out1_6                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_7                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_8             : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_8                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_11         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_7                : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL if_tmp_0_1_out1_7                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_8                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_9             : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_9                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_12         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_8                : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL if_tmp_0_1_out1_8                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_9                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_10            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_10                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_13         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_9                : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_tmp_0_1_out1_9                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_10               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_11            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_11                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_14         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_10               : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL if_tmp_0_1_out1_10               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_11               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_12            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_12                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_15         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_11               : unsigned(12 DOWNTO 0);  -- ufix13
  SIGNAL if_tmp_0_1_out1_11               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_12               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_13            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_13                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_16         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_12               : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL if_tmp_0_1_out1_12               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_13               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_14            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_14                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_17         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_13               : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL if_tmp_0_1_out1_13               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_14               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_15            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_15                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_18         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_14               : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL if_tmp_0_1_out1_14               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_15               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_16            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_16                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_19         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_15               : unsigned(16 DOWNTO 0);  -- ufix17
  SIGNAL if_tmp_0_1_out1_15               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_16               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_17            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_17                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_20         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_16               : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL if_tmp_0_1_out1_16               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_17               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_18            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_18                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_21         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_17               : unsigned(18 DOWNTO 0);  -- ufix19
  SIGNAL if_tmp_0_1_out1_17               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_18               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_19            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_19                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_22         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_18               : unsigned(19 DOWNTO 0);  -- ufix20
  SIGNAL if_tmp_0_1_out1_18               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_19               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_20            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_20                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_23         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_19               : unsigned(20 DOWNTO 0);  -- ufix21
  SIGNAL if_tmp_0_1_out1_19               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_20               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_21            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_21                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_24         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_20               : unsigned(21 DOWNTO 0);  -- ufix22
  SIGNAL if_tmp_0_1_out1_20               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_21               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_22            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_22                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_25         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_21               : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL if_tmp_0_1_out1_21               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_22               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_23            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_23                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_26         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_22               : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL if_tmp_0_1_out1_22               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_23               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_24            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_24                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_27         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_23               : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL if_tmp_0_1_out1_23               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_24               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_25            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_25                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_28         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_24               : unsigned(25 DOWNTO 0);  -- ufix26
  SIGNAL if_tmp_0_1_out1_24               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_25               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_26            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_26                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_29         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_25               : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL if_tmp_0_1_out1_25               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_26               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_27            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_27                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_30         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_26               : unsigned(27 DOWNTO 0);  -- ufix28
  SIGNAL if_tmp_0_1_out1_26               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_27               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_28            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_28                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_31         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_27               : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL if_tmp_0_1_out1_27               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_28               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_29            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_29                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_32         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_28               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL if_tmp_0_1_out1_28               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_29               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_30            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_30                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_33         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_29               : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL if_tmp_0_1_out1_29               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_30               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_31            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_31                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_34         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_30               : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL if_tmp_0_1_out1_30               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_31               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_32            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_32                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_35         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_31               : unsigned(32 DOWNTO 0);  -- ufix33
  SIGNAL if_tmp_0_1_out1_31               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_32               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_33            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_33                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_36         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_32               : unsigned(33 DOWNTO 0);  -- ufix34
  SIGNAL if_tmp_0_1_out1_32               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_33               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_34            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_34                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_37         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_33               : unsigned(34 DOWNTO 0);  -- ufix35
  SIGNAL if_tmp_0_1_out1_33               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_34               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_35            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_35                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_38         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_34               : unsigned(35 DOWNTO 0);  -- ufix36
  SIGNAL if_tmp_0_1_out1_34               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_35               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_36            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_36                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_39         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_35               : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL if_tmp_0_1_out1_35               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_36               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_37            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_37                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_40         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_36               : unsigned(37 DOWNTO 0);  -- ufix38
  SIGNAL if_tmp_0_1_out1_36               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_37               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_38            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_38                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_41         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_37               : unsigned(38 DOWNTO 0);  -- ufix39
  SIGNAL if_tmp_0_1_out1_37               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_38               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_39            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_39                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_42         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_38               : unsigned(39 DOWNTO 0);  -- ufix40
  SIGNAL if_tmp_0_1_out1_38               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_39               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_40            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_40                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_43         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_39               : unsigned(40 DOWNTO 0);  -- ufix41
  SIGNAL if_tmp_0_1_out1_39               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_40               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_41            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_41                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_44         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_40               : unsigned(41 DOWNTO 0);  -- ufix42
  SIGNAL if_tmp_0_1_out1_40               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_41               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_42            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_42                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_45         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_41               : unsigned(42 DOWNTO 0);  -- ufix43
  SIGNAL if_tmp_0_1_out1_41               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_42               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_43            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_43                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_46         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_42               : unsigned(43 DOWNTO 0);  -- ufix44
  SIGNAL if_tmp_0_1_out1_42               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_43               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_44            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_44                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_47         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_43               : unsigned(44 DOWNTO 0);  -- ufix45
  SIGNAL if_tmp_0_1_out1_43               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_44               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_45            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_45                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_48         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_44               : unsigned(45 DOWNTO 0);  -- ufix46
  SIGNAL if_tmp_0_1_out1_44               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_45               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_46            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_46                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_49         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_45               : unsigned(46 DOWNTO 0);  -- ufix47
  SIGNAL if_tmp_0_1_out1_45               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_46               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_47            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_47                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_50         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_46               : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL if_tmp_0_1_out1_46               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_47               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_48            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_48                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_51         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_47               : unsigned(48 DOWNTO 0);  -- ufix49
  SIGNAL if_tmp_0_1_out1_47               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_48               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_49            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_49                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_52         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_48               : unsigned(49 DOWNTO 0);  -- ufix50
  SIGNAL if_tmp_0_1_out1_48               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_49               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_50            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_50                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_53         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_49               : unsigned(50 DOWNTO 0);  -- ufix51
  SIGNAL if_tmp_0_1_out1_49               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_50               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_51            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_51                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_54         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_50               : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL if_tmp_0_1_out1_50               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_51               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_52            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_52                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_55         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_51               : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL if_tmp_0_1_out1_51               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_52               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_mant_b_norm_out1_53            : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_53                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_56         : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_52               : unsigned(53 DOWNTO 0);  -- ufix54
  SIGNAL alpha1_out1_3                    : signed(7 DOWNTO 0);  -- int8
  SIGNAL DTC_out1                         : signed(7 DOWNTO 0);  -- int8
  SIGNAL alpha1_ia_out1                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL DTC1_out1                        : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL C_out1_1                         : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_Exponent_0_out1               : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL DTC2_out1                        : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL if_bitget_mant_a_mant_a_WordLen_out1 : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL cast_1_like_exp_a_norm_out1      : signed(9 DOWNTO 0);  -- sfix10
  SIGNAL exp_a_norm_cast_1                : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL if_mant_a_norm_mant_b_norm_out1  : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL alpha1_out1_4                    : signed(7 DOWNTO 0);  -- int8
  SIGNAL DTC3_out1                        : signed(7 DOWNTO 0);  -- int8
  SIGNAL alpha1_ib_out1                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL DTC4_out1                        : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL C_out1_2                         : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_Exponent_0_out1_1             : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL DTC5_out1                        : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL if_bitget_mant_b_mant_b_WordLen_out1 : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL exp_a_norm_exp_b_norm_out1       : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL cfType_ExponentBias_out1         : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL exp_a_norm_exp_b_norm_cast_out1  : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL exp_tmp_2_cfType_ExponentBi_out1 : std_logic;  -- ufix1
  SIGNAL exp_tmp_1_out1                   : std_logic;  -- ufix1
  SIGNAL C2_out1                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL exp_tmp_cfType_MantissaLen_out1  : std_logic;  -- ufix1
  SIGNAL alpha1_out1_5                    : signed(7 DOWNTO 0);  -- int8
  SIGNAL C_out1_3                         : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL DTC1_out1_1                      : signed(7 DOWNTO 0);  -- int8
  SIGNAL alpha1_int8_exp_tmp_out1         : signed(7 DOWNTO 0);  -- int8
  SIGNAL DTC2_out1_1                      : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL if_exp_tmp_cfType_MantissaLe_out1 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL if_exp_tmp_1_1_out1              : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL C4_out1                          : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL if_exp_tmp_2_cfType_ExponentB_1_out1 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL bitsrl_Q_shift_length_out1       : unsigned(53 DOWNTO 0);  -- ufix54
  SIGNAL BitSlice_out1_1                  : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL Bit_Slice33_out1                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Slice33_out1_is_not0         : std_logic;
  SIGNAL Bit_Slice33_out1_is_not0_1       : std_logic;
  SIGNAL Logical_Operator11_out1          : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_5                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_4         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_2                : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_2                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_5         : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_6                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_3         : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_4                : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_54                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_4         : std_logic;  -- ufix1
  SIGNAL Bit_Slice32_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce12_out1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice30_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce11_out1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice24_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce10_out1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice28_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce9_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice22_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce8_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice20_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce7_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice16_out1_10              : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce6_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_10              : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce5_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice18_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce4_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_12              : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce3_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_12              : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce2_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1_4                : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce1_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_4                : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce_out1                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_4         : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_5         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_11        : std_logic;  -- ufix1
  SIGNAL Logical_Operator8_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator9_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator10_out1          : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_12       : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_13        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_12       : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_11        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_11        : std_logic;  -- ufix1
  SIGNAL Bit_Slice31_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_5                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_7         : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_7                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_5         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_14        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_55                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_13        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_13        : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_4                : std_logic;  -- ufix1
  SIGNAL Bit_Slice25_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_6                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_8         : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_8                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_16        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_56                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_13        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_8         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_14        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_14        : std_logic;  -- ufix1
  SIGNAL Bit_Slice29_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_7                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_9         : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_9                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_17        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_57                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_14        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_8         : std_logic;  -- ufix1
  SIGNAL Bit_Slice23_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_8                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_11        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_10               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_18        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_58                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_16        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_16        : std_logic;  -- ufix1
  SIGNAL Bit_Slice21_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_9                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_12        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_11               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_19        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_59                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_16        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_11        : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_13        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_20        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_17        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_17        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_18        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_18        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_11        : std_logic;  -- ufix1
  SIGNAL Bit_Slice17_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_10               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_14        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_12               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_21        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_60                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_17        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_13        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_19        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_19        : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_10              : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_11               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_15        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_13               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_13        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_22        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_61                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_18        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_14        : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_16        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_20        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_20        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_14        : std_logic;  -- ufix1
  SIGNAL Bit_Slice19_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_12               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_17        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_14               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_23        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_62                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_19        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_21        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_21        : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_12              : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_13               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_18        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_15               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_16        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_24        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_63                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_20        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_16        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_25        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_17        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_22        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_22        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_23        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_23        : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_12              : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_14               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_19        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_16               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_17        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_26        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_64                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_21        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_18        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_24        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_24        : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_14               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_15               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_20        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_17               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_18        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_27        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_65                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_22        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_19        : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_21        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_25        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_25        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_19        : std_logic;  -- ufix1
  SIGNAL Bit_Slice7_out1_4                : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_16               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_22        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_18               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_20        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_28        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_66                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_23        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_20        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_26        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_26        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_67                : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_17               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_23        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_19               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_21        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_68                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_24        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_21        : std_logic;  -- ufix1
  SIGNAL BitSlice_out1_2                  : std_logic;  -- ufix1
  SIGNAL BitSlice1_out1_1                 : std_logic;  -- ufix1
  SIGNAL if_tmp_0_1_out1_52               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_R_1_out1_53               : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_0_out1                         : std_logic;  -- ufix1
  SIGNAL Bit_Slice27_out1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_29        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_22        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_30        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_23        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_31        : std_logic;  -- ufix1
  SIGNAL Constant_out1_2                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_27        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_27        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_28        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_28        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_29        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_29        : std_logic;  -- ufix1
  SIGNAL sticky_bitsll_Q_Q_WordLen_out1   : std_logic;  -- ufix1
  SIGNAL alphabitget_Mant_tmp_2_0_out1    : std_logic;  -- ufix1
  SIGNAL alphabitget_Mant_tmp_1_0_out1    : std_logic;  -- ufix1
  SIGNAL alpha0_out1_2                    : std_logic;  -- ufix1
  SIGNAL BitSlice4_out1                   : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Bit_Concat_out1_53               : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL alpha2_out1                      : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL Mant_tmp_2_out1                  : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL if_bitget_Mant_tmp_1_0_out1      : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL BitSlice2_out1                   : std_logic;  -- ufix1
  SIGNAL DTC3_out1_1                      : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL C1_out1                          : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_exp_tmp_1_out1                : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL C3_out1                          : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_exp_tmp_2_cfType_ExponentB_out1 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL alpha1_out1_6                    : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Exp_1_out1                       : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_bitget_Mant_tmp_Mant_tmp_Wor_out1 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL C4_out1_1                        : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_bExponent_0_bMantissa_out1    : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL C1_out1_1                        : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL C_out1_4                         : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_bExponent_0_bMantissa_out1_1  : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_aExponent_0_aMantissa_out1    : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL C1_out1_2                        : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_mant_b_0_out1                 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_exp_a_cfType_Exponent_Inf_out1 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_aExponent_cfType_Exponent_out1 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL BitSlice3_out1                   : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL C_out1_5                         : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL if_bitget_Mant_tmp_Mant_tmp_Wor_1_out1 : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL C5_out1                          : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL if_bExponent_0_bMantissa_1_out1  : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL C3_out1_1                        : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL C2_out1_1                        : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL if_bExponent_0_bMantissa_1_out1_1 : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL if_aExponent_0_aMantissa_1_out1  : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL C2_out1_2                        : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL if_mant_b_0_1_out1               : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL C_out1_6                         : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL if_exp_b_cfType_Exponent_Inf_out1 : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL if_exp_a_cfType_Exponent_Inf_1_out1 : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL if_aExponent_cfType_Exponent_1_out1 : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL nfp_out_pack                     : unsigned(63 DOWNTO 0);  -- ufix64

BEGIN
  nfp_in1_unsigned <= unsigned(nfp_in1);

  -- Split 64 bit word into FP sign, exponent, mantissa
  aSign <= nfp_in1_unsigned(63);
  aExponent <= nfp_in1_unsigned(62 DOWNTO 52);
  aMantissa <= nfp_in1_unsigned(51 DOWNTO 0);

  nfp_in2_unsigned <= unsigned(nfp_in2);

  -- Split 64 bit word into FP sign, exponent, mantissa
  bSign <= nfp_in2_unsigned(63);
  bExponent <= nfp_in2_unsigned(62 DOWNTO 52);
  bMantissa <= nfp_in2_unsigned(51 DOWNTO 0);

  tmp_out1 <= aSign XOR bSign;

  
  aExponent_cfType_Exponent_I_out1 <= '1' WHEN aExponent = to_unsigned(16#7FF#, 11) ELSE
      '0';

  
  bExponent_cfType_Exponent_I_out1 <= '1' WHEN bExponent = to_unsigned(16#7FF#, 11) ELSE
      '0';

  alphaaExponent_cfType_Exponent_out1 <= aExponent_cfType_Exponent_I_out1 OR bExponent_cfType_Exponent_I_out1;

  
  aExponent_0_out1 <= '1' WHEN aExponent = to_unsigned(16#000#, 11) ELSE
      '0';

  
  aMantissa_0_out1 <= '1' WHEN aMantissa = to_unsigned(0, 52) ELSE
      '0';

  alphaaExponent_0_aMantissa_out1 <= aExponent_0_out1 AND aMantissa_0_out1;

  
  bExponent_0_out1 <= '1' WHEN bExponent = to_unsigned(16#000#, 11) ELSE
      '0';

  
  bMantissa_0_out1 <= '1' WHEN bMantissa = to_unsigned(0, 52) ELSE
      '0';

  alphabExponent_0_bMantissa_out1 <= bExponent_0_out1 AND bMantissa_0_out1;

  C_out1 <= '1';

  alpha1_out1 <= to_unsigned(16#0#, 4);

  alphaExponent_0_cfType_Exp_out1 <= aExponent_0_out1 OR aExponent_cfType_Exponent_I_out1;

  alpha1_out1_1 <= '1';

  alpha0_out1 <= '0';

  
  if_Exponent_0_cfType_Exp_out1 <= alpha1_out1_1 WHEN alphaExponent_0_cfType_Exp_out1 = '0' ELSE
      alpha0_out1;

  Bit_Concat1_out1 <= if_Exponent_0_cfType_Exp_out1 & aMantissa;

  BitSlice_out1 <= Bit_Concat1_out1(52);

  Bit_Slice2_out1 <= Bit_Concat1_out1(52 DOWNTO 48);

  Bit_Slice13_out1 <= Bit_Slice2_out1(4);

  Bit_Slice12_out1 <= Bit_Slice2_out1(3);

  Bit_Slice11_out1 <= Bit_Slice2_out1(2);

  Logical_Operator4_out1 <= Bit_Slice12_out1 OR Bit_Slice11_out1;

  Bit_Slice10_out1 <= Bit_Slice2_out1(1);

  Bit_Slice9_out1 <= Bit_Slice2_out1(0);

  Logical_Operator14_out1 <= Bit_Slice10_out1 OR Bit_Slice9_out1;

  Logical_Operator13_out1 <= Logical_Operator4_out1 OR Logical_Operator14_out1;

  Logical_Operator12_out1 <= Bit_Slice13_out1 OR Logical_Operator13_out1;

  Bit_Slice9_out1_1 <= Bit_Concat1_out1(47 DOWNTO 40);

  Bit_Slice16_out1 <= Bit_Slice9_out1_1(7);

  Bit_Slice15_out1 <= Bit_Slice9_out1_1(6);

  Logical_Operator5_out1 <= Bit_Slice16_out1 OR Bit_Slice15_out1;

  Bit_Slice14_out1 <= Bit_Slice9_out1_1(5);

  Bit_Slice13_out1_1 <= Bit_Slice9_out1_1(4);

  Logical_Operator7_out1 <= Bit_Slice14_out1 OR Bit_Slice13_out1_1;

  Logical_Operator6_out1 <= Logical_Operator5_out1 OR Logical_Operator7_out1;

  Bit_Slice12_out1_1 <= Bit_Slice9_out1_1(3);

  Bit_Slice11_out1_1 <= Bit_Slice9_out1_1(2);

  Logical_Operator4_out1_1 <= Bit_Slice12_out1_1 OR Bit_Slice11_out1_1;

  Bit_Slice10_out1_1 <= Bit_Slice9_out1_1(1);

  Bit_Slice9_out1_2 <= Bit_Slice9_out1_1(0);

  Logical_Operator14_out1_1 <= Bit_Slice10_out1_1 OR Bit_Slice9_out1_2;

  Logical_Operator13_out1_1 <= Logical_Operator4_out1_1 OR Logical_Operator14_out1_1;

  Logical_Operator12_out1_1 <= Logical_Operator6_out1 OR Logical_Operator13_out1_1;

  Bit_Slice8_out1 <= Bit_Concat1_out1(39 DOWNTO 32);

  Bit_Slice16_out1_1 <= Bit_Slice8_out1(7);

  Bit_Slice15_out1_1 <= Bit_Slice8_out1(6);

  Logical_Operator5_out1_1 <= Bit_Slice16_out1_1 OR Bit_Slice15_out1_1;

  Bit_Slice14_out1_1 <= Bit_Slice8_out1(5);

  Bit_Slice13_out1_2 <= Bit_Slice8_out1(4);

  Logical_Operator7_out1_1 <= Bit_Slice14_out1_1 OR Bit_Slice13_out1_2;

  Logical_Operator6_out1_1 <= Logical_Operator5_out1_1 OR Logical_Operator7_out1_1;

  Bit_Slice12_out1_2 <= Bit_Slice8_out1(3);

  Bit_Slice11_out1_2 <= Bit_Slice8_out1(2);

  Logical_Operator4_out1_2 <= Bit_Slice12_out1_2 OR Bit_Slice11_out1_2;

  Bit_Slice10_out1_2 <= Bit_Slice8_out1(1);

  Bit_Slice9_out1_3 <= Bit_Slice8_out1(0);

  Logical_Operator14_out1_2 <= Bit_Slice10_out1_2 OR Bit_Slice9_out1_3;

  Logical_Operator13_out1_2 <= Logical_Operator4_out1_2 OR Logical_Operator14_out1_2;

  Logical_Operator12_out1_2 <= Logical_Operator6_out1_1 OR Logical_Operator13_out1_2;

  Logical_Operator2_out1 <= Logical_Operator12_out1_1 OR Logical_Operator12_out1_2;

  Bit_Slice7_out1 <= Bit_Concat1_out1(31 DOWNTO 24);

  Bit_Slice16_out1_2 <= Bit_Slice7_out1(7);

  Bit_Slice15_out1_2 <= Bit_Slice7_out1(6);

  Logical_Operator5_out1_2 <= Bit_Slice16_out1_2 OR Bit_Slice15_out1_2;

  Bit_Slice14_out1_2 <= Bit_Slice7_out1(5);

  Bit_Slice13_out1_3 <= Bit_Slice7_out1(4);

  Logical_Operator7_out1_2 <= Bit_Slice14_out1_2 OR Bit_Slice13_out1_3;

  Logical_Operator6_out1_2 <= Logical_Operator5_out1_2 OR Logical_Operator7_out1_2;

  Bit_Slice12_out1_3 <= Bit_Slice7_out1(3);

  Bit_Slice11_out1_3 <= Bit_Slice7_out1(2);

  Logical_Operator4_out1_3 <= Bit_Slice12_out1_3 OR Bit_Slice11_out1_3;

  Bit_Slice10_out1_3 <= Bit_Slice7_out1(1);

  Bit_Slice9_out1_4 <= Bit_Slice7_out1(0);

  Logical_Operator14_out1_3 <= Bit_Slice10_out1_3 OR Bit_Slice9_out1_4;

  Logical_Operator13_out1_3 <= Logical_Operator4_out1_3 OR Logical_Operator14_out1_3;

  Logical_Operator12_out1_3 <= Logical_Operator6_out1_2 OR Logical_Operator13_out1_3;

  Bit_Slice6_out1 <= Bit_Concat1_out1(23 DOWNTO 16);

  Bit_Slice16_out1_3 <= Bit_Slice6_out1(7);

  Bit_Slice15_out1_3 <= Bit_Slice6_out1(6);

  Logical_Operator5_out1_3 <= Bit_Slice16_out1_3 OR Bit_Slice15_out1_3;

  Bit_Slice14_out1_3 <= Bit_Slice6_out1(5);

  Bit_Slice13_out1_4 <= Bit_Slice6_out1(4);

  Logical_Operator7_out1_3 <= Bit_Slice14_out1_3 OR Bit_Slice13_out1_4;

  Logical_Operator6_out1_3 <= Logical_Operator5_out1_3 OR Logical_Operator7_out1_3;

  Bit_Slice12_out1_4 <= Bit_Slice6_out1(3);

  Bit_Slice11_out1_4 <= Bit_Slice6_out1(2);

  Logical_Operator4_out1_4 <= Bit_Slice12_out1_4 OR Bit_Slice11_out1_4;

  Bit_Slice10_out1_4 <= Bit_Slice6_out1(1);

  Bit_Slice9_out1_5 <= Bit_Slice6_out1(0);

  Logical_Operator14_out1_4 <= Bit_Slice10_out1_4 OR Bit_Slice9_out1_5;

  Logical_Operator13_out1_4 <= Logical_Operator4_out1_4 OR Logical_Operator14_out1_4;

  Logical_Operator12_out1_4 <= Logical_Operator6_out1_3 OR Logical_Operator13_out1_4;

  Bit_Slice1_out1 <= Bit_Concat1_out1(15 DOWNTO 8);

  Bit_Slice16_out1_4 <= Bit_Slice1_out1(7);

  Bit_Slice15_out1_4 <= Bit_Slice1_out1(6);

  Logical_Operator5_out1_4 <= Bit_Slice16_out1_4 OR Bit_Slice15_out1_4;

  Bit_Slice14_out1_4 <= Bit_Slice1_out1(5);

  Bit_Slice13_out1_5 <= Bit_Slice1_out1(4);

  Logical_Operator7_out1_4 <= Bit_Slice14_out1_4 OR Bit_Slice13_out1_5;

  Logical_Operator6_out1_4 <= Logical_Operator5_out1_4 OR Logical_Operator7_out1_4;

  Bit_Slice12_out1_5 <= Bit_Slice1_out1(3);

  Bit_Slice11_out1_5 <= Bit_Slice1_out1(2);

  Logical_Operator4_out1_5 <= Bit_Slice12_out1_5 OR Bit_Slice11_out1_5;

  Bit_Slice10_out1_5 <= Bit_Slice1_out1(1);

  Bit_Slice9_out1_6 <= Bit_Slice1_out1(0);

  Logical_Operator14_out1_5 <= Bit_Slice10_out1_5 OR Bit_Slice9_out1_6;

  Logical_Operator13_out1_5 <= Logical_Operator4_out1_5 OR Logical_Operator14_out1_5;

  Bit_Slice4_out1 <= Bit_Concat1_out1(7 DOWNTO 0);

  Bit_Slice8_out1_1 <= Bit_Slice4_out1(7);

  Bit_Slice7_out1_1 <= Bit_Slice4_out1(6);

  Logical_Operator1_out1 <= Bit_Slice8_out1_1 OR Bit_Slice7_out1_1;

  Bit_Slice6_out1_1 <= Bit_Slice4_out1(5);

  Bit_Slice5_out1 <= Bit_Slice4_out1(4);

  Logical_Operator3_out1 <= Bit_Slice6_out1_1 OR Bit_Slice5_out1;

  Bit_Slice3_out1 <= Bit_Slice4_out1(3);

  Bit_Slice2_out1_1 <= Bit_Slice4_out1(2);

  Bit_Slice4_out1_1 <= Bit_Slice4_out1(0);

  Constant_out1 <= to_unsigned(16#35#, 6);

  Bit_Slice1_out1_1 <= Bit_Slice4_out1(1);

  Constant1_out1 <= to_unsigned(16#34#, 6);

  
  Switch2_out1 <= Constant_out1 WHEN Bit_Slice4_out1_1 = '0' ELSE
      Constant1_out1;

  Logical_Operator_out1 <= Bit_Slice3_out1 OR Bit_Slice2_out1_1;

  Constant2_out1 <= to_unsigned(16#33#, 6);

  
  Switch1_out1 <= Switch2_out1 WHEN Bit_Slice1_out1_1 = '0' ELSE
      Constant2_out1;

  Constant3_out1 <= to_unsigned(16#32#, 6);

  Constant4_out1 <= to_unsigned(16#31#, 6);

  Logical_Operator2_out1_1 <= Logical_Operator1_out1 OR Logical_Operator3_out1;

  
  Switch3_out1 <= Constant3_out1 WHEN Bit_Slice3_out1 = '0' ELSE
      Constant4_out1;

  
  Switch4_out1 <= Switch1_out1 WHEN Logical_Operator_out1 = '0' ELSE
      Switch3_out1;

  Constant5_out1 <= to_unsigned(16#30#, 6);

  Constant6_out1 <= to_unsigned(16#2F#, 6);

  
  Switch6_out1 <= Constant5_out1 WHEN Bit_Slice6_out1_1 = '0' ELSE
      Constant6_out1;

  Constant7_out1 <= to_unsigned(16#2E#, 6);

  Constant8_out1 <= to_unsigned(16#2D#, 6);

  
  Switch8_out1 <= Constant7_out1 WHEN Bit_Slice8_out1_1 = '0' ELSE
      Constant8_out1;

  Logical_Operator12_out1_5 <= Logical_Operator6_out1_4 OR Logical_Operator13_out1_5;

  
  Switch9_out1 <= Switch6_out1 WHEN Logical_Operator1_out1 = '0' ELSE
      Switch8_out1;

  
  Switch10_out1 <= Switch4_out1 WHEN Logical_Operator2_out1_1 = '0' ELSE
      Switch9_out1;

  Constant9_out1 <= to_unsigned(16#2C#, 6);

  Constant10_out1 <= to_unsigned(16#2B#, 6);

  
  Switch12_out1 <= Constant9_out1 WHEN Bit_Slice10_out1_5 = '0' ELSE
      Constant10_out1;

  Constant11_out1 <= to_unsigned(16#2A#, 6);

  Constant12_out1 <= to_unsigned(16#29#, 6);

  
  Switch15_out1 <= Constant11_out1 WHEN Bit_Slice12_out1_5 = '0' ELSE
      Constant12_out1;

  
  Switch16_out1 <= Switch12_out1 WHEN Logical_Operator4_out1_5 = '0' ELSE
      Switch15_out1;

  Constant13_out1 <= to_unsigned(16#28#, 6);

  Constant14_out1 <= to_unsigned(16#27#, 6);

  
  Switch18_out1 <= Constant13_out1 WHEN Bit_Slice14_out1_4 = '0' ELSE
      Constant14_out1;

  Constant15_out1 <= to_unsigned(16#26#, 6);

  Constant16_out1 <= to_unsigned(16#25#, 6);

  
  Switch20_out1 <= Constant15_out1 WHEN Bit_Slice16_out1_4 = '0' ELSE
      Constant16_out1;

  
  Switch21_out1 <= Switch18_out1 WHEN Logical_Operator5_out1_4 = '0' ELSE
      Switch20_out1;

  Logical_Operator_out1_1 <= Logical_Operator12_out1_3 OR Logical_Operator12_out1_4;

  
  Switch13_out1 <= Switch16_out1 WHEN Logical_Operator6_out1_4 = '0' ELSE
      Switch21_out1;

  
  Switch_out1 <= Switch10_out1 WHEN Logical_Operator12_out1_5 = '0' ELSE
      Switch13_out1;

  Constant9_out1_1 <= to_unsigned(16#24#, 6);

  Constant10_out1_1 <= to_unsigned(16#23#, 6);

  
  Switch12_out1_1 <= Constant9_out1_1 WHEN Bit_Slice10_out1_4 = '0' ELSE
      Constant10_out1_1;

  Constant11_out1_1 <= to_unsigned(16#22#, 6);

  Constant12_out1_1 <= to_unsigned(16#21#, 6);

  
  Switch15_out1_1 <= Constant11_out1_1 WHEN Bit_Slice12_out1_4 = '0' ELSE
      Constant12_out1_1;

  
  Switch16_out1_1 <= Switch12_out1_1 WHEN Logical_Operator4_out1_4 = '0' ELSE
      Switch15_out1_1;

  Constant13_out1_1 <= to_unsigned(16#20#, 6);

  Constant14_out1_1 <= to_unsigned(16#1F#, 6);

  
  Switch18_out1_1 <= Constant13_out1_1 WHEN Bit_Slice14_out1_3 = '0' ELSE
      Constant14_out1_1;

  Constant15_out1_1 <= to_unsigned(16#1E#, 6);

  Constant16_out1_1 <= to_unsigned(16#1D#, 6);

  
  Switch20_out1_1 <= Constant15_out1_1 WHEN Bit_Slice16_out1_3 = '0' ELSE
      Constant16_out1_1;

  
  Switch21_out1_1 <= Switch18_out1_1 WHEN Logical_Operator5_out1_3 = '0' ELSE
      Switch20_out1_1;

  
  Switch13_out1_1 <= Switch16_out1_1 WHEN Logical_Operator6_out1_3 = '0' ELSE
      Switch21_out1_1;

  Constant9_out1_2 <= to_unsigned(16#1C#, 6);

  Constant10_out1_2 <= to_unsigned(16#1B#, 6);

  
  Switch12_out1_2 <= Constant9_out1_2 WHEN Bit_Slice10_out1_3 = '0' ELSE
      Constant10_out1_2;

  Constant11_out1_2 <= to_unsigned(16#1A#, 6);

  Constant12_out1_2 <= to_unsigned(16#19#, 6);

  
  Switch15_out1_2 <= Constant11_out1_2 WHEN Bit_Slice12_out1_3 = '0' ELSE
      Constant12_out1_2;

  
  Switch16_out1_2 <= Switch12_out1_2 WHEN Logical_Operator4_out1_3 = '0' ELSE
      Switch15_out1_2;

  Constant13_out1_2 <= to_unsigned(16#18#, 6);

  Constant14_out1_2 <= to_unsigned(16#17#, 6);

  
  Switch18_out1_2 <= Constant13_out1_2 WHEN Bit_Slice14_out1_2 = '0' ELSE
      Constant14_out1_2;

  Constant15_out1_2 <= to_unsigned(16#16#, 6);

  Constant16_out1_2 <= to_unsigned(16#15#, 6);

  
  Switch20_out1_2 <= Constant15_out1_2 WHEN Bit_Slice16_out1_2 = '0' ELSE
      Constant16_out1_2;

  
  Switch21_out1_2 <= Switch18_out1_2 WHEN Logical_Operator5_out1_2 = '0' ELSE
      Switch20_out1_2;

  
  Switch13_out1_2 <= Switch16_out1_2 WHEN Logical_Operator6_out1_2 = '0' ELSE
      Switch21_out1_2;

  Logical_Operator3_out1_1 <= Logical_Operator12_out1 OR Logical_Operator2_out1;

  
  Switch2_out1_1 <= Switch13_out1_1 WHEN Logical_Operator12_out1_3 = '0' ELSE
      Switch13_out1_2;

  
  Switch1_out1_1 <= Switch_out1 WHEN Logical_Operator_out1_1 = '0' ELSE
      Switch2_out1_1;

  Constant9_out1_3 <= to_unsigned(16#14#, 6);

  Constant10_out1_3 <= to_unsigned(16#13#, 6);

  
  Switch12_out1_3 <= Constant9_out1_3 WHEN Bit_Slice10_out1_2 = '0' ELSE
      Constant10_out1_3;

  Constant11_out1_3 <= to_unsigned(16#12#, 6);

  Constant12_out1_3 <= to_unsigned(16#11#, 6);

  
  Switch15_out1_3 <= Constant11_out1_3 WHEN Bit_Slice12_out1_2 = '0' ELSE
      Constant12_out1_3;

  
  Switch16_out1_3 <= Switch12_out1_3 WHEN Logical_Operator4_out1_2 = '0' ELSE
      Switch15_out1_3;

  Constant13_out1_3 <= to_unsigned(16#10#, 6);

  Constant14_out1_3 <= to_unsigned(16#0F#, 6);

  
  Switch18_out1_3 <= Constant13_out1_3 WHEN Bit_Slice14_out1_1 = '0' ELSE
      Constant14_out1_3;

  Constant15_out1_3 <= to_unsigned(16#0E#, 6);

  Constant16_out1_3 <= to_unsigned(16#0D#, 6);

  
  Switch20_out1_3 <= Constant15_out1_3 WHEN Bit_Slice16_out1_1 = '0' ELSE
      Constant16_out1_3;

  
  Switch21_out1_3 <= Switch18_out1_3 WHEN Logical_Operator5_out1_1 = '0' ELSE
      Switch20_out1_3;

  
  Switch13_out1_3 <= Switch16_out1_3 WHEN Logical_Operator6_out1_1 = '0' ELSE
      Switch21_out1_3;

  Constant9_out1_4 <= to_unsigned(16#0C#, 6);

  Constant10_out1_4 <= to_unsigned(16#0B#, 6);

  
  Switch12_out1_4 <= Constant9_out1_4 WHEN Bit_Slice10_out1_1 = '0' ELSE
      Constant10_out1_4;

  Constant11_out1_4 <= to_unsigned(16#0A#, 6);

  Constant12_out1_4 <= to_unsigned(16#09#, 6);

  
  Switch15_out1_4 <= Constant11_out1_4 WHEN Bit_Slice12_out1_1 = '0' ELSE
      Constant12_out1_4;

  
  Switch16_out1_4 <= Switch12_out1_4 WHEN Logical_Operator4_out1_1 = '0' ELSE
      Switch15_out1_4;

  Constant13_out1_4 <= to_unsigned(16#08#, 6);

  Constant14_out1_4 <= to_unsigned(16#07#, 6);

  
  Switch18_out1_4 <= Constant13_out1_4 WHEN Bit_Slice14_out1 = '0' ELSE
      Constant14_out1_4;

  Constant15_out1_4 <= to_unsigned(16#06#, 6);

  Constant16_out1_4 <= to_unsigned(16#05#, 6);

  
  Switch20_out1_4 <= Constant15_out1_4 WHEN Bit_Slice16_out1 = '0' ELSE
      Constant16_out1_4;

  
  Switch21_out1_4 <= Switch18_out1_4 WHEN Logical_Operator5_out1 = '0' ELSE
      Switch20_out1_4;

  
  Switch13_out1_4 <= Switch16_out1_4 WHEN Logical_Operator6_out1 = '0' ELSE
      Switch21_out1_4;

  
  Switch3_out1_1 <= Switch13_out1_3 WHEN Logical_Operator12_out1_1 = '0' ELSE
      Switch13_out1_4;

  Constant9_out1_5 <= to_unsigned(16#04#, 6);

  Constant10_out1_5 <= to_unsigned(16#03#, 6);

  
  Switch12_out1_5 <= Constant9_out1_5 WHEN Bit_Slice10_out1 = '0' ELSE
      Constant10_out1_5;

  Constant11_out1_5 <= to_unsigned(16#02#, 6);

  Constant12_out1_5 <= to_unsigned(16#01#, 6);

  
  Switch15_out1_5 <= Constant11_out1_5 WHEN Bit_Slice12_out1 = '0' ELSE
      Constant12_out1_5;

  
  Switch16_out1_5 <= Switch12_out1_5 WHEN Logical_Operator4_out1 = '0' ELSE
      Switch15_out1_5;

  Constant13_out1_5 <= to_unsigned(16#00#, 6);

  
  Switch13_out1_5 <= Switch16_out1_5 WHEN Bit_Slice13_out1 = '0' ELSE
      Constant13_out1_5;

  
  Switch5_out1 <= Switch3_out1_1 WHEN Logical_Operator12_out1 = '0' ELSE
      Switch13_out1_5;

  
  Switch6_out1_1 <= Switch1_out1_1 WHEN Logical_Operator3_out1_1 = '0' ELSE
      Switch5_out1;

  bitsll_mant_a_ia_out1 <= Bit_Concat1_out1 sll to_integer(Switch6_out1_1);

  
  if_bitget_mant_a_mant_a_WordLen_1_out1 <= bitsll_mant_a_ia_out1 WHEN BitSlice_out1 = '0' ELSE
      Bit_Concat1_out1;

  Bit_Concat1_out1_1 <= alpha1_out1 & if_bitget_mant_a_mant_a_WordLen_1_out1;

  reinterpretcast_bitconcat_fi_0_out1 <= signed(Bit_Concat1_out1_1);

  alpha3_out1 <= to_unsigned(16#0#, 4);

  alphaExponent_0_cfType_Exp_out1_1 <= bExponent_0_out1 OR bExponent_cfType_Exponent_I_out1;

  alpha1_out1_2 <= '1';

  alpha0_out1_1 <= '0';

  
  if_Exponent_0_cfType_Exp_out1_1 <= alpha1_out1_2 WHEN alphaExponent_0_cfType_Exp_out1_1 = '0' ELSE
      alpha0_out1_1;

  Bit_Concat1_out1_2 <= if_Exponent_0_cfType_Exp_out1_1 & bMantissa;

  BitSlice1_out1 <= Bit_Concat1_out1_2(52);

  Bit_Slice2_out1_2 <= Bit_Concat1_out1_2(52 DOWNTO 48);

  Bit_Slice13_out1_6 <= Bit_Slice2_out1_2(4);

  Bit_Slice12_out1_6 <= Bit_Slice2_out1_2(3);

  Bit_Slice11_out1_6 <= Bit_Slice2_out1_2(2);

  Logical_Operator4_out1_6 <= Bit_Slice12_out1_6 OR Bit_Slice11_out1_6;

  Bit_Slice10_out1_6 <= Bit_Slice2_out1_2(1);

  Bit_Slice9_out1_7 <= Bit_Slice2_out1_2(0);

  Logical_Operator14_out1_6 <= Bit_Slice10_out1_6 OR Bit_Slice9_out1_7;

  Logical_Operator13_out1_6 <= Logical_Operator4_out1_6 OR Logical_Operator14_out1_6;

  Logical_Operator12_out1_6 <= Bit_Slice13_out1_6 OR Logical_Operator13_out1_6;

  Bit_Slice9_out1_8 <= Bit_Concat1_out1_2(47 DOWNTO 40);

  Bit_Slice16_out1_5 <= Bit_Slice9_out1_8(7);

  Bit_Slice15_out1_5 <= Bit_Slice9_out1_8(6);

  Logical_Operator5_out1_5 <= Bit_Slice16_out1_5 OR Bit_Slice15_out1_5;

  Bit_Slice14_out1_5 <= Bit_Slice9_out1_8(5);

  Bit_Slice13_out1_7 <= Bit_Slice9_out1_8(4);

  Logical_Operator7_out1_5 <= Bit_Slice14_out1_5 OR Bit_Slice13_out1_7;

  Logical_Operator6_out1_5 <= Logical_Operator5_out1_5 OR Logical_Operator7_out1_5;

  Bit_Slice12_out1_7 <= Bit_Slice9_out1_8(3);

  Bit_Slice11_out1_7 <= Bit_Slice9_out1_8(2);

  Logical_Operator4_out1_7 <= Bit_Slice12_out1_7 OR Bit_Slice11_out1_7;

  Bit_Slice10_out1_7 <= Bit_Slice9_out1_8(1);

  Bit_Slice9_out1_9 <= Bit_Slice9_out1_8(0);

  Logical_Operator14_out1_7 <= Bit_Slice10_out1_7 OR Bit_Slice9_out1_9;

  Logical_Operator13_out1_7 <= Logical_Operator4_out1_7 OR Logical_Operator14_out1_7;

  Logical_Operator12_out1_7 <= Logical_Operator6_out1_5 OR Logical_Operator13_out1_7;

  Bit_Slice8_out1_2 <= Bit_Concat1_out1_2(39 DOWNTO 32);

  Bit_Slice16_out1_6 <= Bit_Slice8_out1_2(7);

  Bit_Slice15_out1_6 <= Bit_Slice8_out1_2(6);

  Logical_Operator5_out1_6 <= Bit_Slice16_out1_6 OR Bit_Slice15_out1_6;

  Bit_Slice14_out1_6 <= Bit_Slice8_out1_2(5);

  Bit_Slice13_out1_8 <= Bit_Slice8_out1_2(4);

  Logical_Operator7_out1_6 <= Bit_Slice14_out1_6 OR Bit_Slice13_out1_8;

  Logical_Operator6_out1_6 <= Logical_Operator5_out1_6 OR Logical_Operator7_out1_6;

  Bit_Slice12_out1_8 <= Bit_Slice8_out1_2(3);

  Bit_Slice11_out1_8 <= Bit_Slice8_out1_2(2);

  Logical_Operator4_out1_8 <= Bit_Slice12_out1_8 OR Bit_Slice11_out1_8;

  Bit_Slice10_out1_8 <= Bit_Slice8_out1_2(1);

  Bit_Slice9_out1_10 <= Bit_Slice8_out1_2(0);

  Logical_Operator14_out1_8 <= Bit_Slice10_out1_8 OR Bit_Slice9_out1_10;

  Logical_Operator13_out1_8 <= Logical_Operator4_out1_8 OR Logical_Operator14_out1_8;

  Logical_Operator12_out1_8 <= Logical_Operator6_out1_6 OR Logical_Operator13_out1_8;

  Logical_Operator2_out1_2 <= Logical_Operator12_out1_7 OR Logical_Operator12_out1_8;

  Bit_Slice7_out1_2 <= Bit_Concat1_out1_2(31 DOWNTO 24);

  Bit_Slice16_out1_7 <= Bit_Slice7_out1_2(7);

  Bit_Slice15_out1_7 <= Bit_Slice7_out1_2(6);

  Logical_Operator5_out1_7 <= Bit_Slice16_out1_7 OR Bit_Slice15_out1_7;

  Bit_Slice14_out1_7 <= Bit_Slice7_out1_2(5);

  Bit_Slice13_out1_9 <= Bit_Slice7_out1_2(4);

  Logical_Operator7_out1_7 <= Bit_Slice14_out1_7 OR Bit_Slice13_out1_9;

  Logical_Operator6_out1_7 <= Logical_Operator5_out1_7 OR Logical_Operator7_out1_7;

  Bit_Slice12_out1_9 <= Bit_Slice7_out1_2(3);

  Bit_Slice11_out1_9 <= Bit_Slice7_out1_2(2);

  Logical_Operator4_out1_9 <= Bit_Slice12_out1_9 OR Bit_Slice11_out1_9;

  Bit_Slice10_out1_9 <= Bit_Slice7_out1_2(1);

  Bit_Slice9_out1_11 <= Bit_Slice7_out1_2(0);

  Logical_Operator14_out1_9 <= Bit_Slice10_out1_9 OR Bit_Slice9_out1_11;

  Logical_Operator13_out1_9 <= Logical_Operator4_out1_9 OR Logical_Operator14_out1_9;

  Logical_Operator12_out1_9 <= Logical_Operator6_out1_7 OR Logical_Operator13_out1_9;

  Bit_Slice6_out1_2 <= Bit_Concat1_out1_2(23 DOWNTO 16);

  Bit_Slice16_out1_8 <= Bit_Slice6_out1_2(7);

  Bit_Slice15_out1_8 <= Bit_Slice6_out1_2(6);

  Logical_Operator5_out1_8 <= Bit_Slice16_out1_8 OR Bit_Slice15_out1_8;

  Bit_Slice14_out1_8 <= Bit_Slice6_out1_2(5);

  Bit_Slice13_out1_10 <= Bit_Slice6_out1_2(4);

  Logical_Operator7_out1_8 <= Bit_Slice14_out1_8 OR Bit_Slice13_out1_10;

  Logical_Operator6_out1_8 <= Logical_Operator5_out1_8 OR Logical_Operator7_out1_8;

  Bit_Slice12_out1_10 <= Bit_Slice6_out1_2(3);

  Bit_Slice11_out1_10 <= Bit_Slice6_out1_2(2);

  Logical_Operator4_out1_10 <= Bit_Slice12_out1_10 OR Bit_Slice11_out1_10;

  Bit_Slice10_out1_10 <= Bit_Slice6_out1_2(1);

  Bit_Slice9_out1_12 <= Bit_Slice6_out1_2(0);

  Logical_Operator14_out1_10 <= Bit_Slice10_out1_10 OR Bit_Slice9_out1_12;

  Logical_Operator13_out1_10 <= Logical_Operator4_out1_10 OR Logical_Operator14_out1_10;

  Logical_Operator12_out1_10 <= Logical_Operator6_out1_8 OR Logical_Operator13_out1_10;

  Bit_Slice1_out1_2 <= Bit_Concat1_out1_2(15 DOWNTO 8);

  Bit_Slice16_out1_9 <= Bit_Slice1_out1_2(7);

  Bit_Slice15_out1_9 <= Bit_Slice1_out1_2(6);

  Logical_Operator5_out1_9 <= Bit_Slice16_out1_9 OR Bit_Slice15_out1_9;

  Bit_Slice14_out1_9 <= Bit_Slice1_out1_2(5);

  Bit_Slice13_out1_11 <= Bit_Slice1_out1_2(4);

  Logical_Operator7_out1_9 <= Bit_Slice14_out1_9 OR Bit_Slice13_out1_11;

  Logical_Operator6_out1_9 <= Logical_Operator5_out1_9 OR Logical_Operator7_out1_9;

  Bit_Slice12_out1_11 <= Bit_Slice1_out1_2(3);

  Bit_Slice11_out1_11 <= Bit_Slice1_out1_2(2);

  Logical_Operator4_out1_11 <= Bit_Slice12_out1_11 OR Bit_Slice11_out1_11;

  Bit_Slice10_out1_11 <= Bit_Slice1_out1_2(1);

  Bit_Slice9_out1_13 <= Bit_Slice1_out1_2(0);

  Logical_Operator14_out1_11 <= Bit_Slice10_out1_11 OR Bit_Slice9_out1_13;

  Logical_Operator13_out1_11 <= Logical_Operator4_out1_11 OR Logical_Operator14_out1_11;

  Bit_Slice4_out1_2 <= Bit_Concat1_out1_2(7 DOWNTO 0);

  Bit_Slice8_out1_3 <= Bit_Slice4_out1_2(7);

  Bit_Slice7_out1_3 <= Bit_Slice4_out1_2(6);

  Logical_Operator1_out1_1 <= Bit_Slice8_out1_3 OR Bit_Slice7_out1_3;

  Bit_Slice6_out1_3 <= Bit_Slice4_out1_2(5);

  Bit_Slice5_out1_1 <= Bit_Slice4_out1_2(4);

  Logical_Operator3_out1_2 <= Bit_Slice6_out1_3 OR Bit_Slice5_out1_1;

  Bit_Slice3_out1_1 <= Bit_Slice4_out1_2(3);

  Bit_Slice2_out1_3 <= Bit_Slice4_out1_2(2);

  Bit_Slice4_out1_3 <= Bit_Slice4_out1_2(0);

  Constant_out1_1 <= to_unsigned(16#35#, 6);

  Bit_Slice1_out1_3 <= Bit_Slice4_out1_2(1);

  Constant1_out1_1 <= to_unsigned(16#34#, 6);

  
  Switch2_out1_2 <= Constant_out1_1 WHEN Bit_Slice4_out1_3 = '0' ELSE
      Constant1_out1_1;

  Logical_Operator_out1_2 <= Bit_Slice3_out1_1 OR Bit_Slice2_out1_3;

  Constant2_out1_1 <= to_unsigned(16#33#, 6);

  
  Switch1_out1_2 <= Switch2_out1_2 WHEN Bit_Slice1_out1_3 = '0' ELSE
      Constant2_out1_1;

  Constant3_out1_1 <= to_unsigned(16#32#, 6);

  Constant4_out1_1 <= to_unsigned(16#31#, 6);

  Logical_Operator2_out1_3 <= Logical_Operator1_out1_1 OR Logical_Operator3_out1_2;

  
  Switch3_out1_2 <= Constant3_out1_1 WHEN Bit_Slice3_out1_1 = '0' ELSE
      Constant4_out1_1;

  
  Switch4_out1_1 <= Switch1_out1_2 WHEN Logical_Operator_out1_2 = '0' ELSE
      Switch3_out1_2;

  Constant5_out1_1 <= to_unsigned(16#30#, 6);

  Constant6_out1_1 <= to_unsigned(16#2F#, 6);

  
  Switch6_out1_2 <= Constant5_out1_1 WHEN Bit_Slice6_out1_3 = '0' ELSE
      Constant6_out1_1;

  Constant7_out1_1 <= to_unsigned(16#2E#, 6);

  Constant8_out1_1 <= to_unsigned(16#2D#, 6);

  
  Switch8_out1_1 <= Constant7_out1_1 WHEN Bit_Slice8_out1_3 = '0' ELSE
      Constant8_out1_1;

  Logical_Operator12_out1_11 <= Logical_Operator6_out1_9 OR Logical_Operator13_out1_11;

  
  Switch9_out1_1 <= Switch6_out1_2 WHEN Logical_Operator1_out1_1 = '0' ELSE
      Switch8_out1_1;

  
  Switch10_out1_1 <= Switch4_out1_1 WHEN Logical_Operator2_out1_3 = '0' ELSE
      Switch9_out1_1;

  Constant9_out1_6 <= to_unsigned(16#2C#, 6);

  Constant10_out1_6 <= to_unsigned(16#2B#, 6);

  
  Switch12_out1_6 <= Constant9_out1_6 WHEN Bit_Slice10_out1_11 = '0' ELSE
      Constant10_out1_6;

  Constant11_out1_6 <= to_unsigned(16#2A#, 6);

  Constant12_out1_6 <= to_unsigned(16#29#, 6);

  
  Switch15_out1_6 <= Constant11_out1_6 WHEN Bit_Slice12_out1_11 = '0' ELSE
      Constant12_out1_6;

  
  Switch16_out1_6 <= Switch12_out1_6 WHEN Logical_Operator4_out1_11 = '0' ELSE
      Switch15_out1_6;

  Constant13_out1_6 <= to_unsigned(16#28#, 6);

  Constant14_out1_5 <= to_unsigned(16#27#, 6);

  
  Switch18_out1_5 <= Constant13_out1_6 WHEN Bit_Slice14_out1_9 = '0' ELSE
      Constant14_out1_5;

  Constant15_out1_5 <= to_unsigned(16#26#, 6);

  Constant16_out1_5 <= to_unsigned(16#25#, 6);

  
  Switch20_out1_5 <= Constant15_out1_5 WHEN Bit_Slice16_out1_9 = '0' ELSE
      Constant16_out1_5;

  
  Switch21_out1_5 <= Switch18_out1_5 WHEN Logical_Operator5_out1_9 = '0' ELSE
      Switch20_out1_5;

  Logical_Operator_out1_3 <= Logical_Operator12_out1_9 OR Logical_Operator12_out1_10;

  
  Switch13_out1_6 <= Switch16_out1_6 WHEN Logical_Operator6_out1_9 = '0' ELSE
      Switch21_out1_5;

  
  Switch_out1_1 <= Switch10_out1_1 WHEN Logical_Operator12_out1_11 = '0' ELSE
      Switch13_out1_6;

  Constant9_out1_7 <= to_unsigned(16#24#, 6);

  Constant10_out1_7 <= to_unsigned(16#23#, 6);

  
  Switch12_out1_7 <= Constant9_out1_7 WHEN Bit_Slice10_out1_10 = '0' ELSE
      Constant10_out1_7;

  Constant11_out1_7 <= to_unsigned(16#22#, 6);

  Constant12_out1_7 <= to_unsigned(16#21#, 6);

  
  Switch15_out1_7 <= Constant11_out1_7 WHEN Bit_Slice12_out1_10 = '0' ELSE
      Constant12_out1_7;

  
  Switch16_out1_7 <= Switch12_out1_7 WHEN Logical_Operator4_out1_10 = '0' ELSE
      Switch15_out1_7;

  Constant13_out1_7 <= to_unsigned(16#20#, 6);

  Constant14_out1_6 <= to_unsigned(16#1F#, 6);

  
  Switch18_out1_6 <= Constant13_out1_7 WHEN Bit_Slice14_out1_8 = '0' ELSE
      Constant14_out1_6;

  Constant15_out1_6 <= to_unsigned(16#1E#, 6);

  Constant16_out1_6 <= to_unsigned(16#1D#, 6);

  
  Switch20_out1_6 <= Constant15_out1_6 WHEN Bit_Slice16_out1_8 = '0' ELSE
      Constant16_out1_6;

  
  Switch21_out1_6 <= Switch18_out1_6 WHEN Logical_Operator5_out1_8 = '0' ELSE
      Switch20_out1_6;

  
  Switch13_out1_7 <= Switch16_out1_7 WHEN Logical_Operator6_out1_8 = '0' ELSE
      Switch21_out1_6;

  Constant9_out1_8 <= to_unsigned(16#1C#, 6);

  Constant10_out1_8 <= to_unsigned(16#1B#, 6);

  
  Switch12_out1_8 <= Constant9_out1_8 WHEN Bit_Slice10_out1_9 = '0' ELSE
      Constant10_out1_8;

  Constant11_out1_8 <= to_unsigned(16#1A#, 6);

  Constant12_out1_8 <= to_unsigned(16#19#, 6);

  
  Switch15_out1_8 <= Constant11_out1_8 WHEN Bit_Slice12_out1_9 = '0' ELSE
      Constant12_out1_8;

  
  Switch16_out1_8 <= Switch12_out1_8 WHEN Logical_Operator4_out1_9 = '0' ELSE
      Switch15_out1_8;

  Constant13_out1_8 <= to_unsigned(16#18#, 6);

  Constant14_out1_7 <= to_unsigned(16#17#, 6);

  
  Switch18_out1_7 <= Constant13_out1_8 WHEN Bit_Slice14_out1_7 = '0' ELSE
      Constant14_out1_7;

  Constant15_out1_7 <= to_unsigned(16#16#, 6);

  Constant16_out1_7 <= to_unsigned(16#15#, 6);

  
  Switch20_out1_7 <= Constant15_out1_7 WHEN Bit_Slice16_out1_7 = '0' ELSE
      Constant16_out1_7;

  
  Switch21_out1_7 <= Switch18_out1_7 WHEN Logical_Operator5_out1_7 = '0' ELSE
      Switch20_out1_7;

  
  Switch13_out1_8 <= Switch16_out1_8 WHEN Logical_Operator6_out1_7 = '0' ELSE
      Switch21_out1_7;

  Logical_Operator3_out1_3 <= Logical_Operator12_out1_6 OR Logical_Operator2_out1_2;

  
  Switch2_out1_3 <= Switch13_out1_7 WHEN Logical_Operator12_out1_9 = '0' ELSE
      Switch13_out1_8;

  
  Switch1_out1_3 <= Switch_out1_1 WHEN Logical_Operator_out1_3 = '0' ELSE
      Switch2_out1_3;

  Constant9_out1_9 <= to_unsigned(16#14#, 6);

  Constant10_out1_9 <= to_unsigned(16#13#, 6);

  
  Switch12_out1_9 <= Constant9_out1_9 WHEN Bit_Slice10_out1_8 = '0' ELSE
      Constant10_out1_9;

  Constant11_out1_9 <= to_unsigned(16#12#, 6);

  Constant12_out1_9 <= to_unsigned(16#11#, 6);

  
  Switch15_out1_9 <= Constant11_out1_9 WHEN Bit_Slice12_out1_8 = '0' ELSE
      Constant12_out1_9;

  
  Switch16_out1_9 <= Switch12_out1_9 WHEN Logical_Operator4_out1_8 = '0' ELSE
      Switch15_out1_9;

  Constant13_out1_9 <= to_unsigned(16#10#, 6);

  Constant14_out1_8 <= to_unsigned(16#0F#, 6);

  
  Switch18_out1_8 <= Constant13_out1_9 WHEN Bit_Slice14_out1_6 = '0' ELSE
      Constant14_out1_8;

  Constant15_out1_8 <= to_unsigned(16#0E#, 6);

  Constant16_out1_8 <= to_unsigned(16#0D#, 6);

  
  Switch20_out1_8 <= Constant15_out1_8 WHEN Bit_Slice16_out1_6 = '0' ELSE
      Constant16_out1_8;

  
  Switch21_out1_8 <= Switch18_out1_8 WHEN Logical_Operator5_out1_6 = '0' ELSE
      Switch20_out1_8;

  
  Switch13_out1_9 <= Switch16_out1_9 WHEN Logical_Operator6_out1_6 = '0' ELSE
      Switch21_out1_8;

  Constant9_out1_10 <= to_unsigned(16#0C#, 6);

  Constant10_out1_10 <= to_unsigned(16#0B#, 6);

  
  Switch12_out1_10 <= Constant9_out1_10 WHEN Bit_Slice10_out1_7 = '0' ELSE
      Constant10_out1_10;

  Constant11_out1_10 <= to_unsigned(16#0A#, 6);

  Constant12_out1_10 <= to_unsigned(16#09#, 6);

  
  Switch15_out1_10 <= Constant11_out1_10 WHEN Bit_Slice12_out1_7 = '0' ELSE
      Constant12_out1_10;

  
  Switch16_out1_10 <= Switch12_out1_10 WHEN Logical_Operator4_out1_7 = '0' ELSE
      Switch15_out1_10;

  Constant13_out1_10 <= to_unsigned(16#08#, 6);

  Constant14_out1_9 <= to_unsigned(16#07#, 6);

  
  Switch18_out1_9 <= Constant13_out1_10 WHEN Bit_Slice14_out1_5 = '0' ELSE
      Constant14_out1_9;

  Constant15_out1_9 <= to_unsigned(16#06#, 6);

  Constant16_out1_9 <= to_unsigned(16#05#, 6);

  
  Switch20_out1_9 <= Constant15_out1_9 WHEN Bit_Slice16_out1_5 = '0' ELSE
      Constant16_out1_9;

  
  Switch21_out1_9 <= Switch18_out1_9 WHEN Logical_Operator5_out1_5 = '0' ELSE
      Switch20_out1_9;

  
  Switch13_out1_10 <= Switch16_out1_10 WHEN Logical_Operator6_out1_5 = '0' ELSE
      Switch21_out1_9;

  
  Switch3_out1_3 <= Switch13_out1_9 WHEN Logical_Operator12_out1_7 = '0' ELSE
      Switch13_out1_10;

  Constant9_out1_11 <= to_unsigned(16#04#, 6);

  Constant10_out1_11 <= to_unsigned(16#03#, 6);

  
  Switch12_out1_11 <= Constant9_out1_11 WHEN Bit_Slice10_out1_6 = '0' ELSE
      Constant10_out1_11;

  Constant11_out1_11 <= to_unsigned(16#02#, 6);

  Constant12_out1_11 <= to_unsigned(16#01#, 6);

  
  Switch15_out1_11 <= Constant11_out1_11 WHEN Bit_Slice12_out1_6 = '0' ELSE
      Constant12_out1_11;

  
  Switch16_out1_11 <= Switch12_out1_11 WHEN Logical_Operator4_out1_6 = '0' ELSE
      Switch15_out1_11;

  Constant13_out1_11 <= to_unsigned(16#00#, 6);

  
  Switch13_out1_11 <= Switch16_out1_11 WHEN Bit_Slice13_out1_6 = '0' ELSE
      Constant13_out1_11;

  
  Switch5_out1_1 <= Switch3_out1_3 WHEN Logical_Operator12_out1_6 = '0' ELSE
      Switch13_out1_11;

  
  Switch6_out1_3 <= Switch1_out1_3 WHEN Logical_Operator3_out1_3 = '0' ELSE
      Switch5_out1_1;

  bitsll_mant_b_ib_out1 <= Bit_Concat1_out1_2 sll to_integer(Switch6_out1_3);

  
  if_bitget_mant_b_mant_b_WordLen_1_out1 <= bitsll_mant_b_ib_out1 WHEN BitSlice1_out1 = '0' ELSE
      Bit_Concat1_out1_2;

  Bit_Concat3_out1 <= alpha3_out1 & if_bitget_mant_b_mant_b_WordLen_1_out1;

  reinterpretcast_bitconcat_fi_0_out1_1 <= signed(Bit_Concat3_out1);

  
  mant_a_norm_mant_b_norm_relop1 <= '1' WHEN reinterpretcast_bitconcat_fi_0_out1 < reinterpretcast_bitconcat_fi_0_out1_1 ELSE
      '0';

  bitsll_mant_a_norm_1_out1 <= reinterpretcast_bitconcat_fi_0_out1 sll 1;

  
  if_mant_a_norm_mant_b_norm_1_out1 <= reinterpretcast_bitconcat_fi_0_out1 WHEN mant_a_norm_mant_b_norm_relop1 = '0' ELSE
      bitsll_mant_a_norm_1_out1;

  Bit_Slice1_out1_4 <= unsigned(if_mant_a_norm_mant_b_norm_1_out1(54 DOWNTO 0));

  Data_Type_Conversion1_out1 <= signed(Bit_Slice1_out1_4);

  Unary_Minus2_in0 <=  - (resize(reinterpretcast_bitconcat_fi_0_out1_1, 58));
  Unary_Minus2_out1 <= Unary_Minus2_in0(56 DOWNTO 0);

  Bit_Slice_out1 <= unsigned(Unary_Minus2_out1(54 DOWNTO 0));

  Data_Type_Conversion_out1 <= signed(Bit_Slice_out1);

  R_mant_b_norm_out1 <= Data_Type_Conversion1_out1 + Data_Type_Conversion_out1;

  bitsll_R_1_out1 <= R_mant_b_norm_out1 sll 1;

  R_mant_b_norm_out1_1 <= bitsll_R_1_out1 + Data_Type_Conversion_out1;

  Bit_Slice_out1_1 <= R_mant_b_norm_out1_1(54);

  Logical_Operator_out1_4 <=  NOT Bit_Slice_out1_1;

  Bit_Concat_out1 <= unsigned'(C_out1 & Logical_Operator_out1_4);

  
  if_tmp_0_1_out1 <= R_mant_b_norm_out1_1 WHEN Bit_Slice_out1_1 = '0' ELSE
      bitsll_R_1_out1;

  bitsll_R_1_out1_1 <= if_tmp_0_1_out1 sll 1;

  R_mant_b_norm_out1_2 <= bitsll_R_1_out1_1 + Data_Type_Conversion_out1;

  Bit_Slice_out1_2 <= R_mant_b_norm_out1_2(54);

  Logical_Operator_out1_5 <=  NOT Bit_Slice_out1_2;

  Bit_Concat_out1_1 <= Bit_Concat_out1 & Logical_Operator_out1_5;

  
  if_tmp_0_1_out1_1 <= R_mant_b_norm_out1_2 WHEN Bit_Slice_out1_2 = '0' ELSE
      bitsll_R_1_out1_1;

  bitsll_R_1_out1_2 <= if_tmp_0_1_out1_1 sll 1;

  R_mant_b_norm_out1_3 <= bitsll_R_1_out1_2 + Data_Type_Conversion_out1;

  Bit_Slice_out1_3 <= R_mant_b_norm_out1_3(54);

  Logical_Operator_out1_6 <=  NOT Bit_Slice_out1_3;

  Bit_Concat_out1_2 <= Bit_Concat_out1_1 & Logical_Operator_out1_6;

  
  if_tmp_0_1_out1_2 <= R_mant_b_norm_out1_3 WHEN Bit_Slice_out1_3 = '0' ELSE
      bitsll_R_1_out1_2;

  bitsll_R_1_out1_3 <= if_tmp_0_1_out1_2 sll 1;

  R_mant_b_norm_out1_4 <= bitsll_R_1_out1_3 + Data_Type_Conversion_out1;

  Bit_Slice_out1_4 <= R_mant_b_norm_out1_4(54);

  Logical_Operator_out1_7 <=  NOT Bit_Slice_out1_4;

  Bit_Concat_out1_3 <= Bit_Concat_out1_2 & Logical_Operator_out1_7;

  
  if_tmp_0_1_out1_3 <= R_mant_b_norm_out1_4 WHEN Bit_Slice_out1_4 = '0' ELSE
      bitsll_R_1_out1_3;

  bitsll_R_1_out1_4 <= if_tmp_0_1_out1_3 sll 1;

  R_mant_b_norm_out1_5 <= bitsll_R_1_out1_4 + Data_Type_Conversion_out1;

  Bit_Slice_out1_5 <= R_mant_b_norm_out1_5(54);

  Logical_Operator_out1_8 <=  NOT Bit_Slice_out1_5;

  Bit_Concat_out1_4 <= Bit_Concat_out1_3 & Logical_Operator_out1_8;

  
  if_tmp_0_1_out1_4 <= R_mant_b_norm_out1_5 WHEN Bit_Slice_out1_5 = '0' ELSE
      bitsll_R_1_out1_4;

  bitsll_R_1_out1_5 <= if_tmp_0_1_out1_4 sll 1;

  R_mant_b_norm_out1_6 <= bitsll_R_1_out1_5 + Data_Type_Conversion_out1;

  Bit_Slice_out1_6 <= R_mant_b_norm_out1_6(54);

  Logical_Operator_out1_9 <=  NOT Bit_Slice_out1_6;

  Bit_Concat_out1_5 <= Bit_Concat_out1_4 & Logical_Operator_out1_9;

  
  if_tmp_0_1_out1_5 <= R_mant_b_norm_out1_6 WHEN Bit_Slice_out1_6 = '0' ELSE
      bitsll_R_1_out1_5;

  bitsll_R_1_out1_6 <= if_tmp_0_1_out1_5 sll 1;

  R_mant_b_norm_out1_7 <= bitsll_R_1_out1_6 + Data_Type_Conversion_out1;

  Bit_Slice_out1_7 <= R_mant_b_norm_out1_7(54);

  Logical_Operator_out1_10 <=  NOT Bit_Slice_out1_7;

  Bit_Concat_out1_6 <= Bit_Concat_out1_5 & Logical_Operator_out1_10;

  
  if_tmp_0_1_out1_6 <= R_mant_b_norm_out1_7 WHEN Bit_Slice_out1_7 = '0' ELSE
      bitsll_R_1_out1_6;

  bitsll_R_1_out1_7 <= if_tmp_0_1_out1_6 sll 1;

  R_mant_b_norm_out1_8 <= bitsll_R_1_out1_7 + Data_Type_Conversion_out1;

  Bit_Slice_out1_8 <= R_mant_b_norm_out1_8(54);

  Logical_Operator_out1_11 <=  NOT Bit_Slice_out1_8;

  Bit_Concat_out1_7 <= Bit_Concat_out1_6 & Logical_Operator_out1_11;

  
  if_tmp_0_1_out1_7 <= R_mant_b_norm_out1_8 WHEN Bit_Slice_out1_8 = '0' ELSE
      bitsll_R_1_out1_7;

  bitsll_R_1_out1_8 <= if_tmp_0_1_out1_7 sll 1;

  R_mant_b_norm_out1_9 <= bitsll_R_1_out1_8 + Data_Type_Conversion_out1;

  Bit_Slice_out1_9 <= R_mant_b_norm_out1_9(54);

  Logical_Operator_out1_12 <=  NOT Bit_Slice_out1_9;

  Bit_Concat_out1_8 <= Bit_Concat_out1_7 & Logical_Operator_out1_12;

  
  if_tmp_0_1_out1_8 <= R_mant_b_norm_out1_9 WHEN Bit_Slice_out1_9 = '0' ELSE
      bitsll_R_1_out1_8;

  bitsll_R_1_out1_9 <= if_tmp_0_1_out1_8 sll 1;

  R_mant_b_norm_out1_10 <= bitsll_R_1_out1_9 + Data_Type_Conversion_out1;

  Bit_Slice_out1_10 <= R_mant_b_norm_out1_10(54);

  Logical_Operator_out1_13 <=  NOT Bit_Slice_out1_10;

  Bit_Concat_out1_9 <= Bit_Concat_out1_8 & Logical_Operator_out1_13;

  
  if_tmp_0_1_out1_9 <= R_mant_b_norm_out1_10 WHEN Bit_Slice_out1_10 = '0' ELSE
      bitsll_R_1_out1_9;

  bitsll_R_1_out1_10 <= if_tmp_0_1_out1_9 sll 1;

  R_mant_b_norm_out1_11 <= bitsll_R_1_out1_10 + Data_Type_Conversion_out1;

  Bit_Slice_out1_11 <= R_mant_b_norm_out1_11(54);

  Logical_Operator_out1_14 <=  NOT Bit_Slice_out1_11;

  Bit_Concat_out1_10 <= Bit_Concat_out1_9 & Logical_Operator_out1_14;

  
  if_tmp_0_1_out1_10 <= R_mant_b_norm_out1_11 WHEN Bit_Slice_out1_11 = '0' ELSE
      bitsll_R_1_out1_10;

  bitsll_R_1_out1_11 <= if_tmp_0_1_out1_10 sll 1;

  R_mant_b_norm_out1_12 <= bitsll_R_1_out1_11 + Data_Type_Conversion_out1;

  Bit_Slice_out1_12 <= R_mant_b_norm_out1_12(54);

  Logical_Operator_out1_15 <=  NOT Bit_Slice_out1_12;

  Bit_Concat_out1_11 <= Bit_Concat_out1_10 & Logical_Operator_out1_15;

  
  if_tmp_0_1_out1_11 <= R_mant_b_norm_out1_12 WHEN Bit_Slice_out1_12 = '0' ELSE
      bitsll_R_1_out1_11;

  bitsll_R_1_out1_12 <= if_tmp_0_1_out1_11 sll 1;

  R_mant_b_norm_out1_13 <= bitsll_R_1_out1_12 + Data_Type_Conversion_out1;

  Bit_Slice_out1_13 <= R_mant_b_norm_out1_13(54);

  Logical_Operator_out1_16 <=  NOT Bit_Slice_out1_13;

  Bit_Concat_out1_12 <= Bit_Concat_out1_11 & Logical_Operator_out1_16;

  
  if_tmp_0_1_out1_12 <= R_mant_b_norm_out1_13 WHEN Bit_Slice_out1_13 = '0' ELSE
      bitsll_R_1_out1_12;

  bitsll_R_1_out1_13 <= if_tmp_0_1_out1_12 sll 1;

  R_mant_b_norm_out1_14 <= bitsll_R_1_out1_13 + Data_Type_Conversion_out1;

  Bit_Slice_out1_14 <= R_mant_b_norm_out1_14(54);

  Logical_Operator_out1_17 <=  NOT Bit_Slice_out1_14;

  Bit_Concat_out1_13 <= Bit_Concat_out1_12 & Logical_Operator_out1_17;

  
  if_tmp_0_1_out1_13 <= R_mant_b_norm_out1_14 WHEN Bit_Slice_out1_14 = '0' ELSE
      bitsll_R_1_out1_13;

  bitsll_R_1_out1_14 <= if_tmp_0_1_out1_13 sll 1;

  R_mant_b_norm_out1_15 <= bitsll_R_1_out1_14 + Data_Type_Conversion_out1;

  Bit_Slice_out1_15 <= R_mant_b_norm_out1_15(54);

  Logical_Operator_out1_18 <=  NOT Bit_Slice_out1_15;

  Bit_Concat_out1_14 <= Bit_Concat_out1_13 & Logical_Operator_out1_18;

  
  if_tmp_0_1_out1_14 <= R_mant_b_norm_out1_15 WHEN Bit_Slice_out1_15 = '0' ELSE
      bitsll_R_1_out1_14;

  bitsll_R_1_out1_15 <= if_tmp_0_1_out1_14 sll 1;

  R_mant_b_norm_out1_16 <= bitsll_R_1_out1_15 + Data_Type_Conversion_out1;

  Bit_Slice_out1_16 <= R_mant_b_norm_out1_16(54);

  Logical_Operator_out1_19 <=  NOT Bit_Slice_out1_16;

  Bit_Concat_out1_15 <= Bit_Concat_out1_14 & Logical_Operator_out1_19;

  
  if_tmp_0_1_out1_15 <= R_mant_b_norm_out1_16 WHEN Bit_Slice_out1_16 = '0' ELSE
      bitsll_R_1_out1_15;

  bitsll_R_1_out1_16 <= if_tmp_0_1_out1_15 sll 1;

  R_mant_b_norm_out1_17 <= bitsll_R_1_out1_16 + Data_Type_Conversion_out1;

  Bit_Slice_out1_17 <= R_mant_b_norm_out1_17(54);

  Logical_Operator_out1_20 <=  NOT Bit_Slice_out1_17;

  Bit_Concat_out1_16 <= Bit_Concat_out1_15 & Logical_Operator_out1_20;

  
  if_tmp_0_1_out1_16 <= R_mant_b_norm_out1_17 WHEN Bit_Slice_out1_17 = '0' ELSE
      bitsll_R_1_out1_16;

  bitsll_R_1_out1_17 <= if_tmp_0_1_out1_16 sll 1;

  R_mant_b_norm_out1_18 <= bitsll_R_1_out1_17 + Data_Type_Conversion_out1;

  Bit_Slice_out1_18 <= R_mant_b_norm_out1_18(54);

  Logical_Operator_out1_21 <=  NOT Bit_Slice_out1_18;

  Bit_Concat_out1_17 <= Bit_Concat_out1_16 & Logical_Operator_out1_21;

  
  if_tmp_0_1_out1_17 <= R_mant_b_norm_out1_18 WHEN Bit_Slice_out1_18 = '0' ELSE
      bitsll_R_1_out1_17;

  bitsll_R_1_out1_18 <= if_tmp_0_1_out1_17 sll 1;

  R_mant_b_norm_out1_19 <= bitsll_R_1_out1_18 + Data_Type_Conversion_out1;

  Bit_Slice_out1_19 <= R_mant_b_norm_out1_19(54);

  Logical_Operator_out1_22 <=  NOT Bit_Slice_out1_19;

  Bit_Concat_out1_18 <= Bit_Concat_out1_17 & Logical_Operator_out1_22;

  
  if_tmp_0_1_out1_18 <= R_mant_b_norm_out1_19 WHEN Bit_Slice_out1_19 = '0' ELSE
      bitsll_R_1_out1_18;

  bitsll_R_1_out1_19 <= if_tmp_0_1_out1_18 sll 1;

  R_mant_b_norm_out1_20 <= bitsll_R_1_out1_19 + Data_Type_Conversion_out1;

  Bit_Slice_out1_20 <= R_mant_b_norm_out1_20(54);

  Logical_Operator_out1_23 <=  NOT Bit_Slice_out1_20;

  Bit_Concat_out1_19 <= Bit_Concat_out1_18 & Logical_Operator_out1_23;

  
  if_tmp_0_1_out1_19 <= R_mant_b_norm_out1_20 WHEN Bit_Slice_out1_20 = '0' ELSE
      bitsll_R_1_out1_19;

  bitsll_R_1_out1_20 <= if_tmp_0_1_out1_19 sll 1;

  R_mant_b_norm_out1_21 <= bitsll_R_1_out1_20 + Data_Type_Conversion_out1;

  Bit_Slice_out1_21 <= R_mant_b_norm_out1_21(54);

  Logical_Operator_out1_24 <=  NOT Bit_Slice_out1_21;

  Bit_Concat_out1_20 <= Bit_Concat_out1_19 & Logical_Operator_out1_24;

  
  if_tmp_0_1_out1_20 <= R_mant_b_norm_out1_21 WHEN Bit_Slice_out1_21 = '0' ELSE
      bitsll_R_1_out1_20;

  bitsll_R_1_out1_21 <= if_tmp_0_1_out1_20 sll 1;

  R_mant_b_norm_out1_22 <= bitsll_R_1_out1_21 + Data_Type_Conversion_out1;

  Bit_Slice_out1_22 <= R_mant_b_norm_out1_22(54);

  Logical_Operator_out1_25 <=  NOT Bit_Slice_out1_22;

  Bit_Concat_out1_21 <= Bit_Concat_out1_20 & Logical_Operator_out1_25;

  
  if_tmp_0_1_out1_21 <= R_mant_b_norm_out1_22 WHEN Bit_Slice_out1_22 = '0' ELSE
      bitsll_R_1_out1_21;

  bitsll_R_1_out1_22 <= if_tmp_0_1_out1_21 sll 1;

  R_mant_b_norm_out1_23 <= bitsll_R_1_out1_22 + Data_Type_Conversion_out1;

  Bit_Slice_out1_23 <= R_mant_b_norm_out1_23(54);

  Logical_Operator_out1_26 <=  NOT Bit_Slice_out1_23;

  Bit_Concat_out1_22 <= Bit_Concat_out1_21 & Logical_Operator_out1_26;

  
  if_tmp_0_1_out1_22 <= R_mant_b_norm_out1_23 WHEN Bit_Slice_out1_23 = '0' ELSE
      bitsll_R_1_out1_22;

  bitsll_R_1_out1_23 <= if_tmp_0_1_out1_22 sll 1;

  R_mant_b_norm_out1_24 <= bitsll_R_1_out1_23 + Data_Type_Conversion_out1;

  Bit_Slice_out1_24 <= R_mant_b_norm_out1_24(54);

  Logical_Operator_out1_27 <=  NOT Bit_Slice_out1_24;

  Bit_Concat_out1_23 <= Bit_Concat_out1_22 & Logical_Operator_out1_27;

  
  if_tmp_0_1_out1_23 <= R_mant_b_norm_out1_24 WHEN Bit_Slice_out1_24 = '0' ELSE
      bitsll_R_1_out1_23;

  bitsll_R_1_out1_24 <= if_tmp_0_1_out1_23 sll 1;

  R_mant_b_norm_out1_25 <= bitsll_R_1_out1_24 + Data_Type_Conversion_out1;

  Bit_Slice_out1_25 <= R_mant_b_norm_out1_25(54);

  Logical_Operator_out1_28 <=  NOT Bit_Slice_out1_25;

  Bit_Concat_out1_24 <= Bit_Concat_out1_23 & Logical_Operator_out1_28;

  
  if_tmp_0_1_out1_24 <= R_mant_b_norm_out1_25 WHEN Bit_Slice_out1_25 = '0' ELSE
      bitsll_R_1_out1_24;

  bitsll_R_1_out1_25 <= if_tmp_0_1_out1_24 sll 1;

  R_mant_b_norm_out1_26 <= bitsll_R_1_out1_25 + Data_Type_Conversion_out1;

  Bit_Slice_out1_26 <= R_mant_b_norm_out1_26(54);

  Logical_Operator_out1_29 <=  NOT Bit_Slice_out1_26;

  Bit_Concat_out1_25 <= Bit_Concat_out1_24 & Logical_Operator_out1_29;

  
  if_tmp_0_1_out1_25 <= R_mant_b_norm_out1_26 WHEN Bit_Slice_out1_26 = '0' ELSE
      bitsll_R_1_out1_25;

  bitsll_R_1_out1_26 <= if_tmp_0_1_out1_25 sll 1;

  R_mant_b_norm_out1_27 <= bitsll_R_1_out1_26 + Data_Type_Conversion_out1;

  Bit_Slice_out1_27 <= R_mant_b_norm_out1_27(54);

  Logical_Operator_out1_30 <=  NOT Bit_Slice_out1_27;

  Bit_Concat_out1_26 <= Bit_Concat_out1_25 & Logical_Operator_out1_30;

  
  if_tmp_0_1_out1_26 <= R_mant_b_norm_out1_27 WHEN Bit_Slice_out1_27 = '0' ELSE
      bitsll_R_1_out1_26;

  bitsll_R_1_out1_27 <= if_tmp_0_1_out1_26 sll 1;

  R_mant_b_norm_out1_28 <= bitsll_R_1_out1_27 + Data_Type_Conversion_out1;

  Bit_Slice_out1_28 <= R_mant_b_norm_out1_28(54);

  Logical_Operator_out1_31 <=  NOT Bit_Slice_out1_28;

  Bit_Concat_out1_27 <= Bit_Concat_out1_26 & Logical_Operator_out1_31;

  
  if_tmp_0_1_out1_27 <= R_mant_b_norm_out1_28 WHEN Bit_Slice_out1_28 = '0' ELSE
      bitsll_R_1_out1_27;

  bitsll_R_1_out1_28 <= if_tmp_0_1_out1_27 sll 1;

  R_mant_b_norm_out1_29 <= bitsll_R_1_out1_28 + Data_Type_Conversion_out1;

  Bit_Slice_out1_29 <= R_mant_b_norm_out1_29(54);

  Logical_Operator_out1_32 <=  NOT Bit_Slice_out1_29;

  Bit_Concat_out1_28 <= Bit_Concat_out1_27 & Logical_Operator_out1_32;

  
  if_tmp_0_1_out1_28 <= R_mant_b_norm_out1_29 WHEN Bit_Slice_out1_29 = '0' ELSE
      bitsll_R_1_out1_28;

  bitsll_R_1_out1_29 <= if_tmp_0_1_out1_28 sll 1;

  R_mant_b_norm_out1_30 <= bitsll_R_1_out1_29 + Data_Type_Conversion_out1;

  Bit_Slice_out1_30 <= R_mant_b_norm_out1_30(54);

  Logical_Operator_out1_33 <=  NOT Bit_Slice_out1_30;

  Bit_Concat_out1_29 <= Bit_Concat_out1_28 & Logical_Operator_out1_33;

  
  if_tmp_0_1_out1_29 <= R_mant_b_norm_out1_30 WHEN Bit_Slice_out1_30 = '0' ELSE
      bitsll_R_1_out1_29;

  bitsll_R_1_out1_30 <= if_tmp_0_1_out1_29 sll 1;

  R_mant_b_norm_out1_31 <= bitsll_R_1_out1_30 + Data_Type_Conversion_out1;

  Bit_Slice_out1_31 <= R_mant_b_norm_out1_31(54);

  Logical_Operator_out1_34 <=  NOT Bit_Slice_out1_31;

  Bit_Concat_out1_30 <= Bit_Concat_out1_29 & Logical_Operator_out1_34;

  
  if_tmp_0_1_out1_30 <= R_mant_b_norm_out1_31 WHEN Bit_Slice_out1_31 = '0' ELSE
      bitsll_R_1_out1_30;

  bitsll_R_1_out1_31 <= if_tmp_0_1_out1_30 sll 1;

  R_mant_b_norm_out1_32 <= bitsll_R_1_out1_31 + Data_Type_Conversion_out1;

  Bit_Slice_out1_32 <= R_mant_b_norm_out1_32(54);

  Logical_Operator_out1_35 <=  NOT Bit_Slice_out1_32;

  Bit_Concat_out1_31 <= Bit_Concat_out1_30 & Logical_Operator_out1_35;

  
  if_tmp_0_1_out1_31 <= R_mant_b_norm_out1_32 WHEN Bit_Slice_out1_32 = '0' ELSE
      bitsll_R_1_out1_31;

  bitsll_R_1_out1_32 <= if_tmp_0_1_out1_31 sll 1;

  R_mant_b_norm_out1_33 <= bitsll_R_1_out1_32 + Data_Type_Conversion_out1;

  Bit_Slice_out1_33 <= R_mant_b_norm_out1_33(54);

  Logical_Operator_out1_36 <=  NOT Bit_Slice_out1_33;

  Bit_Concat_out1_32 <= Bit_Concat_out1_31 & Logical_Operator_out1_36;

  
  if_tmp_0_1_out1_32 <= R_mant_b_norm_out1_33 WHEN Bit_Slice_out1_33 = '0' ELSE
      bitsll_R_1_out1_32;

  bitsll_R_1_out1_33 <= if_tmp_0_1_out1_32 sll 1;

  R_mant_b_norm_out1_34 <= bitsll_R_1_out1_33 + Data_Type_Conversion_out1;

  Bit_Slice_out1_34 <= R_mant_b_norm_out1_34(54);

  Logical_Operator_out1_37 <=  NOT Bit_Slice_out1_34;

  Bit_Concat_out1_33 <= Bit_Concat_out1_32 & Logical_Operator_out1_37;

  
  if_tmp_0_1_out1_33 <= R_mant_b_norm_out1_34 WHEN Bit_Slice_out1_34 = '0' ELSE
      bitsll_R_1_out1_33;

  bitsll_R_1_out1_34 <= if_tmp_0_1_out1_33 sll 1;

  R_mant_b_norm_out1_35 <= bitsll_R_1_out1_34 + Data_Type_Conversion_out1;

  Bit_Slice_out1_35 <= R_mant_b_norm_out1_35(54);

  Logical_Operator_out1_38 <=  NOT Bit_Slice_out1_35;

  Bit_Concat_out1_34 <= Bit_Concat_out1_33 & Logical_Operator_out1_38;

  
  if_tmp_0_1_out1_34 <= R_mant_b_norm_out1_35 WHEN Bit_Slice_out1_35 = '0' ELSE
      bitsll_R_1_out1_34;

  bitsll_R_1_out1_35 <= if_tmp_0_1_out1_34 sll 1;

  R_mant_b_norm_out1_36 <= bitsll_R_1_out1_35 + Data_Type_Conversion_out1;

  Bit_Slice_out1_36 <= R_mant_b_norm_out1_36(54);

  Logical_Operator_out1_39 <=  NOT Bit_Slice_out1_36;

  Bit_Concat_out1_35 <= Bit_Concat_out1_34 & Logical_Operator_out1_39;

  
  if_tmp_0_1_out1_35 <= R_mant_b_norm_out1_36 WHEN Bit_Slice_out1_36 = '0' ELSE
      bitsll_R_1_out1_35;

  bitsll_R_1_out1_36 <= if_tmp_0_1_out1_35 sll 1;

  R_mant_b_norm_out1_37 <= bitsll_R_1_out1_36 + Data_Type_Conversion_out1;

  Bit_Slice_out1_37 <= R_mant_b_norm_out1_37(54);

  Logical_Operator_out1_40 <=  NOT Bit_Slice_out1_37;

  Bit_Concat_out1_36 <= Bit_Concat_out1_35 & Logical_Operator_out1_40;

  
  if_tmp_0_1_out1_36 <= R_mant_b_norm_out1_37 WHEN Bit_Slice_out1_37 = '0' ELSE
      bitsll_R_1_out1_36;

  bitsll_R_1_out1_37 <= if_tmp_0_1_out1_36 sll 1;

  R_mant_b_norm_out1_38 <= bitsll_R_1_out1_37 + Data_Type_Conversion_out1;

  Bit_Slice_out1_38 <= R_mant_b_norm_out1_38(54);

  Logical_Operator_out1_41 <=  NOT Bit_Slice_out1_38;

  Bit_Concat_out1_37 <= Bit_Concat_out1_36 & Logical_Operator_out1_41;

  
  if_tmp_0_1_out1_37 <= R_mant_b_norm_out1_38 WHEN Bit_Slice_out1_38 = '0' ELSE
      bitsll_R_1_out1_37;

  bitsll_R_1_out1_38 <= if_tmp_0_1_out1_37 sll 1;

  R_mant_b_norm_out1_39 <= bitsll_R_1_out1_38 + Data_Type_Conversion_out1;

  Bit_Slice_out1_39 <= R_mant_b_norm_out1_39(54);

  Logical_Operator_out1_42 <=  NOT Bit_Slice_out1_39;

  Bit_Concat_out1_38 <= Bit_Concat_out1_37 & Logical_Operator_out1_42;

  
  if_tmp_0_1_out1_38 <= R_mant_b_norm_out1_39 WHEN Bit_Slice_out1_39 = '0' ELSE
      bitsll_R_1_out1_38;

  bitsll_R_1_out1_39 <= if_tmp_0_1_out1_38 sll 1;

  R_mant_b_norm_out1_40 <= bitsll_R_1_out1_39 + Data_Type_Conversion_out1;

  Bit_Slice_out1_40 <= R_mant_b_norm_out1_40(54);

  Logical_Operator_out1_43 <=  NOT Bit_Slice_out1_40;

  Bit_Concat_out1_39 <= Bit_Concat_out1_38 & Logical_Operator_out1_43;

  
  if_tmp_0_1_out1_39 <= R_mant_b_norm_out1_40 WHEN Bit_Slice_out1_40 = '0' ELSE
      bitsll_R_1_out1_39;

  bitsll_R_1_out1_40 <= if_tmp_0_1_out1_39 sll 1;

  R_mant_b_norm_out1_41 <= bitsll_R_1_out1_40 + Data_Type_Conversion_out1;

  Bit_Slice_out1_41 <= R_mant_b_norm_out1_41(54);

  Logical_Operator_out1_44 <=  NOT Bit_Slice_out1_41;

  Bit_Concat_out1_40 <= Bit_Concat_out1_39 & Logical_Operator_out1_44;

  
  if_tmp_0_1_out1_40 <= R_mant_b_norm_out1_41 WHEN Bit_Slice_out1_41 = '0' ELSE
      bitsll_R_1_out1_40;

  bitsll_R_1_out1_41 <= if_tmp_0_1_out1_40 sll 1;

  R_mant_b_norm_out1_42 <= bitsll_R_1_out1_41 + Data_Type_Conversion_out1;

  Bit_Slice_out1_42 <= R_mant_b_norm_out1_42(54);

  Logical_Operator_out1_45 <=  NOT Bit_Slice_out1_42;

  Bit_Concat_out1_41 <= Bit_Concat_out1_40 & Logical_Operator_out1_45;

  
  if_tmp_0_1_out1_41 <= R_mant_b_norm_out1_42 WHEN Bit_Slice_out1_42 = '0' ELSE
      bitsll_R_1_out1_41;

  bitsll_R_1_out1_42 <= if_tmp_0_1_out1_41 sll 1;

  R_mant_b_norm_out1_43 <= bitsll_R_1_out1_42 + Data_Type_Conversion_out1;

  Bit_Slice_out1_43 <= R_mant_b_norm_out1_43(54);

  Logical_Operator_out1_46 <=  NOT Bit_Slice_out1_43;

  Bit_Concat_out1_42 <= Bit_Concat_out1_41 & Logical_Operator_out1_46;

  
  if_tmp_0_1_out1_42 <= R_mant_b_norm_out1_43 WHEN Bit_Slice_out1_43 = '0' ELSE
      bitsll_R_1_out1_42;

  bitsll_R_1_out1_43 <= if_tmp_0_1_out1_42 sll 1;

  R_mant_b_norm_out1_44 <= bitsll_R_1_out1_43 + Data_Type_Conversion_out1;

  Bit_Slice_out1_44 <= R_mant_b_norm_out1_44(54);

  Logical_Operator_out1_47 <=  NOT Bit_Slice_out1_44;

  Bit_Concat_out1_43 <= Bit_Concat_out1_42 & Logical_Operator_out1_47;

  
  if_tmp_0_1_out1_43 <= R_mant_b_norm_out1_44 WHEN Bit_Slice_out1_44 = '0' ELSE
      bitsll_R_1_out1_43;

  bitsll_R_1_out1_44 <= if_tmp_0_1_out1_43 sll 1;

  R_mant_b_norm_out1_45 <= bitsll_R_1_out1_44 + Data_Type_Conversion_out1;

  Bit_Slice_out1_45 <= R_mant_b_norm_out1_45(54);

  Logical_Operator_out1_48 <=  NOT Bit_Slice_out1_45;

  Bit_Concat_out1_44 <= Bit_Concat_out1_43 & Logical_Operator_out1_48;

  
  if_tmp_0_1_out1_44 <= R_mant_b_norm_out1_45 WHEN Bit_Slice_out1_45 = '0' ELSE
      bitsll_R_1_out1_44;

  bitsll_R_1_out1_45 <= if_tmp_0_1_out1_44 sll 1;

  R_mant_b_norm_out1_46 <= bitsll_R_1_out1_45 + Data_Type_Conversion_out1;

  Bit_Slice_out1_46 <= R_mant_b_norm_out1_46(54);

  Logical_Operator_out1_49 <=  NOT Bit_Slice_out1_46;

  Bit_Concat_out1_45 <= Bit_Concat_out1_44 & Logical_Operator_out1_49;

  
  if_tmp_0_1_out1_45 <= R_mant_b_norm_out1_46 WHEN Bit_Slice_out1_46 = '0' ELSE
      bitsll_R_1_out1_45;

  bitsll_R_1_out1_46 <= if_tmp_0_1_out1_45 sll 1;

  R_mant_b_norm_out1_47 <= bitsll_R_1_out1_46 + Data_Type_Conversion_out1;

  Bit_Slice_out1_47 <= R_mant_b_norm_out1_47(54);

  Logical_Operator_out1_50 <=  NOT Bit_Slice_out1_47;

  Bit_Concat_out1_46 <= Bit_Concat_out1_45 & Logical_Operator_out1_50;

  
  if_tmp_0_1_out1_46 <= R_mant_b_norm_out1_47 WHEN Bit_Slice_out1_47 = '0' ELSE
      bitsll_R_1_out1_46;

  bitsll_R_1_out1_47 <= if_tmp_0_1_out1_46 sll 1;

  R_mant_b_norm_out1_48 <= bitsll_R_1_out1_47 + Data_Type_Conversion_out1;

  Bit_Slice_out1_48 <= R_mant_b_norm_out1_48(54);

  Logical_Operator_out1_51 <=  NOT Bit_Slice_out1_48;

  Bit_Concat_out1_47 <= Bit_Concat_out1_46 & Logical_Operator_out1_51;

  
  if_tmp_0_1_out1_47 <= R_mant_b_norm_out1_48 WHEN Bit_Slice_out1_48 = '0' ELSE
      bitsll_R_1_out1_47;

  bitsll_R_1_out1_48 <= if_tmp_0_1_out1_47 sll 1;

  R_mant_b_norm_out1_49 <= bitsll_R_1_out1_48 + Data_Type_Conversion_out1;

  Bit_Slice_out1_49 <= R_mant_b_norm_out1_49(54);

  Logical_Operator_out1_52 <=  NOT Bit_Slice_out1_49;

  Bit_Concat_out1_48 <= Bit_Concat_out1_47 & Logical_Operator_out1_52;

  
  if_tmp_0_1_out1_48 <= R_mant_b_norm_out1_49 WHEN Bit_Slice_out1_49 = '0' ELSE
      bitsll_R_1_out1_48;

  bitsll_R_1_out1_49 <= if_tmp_0_1_out1_48 sll 1;

  R_mant_b_norm_out1_50 <= bitsll_R_1_out1_49 + Data_Type_Conversion_out1;

  Bit_Slice_out1_50 <= R_mant_b_norm_out1_50(54);

  Logical_Operator_out1_53 <=  NOT Bit_Slice_out1_50;

  Bit_Concat_out1_49 <= Bit_Concat_out1_48 & Logical_Operator_out1_53;

  
  if_tmp_0_1_out1_49 <= R_mant_b_norm_out1_50 WHEN Bit_Slice_out1_50 = '0' ELSE
      bitsll_R_1_out1_49;

  bitsll_R_1_out1_50 <= if_tmp_0_1_out1_49 sll 1;

  R_mant_b_norm_out1_51 <= bitsll_R_1_out1_50 + Data_Type_Conversion_out1;

  Bit_Slice_out1_51 <= R_mant_b_norm_out1_51(54);

  Logical_Operator_out1_54 <=  NOT Bit_Slice_out1_51;

  Bit_Concat_out1_50 <= Bit_Concat_out1_49 & Logical_Operator_out1_54;

  
  if_tmp_0_1_out1_50 <= R_mant_b_norm_out1_51 WHEN Bit_Slice_out1_51 = '0' ELSE
      bitsll_R_1_out1_50;

  bitsll_R_1_out1_51 <= if_tmp_0_1_out1_50 sll 1;

  R_mant_b_norm_out1_52 <= bitsll_R_1_out1_51 + Data_Type_Conversion_out1;

  Bit_Slice_out1_52 <= R_mant_b_norm_out1_52(54);

  Logical_Operator_out1_55 <=  NOT Bit_Slice_out1_52;

  Bit_Concat_out1_51 <= Bit_Concat_out1_50 & Logical_Operator_out1_55;

  
  if_tmp_0_1_out1_51 <= R_mant_b_norm_out1_52 WHEN Bit_Slice_out1_52 = '0' ELSE
      bitsll_R_1_out1_51;

  bitsll_R_1_out1_52 <= if_tmp_0_1_out1_51 sll 1;

  R_mant_b_norm_out1_53 <= bitsll_R_1_out1_52 + Data_Type_Conversion_out1;

  Bit_Slice_out1_53 <= R_mant_b_norm_out1_53(54);

  Logical_Operator_out1_56 <=  NOT Bit_Slice_out1_53;

  Bit_Concat_out1_52 <= Bit_Concat_out1_51 & Logical_Operator_out1_56;

  alpha1_out1_3 <= to_signed(16#01#, 8);

  DTC_out1 <= signed(resize(Switch6_out1_1, 8));

  alpha1_ia_out1 <= alpha1_out1_3 - DTC_out1;

  DTC1_out1 <= resize(alpha1_ia_out1, 13);

  C_out1_1 <= to_unsigned(16#001#, 11);

  
  if_Exponent_0_out1 <= aExponent WHEN aExponent_0_out1 = '0' ELSE
      C_out1_1;

  DTC2_out1 <= signed(resize(if_Exponent_0_out1, 13));

  
  if_bitget_mant_a_mant_a_WordLen_out1 <= DTC1_out1 WHEN BitSlice_out1 = '0' ELSE
      DTC2_out1;

  cast_1_like_exp_a_norm_out1 <= to_signed(16#001#, 10);

  exp_a_norm_cast_1 <= if_bitget_mant_a_mant_a_WordLen_out1 - resize(cast_1_like_exp_a_norm_out1, 13);

  
  if_mant_a_norm_mant_b_norm_out1 <= if_bitget_mant_a_mant_a_WordLen_out1 WHEN mant_a_norm_mant_b_norm_relop1 = '0' ELSE
      exp_a_norm_cast_1;

  alpha1_out1_4 <= to_signed(16#01#, 8);

  DTC3_out1 <= signed(resize(Switch6_out1_3, 8));

  alpha1_ib_out1 <= alpha1_out1_4 - DTC3_out1;

  DTC4_out1 <= resize(alpha1_ib_out1, 13);

  C_out1_2 <= to_unsigned(16#001#, 11);

  
  if_Exponent_0_out1_1 <= bExponent WHEN bExponent_0_out1 = '0' ELSE
      C_out1_2;

  DTC5_out1 <= signed(resize(if_Exponent_0_out1_1, 13));

  
  if_bitget_mant_b_mant_b_WordLen_out1 <= DTC4_out1 WHEN BitSlice1_out1 = '0' ELSE
      DTC5_out1;

  exp_a_norm_exp_b_norm_out1 <= if_mant_a_norm_mant_b_norm_out1 - if_bitget_mant_b_mant_b_WordLen_out1;

  cfType_ExponentBias_out1 <= to_signed(16#03FF#, 13);

  exp_a_norm_exp_b_norm_cast_out1 <= exp_a_norm_exp_b_norm_out1 + cfType_ExponentBias_out1;

  
  exp_tmp_2_cfType_ExponentBi_out1 <= '1' WHEN exp_a_norm_exp_b_norm_cast_out1 >= to_signed(16#07FF#, 13) ELSE
      '0';

  
  exp_tmp_1_out1 <= '1' WHEN exp_a_norm_exp_b_norm_cast_out1 < to_signed(16#0001#, 13) ELSE
      '0';

  C2_out1 <= to_unsigned(16#00#, 6);

  
  exp_tmp_cfType_MantissaLen_out1 <= '1' WHEN exp_a_norm_exp_b_norm_cast_out1 > to_signed(-16#0035#, 13) ELSE
      '0';

  alpha1_out1_5 <= to_signed(16#01#, 8);

  C_out1_3 <= to_unsigned(16#36#, 6);

  DTC1_out1_1 <= exp_a_norm_exp_b_norm_cast_out1(7 DOWNTO 0);

  alpha1_int8_exp_tmp_out1 <= alpha1_out1_5 - DTC1_out1_1;

  DTC2_out1_1 <= unsigned(alpha1_int8_exp_tmp_out1(5 DOWNTO 0));

  
  if_exp_tmp_cfType_MantissaLe_out1 <= C_out1_3 WHEN exp_tmp_cfType_MantissaLen_out1 = '0' ELSE
      DTC2_out1_1;

  
  if_exp_tmp_1_1_out1 <= C2_out1 WHEN exp_tmp_1_out1 = '0' ELSE
      if_exp_tmp_cfType_MantissaLe_out1;

  C4_out1 <= to_unsigned(16#36#, 6);

  
  if_exp_tmp_2_cfType_ExponentB_1_out1 <= if_exp_tmp_1_1_out1 WHEN exp_tmp_2_cfType_ExponentBi_out1 = '0' ELSE
      C4_out1;

  bitsrl_Q_shift_length_out1 <= SHIFT_RIGHT(Bit_Concat_out1_52, to_integer(if_exp_tmp_2_cfType_ExponentB_1_out1));

  BitSlice_out1_1 <= bitsrl_Q_shift_length_out1(52 DOWNTO 0);

  Bit_Slice33_out1 <= Bit_Concat_out1_52(53 DOWNTO 52);

  
  Bit_Slice33_out1_is_not0 <= '1' WHEN Bit_Slice33_out1 /= to_unsigned(16#0#, 2) ELSE
      '0';

  
  Bit_Slice33_out1_is_not0_1 <= '1' WHEN Bit_Slice33_out1 /= to_unsigned(16#0#, 2) ELSE
      '0';

  Logical_Operator11_out1 <= Bit_Slice33_out1_is_not0 OR Bit_Slice33_out1_is_not0_1;

  Bit_Slice1_out1_5 <= if_exp_tmp_2_cfType_ExponentB_1_out1(2);

  Logical_Operator2_out1_4 <= Logical_Operator11_out1 AND Bit_Slice1_out1_5;

  Logical_Operator1_out1_2 <= Logical_Operator2_out1_4 OR Logical_Operator11_out1;

  Bit_Slice3_out1_2 <= if_exp_tmp_2_cfType_ExponentB_1_out1(3);

  Bit_Slice5_out1_2 <= if_exp_tmp_2_cfType_ExponentB_1_out1(0);

  Logical_Operator2_out1_5 <= Logical_Operator11_out1 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_6 <= Bit_Slice33_out1(1);

  Logical_Operator1_out1_3 <= Logical_Operator2_out1_5 OR Bit_Slice1_out1_6;

  Bit_Slice2_out1_4 <= if_exp_tmp_2_cfType_ExponentB_1_out1(1);

  Bit_Slice_out1_54 <= Bit_Slice33_out1(0);

  Logical_Operator7_out1_10 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_4;

  Logical_Operator3_out1_4 <= Bit_Slice_out1_54 AND Logical_Operator7_out1_10;

  Bit_Slice32_out1 <= Bit_Concat_out1_52(51 DOWNTO 48);

  Bit_Reduce12_out1 <= (Bit_Slice32_out1(3) OR Bit_Slice32_out1(2) OR Bit_Slice32_out1(1) OR Bit_Slice32_out1(0));

  Bit_Slice30_out1 <= Bit_Concat_out1_52(47 DOWNTO 44);

  Bit_Reduce11_out1 <= (Bit_Slice30_out1(3) OR Bit_Slice30_out1(2) OR Bit_Slice30_out1(1) OR Bit_Slice30_out1(0));

  Bit_Slice24_out1 <= Bit_Concat_out1_52(43 DOWNTO 40);

  Bit_Reduce10_out1 <= (Bit_Slice24_out1(3) OR Bit_Slice24_out1(2) OR Bit_Slice24_out1(1) OR Bit_Slice24_out1(0));

  Bit_Slice28_out1 <= Bit_Concat_out1_52(39 DOWNTO 36);

  Bit_Reduce9_out1 <= (Bit_Slice28_out1(3) OR Bit_Slice28_out1(2) OR Bit_Slice28_out1(1) OR Bit_Slice28_out1(0));

  Bit_Slice22_out1 <= Bit_Concat_out1_52(35 DOWNTO 32);

  Bit_Reduce8_out1 <= (Bit_Slice22_out1(3) OR Bit_Slice22_out1(2) OR Bit_Slice22_out1(1) OR Bit_Slice22_out1(0));

  Bit_Slice20_out1 <= Bit_Concat_out1_52(31 DOWNTO 28);

  Bit_Reduce7_out1 <= (Bit_Slice20_out1(3) OR Bit_Slice20_out1(2) OR Bit_Slice20_out1(1) OR Bit_Slice20_out1(0));

  Bit_Slice16_out1_10 <= Bit_Concat_out1_52(27 DOWNTO 24);

  Bit_Reduce6_out1 <= (Bit_Slice16_out1_10(3) OR Bit_Slice16_out1_10(2) OR Bit_Slice16_out1_10(1) OR Bit_Slice16_out1_10(0));

  Bit_Slice14_out1_10 <= Bit_Concat_out1_52(23 DOWNTO 20);

  Bit_Reduce5_out1 <= (Bit_Slice14_out1_10(3) OR Bit_Slice14_out1_10(2) OR Bit_Slice14_out1_10(1) OR Bit_Slice14_out1_10(0));

  Bit_Slice18_out1 <= Bit_Concat_out1_52(19 DOWNTO 16);

  Bit_Reduce4_out1 <= (Bit_Slice18_out1(3) OR Bit_Slice18_out1(2) OR Bit_Slice18_out1(1) OR Bit_Slice18_out1(0));

  Bit_Slice12_out1_12 <= Bit_Concat_out1_52(15 DOWNTO 12);

  Bit_Reduce3_out1 <= (Bit_Slice12_out1_12(3) OR Bit_Slice12_out1_12(2) OR Bit_Slice12_out1_12(1) OR Bit_Slice12_out1_12(0));

  Bit_Slice10_out1_12 <= Bit_Concat_out1_52(11 DOWNTO 8);

  Bit_Reduce2_out1 <= (Bit_Slice10_out1_12(3) OR Bit_Slice10_out1_12(2) OR Bit_Slice10_out1_12(1) OR Bit_Slice10_out1_12(0));

  Bit_Slice8_out1_4 <= Bit_Concat_out1_52(7 DOWNTO 4);

  Bit_Reduce1_out1 <= (Bit_Slice8_out1_4(3) OR Bit_Slice8_out1_4(2) OR Bit_Slice8_out1_4(1) OR Bit_Slice8_out1_4(0));

  Bit_Slice6_out1_4 <= Bit_Concat_out1_52(3 DOWNTO 0);

  Bit_Reduce_out1 <= (Bit_Slice6_out1_4(3) OR Bit_Slice6_out1_4(2) OR Bit_Slice6_out1_4(1) OR Bit_Slice6_out1_4(0));

  Logical_Operator1_out1_4 <= Bit_Reduce1_out1 OR Bit_Reduce_out1;

  Logical_Operator2_out1_6 <= Bit_Reduce2_out1 OR Logical_Operator1_out1_4;

  Logical_Operator3_out1_5 <= Bit_Reduce3_out1 OR Logical_Operator2_out1_6;

  Logical_Operator4_out1_12 <= Bit_Reduce4_out1 OR Logical_Operator3_out1_5;

  Logical_Operator5_out1_10 <= Bit_Reduce5_out1 OR Logical_Operator4_out1_12;

  Logical_Operator6_out1_10 <= Bit_Reduce6_out1 OR Logical_Operator5_out1_10;

  Logical_Operator7_out1_11 <= Bit_Reduce7_out1 OR Logical_Operator6_out1_10;

  Logical_Operator8_out1 <= Bit_Reduce8_out1 OR Logical_Operator7_out1_11;

  Logical_Operator9_out1 <= Bit_Reduce9_out1 OR Logical_Operator8_out1;

  Logical_Operator10_out1 <= Bit_Reduce10_out1 OR Logical_Operator9_out1;

  Logical_Operator12_out1_12 <= Bit_Reduce11_out1 OR Logical_Operator10_out1;

  Logical_Operator4_out1_13 <= Logical_Operator1_out1_3 AND Bit_Slice2_out1_4;

  Logical_Operator13_out1_12 <= Bit_Reduce12_out1 OR Logical_Operator12_out1_12;

  Logical_Operator6_out1_11 <= Logical_Operator3_out1_4 OR Logical_Operator13_out1_12;

  Logical_Operator5_out1_11 <= Logical_Operator4_out1_13 OR Logical_Operator6_out1_11;

  Bit_Slice31_out1 <= Bit_Concat_out1_52(50 DOWNTO 48);

  Bit_Slice2_out1_5 <= Bit_Slice31_out1(2);

  Logical_Operator2_out1_7 <= Bit_Slice2_out1_5 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_7 <= Bit_Slice31_out1(1);

  Logical_Operator1_out1_5 <= Logical_Operator2_out1_7 OR Bit_Slice1_out1_7;

  Logical_Operator4_out1_14 <= Logical_Operator1_out1_5 AND Bit_Slice2_out1_4;

  Bit_Slice_out1_55 <= Bit_Slice31_out1(0);

  Logical_Operator7_out1_12 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_4;

  Logical_Operator3_out1_6 <= Bit_Slice_out1_55 AND Logical_Operator7_out1_12;

  Logical_Operator4_out1_15 <= Logical_Operator1_out1_2 AND Bit_Slice3_out1_2;

  Logical_Operator3_out1_7 <= Logical_Operator5_out1_11 AND Bit_Slice1_out1_5;

  Logical_Operator6_out1_12 <= Logical_Operator3_out1_6 OR Logical_Operator12_out1_12;

  Logical_Operator5_out1_12 <= Logical_Operator4_out1_14 OR Logical_Operator6_out1_12;

  Logical_Operator6_out1_13 <= Logical_Operator3_out1_7 OR Logical_Operator5_out1_12;

  Logical_Operator5_out1_13 <= Logical_Operator4_out1_15 OR Logical_Operator6_out1_13;

  Bit_Slice4_out1_4 <= if_exp_tmp_2_cfType_ExponentB_1_out1(4);

  Bit_Slice25_out1 <= Bit_Concat_out1_52(46 DOWNTO 44);

  Bit_Slice2_out1_6 <= Bit_Slice25_out1(2);

  Logical_Operator2_out1_8 <= Bit_Slice2_out1_6 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_8 <= Bit_Slice25_out1(1);

  Logical_Operator1_out1_6 <= Logical_Operator2_out1_8 OR Bit_Slice1_out1_8;

  Logical_Operator4_out1_16 <= Logical_Operator1_out1_6 AND Bit_Slice2_out1_4;

  Bit_Slice_out1_56 <= Bit_Slice25_out1(0);

  Logical_Operator7_out1_13 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_4;

  Logical_Operator3_out1_8 <= Bit_Slice_out1_56 AND Logical_Operator7_out1_13;

  Logical_Operator6_out1_14 <= Logical_Operator3_out1_8 OR Logical_Operator10_out1;

  Logical_Operator5_out1_14 <= Logical_Operator4_out1_16 OR Logical_Operator6_out1_14;

  Bit_Slice29_out1 <= Bit_Concat_out1_52(42 DOWNTO 40);

  Bit_Slice2_out1_7 <= Bit_Slice29_out1(2);

  Logical_Operator2_out1_9 <= Bit_Slice2_out1_7 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_9 <= Bit_Slice29_out1(1);

  Logical_Operator1_out1_7 <= Logical_Operator2_out1_9 OR Bit_Slice1_out1_9;

  Logical_Operator4_out1_17 <= Logical_Operator1_out1_7 AND Bit_Slice2_out1_4;

  Bit_Slice_out1_57 <= Bit_Slice29_out1(0);

  Logical_Operator7_out1_14 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_4;

  Logical_Operator3_out1_9 <= Bit_Slice_out1_57 AND Logical_Operator7_out1_14;

  Logical_Operator2_out1_10 <= Logical_Operator5_out1_14 AND Bit_Slice1_out1_5;

  Logical_Operator6_out1_15 <= Logical_Operator3_out1_9 OR Logical_Operator9_out1;

  Logical_Operator5_out1_15 <= Logical_Operator4_out1_17 OR Logical_Operator6_out1_15;

  Logical_Operator1_out1_8 <= Logical_Operator2_out1_10 OR Logical_Operator5_out1_15;

  Bit_Slice23_out1 <= Bit_Concat_out1_52(38 DOWNTO 36);

  Bit_Slice2_out1_8 <= Bit_Slice23_out1(2);

  Logical_Operator2_out1_11 <= Bit_Slice2_out1_8 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_10 <= Bit_Slice23_out1(1);

  Logical_Operator1_out1_9 <= Logical_Operator2_out1_11 OR Bit_Slice1_out1_10;

  Logical_Operator4_out1_18 <= Logical_Operator1_out1_9 AND Bit_Slice2_out1_4;

  Bit_Slice_out1_58 <= Bit_Slice23_out1(0);

  Logical_Operator7_out1_15 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_4;

  Logical_Operator3_out1_10 <= Bit_Slice_out1_58 AND Logical_Operator7_out1_15;

  Logical_Operator6_out1_16 <= Logical_Operator3_out1_10 OR Logical_Operator8_out1;

  Logical_Operator5_out1_16 <= Logical_Operator4_out1_18 OR Logical_Operator6_out1_16;

  Bit_Slice21_out1 <= Bit_Concat_out1_52(34 DOWNTO 32);

  Bit_Slice2_out1_9 <= Bit_Slice21_out1(2);

  Logical_Operator2_out1_12 <= Bit_Slice2_out1_9 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_11 <= Bit_Slice21_out1(1);

  Logical_Operator1_out1_10 <= Logical_Operator2_out1_12 OR Bit_Slice1_out1_11;

  Logical_Operator4_out1_19 <= Logical_Operator1_out1_10 AND Bit_Slice2_out1_4;

  Bit_Slice_out1_59 <= Bit_Slice21_out1(0);

  Logical_Operator7_out1_16 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_4;

  Logical_Operator3_out1_11 <= Bit_Slice_out1_59 AND Logical_Operator7_out1_16;

  Logical_Operator2_out1_13 <= Logical_Operator5_out1_13 AND Bit_Slice4_out1_4;

  Logical_Operator4_out1_20 <= Logical_Operator1_out1_8 AND Bit_Slice3_out1_2;

  Logical_Operator3_out1_12 <= Logical_Operator5_out1_16 AND Bit_Slice1_out1_5;

  Logical_Operator6_out1_17 <= Logical_Operator3_out1_11 OR Logical_Operator7_out1_11;

  Logical_Operator5_out1_17 <= Logical_Operator4_out1_19 OR Logical_Operator6_out1_17;

  Logical_Operator6_out1_18 <= Logical_Operator3_out1_12 OR Logical_Operator5_out1_17;

  Logical_Operator5_out1_18 <= Logical_Operator4_out1_20 OR Logical_Operator6_out1_18;

  Logical_Operator1_out1_11 <= Logical_Operator2_out1_13 OR Logical_Operator5_out1_18;

  Bit_Slice17_out1 <= Bit_Concat_out1_52(30 DOWNTO 28);

  Bit_Slice2_out1_10 <= Bit_Slice17_out1(2);

  Logical_Operator2_out1_14 <= Bit_Slice2_out1_10 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_12 <= Bit_Slice17_out1(1);

  Logical_Operator1_out1_12 <= Logical_Operator2_out1_14 OR Bit_Slice1_out1_12;

  Logical_Operator4_out1_21 <= Logical_Operator1_out1_12 AND Bit_Slice2_out1_4;

  Bit_Slice_out1_60 <= Bit_Slice17_out1(0);

  Logical_Operator7_out1_17 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_4;

  Logical_Operator3_out1_13 <= Bit_Slice_out1_60 AND Logical_Operator7_out1_17;

  Logical_Operator6_out1_19 <= Logical_Operator3_out1_13 OR Logical_Operator6_out1_10;

  Logical_Operator5_out1_19 <= Logical_Operator4_out1_21 OR Logical_Operator6_out1_19;

  Bit_Slice15_out1_10 <= Bit_Concat_out1_52(26 DOWNTO 24);

  Bit_Slice2_out1_11 <= Bit_Slice15_out1_10(2);

  Logical_Operator2_out1_15 <= Bit_Slice2_out1_11 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_13 <= Bit_Slice15_out1_10(1);

  Logical_Operator1_out1_13 <= Logical_Operator2_out1_15 OR Bit_Slice1_out1_13;

  Logical_Operator4_out1_22 <= Logical_Operator1_out1_13 AND Bit_Slice2_out1_4;

  Bit_Slice_out1_61 <= Bit_Slice15_out1_10(0);

  Logical_Operator7_out1_18 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_4;

  Logical_Operator3_out1_14 <= Bit_Slice_out1_61 AND Logical_Operator7_out1_18;

  Logical_Operator2_out1_16 <= Logical_Operator5_out1_19 AND Bit_Slice1_out1_5;

  Logical_Operator6_out1_20 <= Logical_Operator3_out1_14 OR Logical_Operator5_out1_10;

  Logical_Operator5_out1_20 <= Logical_Operator4_out1_22 OR Logical_Operator6_out1_20;

  Logical_Operator1_out1_14 <= Logical_Operator2_out1_16 OR Logical_Operator5_out1_20;

  Bit_Slice19_out1 <= Bit_Concat_out1_52(22 DOWNTO 20);

  Bit_Slice2_out1_12 <= Bit_Slice19_out1(2);

  Logical_Operator2_out1_17 <= Bit_Slice2_out1_12 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_14 <= Bit_Slice19_out1(1);

  Logical_Operator1_out1_15 <= Logical_Operator2_out1_17 OR Bit_Slice1_out1_14;

  Logical_Operator4_out1_23 <= Logical_Operator1_out1_15 AND Bit_Slice2_out1_4;

  Bit_Slice_out1_62 <= Bit_Slice19_out1(0);

  Logical_Operator7_out1_19 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_4;

  Logical_Operator3_out1_15 <= Bit_Slice_out1_62 AND Logical_Operator7_out1_19;

  Logical_Operator6_out1_21 <= Logical_Operator3_out1_15 OR Logical_Operator4_out1_12;

  Logical_Operator5_out1_21 <= Logical_Operator4_out1_23 OR Logical_Operator6_out1_21;

  Bit_Slice13_out1_12 <= Bit_Concat_out1_52(18 DOWNTO 16);

  Bit_Slice2_out1_13 <= Bit_Slice13_out1_12(2);

  Logical_Operator2_out1_18 <= Bit_Slice2_out1_13 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_15 <= Bit_Slice13_out1_12(1);

  Logical_Operator1_out1_16 <= Logical_Operator2_out1_18 OR Bit_Slice1_out1_15;

  Logical_Operator4_out1_24 <= Logical_Operator1_out1_16 AND Bit_Slice2_out1_4;

  Bit_Slice_out1_63 <= Bit_Slice13_out1_12(0);

  Logical_Operator7_out1_20 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_4;

  Logical_Operator3_out1_16 <= Bit_Slice_out1_63 AND Logical_Operator7_out1_20;

  Logical_Operator4_out1_25 <= Logical_Operator1_out1_14 AND Bit_Slice3_out1_2;

  Logical_Operator3_out1_17 <= Logical_Operator5_out1_21 AND Bit_Slice1_out1_5;

  Logical_Operator6_out1_22 <= Logical_Operator3_out1_16 OR Logical_Operator3_out1_5;

  Logical_Operator5_out1_22 <= Logical_Operator4_out1_24 OR Logical_Operator6_out1_22;

  Logical_Operator6_out1_23 <= Logical_Operator3_out1_17 OR Logical_Operator5_out1_22;

  Logical_Operator5_out1_23 <= Logical_Operator4_out1_25 OR Logical_Operator6_out1_23;

  Bit_Slice11_out1_12 <= Bit_Concat_out1_52(14 DOWNTO 12);

  Bit_Slice2_out1_14 <= Bit_Slice11_out1_12(2);

  Logical_Operator2_out1_19 <= Bit_Slice2_out1_14 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_16 <= Bit_Slice11_out1_12(1);

  Logical_Operator1_out1_17 <= Logical_Operator2_out1_19 OR Bit_Slice1_out1_16;

  Logical_Operator4_out1_26 <= Logical_Operator1_out1_17 AND Bit_Slice2_out1_4;

  Bit_Slice_out1_64 <= Bit_Slice11_out1_12(0);

  Logical_Operator7_out1_21 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_4;

  Logical_Operator3_out1_18 <= Bit_Slice_out1_64 AND Logical_Operator7_out1_21;

  Logical_Operator6_out1_24 <= Logical_Operator3_out1_18 OR Logical_Operator2_out1_6;

  Logical_Operator5_out1_24 <= Logical_Operator4_out1_26 OR Logical_Operator6_out1_24;

  Bit_Slice9_out1_14 <= Bit_Concat_out1_52(10 DOWNTO 8);

  Bit_Slice2_out1_15 <= Bit_Slice9_out1_14(2);

  Logical_Operator2_out1_20 <= Bit_Slice2_out1_15 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_17 <= Bit_Slice9_out1_14(1);

  Logical_Operator1_out1_18 <= Logical_Operator2_out1_20 OR Bit_Slice1_out1_17;

  Logical_Operator4_out1_27 <= Logical_Operator1_out1_18 AND Bit_Slice2_out1_4;

  Bit_Slice_out1_65 <= Bit_Slice9_out1_14(0);

  Logical_Operator7_out1_22 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_4;

  Logical_Operator3_out1_19 <= Bit_Slice_out1_65 AND Logical_Operator7_out1_22;

  Logical_Operator2_out1_21 <= Logical_Operator5_out1_24 AND Bit_Slice1_out1_5;

  Logical_Operator6_out1_25 <= Logical_Operator3_out1_19 OR Logical_Operator1_out1_4;

  Logical_Operator5_out1_25 <= Logical_Operator4_out1_27 OR Logical_Operator6_out1_25;

  Logical_Operator1_out1_19 <= Logical_Operator2_out1_21 OR Logical_Operator5_out1_25;

  Bit_Slice7_out1_4 <= Bit_Concat_out1_52(6 DOWNTO 4);

  Bit_Slice2_out1_16 <= Bit_Slice7_out1_4(2);

  Logical_Operator2_out1_22 <= Bit_Slice2_out1_16 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_18 <= Bit_Slice7_out1_4(1);

  Logical_Operator1_out1_20 <= Logical_Operator2_out1_22 OR Bit_Slice1_out1_18;

  Logical_Operator4_out1_28 <= Logical_Operator1_out1_20 AND Bit_Slice2_out1_4;

  Bit_Slice_out1_66 <= Bit_Slice7_out1_4(0);

  Logical_Operator7_out1_23 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_4;

  Logical_Operator3_out1_20 <= Bit_Slice_out1_66 AND Logical_Operator7_out1_23;

  Logical_Operator6_out1_26 <= Logical_Operator3_out1_20 OR Bit_Reduce_out1;

  Logical_Operator5_out1_26 <= Logical_Operator4_out1_28 OR Logical_Operator6_out1_26;

  Bit_Slice_out1_67 <= Bit_Concat_out1_52(2 DOWNTO 0);

  Bit_Slice2_out1_17 <= Bit_Slice_out1_67(2);

  Logical_Operator2_out1_23 <= Bit_Slice2_out1_17 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_19 <= Bit_Slice_out1_67(1);

  Logical_Operator1_out1_21 <= Logical_Operator2_out1_23 OR Bit_Slice1_out1_19;

  Bit_Slice_out1_68 <= Bit_Slice_out1_67(0);

  Logical_Operator7_out1_24 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_4;

  Logical_Operator3_out1_21 <= Bit_Slice_out1_68 AND Logical_Operator7_out1_24;

  BitSlice_out1_2 <= BitSlice_out1_1(0);

  BitSlice1_out1_1 <= BitSlice_out1_1(1);

  
  if_tmp_0_1_out1_52 <= R_mant_b_norm_out1_53 WHEN Bit_Slice_out1_53 = '0' ELSE
      bitsll_R_1_out1_52;

  bitsll_R_1_out1_53 <= if_tmp_0_1_out1_52 sll 1;

  
  R_0_out1 <= '1' WHEN bitsll_R_1_out1_53 /= to_signed(0, 55) ELSE
      '0';

  Bit_Slice27_out1 <= if_exp_tmp_2_cfType_ExponentB_1_out1(5);

  Logical_Operator4_out1_29 <= Logical_Operator1_out1_11 AND Bit_Slice27_out1;

  Logical_Operator3_out1_22 <= Logical_Operator5_out1_23 AND Bit_Slice4_out1_4;

  Logical_Operator4_out1_30 <= Logical_Operator1_out1_19 AND Bit_Slice3_out1_2;

  Logical_Operator3_out1_23 <= Logical_Operator5_out1_26 AND Bit_Slice1_out1_5;

  Logical_Operator4_out1_31 <= Logical_Operator1_out1_21 AND Bit_Slice2_out1_4;

  Constant_out1_2 <= '0';

  Logical_Operator6_out1_27 <= Logical_Operator3_out1_21 OR Constant_out1_2;

  Logical_Operator5_out1_27 <= Logical_Operator4_out1_31 OR Logical_Operator6_out1_27;

  Logical_Operator6_out1_28 <= Logical_Operator3_out1_23 OR Logical_Operator5_out1_27;

  Logical_Operator5_out1_28 <= Logical_Operator4_out1_30 OR Logical_Operator6_out1_28;

  Logical_Operator6_out1_29 <= Logical_Operator3_out1_22 OR Logical_Operator5_out1_28;

  Logical_Operator5_out1_29 <= Logical_Operator4_out1_29 OR Logical_Operator6_out1_29;

  sticky_bitsll_Q_Q_WordLen_out1 <= R_0_out1 OR Logical_Operator5_out1_29;

  alphabitget_Mant_tmp_2_0_out1 <= BitSlice1_out1_1 OR sticky_bitsll_Q_Q_WordLen_out1;

  alphabitget_Mant_tmp_1_0_out1 <= BitSlice_out1_2 AND alphabitget_Mant_tmp_2_0_out1;

  alpha0_out1_2 <= '0';

  BitSlice4_out1 <= BitSlice_out1_1(52 DOWNTO 1);

  Bit_Concat_out1_53 <= alpha0_out1_2 & BitSlice4_out1;

  alpha2_out1 <= to_unsigned(1, 53);

  Mant_tmp_2_out1 <= Bit_Concat_out1_53 + alpha2_out1;

  
  if_bitget_Mant_tmp_1_0_out1 <= Bit_Concat_out1_53 WHEN alphabitget_Mant_tmp_1_0_out1 = '0' ELSE
      Mant_tmp_2_out1;

  BitSlice2_out1 <= if_bitget_Mant_tmp_1_0_out1(52);

  DTC3_out1_1 <= unsigned(exp_a_norm_exp_b_norm_cast_out1(10 DOWNTO 0));

  C1_out1 <= to_unsigned(16#000#, 11);

  
  if_exp_tmp_1_out1 <= DTC3_out1_1 WHEN exp_tmp_1_out1 = '0' ELSE
      C1_out1;

  C3_out1 <= to_unsigned(16#7FF#, 11);

  
  if_exp_tmp_2_cfType_ExponentB_out1 <= if_exp_tmp_1_out1 WHEN exp_tmp_2_cfType_ExponentBi_out1 = '0' ELSE
      C3_out1;

  alpha1_out1_6 <= to_unsigned(16#001#, 11);

  Exp_1_out1 <= if_exp_tmp_2_cfType_ExponentB_out1 + alpha1_out1_6;

  
  if_bitget_Mant_tmp_Mant_tmp_Wor_out1 <= if_exp_tmp_2_cfType_ExponentB_out1 WHEN BitSlice2_out1 = '0' ELSE
      Exp_1_out1;

  C4_out1_1 <= to_unsigned(16#7FF#, 11);

  
  if_bExponent_0_bMantissa_out1 <= if_bitget_Mant_tmp_Mant_tmp_Wor_out1 WHEN alphabExponent_0_bMantissa_out1 = '0' ELSE
      C4_out1_1;

  C1_out1_1 <= to_unsigned(16#000#, 11);

  C_out1_4 <= to_unsigned(16#7FF#, 11);

  
  if_bExponent_0_bMantissa_out1_1 <= C1_out1_1 WHEN alphabExponent_0_bMantissa_out1 = '0' ELSE
      C_out1_4;

  
  if_aExponent_0_aMantissa_out1 <= if_bExponent_0_bMantissa_out1 WHEN alphaaExponent_0_aMantissa_out1 = '0' ELSE
      if_bExponent_0_bMantissa_out1_1;

  C1_out1_2 <= to_unsigned(16#000#, 11);

  
  if_mant_b_0_out1 <= bExponent WHEN bMantissa_0_out1 = '0' ELSE
      C1_out1_2;

  
  if_exp_a_cfType_Exponent_Inf_out1 <= if_mant_b_0_out1 WHEN aExponent_cfType_Exponent_I_out1 = '0' ELSE
      aExponent;

  
  if_aExponent_cfType_Exponent_out1 <= if_aExponent_0_aMantissa_out1 WHEN alphaaExponent_cfType_Exponent_out1 = '0' ELSE
      if_exp_a_cfType_Exponent_Inf_out1;

  BitSlice3_out1 <= if_bitget_Mant_tmp_1_0_out1(51 DOWNTO 0);

  C_out1_5 <= to_unsigned(0, 52);

  
  if_bitget_Mant_tmp_Mant_tmp_Wor_1_out1 <= BitSlice3_out1 WHEN BitSlice2_out1 = '0' ELSE
      C_out1_5;

  C5_out1 <= to_unsigned(0, 52);

  
  if_bExponent_0_bMantissa_1_out1 <= if_bitget_Mant_tmp_Mant_tmp_Wor_1_out1 WHEN alphabExponent_0_bMantissa_out1 = '0' ELSE
      C5_out1;

  C3_out1_1 <= to_unsigned(0, 52);

  C2_out1_1 <= unsigned'(X"8000000000000");

  
  if_bExponent_0_bMantissa_1_out1_1 <= C3_out1_1 WHEN alphabExponent_0_bMantissa_out1 = '0' ELSE
      C2_out1_1;

  
  if_aExponent_0_aMantissa_1_out1 <= if_bExponent_0_bMantissa_1_out1 WHEN alphaaExponent_0_aMantissa_out1 = '0' ELSE
      if_bExponent_0_bMantissa_1_out1_1;

  C2_out1_2 <= to_unsigned(0, 52);

  
  if_mant_b_0_1_out1 <= bMantissa WHEN bMantissa_0_out1 = '0' ELSE
      C2_out1_2;

  C_out1_6 <= unsigned'(X"8000000000000");

  
  if_exp_b_cfType_Exponent_Inf_out1 <= aMantissa WHEN bExponent_cfType_Exponent_I_out1 = '0' ELSE
      C_out1_6;

  
  if_exp_a_cfType_Exponent_Inf_1_out1 <= if_mant_b_0_1_out1 WHEN aExponent_cfType_Exponent_I_out1 = '0' ELSE
      if_exp_b_cfType_Exponent_Inf_out1;

  
  if_aExponent_cfType_Exponent_1_out1 <= if_aExponent_0_aMantissa_1_out1 WHEN alphaaExponent_cfType_Exponent_out1 = '0' ELSE
      if_exp_a_cfType_Exponent_Inf_1_out1;

  -- Combine FP sign, exponent, mantissa into 64 bit word
  nfp_out_pack <= tmp_out1 & if_aExponent_cfType_Exponent_out1 & if_aExponent_cfType_Exponent_1_out1;

  nfp_out <= std_logic_vector(nfp_out_pack);

END rtl;

