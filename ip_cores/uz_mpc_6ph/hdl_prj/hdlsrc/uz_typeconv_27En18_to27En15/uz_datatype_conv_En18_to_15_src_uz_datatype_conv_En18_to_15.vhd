-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\uz_typeconv_27En18_to27En15\uz_datatype_conv_En18_to_15_src_uz_datatype_conv_En18_to_15.vhd
-- Created: 2022-10-04 13:09:56
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-08
-- Target subsystem base rate: 1e-08
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- sfix27En15                    ce_out        1e-08
-- done                          ce_out        1e-08
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: uz_datatype_conv_En18_to_15_src_uz_datatype_conv_En18_to_15
-- Source Path: uz_typeconv_27En18_to27En15/uz_datatype_conv_En18_to_15
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY uz_datatype_conv_En18_to_15_src_uz_datatype_conv_En18_to_15 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        sfix27En18                        :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En18
        trigger                           :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        sfix27En15                        :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En15
        done                              :   OUT   std_logic
        );
END uz_datatype_conv_En18_to_15_src_uz_datatype_conv_En18_to_15;


ARCHITECTURE rtl OF uz_datatype_conv_En18_to_15_src_uz_datatype_conv_En18_to_15 IS

  -- Component Declarations
  COMPONENT uz_datatype_conv_En18_to_15_src_Detect_Rise_Positive
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          U                               :   IN    std_logic;
          Y                               :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : uz_datatype_conv_En18_to_15_src_Detect_Rise_Positive
    USE ENTITY work.uz_datatype_conv_En18_to_15_src_Detect_Rise_Positive(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL Delay2_out1                      : std_logic;
  SIGNAL Detect_Rise_Positive_out1        : std_logic;
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL sfix27En18_signed                : signed(26 DOWNTO 0);  -- sfix27_En18
  SIGNAL Delay1_out1                      : signed(26 DOWNTO 0);  -- sfix27_En18
  SIGNAL Switch_out1                      : signed(26 DOWNTO 0);  -- sfix27_En18
  SIGNAL Delay_out1                       : signed(26 DOWNTO 0);  -- sfix27_En18
  SIGNAL Data_Type_Conversion_out1        : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL Delay3_out1                      : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL Delay4_out1                      : std_logic;

BEGIN
  u_Detect_Rise_Positive : uz_datatype_conv_En18_to_15_src_Detect_Rise_Positive
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              U => Delay2_out1,
              Y => Detect_Rise_Positive_out1
              );

  enb <= clk_enable;

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay2_out1 <= trigger;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  
  switch_compare_1 <= '1' WHEN Detect_Rise_Positive_out1 > '0' ELSE
      '0';

  sfix27En18_signed <= signed(sfix27En18);

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1 <= to_signed(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay1_out1 <= sfix27En18_signed;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1 <= to_signed(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay_out1 <= Switch_out1;
      END IF;
    END IF;
  END PROCESS Delay_process;


  
  Switch_out1 <= Delay_out1 WHEN switch_compare_1 = '0' ELSE
      Delay1_out1;

  Data_Type_Conversion_out1 <= resize(Switch_out1(26 DOWNTO 3), 27);

  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_out1 <= to_signed(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay3_out1 <= Data_Type_Conversion_out1;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  sfix27En15 <= std_logic_vector(Delay3_out1);

  Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay4_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay4_out1 <= Detect_Rise_Positive_out1;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  ce_out <= clk_enable;

  done <= Delay4_out1;

END rtl;

