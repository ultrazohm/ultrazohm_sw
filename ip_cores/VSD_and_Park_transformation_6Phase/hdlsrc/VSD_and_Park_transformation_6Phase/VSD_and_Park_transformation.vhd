-- -------------------------------------------------------------
-- 
-- File Name: C:\ultrazohm_sw\ip_cores\VSD_and_Park_transformation_6Phase\hdlsrc\VSD_and_Park_transformation_6Phase\VSD_and_Park_transformation.vhd
-- Created: 2022-08-15 13:24:19
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: VSD_and_Park_transformation
-- Source Path: VSD_and_Park_transformation
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY VSD_and_Park_transformation IS
  PORT( IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESETN                     :   IN    std_logic;  -- ufix1
        i_a1                              :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        i_b1                              :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        i_c1                              :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        i_a2                              :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        i_b2                              :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        i_c2                              :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18
        theta_el                          :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        curent_valid_in                   :   IN    std_logic;  -- ufix1
        AXI4_Lite_ACLK                    :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARESETN                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_AWADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_AWVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_WDATA                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_WSTRB                   :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Lite_WVALID                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_BREADY                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_ARVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_RREADY                  :   IN    std_logic;  -- ufix1
        i_alpha                           :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        i_beta                            :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        i_d                               :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        i_q                               :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        i_x                               :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        i_y                               :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        i_0_plus                          :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        i_0_minus                         :   OUT   std_logic_vector(17 DOWNTO 0);  -- ufix18
        done                              :   OUT   std_logic;  -- ufix1
        AXI4_Lite_AWREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_WREADY                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_BRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_BVALID                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_ARREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_RDATA                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_RRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_RVALID                  :   OUT   std_logic  -- ufix1
        );
END VSD_and_Park_transformation;


ARCHITECTURE rtl OF VSD_and_Park_transformation IS

  -- Component Declarations
  COMPONENT VSD_and_Park_transformation_reset_sync
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset_in                        :   IN    std_logic;  -- ufix1
          reset_out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT VSD_and_Park_transformation_axi_lite
    PORT( reset_x                         :   IN    std_logic;
          AXI4_Lite_ACLK                  :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARESETN               :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_AWVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_WDATA                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_WSTRB                 :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_Lite_WVALID                :   IN    std_logic;  -- ufix1
          AXI4_Lite_BREADY                :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_ARVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_RREADY                :   IN    std_logic;  -- ufix1
          read_ip_timestamp               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          read_i_alpha_axi                :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          read_i_beta_axi                 :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          read_i_d_axi                    :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          read_i_q_axi                    :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          read_i_x_axi                    :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          read_i_y_axi                    :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          read_i_0_plus_axi               :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          read_i_0_minus_axi              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          AXI4_Lite_AWREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_WREADY                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_BRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_BVALID                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_ARREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_RDATA                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_RRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_RVALID                :   OUT   std_logic;  -- ufix1
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          write_theta_el_offset           :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En20
          reset_internal                  :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  COMPONENT VSD_and_Park_transformation_dut
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset_x                         :   IN    std_logic;
          dut_enable                      :   IN    std_logic;  -- ufix1
          i_a1                            :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_b1                            :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_c1                            :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_a2                            :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_b2                            :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_c2                            :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          theta_el                        :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En20
          theta_el_offset                 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En20
          curent_valid_in                 :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          i_alpha                         :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_alpha_axi                     :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_beta                          :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_beta_axi                      :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_d                             :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_d_axi                         :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_q                             :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_q_axi                         :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_x                             :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_x_axi                         :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_y                             :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_y_axi                         :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_0_plus                        :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_0_plus_axi                    :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_0_minus                       :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          i_0_minus_axi                   :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En11
          done                            :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : VSD_and_Park_transformation_reset_sync
    USE ENTITY work.VSD_and_Park_transformation_reset_sync(rtl);

  FOR ALL : VSD_and_Park_transformation_axi_lite
    USE ENTITY work.VSD_and_Park_transformation_axi_lite(rtl);

  FOR ALL : VSD_and_Park_transformation_dut
    USE ENTITY work.VSD_and_Park_transformation_dut(rtl);

  -- Signals
  SIGNAL reset_x                          : std_logic;
  SIGNAL ip_timestamp                     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL reset_cm                         : std_logic;  -- ufix1
  SIGNAL i_a1_unsigned                    : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL i_a1_sig                         : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL i_b1_unsigned                    : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL i_b1_sig                         : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL i_c1_unsigned                    : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL i_c1_sig                         : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL i_a2_unsigned                    : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL i_a2_sig                         : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL i_b2_unsigned                    : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL i_b2_sig                         : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL i_c2_unsigned                    : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL i_c2_sig                         : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL theta_el_unsigned                : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL theta_el_sig                     : signed(23 DOWNTO 0);  -- sfix24_En20
  SIGNAL reset_internal                   : std_logic;  -- ufix1
  SIGNAL reset_before_sync                : std_logic;  -- ufix1
  SIGNAL i_alpha_axi_sig                  : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_beta_axi_sig                   : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_d_axi_sig                      : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_q_axi_sig                      : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_x_axi_sig                      : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_y_axi_sig                      : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_0_plus_axi_sig                 : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_0_minus_axi_sig                : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL AXI4_Lite_BRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_Lite_RDATA_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_RRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL write_axi_enable                 : std_logic;  -- ufix1
  SIGNAL write_theta_el_offset            : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL i_alpha_sig                      : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_beta_sig                       : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_d_sig                          : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_q_sig                          : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_x_sig                          : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_y_sig                          : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_0_plus_sig                     : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL i_0_minus_sig                    : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL done_sig                         : std_logic;  -- ufix1
  SIGNAL i_alpha_sig_signed               : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL i_alpha_tmp                      : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL i_beta_sig_signed                : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL i_beta_tmp                       : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL i_d_sig_signed                   : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL i_d_tmp                          : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL i_q_sig_signed                   : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL i_q_tmp                          : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL i_x_sig_signed                   : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL i_x_tmp                          : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL i_y_sig_signed                   : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL i_y_tmp                          : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL i_0_plus_sig_signed              : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL i_0_plus_tmp                     : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL i_0_minus_sig_signed             : signed(17 DOWNTO 0);  -- sfix18_En11
  SIGNAL i_0_minus_tmp                    : unsigned(17 DOWNTO 0);  -- ufix18

BEGIN
  u_VSD_and_Park_transformation_reset_sync_inst : VSD_and_Park_transformation_reset_sync
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset_in => reset_before_sync,  -- ufix1
              reset_out => reset_x
              );

  u_VSD_and_Park_transformation_axi_lite_inst : VSD_and_Park_transformation_axi_lite
    PORT MAP( reset_x => reset_x,
              AXI4_Lite_ACLK => AXI4_Lite_ACLK,  -- ufix1
              AXI4_Lite_ARESETN => AXI4_Lite_ARESETN,  -- ufix1
              AXI4_Lite_AWADDR => AXI4_Lite_AWADDR,  -- ufix16
              AXI4_Lite_AWVALID => AXI4_Lite_AWVALID,  -- ufix1
              AXI4_Lite_WDATA => AXI4_Lite_WDATA,  -- ufix32
              AXI4_Lite_WSTRB => AXI4_Lite_WSTRB,  -- ufix4
              AXI4_Lite_WVALID => AXI4_Lite_WVALID,  -- ufix1
              AXI4_Lite_BREADY => AXI4_Lite_BREADY,  -- ufix1
              AXI4_Lite_ARADDR => AXI4_Lite_ARADDR,  -- ufix16
              AXI4_Lite_ARVALID => AXI4_Lite_ARVALID,  -- ufix1
              AXI4_Lite_RREADY => AXI4_Lite_RREADY,  -- ufix1
              read_ip_timestamp => std_logic_vector(ip_timestamp),  -- ufix32
              read_i_alpha_axi => i_alpha_axi_sig,  -- sfix18_En11
              read_i_beta_axi => i_beta_axi_sig,  -- sfix18_En11
              read_i_d_axi => i_d_axi_sig,  -- sfix18_En11
              read_i_q_axi => i_q_axi_sig,  -- sfix18_En11
              read_i_x_axi => i_x_axi_sig,  -- sfix18_En11
              read_i_y_axi => i_y_axi_sig,  -- sfix18_En11
              read_i_0_plus_axi => i_0_plus_axi_sig,  -- sfix18_En11
              read_i_0_minus_axi => i_0_minus_axi_sig,  -- sfix18_En11
              AXI4_Lite_AWREADY => AXI4_Lite_AWREADY,  -- ufix1
              AXI4_Lite_WREADY => AXI4_Lite_WREADY,  -- ufix1
              AXI4_Lite_BRESP => AXI4_Lite_BRESP_tmp,  -- ufix2
              AXI4_Lite_BVALID => AXI4_Lite_BVALID,  -- ufix1
              AXI4_Lite_ARREADY => AXI4_Lite_ARREADY,  -- ufix1
              AXI4_Lite_RDATA => AXI4_Lite_RDATA_tmp,  -- ufix32
              AXI4_Lite_RRESP => AXI4_Lite_RRESP_tmp,  -- ufix2
              AXI4_Lite_RVALID => AXI4_Lite_RVALID,  -- ufix1
              write_axi_enable => write_axi_enable,  -- ufix1
              write_theta_el_offset => write_theta_el_offset,  -- sfix24_En20
              reset_internal => reset_internal  -- ufix1
              );

  u_VSD_and_Park_transformation_dut_inst : VSD_and_Park_transformation_dut
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset_x => reset_x,
              dut_enable => write_axi_enable,  -- ufix1
              i_a1 => std_logic_vector(i_a1_sig),  -- sfix18_En11
              i_b1 => std_logic_vector(i_b1_sig),  -- sfix18_En11
              i_c1 => std_logic_vector(i_c1_sig),  -- sfix18_En11
              i_a2 => std_logic_vector(i_a2_sig),  -- sfix18_En11
              i_b2 => std_logic_vector(i_b2_sig),  -- sfix18_En11
              i_c2 => std_logic_vector(i_c2_sig),  -- sfix18_En11
              theta_el => std_logic_vector(theta_el_sig),  -- sfix24_En20
              theta_el_offset => write_theta_el_offset,  -- sfix24_En20
              curent_valid_in => curent_valid_in,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              i_alpha => i_alpha_sig,  -- sfix18_En11
              i_alpha_axi => i_alpha_axi_sig,  -- sfix18_En11
              i_beta => i_beta_sig,  -- sfix18_En11
              i_beta_axi => i_beta_axi_sig,  -- sfix18_En11
              i_d => i_d_sig,  -- sfix18_En11
              i_d_axi => i_d_axi_sig,  -- sfix18_En11
              i_q => i_q_sig,  -- sfix18_En11
              i_q_axi => i_q_axi_sig,  -- sfix18_En11
              i_x => i_x_sig,  -- sfix18_En11
              i_x_axi => i_x_axi_sig,  -- sfix18_En11
              i_y => i_y_sig,  -- sfix18_En11
              i_y_axi => i_y_axi_sig,  -- sfix18_En11
              i_0_plus => i_0_plus_sig,  -- sfix18_En11
              i_0_plus_axi => i_0_plus_axi_sig,  -- sfix18_En11
              i_0_minus => i_0_minus_sig,  -- sfix18_En11
              i_0_minus_axi => i_0_minus_axi_sig,  -- sfix18_En11
              done => done_sig  -- ufix1
              );

  ip_timestamp <= unsigned'(X"839DB71C");

  reset_cm <=  NOT IPCORE_RESETN;

  i_a1_unsigned <= unsigned(i_a1);

  i_a1_sig <= signed(i_a1_unsigned);

  i_b1_unsigned <= unsigned(i_b1);

  i_b1_sig <= signed(i_b1_unsigned);

  i_c1_unsigned <= unsigned(i_c1);

  i_c1_sig <= signed(i_c1_unsigned);

  i_a2_unsigned <= unsigned(i_a2);

  i_a2_sig <= signed(i_a2_unsigned);

  i_b2_unsigned <= unsigned(i_b2);

  i_b2_sig <= signed(i_b2_unsigned);

  i_c2_unsigned <= unsigned(i_c2);

  i_c2_sig <= signed(i_c2_unsigned);

  theta_el_unsigned <= unsigned(theta_el);

  theta_el_sig <= signed(theta_el_unsigned);

  reset_before_sync <= reset_cm OR reset_internal;

  i_alpha_sig_signed <= signed(i_alpha_sig);

  i_alpha_tmp <= unsigned(i_alpha_sig_signed);

  i_alpha <= std_logic_vector(i_alpha_tmp);

  i_beta_sig_signed <= signed(i_beta_sig);

  i_beta_tmp <= unsigned(i_beta_sig_signed);

  i_beta <= std_logic_vector(i_beta_tmp);

  i_d_sig_signed <= signed(i_d_sig);

  i_d_tmp <= unsigned(i_d_sig_signed);

  i_d <= std_logic_vector(i_d_tmp);

  i_q_sig_signed <= signed(i_q_sig);

  i_q_tmp <= unsigned(i_q_sig_signed);

  i_q <= std_logic_vector(i_q_tmp);

  i_x_sig_signed <= signed(i_x_sig);

  i_x_tmp <= unsigned(i_x_sig_signed);

  i_x <= std_logic_vector(i_x_tmp);

  i_y_sig_signed <= signed(i_y_sig);

  i_y_tmp <= unsigned(i_y_sig_signed);

  i_y <= std_logic_vector(i_y_tmp);

  i_0_plus_sig_signed <= signed(i_0_plus_sig);

  i_0_plus_tmp <= unsigned(i_0_plus_sig_signed);

  i_0_plus <= std_logic_vector(i_0_plus_tmp);

  i_0_minus_sig_signed <= signed(i_0_minus_sig);

  i_0_minus_tmp <= unsigned(i_0_minus_sig_signed);

  i_0_minus <= std_logic_vector(i_0_minus_tmp);

  done <= done_sig;

  AXI4_Lite_BRESP <= AXI4_Lite_BRESP_tmp;

  AXI4_Lite_RDATA <= AXI4_Lite_RDATA_tmp;

  AXI4_Lite_RRESP <= AXI4_Lite_RRESP_tmp;

END rtl;

