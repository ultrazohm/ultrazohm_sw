-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\test_RS_flipflop_statemachine\mpc_ip_src_delay_comp.vhd
-- Created: 2022-08-29 16:54:27
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: mpc_ip_src_delay_comp
-- Source Path: test_RS_flipflop_statemachine/mpc/delay_comp
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY mpc_ip_src_delay_comp IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        trigger                           :   IN    std_logic;
        adc_trigger                       :   IN    std_logic;
        done                              :   OUT   std_logic
        );
END mpc_ip_src_delay_comp;


ARCHITECTURE rtl OF mpc_ip_src_delay_comp IS

  -- Component Declarations
  COMPONENT mpc_ip_src_Detect_Rise_Positive1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          U                               :   IN    std_logic;
          Y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT mpc_ip_src_Detect_Rise_Positive_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          U                               :   IN    std_logic;
          Y                               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT mpc_ip_src_Subsystem
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Set                             :   IN    std_logic;
          Reset_1                         :   IN    std_logic;
          Q                               :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : mpc_ip_src_Detect_Rise_Positive1
    USE ENTITY work.mpc_ip_src_Detect_Rise_Positive1(rtl);

  FOR ALL : mpc_ip_src_Detect_Rise_Positive_block
    USE ENTITY work.mpc_ip_src_Detect_Rise_Positive_block(rtl);

  FOR ALL : mpc_ip_src_Subsystem
    USE ENTITY work.mpc_ip_src_Subsystem(rtl);

  -- Signals
  SIGNAL Delay7_out1                      : std_logic;
  SIGNAL Detect_Rise_Positive1_out1       : std_logic;
  SIGNAL TmpGroundAtSwitch2Inport3_out1   : std_logic;
  SIGNAL Delay_out1                       : std_logic;
  SIGNAL Detect_Rise_Positive_out1        : std_logic;
  SIGNAL delay_comp_done                  : std_logic;
  SIGNAL delay_comp_done_1                : std_logic;
  SIGNAL Q                                : std_logic;
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL delay_comp_done_2                : std_logic;
  SIGNAL delay_comp_done_3                : std_logic;
  SIGNAL delay_comp_done_4                : std_logic;

BEGIN
  -- mpc state machine
  -- 
  -- Q=1 at start

  u_Detect_Rise_Positive1 : mpc_ip_src_Detect_Rise_Positive1
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              U => Delay7_out1,
              Y => Detect_Rise_Positive1_out1
              );

  u_Detect_Rise_Positive : mpc_ip_src_Detect_Rise_Positive_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              U => Delay_out1,
              Y => Detect_Rise_Positive_out1
              );

  u_Subsystem : mpc_ip_src_Subsystem
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Set => Detect_Rise_Positive1_out1,
              Reset_1 => delay_comp_done_1,
              Q => Q
              );

  Delay7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay7_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay7_out1 <= adc_trigger;
      END IF;
    END IF;
  END PROCESS Delay7_process;


  TmpGroundAtSwitch2Inport3_out1 <= '0';

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay_out1 <= trigger;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delay_comp_done <= '0';
      ELSIF enb = '1' THEN
        delay_comp_done <= Detect_Rise_Positive_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  
  switch_compare_1 <= '1' WHEN Q > '0' ELSE
      '0';

  
  delay_comp_done_2 <= TmpGroundAtSwitch2Inport3_out1 WHEN switch_compare_1 = '0' ELSE
      delay_comp_done;

  reduced_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delay_comp_done_1 <= '0';
      ELSIF enb = '1' THEN
        delay_comp_done_1 <= delay_comp_done_2;
      END IF;
    END IF;
  END PROCESS reduced_process;


  done <= delay_comp_done_1;

END rtl;

