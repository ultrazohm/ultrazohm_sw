-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\mux_axi\mux_axi_ip_src_mux_axi.vhd
-- Created: 2020-09-18 11:26:05
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-08
-- Target subsystem base rate: 1e-08
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: mux_axi_ip_src_mux_axi
-- Source Path: mux_axi/mux_axi
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY mux_axi_ip_src_mux_axi IS
  PORT( select_AXI                        :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        interrupts_in                     :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        interrupt_out                     :   OUT   std_logic;
        select_out                        :   OUT   std_logic_vector(3 DOWNTO 0)  -- ufix4
        );
END mux_axi_ip_src_mux_axi;


ARCHITECTURE rtl OF mux_axi_ip_src_mux_axi IS

  -- Signals
  SIGNAL select_AXI_unsigned              : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL interrupts_in_unsigned           : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice5_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice7_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1                   : std_logic;  -- ufix1
  SIGNAL Constant_out1                    : std_logic;
  SIGNAL Multiport_Switch_out1            : std_logic;
  SIGNAL Data_Type_Conversion3_out1       : unsigned(3 DOWNTO 0);  -- ufix4

BEGIN
  select_AXI_unsigned <= unsigned(select_AXI);

  interrupts_in_unsigned <= unsigned(interrupts_in);

  Bit_Slice5_out1 <= interrupts_in_unsigned(0);

  Bit_Slice6_out1 <= interrupts_in_unsigned(1);

  Bit_Slice7_out1 <= interrupts_in_unsigned(2);

  Bit_Slice4_out1 <= interrupts_in_unsigned(3);

  Bit_Slice3_out1 <= interrupts_in_unsigned(4);

  Bit_Slice2_out1 <= interrupts_in_unsigned(5);

  Bit_Slice1_out1 <= interrupts_in_unsigned(6);

  Bit_Slice_out1 <= interrupts_in_unsigned(7);

  Constant_out1 <= '0';

  
  Multiport_Switch_out1 <= Bit_Slice5_out1 WHEN select_AXI_unsigned = to_unsigned(0, 32) ELSE
      Bit_Slice6_out1 WHEN select_AXI_unsigned = to_unsigned(1, 32) ELSE
      Bit_Slice7_out1 WHEN select_AXI_unsigned = to_unsigned(2, 32) ELSE
      Bit_Slice4_out1 WHEN select_AXI_unsigned = to_unsigned(3, 32) ELSE
      Bit_Slice3_out1 WHEN select_AXI_unsigned = to_unsigned(4, 32) ELSE
      Bit_Slice2_out1 WHEN select_AXI_unsigned = to_unsigned(5, 32) ELSE
      Bit_Slice1_out1 WHEN select_AXI_unsigned = to_unsigned(6, 32) ELSE
      Bit_Slice_out1 WHEN select_AXI_unsigned = to_unsigned(7, 32) ELSE
      Constant_out1;

  Data_Type_Conversion3_out1 <= select_AXI_unsigned(3 DOWNTO 0);

  select_out <= std_logic_vector(Data_Type_Conversion3_out1);

  interrupt_out <= Multiport_Switch_out1;

END rtl;

