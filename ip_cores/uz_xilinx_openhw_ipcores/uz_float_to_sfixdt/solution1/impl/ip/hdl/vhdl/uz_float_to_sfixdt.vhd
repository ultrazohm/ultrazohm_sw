-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity uz_float_to_sfixdt is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_float : IN STD_LOGIC_VECTOR (31 downto 0);
    fraction : IN STD_LOGIC_VECTOR (7 downto 0);
    out_sfix : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of uz_float_to_sfixdt is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "uz_float_to_sfixdt_uz_float_to_sfixdt,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvc900-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.861833,HLS_SYN_LAT=1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=115,HLS_SYN_LUT=960,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv9_FE : STD_LOGIC_VECTOR (8 downto 0) := "011111110";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv23_7FFFFF : STD_LOGIC_VECTOR (22 downto 0) := "11111111111111111111111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal mask_table_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mask_table_ce0 : STD_LOGIC;
    signal mask_table_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal one_half_table_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal one_half_table_ce0 : STD_LOGIC;
    signal one_half_table_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal dc_fu_293_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_reg_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_1_fu_301_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_1_reg_553 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1035_fu_315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_reg_559 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_1_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_1_reg_565 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln541_fu_337_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal data_V_fu_145_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_exp_V_5_fu_157_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln17_fu_171_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln9_fu_141_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln17_fu_175_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ininf_fu_181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1031_fu_187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_sig_V_fu_167_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln1023_fu_199_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_1_fu_217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_fu_211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln23_fu_223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inf_fu_193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_exp_V_fu_235_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_149_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_exp_V_6_fu_241_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xs_sig_V_1_fu_249_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal and_ln18_fu_205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln23_fu_229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln23_fu_275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_fu_257_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_2_fu_267_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln23_fu_281_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln23_fu_289_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_exp_V_7_fu_305_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_fu_327_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_3_fu_343_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln204_fu_358_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_2_fu_362_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln628_fu_367_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal xor_ln1497_fu_371_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_fu_383_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal xs_sig_V_2_fu_377_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_4_fu_350_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_5_fu_393_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1035_fu_401_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln1035_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1035_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln1035_fu_408_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_1_fu_422_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_3_fu_429_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_6_fu_443_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal mantissa_fu_447_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal xs_exp_V_4_fu_433_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln346_fu_461_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_fu_465_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_fu_479_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_471_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_fu_485_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_fu_489_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1488_fu_497_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_fu_457_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln1488_fu_501_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_fu_505_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_4_fu_517_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_1_fu_511_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln818_fu_525_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_529_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component uz_float_to_sfixdt_mask_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component uz_float_to_sfixdt_one_half_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    mask_table_U : component uz_float_to_sfixdt_mask_table_ROM_AUTO_1R
    generic map (
        DataWidth => 23,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mask_table_address0,
        ce0 => mask_table_ce0,
        q0 => mask_table_q0);

    one_half_table_U : component uz_float_to_sfixdt_one_half_table_ROM_AUTO_1R
    generic map (
        DataWidth => 24,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => one_half_table_address0,
        ce0 => one_half_table_ce0,
        q0 => one_half_table_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                data_V_1_reg_553 <= data_V_1_fu_301_p1;
                dc_reg_548 <= dc_fu_293_p3;
                icmp_ln1035_1_reg_565 <= icmp_ln1035_1_fu_321_p2;
                icmp_ln1035_reg_559 <= icmp_ln1035_fu_315_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln17_fu_175_p2 <= std_logic_vector(unsigned(zext_ln17_fu_171_p1) + unsigned(zext_ln9_fu_141_p1));
    add_ln346_fu_465_p2 <= std_logic_vector(unsigned(zext_ln346_fu_461_p1) + unsigned(ap_const_lv9_181));
    and_ln1035_fu_417_p2 <= (xor_ln1035_fu_412_p2 and icmp_ln1035_1_reg_565);
    and_ln18_fu_205_p2 <= (ininf_fu_181_p2 and icmp_ln1023_fu_199_p2);
    and_ln23_fu_223_p2 <= (icmp_ln23_fu_211_p2 and icmp_ln23_1_fu_217_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln1035_fu_408_p1 <= select_ln1035_fu_401_p3;
    bitcast_ln23_fu_289_p1 <= select_ln23_fu_281_p3;
    data_V_1_fu_301_p1 <= dc_fu_293_p3;
    data_V_2_fu_362_p2 <= std_logic_vector(unsigned(zext_ln204_fu_358_p1) + unsigned(data_V_1_reg_553));
    data_V_3_fu_429_p1 <= dc_1_fu_422_p3;
    data_V_fu_145_p1 <= in_float;
    dc_1_fu_422_p3 <= 
        dc_reg_548 when (and_ln1035_fu_417_p2(0) = '1') else 
        bitcast_ln1035_fu_408_p1;
    dc_fu_293_p3 <= 
        in_float when (and_ln18_fu_205_p2(0) = '1') else 
        bitcast_ln23_fu_289_p1;
    icmp_ln1023_fu_199_p2 <= "0" when (xs_sig_V_fu_167_p1 = ap_const_lv23_0) else "1";
    icmp_ln1031_fu_187_p2 <= "1" when (unsigned(add_ln17_fu_175_p2) > unsigned(ap_const_lv9_FE)) else "0";
    icmp_ln1035_1_fu_321_p2 <= "1" when (unsigned(xs_exp_V_7_fu_305_p4) > unsigned(ap_const_lv8_96)) else "0";
    icmp_ln1035_fu_315_p2 <= "1" when (unsigned(xs_exp_V_7_fu_305_p4) < unsigned(ap_const_lv8_7E)) else "0";
    icmp_ln23_1_fu_217_p2 <= "0" when (add_ln17_fu_175_p2 = ap_const_lv9_0) else "1";
    icmp_ln23_fu_211_p2 <= "0" when (xs_exp_V_5_fu_157_p4 = ap_const_lv8_0) else "1";
    index_fu_327_p4 <= data_V_1_fu_301_p1(27 downto 23);
    inf_fu_193_p2 <= (ininf_fu_181_p2 or icmp_ln1031_fu_187_p2);
    ininf_fu_181_p2 <= "1" when (xs_exp_V_5_fu_157_p4 = ap_const_lv8_FF) else "0";
    isNeg_fu_471_p3 <= add_ln346_fu_465_p2(8 downto 8);
    mantissa_fu_447_p4 <= ((ap_const_lv1_1 & p_Result_6_fu_443_p1) & ap_const_lv1_0);
    mask_table_address0 <= zext_ln541_fu_337_p1(5 - 1 downto 0);

    mask_table_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            mask_table_ce0 <= ap_const_logic_1;
        else 
            mask_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    one_half_table_address0 <= zext_ln541_fu_337_p1(5 - 1 downto 0);

    one_half_table_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            one_half_table_ce0 <= ap_const_logic_1;
        else 
            one_half_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln23_fu_229_p2 <= (ininf_fu_181_p2 or and_ln23_fu_223_p2);
    out_sfix <= 
        zext_ln818_fu_525_p1 when (isNeg_fu_471_p3(0) = '1') else 
        tmp_1_fu_529_p4;
    p_Result_1_fu_257_p4 <= ((p_Result_s_fu_149_p3 & xs_exp_V_6_fu_241_p3) & xs_sig_V_1_fu_249_p3);
    p_Result_2_fu_267_p3 <= (p_Result_s_fu_149_p3 & ap_const_lv31_0);
    p_Result_3_fu_343_p3 <= data_V_1_reg_553(31 downto 31);
    p_Result_4_fu_350_p3 <= (p_Result_3_fu_343_p3 & ap_const_lv31_0);
    p_Result_5_fu_393_p3 <= (tmp_fu_383_p4 & xs_sig_V_2_fu_377_p2);
    p_Result_6_fu_443_p1 <= data_V_3_fu_429_p1(23 - 1 downto 0);
    p_Result_s_fu_149_p3 <= data_V_fu_145_p1(31 downto 31);
    r_V_1_fu_511_p2 <= std_logic_vector(shift_left(unsigned(zext_ln68_fu_457_p1),to_integer(unsigned('0' & zext_ln1488_fu_501_p1(31-1 downto 0)))));
    r_V_fu_505_p2 <= std_logic_vector(shift_right(unsigned(zext_ln68_fu_457_p1),to_integer(unsigned('0' & zext_ln1488_fu_501_p1(31-1 downto 0)))));
    select_ln1035_fu_401_p3 <= 
        p_Result_4_fu_350_p3 when (icmp_ln1035_reg_559(0) = '1') else 
        p_Result_5_fu_393_p3;
    select_ln23_fu_281_p3 <= 
        p_Result_1_fu_257_p4 when (xor_ln23_fu_275_p2(0) = '1') else 
        p_Result_2_fu_267_p3;
        sext_ln1488_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_fu_489_p3),32));

        sext_ln1512_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_fu_479_p2),9));

    sub_ln1512_fu_479_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_4_fu_433_p4));
    tmp_1_fu_529_p4 <= r_V_1_fu_511_p2(55 downto 24);
    tmp_4_fu_517_p3 <= r_V_fu_505_p2(24 downto 24);
    tmp_fu_383_p4 <= data_V_2_fu_362_p2(31 downto 23);
    trunc_ln628_fu_367_p1 <= data_V_2_fu_362_p2(23 - 1 downto 0);
    ush_fu_489_p3 <= 
        sext_ln1512_fu_485_p1 when (isNeg_fu_471_p3(0) = '1') else 
        add_ln346_fu_465_p2;
    xor_ln1035_fu_412_p2 <= (icmp_ln1035_reg_559 xor ap_const_lv1_1);
    xor_ln1497_fu_371_p2 <= (mask_table_q0 xor ap_const_lv23_7FFFFF);
    xor_ln23_fu_275_p2 <= (or_ln23_fu_229_p2 xor and_ln18_fu_205_p2);
    xs_exp_V_4_fu_433_p4 <= data_V_3_fu_429_p1(30 downto 23);
    xs_exp_V_5_fu_157_p4 <= data_V_fu_145_p1(30 downto 23);
    xs_exp_V_6_fu_241_p3 <= 
        ap_const_lv8_FF when (inf_fu_193_p2(0) = '1') else 
        xs_exp_V_fu_235_p2;
    xs_exp_V_7_fu_305_p4 <= data_V_1_fu_301_p1(30 downto 23);
    xs_exp_V_fu_235_p2 <= std_logic_vector(unsigned(xs_exp_V_5_fu_157_p4) + unsigned(fraction));
    xs_sig_V_1_fu_249_p3 <= 
        ap_const_lv23_0 when (inf_fu_193_p2(0) = '1') else 
        xs_sig_V_fu_167_p1;
    xs_sig_V_2_fu_377_p2 <= (xor_ln1497_fu_371_p2 and trunc_ln628_fu_367_p1);
    xs_sig_V_fu_167_p1 <= data_V_fu_145_p1(23 - 1 downto 0);
    zext_ln1488_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_fu_497_p1),79));
    zext_ln17_fu_171_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_5_fu_157_p4),9));
    zext_ln204_fu_358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(one_half_table_q0),32));
    zext_ln346_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_4_fu_433_p4),9));
    zext_ln541_fu_337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_fu_327_p4),64));
    zext_ln68_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_447_p4),79));
    zext_ln818_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_517_p3),32));
    zext_ln9_fu_141_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fraction),9));
end behav;
