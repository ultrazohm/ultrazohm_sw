// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module BGD_accumulate_float_16u_138 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_values_dout,
        p_values_empty_n,
        p_values_read,
        p_accumulator_address0,
        p_accumulator_ce0,
        p_accumulator_we0,
        p_accumulator_d0,
        p_accumulator_q0,
        p_accumulator_address1,
        p_accumulator_ce1,
        p_accumulator_we1,
        p_accumulator_d1,
        p_accumulator_q1,
        p_size_dout,
        p_size_empty_n,
        p_size_read
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_pp0_stage0 = 18'd2;
parameter    ap_ST_fsm_pp0_stage1 = 18'd4;
parameter    ap_ST_fsm_pp0_stage2 = 18'd8;
parameter    ap_ST_fsm_pp0_stage3 = 18'd16;
parameter    ap_ST_fsm_pp0_stage4 = 18'd32;
parameter    ap_ST_fsm_pp0_stage5 = 18'd64;
parameter    ap_ST_fsm_pp0_stage6 = 18'd128;
parameter    ap_ST_fsm_pp0_stage7 = 18'd256;
parameter    ap_ST_fsm_pp0_stage8 = 18'd512;
parameter    ap_ST_fsm_pp0_stage9 = 18'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 18'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 18'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 18'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 18'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 18'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 18'd65536;
parameter    ap_ST_fsm_state34 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] p_values_dout;
input   p_values_empty_n;
output   p_values_read;
output  [13:0] p_accumulator_address0;
output   p_accumulator_ce0;
output   p_accumulator_we0;
output  [31:0] p_accumulator_d0;
input  [31:0] p_accumulator_q0;
output  [13:0] p_accumulator_address1;
output   p_accumulator_ce1;
output   p_accumulator_we1;
output  [31:0] p_accumulator_d1;
input  [31:0] p_accumulator_q1;
input  [31:0] p_size_dout;
input   p_size_empty_n;
output   p_size_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_values_read;
reg[13:0] p_accumulator_address0;
reg p_accumulator_ce0;
reg p_accumulator_we0;
reg[31:0] p_accumulator_d0;
reg[13:0] p_accumulator_address1;
reg p_accumulator_ce1;
reg p_accumulator_we1;
reg p_size_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_values_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln397_reg_732;
reg    p_size_blk_n;
reg   [27:0] i_reg_295;
reg   [31:0] reg_310;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state19_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_state24_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
wire   [31:0] grp_fu_306_p2;
reg   [31:0] reg_315;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_state26_pp0_stage8_iter1;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_state27_pp0_stage9_iter1;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state12_pp0_stage10_iter0;
wire    ap_block_state28_pp0_stage10_iter1;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state13_pp0_stage11_iter0;
wire    ap_block_state29_pp0_stage11_iter1;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state14_pp0_stage12_iter0;
wire    ap_block_state30_pp0_stage12_iter1;
wire    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state15_pp0_stage13_iter0;
wire    ap_block_state31_pp0_stage13_iter1;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state16_pp0_stage14_iter0;
wire    ap_block_state32_pp0_stage14_iter1;
wire    ap_block_pp0_stage14_11001;
reg   [27:0] trunc_ln_reg_727;
reg    ap_block_state1;
wire   [0:0] icmp_ln397_fu_330_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state18_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln397_reg_732_pp0_iter1_reg;
wire   [27:0] add_ln397_fu_335_p2;
reg   [27:0] add_ln397_reg_736;
wire   [13:0] tmp_s_fu_345_p3;
reg   [13:0] tmp_s_reg_741;
reg   [13:0] p_accumulator_addr_reg_759;
reg   [13:0] p_accumulator_addr_46_reg_764;
wire   [31:0] trunc_ln674_fu_369_p1;
reg   [31:0] trunc_ln674_reg_769;
reg   [31:0] p_Result_91_i_reg_774;
reg   [31:0] p_Result_92_i_reg_779;
reg   [31:0] p_Result_93_i_reg_784;
reg   [31:0] p_Result_94_i_reg_789;
reg   [31:0] p_Result_95_i_reg_794;
reg   [31:0] p_Result_96_i_reg_799;
reg   [31:0] p_Result_97_i_reg_804;
reg   [31:0] p_Result_98_i_reg_809;
reg   [31:0] p_Result_99_i_reg_814;
reg   [31:0] p_Result_100_i_reg_819;
reg   [31:0] p_Result_101_i_reg_824;
reg   [31:0] p_Result_102_i_reg_829;
reg   [31:0] p_Result_103_i_reg_834;
reg   [31:0] p_Result_104_i_reg_839;
reg   [31:0] p_Result_i_reg_844;
reg   [31:0] p_accumulator_load_46_reg_849;
reg   [13:0] p_accumulator_addr_47_reg_854;
reg   [13:0] p_accumulator_addr_48_reg_859;
wire   [31:0] bitcast_ln101_fu_543_p1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state20_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] p_accumulator_load_47_reg_870;
reg   [31:0] p_accumulator_load_48_reg_875;
reg   [13:0] p_accumulator_addr_49_reg_880;
reg   [13:0] p_accumulator_addr_50_reg_885;
wire   [31:0] bitcast_ln101_136_fu_567_p1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state21_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] p_accumulator_load_49_reg_896;
reg   [31:0] p_accumulator_load_50_reg_901;
reg   [13:0] p_accumulator_addr_51_reg_906;
reg   [13:0] p_accumulator_addr_52_reg_911;
wire   [31:0] bitcast_ln101_137_fu_591_p1;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state22_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
reg   [31:0] p_accumulator_load_51_reg_922;
reg   [31:0] p_accumulator_load_52_reg_927;
reg   [13:0] p_accumulator_addr_53_reg_932;
reg   [13:0] p_accumulator_addr_54_reg_937;
reg   [13:0] p_accumulator_addr_54_reg_937_pp0_iter1_reg;
wire   [31:0] bitcast_ln101_138_fu_615_p1;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_state23_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
reg   [31:0] p_accumulator_load_53_reg_947;
reg   [31:0] p_accumulator_load_54_reg_952;
reg   [13:0] p_accumulator_addr_55_reg_957;
reg   [13:0] p_accumulator_addr_55_reg_957_pp0_iter1_reg;
reg   [13:0] p_accumulator_addr_56_reg_963;
reg   [13:0] p_accumulator_addr_56_reg_963_pp0_iter1_reg;
wire   [31:0] bitcast_ln101_139_fu_639_p1;
reg   [31:0] p_accumulator_load_56_reg_973;
reg   [13:0] p_accumulator_addr_57_reg_978;
reg   [13:0] p_accumulator_addr_57_reg_978_pp0_iter1_reg;
reg   [13:0] p_accumulator_addr_58_reg_984;
reg   [13:0] p_accumulator_addr_58_reg_984_pp0_iter1_reg;
wire   [31:0] bitcast_ln101_140_fu_663_p1;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_state25_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
reg   [31:0] add3_1_i_reg_994;
reg   [31:0] p_accumulator_load_57_reg_999;
reg   [31:0] p_accumulator_load_58_reg_1004;
reg   [13:0] p_accumulator_addr_59_reg_1009;
reg   [13:0] p_accumulator_addr_59_reg_1009_pp0_iter1_reg;
reg   [13:0] p_accumulator_addr_60_reg_1015;
reg   [13:0] p_accumulator_addr_60_reg_1015_pp0_iter1_reg;
wire   [31:0] bitcast_ln101_141_fu_687_p1;
reg   [31:0] p_accumulator_load_59_reg_1025;
reg   [31:0] p_accumulator_load_60_reg_1030;
wire   [31:0] bitcast_ln101_142_fu_691_p1;
wire   [31:0] bitcast_ln101_143_fu_695_p1;
wire   [31:0] bitcast_ln101_144_fu_699_p1;
wire   [31:0] bitcast_ln101_145_fu_703_p1;
wire   [31:0] bitcast_ln101_146_fu_707_p1;
wire   [31:0] bitcast_ln101_147_fu_711_p1;
wire   [31:0] bitcast_ln101_148_fu_715_p1;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state17_pp0_stage15_iter0;
wire    ap_block_state33_pp0_stage15_iter1;
wire    ap_block_pp0_stage15_11001;
reg   [31:0] add3_9_i_reg_1070;
wire   [31:0] bitcast_ln101_149_fu_719_p1;
reg   [31:0] add3_10_i_reg_1080;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] bitcast_ln101_150_fu_723_p1;
reg   [31:0] add3_11_i_reg_1090;
reg   [31:0] add3_12_i_reg_1095;
reg   [31:0] add3_13_i_reg_1100;
reg   [31:0] add3_14_i_reg_1105;
reg   [31:0] add3_i_143_reg_1110;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage15_subdone;
reg   [27:0] ap_phi_mux_i_phi_fu_299_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln404_fu_353_p1;
wire   [63:0] zext_ln404_46_fu_364_p1;
wire   [63:0] zext_ln404_47_fu_528_p1;
wire   [63:0] zext_ln404_48_fu_538_p1;
wire   [63:0] zext_ln404_49_fu_552_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln404_50_fu_562_p1;
wire   [63:0] zext_ln404_51_fu_576_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln404_52_fu_586_p1;
wire   [63:0] zext_ln404_53_fu_600_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln404_54_fu_610_p1;
wire   [63:0] zext_ln404_55_fu_624_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln404_56_fu_634_p1;
wire   [63:0] zext_ln404_57_fu_648_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln404_58_fu_658_p1;
wire   [63:0] zext_ln404_59_fu_672_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln404_60_fu_682_p1;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage13;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage15;
reg   [31:0] grp_fu_306_p0;
reg   [31:0] grp_fu_306_p1;
wire   [9:0] empty_fu_341_p1;
wire   [13:0] or_ln404_fu_358_p2;
wire   [13:0] or_ln404_43_fu_523_p2;
wire   [13:0] or_ln404_44_fu_533_p2;
wire   [13:0] or_ln404_45_fu_547_p2;
wire   [13:0] or_ln404_46_fu_557_p2;
wire   [13:0] or_ln404_47_fu_571_p2;
wire   [13:0] or_ln404_48_fu_581_p2;
wire   [13:0] or_ln404_49_fu_595_p2;
wire   [13:0] or_ln404_50_fu_605_p2;
wire   [13:0] or_ln404_51_fu_619_p2;
wire   [13:0] or_ln404_52_fu_629_p2;
wire   [13:0] or_ln404_53_fu_643_p2;
wire   [13:0] or_ln404_54_fu_653_p2;
wire   [13:0] or_ln404_55_fu_667_p2;
wire   [13:0] or_ln404_56_fu_677_p2;
reg    grp_fu_306_ce;
wire    ap_CS_fsm_state34;
reg   [17:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 18'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

BGD_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U520(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_306_p0),
    .din1(grp_fu_306_p1),
    .ce(grp_fu_306_ce),
    .dout(grp_fu_306_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state34)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((p_size_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((p_size_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_size_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_295 <= 28'd0;
    end else if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_295 <= add_ln397_reg_736;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add3_10_i_reg_1080 <= grp_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln397_reg_732_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add3_11_i_reg_1090 <= grp_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln397_reg_732_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add3_12_i_reg_1095 <= grp_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln397_reg_732_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add3_13_i_reg_1100 <= grp_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln397_reg_732_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add3_14_i_reg_1105 <= grp_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        add3_1_i_reg_994 <= grp_fu_306_p2;
        p_accumulator_load_57_reg_999 <= p_accumulator_q1;
        p_accumulator_load_58_reg_1004 <= p_accumulator_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        add3_9_i_reg_1070 <= grp_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln397_reg_732_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        add3_i_143_reg_1110 <= grp_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln397_reg_736 <= add_ln397_fu_335_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln397_reg_732 <= icmp_ln397_fu_330_p2;
        icmp_ln397_reg_732_pp0_iter1_reg <= icmp_ln397_reg_732;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_Result_100_i_reg_819 <= {{p_values_dout[351:320]}};
        p_Result_101_i_reg_824 <= {{p_values_dout[383:352]}};
        p_Result_102_i_reg_829 <= {{p_values_dout[415:384]}};
        p_Result_103_i_reg_834 <= {{p_values_dout[447:416]}};
        p_Result_104_i_reg_839 <= {{p_values_dout[479:448]}};
        p_Result_91_i_reg_774 <= {{p_values_dout[63:32]}};
        p_Result_92_i_reg_779 <= {{p_values_dout[95:64]}};
        p_Result_93_i_reg_784 <= {{p_values_dout[127:96]}};
        p_Result_94_i_reg_789 <= {{p_values_dout[159:128]}};
        p_Result_95_i_reg_794 <= {{p_values_dout[191:160]}};
        p_Result_96_i_reg_799 <= {{p_values_dout[223:192]}};
        p_Result_97_i_reg_804 <= {{p_values_dout[255:224]}};
        p_Result_98_i_reg_809 <= {{p_values_dout[287:256]}};
        p_Result_99_i_reg_814 <= {{p_values_dout[319:288]}};
        p_Result_i_reg_844 <= {{p_values_dout[511:480]}};
        p_accumulator_addr_47_reg_854[13 : 4] <= zext_ln404_47_fu_528_p1[13 : 4];
        p_accumulator_addr_48_reg_859[13 : 4] <= zext_ln404_48_fu_538_p1[13 : 4];
        trunc_ln674_reg_769 <= trunc_ln674_fu_369_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln397_fu_330_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_accumulator_addr_46_reg_764[13 : 4] <= zext_ln404_46_fu_364_p1[13 : 4];
        p_accumulator_addr_reg_759[13 : 4] <= zext_ln404_fu_353_p1[13 : 4];
        tmp_s_reg_741[13 : 4] <= tmp_s_fu_345_p3[13 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_accumulator_addr_49_reg_880[13 : 4] <= zext_ln404_49_fu_552_p1[13 : 4];
        p_accumulator_addr_50_reg_885[13 : 4] <= zext_ln404_50_fu_562_p1[13 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_accumulator_addr_51_reg_906[13 : 4] <= zext_ln404_51_fu_576_p1[13 : 4];
        p_accumulator_addr_52_reg_911[13 : 4] <= zext_ln404_52_fu_586_p1[13 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        p_accumulator_addr_53_reg_932[13 : 4] <= zext_ln404_53_fu_600_p1[13 : 4];
        p_accumulator_addr_54_reg_937[13 : 4] <= zext_ln404_54_fu_610_p1[13 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        p_accumulator_addr_54_reg_937_pp0_iter1_reg[13 : 4] <= p_accumulator_addr_54_reg_937[13 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        p_accumulator_addr_55_reg_957[13 : 4] <= zext_ln404_55_fu_624_p1[13 : 4];
        p_accumulator_addr_56_reg_963[13 : 4] <= zext_ln404_56_fu_634_p1[13 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        p_accumulator_addr_55_reg_957_pp0_iter1_reg[13 : 4] <= p_accumulator_addr_55_reg_957[13 : 4];
        p_accumulator_addr_56_reg_963_pp0_iter1_reg[13 : 4] <= p_accumulator_addr_56_reg_963[13 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        p_accumulator_addr_57_reg_978[13 : 4] <= zext_ln404_57_fu_648_p1[13 : 4];
        p_accumulator_addr_58_reg_984[13 : 4] <= zext_ln404_58_fu_658_p1[13 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        p_accumulator_addr_57_reg_978_pp0_iter1_reg[13 : 4] <= p_accumulator_addr_57_reg_978[13 : 4];
        p_accumulator_addr_58_reg_984_pp0_iter1_reg[13 : 4] <= p_accumulator_addr_58_reg_984[13 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        p_accumulator_addr_59_reg_1009[13 : 4] <= zext_ln404_59_fu_672_p1[13 : 4];
        p_accumulator_addr_60_reg_1015[13 : 4] <= zext_ln404_60_fu_682_p1[13 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        p_accumulator_addr_59_reg_1009_pp0_iter1_reg[13 : 4] <= p_accumulator_addr_59_reg_1009[13 : 4];
        p_accumulator_addr_60_reg_1015_pp0_iter1_reg[13 : 4] <= p_accumulator_addr_60_reg_1015[13 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_accumulator_load_46_reg_849 <= p_accumulator_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_accumulator_load_47_reg_870 <= p_accumulator_q1;
        p_accumulator_load_48_reg_875 <= p_accumulator_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_accumulator_load_49_reg_896 <= p_accumulator_q1;
        p_accumulator_load_50_reg_901 <= p_accumulator_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        p_accumulator_load_51_reg_922 <= p_accumulator_q1;
        p_accumulator_load_52_reg_927 <= p_accumulator_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        p_accumulator_load_53_reg_947 <= p_accumulator_q1;
        p_accumulator_load_54_reg_952 <= p_accumulator_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        p_accumulator_load_56_reg_973 <= p_accumulator_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        p_accumulator_load_59_reg_1025 <= p_accumulator_q1;
        p_accumulator_load_60_reg_1030 <= p_accumulator_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_310 <= p_accumulator_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_315 <= grp_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_size_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        trunc_ln_reg_727 <= {{p_size_dout[31:4]}};
    end
end

always @ (*) begin
    if ((icmp_ln397_fu_330_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_299_p4 = add_ln397_reg_736;
    end else begin
        ap_phi_mux_i_phi_fu_299_p4 = i_reg_295;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_306_ce = 1'b1;
    end else begin
        grp_fu_306_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_306_p0 = p_accumulator_load_60_reg_1030;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_306_p0 = p_accumulator_load_59_reg_1025;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_306_p0 = p_accumulator_load_58_reg_1004;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_306_p0 = p_accumulator_load_57_reg_999;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_306_p0 = p_accumulator_load_56_reg_973;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_306_p0 = p_accumulator_load_54_reg_952;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_306_p0 = p_accumulator_load_53_reg_947;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_306_p0 = p_accumulator_load_52_reg_927;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_306_p0 = p_accumulator_load_51_reg_922;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_306_p0 = p_accumulator_load_50_reg_901;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_306_p0 = p_accumulator_load_49_reg_896;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_306_p0 = p_accumulator_load_48_reg_875;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_306_p0 = p_accumulator_load_47_reg_870;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_306_p0 = p_accumulator_load_46_reg_849;
    end else if ((((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_306_p0 = reg_310;
    end else begin
        grp_fu_306_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_306_p1 = bitcast_ln101_150_fu_723_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_306_p1 = bitcast_ln101_149_fu_719_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_306_p1 = bitcast_ln101_148_fu_715_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_306_p1 = bitcast_ln101_147_fu_711_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_306_p1 = bitcast_ln101_146_fu_707_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_306_p1 = bitcast_ln101_145_fu_703_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_306_p1 = bitcast_ln101_144_fu_699_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_306_p1 = bitcast_ln101_143_fu_695_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_306_p1 = bitcast_ln101_142_fu_691_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_306_p1 = bitcast_ln101_141_fu_687_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_306_p1 = bitcast_ln101_140_fu_663_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_306_p1 = bitcast_ln101_139_fu_639_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_306_p1 = bitcast_ln101_138_fu_615_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_306_p1 = bitcast_ln101_137_fu_591_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_306_p1 = bitcast_ln101_136_fu_567_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_306_p1 = bitcast_ln101_fu_543_p1;
    end else begin
        grp_fu_306_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        p_accumulator_address0 = p_accumulator_addr_60_reg_1015_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        p_accumulator_address0 = p_accumulator_addr_59_reg_1009_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        p_accumulator_address0 = p_accumulator_addr_58_reg_984_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        p_accumulator_address0 = p_accumulator_addr_57_reg_978_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        p_accumulator_address0 = p_accumulator_addr_56_reg_963_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        p_accumulator_address0 = p_accumulator_addr_55_reg_957_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        p_accumulator_address0 = p_accumulator_addr_54_reg_937_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        p_accumulator_address0 = p_accumulator_addr_46_reg_764;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        p_accumulator_address0 = zext_ln404_60_fu_682_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        p_accumulator_address0 = zext_ln404_58_fu_658_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        p_accumulator_address0 = zext_ln404_56_fu_634_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        p_accumulator_address0 = zext_ln404_54_fu_610_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_accumulator_address0 = zext_ln404_52_fu_586_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_accumulator_address0 = zext_ln404_50_fu_562_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_accumulator_address0 = zext_ln404_48_fu_538_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_accumulator_address0 = zext_ln404_46_fu_364_p1;
    end else begin
        p_accumulator_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            p_accumulator_address1 = p_accumulator_addr_53_reg_932;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            p_accumulator_address1 = p_accumulator_addr_52_reg_911;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            p_accumulator_address1 = p_accumulator_addr_51_reg_906;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            p_accumulator_address1 = p_accumulator_addr_50_reg_885;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            p_accumulator_address1 = p_accumulator_addr_49_reg_880;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            p_accumulator_address1 = p_accumulator_addr_48_reg_859;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            p_accumulator_address1 = p_accumulator_addr_47_reg_854;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            p_accumulator_address1 = p_accumulator_addr_reg_759;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            p_accumulator_address1 = zext_ln404_59_fu_672_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            p_accumulator_address1 = zext_ln404_57_fu_648_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            p_accumulator_address1 = zext_ln404_55_fu_624_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            p_accumulator_address1 = zext_ln404_53_fu_600_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            p_accumulator_address1 = zext_ln404_51_fu_576_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            p_accumulator_address1 = zext_ln404_49_fu_552_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            p_accumulator_address1 = zext_ln404_47_fu_528_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_accumulator_address1 = zext_ln404_fu_353_p1;
        end else begin
            p_accumulator_address1 = 'bx;
        end
    end else begin
        p_accumulator_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        p_accumulator_ce0 = 1'b1;
    end else begin
        p_accumulator_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        p_accumulator_ce1 = 1'b1;
    end else begin
        p_accumulator_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        p_accumulator_d0 = add3_i_143_reg_1110;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        p_accumulator_d0 = add3_14_i_reg_1105;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        p_accumulator_d0 = add3_13_i_reg_1100;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        p_accumulator_d0 = add3_12_i_reg_1095;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        p_accumulator_d0 = add3_11_i_reg_1090;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        p_accumulator_d0 = add3_10_i_reg_1080;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        p_accumulator_d0 = add3_9_i_reg_1070;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        p_accumulator_d0 = add3_1_i_reg_994;
    end else begin
        p_accumulator_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln397_reg_732_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln397_reg_732_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln397_reg_732_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln397_reg_732_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln397_reg_732_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln397_reg_732_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln397_reg_732_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        p_accumulator_we0 = 1'b1;
    end else begin
        p_accumulator_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        p_accumulator_we1 = 1'b1;
    end else begin
        p_accumulator_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_size_blk_n = p_size_empty_n;
    end else begin
        p_size_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_size_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_size_read = 1'b1;
    end else begin
        p_size_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_values_blk_n = p_values_empty_n;
    end else begin
        p_values_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln397_reg_732 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_values_read = 1'b1;
    end else begin
        p_values_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_size_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln397_fu_330_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln397_fu_330_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((~((1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln397_fu_335_p2 = (ap_phi_mux_i_phi_fu_299_p4 + 28'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd17];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((icmp_ln397_reg_732 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (p_values_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((icmp_ln397_reg_732 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (p_values_empty_n == 1'b0));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((p_size_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((icmp_ln397_reg_732 == 1'd0) & (p_values_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln101_136_fu_567_p1 = p_Result_91_i_reg_774;

assign bitcast_ln101_137_fu_591_p1 = p_Result_92_i_reg_779;

assign bitcast_ln101_138_fu_615_p1 = p_Result_93_i_reg_784;

assign bitcast_ln101_139_fu_639_p1 = p_Result_94_i_reg_789;

assign bitcast_ln101_140_fu_663_p1 = p_Result_95_i_reg_794;

assign bitcast_ln101_141_fu_687_p1 = p_Result_96_i_reg_799;

assign bitcast_ln101_142_fu_691_p1 = p_Result_97_i_reg_804;

assign bitcast_ln101_143_fu_695_p1 = p_Result_98_i_reg_809;

assign bitcast_ln101_144_fu_699_p1 = p_Result_99_i_reg_814;

assign bitcast_ln101_145_fu_703_p1 = p_Result_100_i_reg_819;

assign bitcast_ln101_146_fu_707_p1 = p_Result_101_i_reg_824;

assign bitcast_ln101_147_fu_711_p1 = p_Result_102_i_reg_829;

assign bitcast_ln101_148_fu_715_p1 = p_Result_103_i_reg_834;

assign bitcast_ln101_149_fu_719_p1 = p_Result_104_i_reg_839;

assign bitcast_ln101_150_fu_723_p1 = p_Result_i_reg_844;

assign bitcast_ln101_fu_543_p1 = trunc_ln674_reg_769;

assign empty_fu_341_p1 = ap_phi_mux_i_phi_fu_299_p4[9:0];

assign icmp_ln397_fu_330_p2 = ((ap_phi_mux_i_phi_fu_299_p4 == trunc_ln_reg_727) ? 1'b1 : 1'b0);

assign or_ln404_43_fu_523_p2 = (tmp_s_reg_741 | 14'd2);

assign or_ln404_44_fu_533_p2 = (tmp_s_reg_741 | 14'd3);

assign or_ln404_45_fu_547_p2 = (tmp_s_reg_741 | 14'd4);

assign or_ln404_46_fu_557_p2 = (tmp_s_reg_741 | 14'd5);

assign or_ln404_47_fu_571_p2 = (tmp_s_reg_741 | 14'd6);

assign or_ln404_48_fu_581_p2 = (tmp_s_reg_741 | 14'd7);

assign or_ln404_49_fu_595_p2 = (tmp_s_reg_741 | 14'd8);

assign or_ln404_50_fu_605_p2 = (tmp_s_reg_741 | 14'd9);

assign or_ln404_51_fu_619_p2 = (tmp_s_reg_741 | 14'd10);

assign or_ln404_52_fu_629_p2 = (tmp_s_reg_741 | 14'd11);

assign or_ln404_53_fu_643_p2 = (tmp_s_reg_741 | 14'd12);

assign or_ln404_54_fu_653_p2 = (tmp_s_reg_741 | 14'd13);

assign or_ln404_55_fu_667_p2 = (tmp_s_reg_741 | 14'd14);

assign or_ln404_56_fu_677_p2 = (tmp_s_reg_741 | 14'd15);

assign or_ln404_fu_358_p2 = (tmp_s_fu_345_p3 | 14'd1);

assign p_accumulator_d1 = reg_315;

assign tmp_s_fu_345_p3 = {{empty_fu_341_p1}, {4'd0}};

assign trunc_ln674_fu_369_p1 = p_values_dout[31:0];

assign zext_ln404_46_fu_364_p1 = or_ln404_fu_358_p2;

assign zext_ln404_47_fu_528_p1 = or_ln404_43_fu_523_p2;

assign zext_ln404_48_fu_538_p1 = or_ln404_44_fu_533_p2;

assign zext_ln404_49_fu_552_p1 = or_ln404_45_fu_547_p2;

assign zext_ln404_50_fu_562_p1 = or_ln404_46_fu_557_p2;

assign zext_ln404_51_fu_576_p1 = or_ln404_47_fu_571_p2;

assign zext_ln404_52_fu_586_p1 = or_ln404_48_fu_581_p2;

assign zext_ln404_53_fu_600_p1 = or_ln404_49_fu_595_p2;

assign zext_ln404_54_fu_610_p1 = or_ln404_50_fu_605_p2;

assign zext_ln404_55_fu_624_p1 = or_ln404_51_fu_619_p2;

assign zext_ln404_56_fu_634_p1 = or_ln404_52_fu_629_p2;

assign zext_ln404_57_fu_648_p1 = or_ln404_53_fu_643_p2;

assign zext_ln404_58_fu_658_p1 = or_ln404_54_fu_653_p2;

assign zext_ln404_59_fu_672_p1 = or_ln404_55_fu_667_p2;

assign zext_ln404_60_fu_682_p1 = or_ln404_56_fu_677_p2;

assign zext_ln404_fu_353_p1 = tmp_s_fu_345_p3;

always @ (posedge ap_clk) begin
    tmp_s_reg_741[3:0] <= 4'b0000;
    p_accumulator_addr_reg_759[3:0] <= 4'b0000;
    p_accumulator_addr_46_reg_764[3:0] <= 4'b0001;
    p_accumulator_addr_47_reg_854[3:0] <= 4'b0010;
    p_accumulator_addr_48_reg_859[3:0] <= 4'b0011;
    p_accumulator_addr_49_reg_880[3:0] <= 4'b0100;
    p_accumulator_addr_50_reg_885[3:0] <= 4'b0101;
    p_accumulator_addr_51_reg_906[3:0] <= 4'b0110;
    p_accumulator_addr_52_reg_911[3:0] <= 4'b0111;
    p_accumulator_addr_53_reg_932[3:0] <= 4'b1000;
    p_accumulator_addr_54_reg_937[3:0] <= 4'b1001;
    p_accumulator_addr_54_reg_937_pp0_iter1_reg[3:0] <= 4'b1001;
    p_accumulator_addr_55_reg_957[3:0] <= 4'b1010;
    p_accumulator_addr_55_reg_957_pp0_iter1_reg[3:0] <= 4'b1010;
    p_accumulator_addr_56_reg_963[3:0] <= 4'b1011;
    p_accumulator_addr_56_reg_963_pp0_iter1_reg[3:0] <= 4'b1011;
    p_accumulator_addr_57_reg_978[3:0] <= 4'b1100;
    p_accumulator_addr_57_reg_978_pp0_iter1_reg[3:0] <= 4'b1100;
    p_accumulator_addr_58_reg_984[3:0] <= 4'b1101;
    p_accumulator_addr_58_reg_984_pp0_iter1_reg[3:0] <= 4'b1101;
    p_accumulator_addr_59_reg_1009[3:0] <= 4'b1110;
    p_accumulator_addr_59_reg_1009_pp0_iter1_reg[3:0] <= 4'b1110;
    p_accumulator_addr_60_reg_1015[3:0] <= 4'b1111;
    p_accumulator_addr_60_reg_1015_pp0_iter1_reg[3:0] <= 4'b1111;
end

endmodule //BGD_accumulate_float_16u_138
